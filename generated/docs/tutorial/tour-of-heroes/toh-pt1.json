{"id":"tutorial/tour-of-heroes/toh-pt1","title":"英雄編輯器","contents":"<div class=\"content\">\n  <h1 id=\"the-hero-editor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pv8glfsd6b2b8npgmyij4w7z\">英雄編輯器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#the-hero-editor\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fumtu7mdo40r0qr4pt1lwzn2\">應用程式現在有了基本的標題。接下來你要建立一個新的元件來顯示英雄訊息並且把這個元件放到應用程式的外殼裡去。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d5oeh6bf2o8adlc4yerbj497y\">這裡所說的範例應用，參閱<live-example></live-example>。</p>\n</div>\n<h2 id=\"create-the-heroes-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"djylyul6pr8eqekizrf19ifi1\">建立英雄清單元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#create-the-heroes-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dfwj3zpn9mnrnw1112rrbd9ec\">使用 <code>ng generate</code> 建立一個名為 <code>heroes</code> 的新元件。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component heroes\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"893wbpw7rq06p1lhanp93p6v6\"><code>HeroesComponent</code> 的類別檔案如下：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45n01dkjh2utjozar19n1rnrd\"><code>HeroesComponent</code> 的類別檔案如下：</p>\n<code-example header=\"app/heroes/heroes.component.ts (initial version)\" path=\"toh-pt1/src/app/heroes/heroes.component.ts\" region=\"v1\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent {\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4akhtt5awdwixbudj6umuzcqu\"><code>ng generate</code> 建立了三個元資料屬性：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qeum0noeh8i11kzgggbs6pji\"><code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 是個裝飾器函式，用於為該組件指定 Angular 所需的元資料。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"98qiey362gr3ds4upxv51zjhg\"><code>ng generate</code> 建立了三個元資料屬性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ghvm54f9feewnb0zbrlubp2h\">屬性</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>selector</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqpkzo90ey0y16rf363rsnuwa\">元件的 CSS 元素選擇器。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>templateUrl</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47m337m6txd5t960quezi8zae\">元件範本檔案的位置。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>styleUrls</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bt1x20y4qgnyx1h5q2rycfdrn\">元件私有 CSS 樣式的位置。</td>\n</tr>\n</tbody>\n</table>\n<p><a id=\"selector\"></a></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ei7759dda6eyhrsum6cact3fi\"><a href=\"https://developer.mozilla.org/docs/Web/CSS/Type_selectors\">CSS 元素選擇器</a> <code>app-heroes</code> 用來在父元件的範本中對應 HTML 元素的名稱，以識別出該組件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b23rbeqd0o37bsrf8a21lij5g\">始終要 <code>export</code> 這個元件類別，以便在其它地方（比如 <code>AppModule</code>）匯入它。</p>\n<h3 id=\"add-a-hero-property\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92s8rc6jvwyr684rwdi5m30tz\">新增 <code>hero</code> 屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#add-a-hero-property\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8yw98b0xsocj41ozpfv0am58u\">往 <code>HeroesComponent</code> 中新增一個 <code>hero</code> 屬性，用來表示一個名叫 『Windstorm』 的英雄。</p>\n<code-example header=\"heroes.component.ts (hero property)\" path=\"toh-pt1/src/app/heroes/heroes.component.ts\" region=\"add-hero\">\nhero = 'Windstorm';\n\n</code-example>\n<h3 id=\"show-the-hero\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ulvgs6dfh8v8wp1fl7grif4t\">顯示英雄<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#show-the-hero\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4mv6zeam6pt7dfy6dtq2i92el\">開啟範本檔案 <code>heroes.component.html</code>。刪除 <code>ng generate</code> 自動生成的預設內容，改為到 <code>hero</code> 屬性的資料繫結。</p>\n<code-example header=\"heroes.component.html\" path=\"toh-pt1/src/app/heroes/heroes.component.1.html\" region=\"show-hero-1\">\n&lt;h2&gt;{{hero}}&lt;/h2&gt;\n\n</code-example>\n<h2 id=\"show-the-heroescomponent-view\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2u4r9y4f817wnch59tp9nicso\">顯示 <code>HeroesComponent</code> 檢視<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#show-the-heroescomponent-view\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"axnvbd2qo9rfij4v1i7l0kn3h\">別忘了，<code>app-heroes</code> 就是 <code>HeroesComponent</code> 的 <a href=\"tutorial/toh-pt1#selector\">元素選擇器</a>。\n把 <code>&lt;app-heroes&gt;</code> 元素新增到 <code>AppComponent</code> 的範本檔案中，就放在標題下方。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f06mtp4x2ph2iaitmwslknzyv\">別忘了，<code>app-heroes</code> 就是 <code>HeroesComponent</code> 的 <a href=\"tutorial/tour-of-heroes/toh-pt1#selector\">元素選擇器</a>。\n把 <code>&lt;app-heroes&gt;</code> 元素新增到 <code>AppComponent</code> 的範本檔案中，就放在標題下方。</p>\n<code-example header=\"src/app/app.component.html\" path=\"toh-pt1/src/app/app.component.html\">\n&lt;h1&gt;{{title}}&lt;/h1&gt;\n&lt;app-heroes&gt;&lt;/app-heroes&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c1mb87qtu6jil64jnh63x97x4\">如果 <code>ng serve</code> 指令仍在執行，瀏覽器就會自動重新整理，並且同時顯示出應用的標題和英雄的名字。</p>\n<h2 id=\"create-a-hero-interface\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f217nc5mlzznqgv6yxhcegx14\">建立 <code>Hero</code> 類別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#create-a-hero-interface\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6emnex1ncqrgpx9pmu7rwpuwn\">在 <code>src/app</code> 資料夾中為 <code>Hero</code> 類別建立一個檔案，並新增 <code>id</code> 和 <code>name</code> 屬性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"56sanppskutl4j0asxl3ybl10\">在 <code>src/app</code> 資料夾中為 <code>Hero</code> 類別建立一個檔案，並新增 <code>id</code> 和 <code>name</code> 屬性。</p>\n<code-example path=\"toh-pt1/src/app/hero.ts\" header=\"src/app/hero.ts\">\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c49kv0hve0cycu5evzxv233kk\">修改後的 <code>HeroesComponent</code> 類別應該是這樣的：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zlbtui6a6i6pvfxghebua3vt\">把元件的 <code>hero</code> 屬性的型別重構為 <code>Hero</code>。然後以 <code>1</code> 為 <code>id</code>、以 『Windstorm』 為名字初始化它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dbholqbzg8iqn1xmglu5sz5yh\">修改後的 <code>HeroesComponent</code> 類別應該是這樣的：</p>\n<code-example header=\"src/app/heroes/heroes.component.ts\" path=\"toh-pt1/src/app/heroes/heroes.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { Hero } from '../hero';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent {\n  hero: Hero = {\n    id: 1,\n    name: 'Windstorm'\n  };\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bdedg863weogwj80jbq67n54l\">頁面顯示變得不正常了，因為你剛剛把 <code>hero</code> 從字串改成了物件。</p>\n<h2 id=\"show-the-hero-object\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f0qxsqjjzrpdk4zv933vbq5la\">顯示 <code>hero</code> 物件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#show-the-hero-object\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ainjv2z8w6ycjcu1avlu5jwlb\">修改範本中的繫結，以顯示英雄的名字，並在詳情中顯示 <code>id</code> 和 <code>name</code>，就像這樣：</p>\n<code-example header=\"heroes.component.html (HeroesComponent template)\" path=\"toh-pt1/src/app/heroes/heroes.component.1.html\" region=\"show-hero-2\">\n&lt;h2&gt;{{hero.name}} Details&lt;/h2&gt;\n&lt;div&gt;&lt;span&gt;id: &lt;/span&gt;{{hero.id}}&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;name: &lt;/span&gt;{{hero.name}}&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zvpd3kgobrh11hojz0r8n5m9\">瀏覽器自動重新整理，並顯示這位英雄的訊息。</p>\n<h2 id=\"format-with-the-uppercasepipe\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7zsbas3tj03veg18mek6ikago\">使用 <code>UppercasePipe</code> 進行格式化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#format-with-the-uppercasepipe\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3mojz5k0fpxdzjo3whrhv65f5\">把 <code>hero.name</code> 的繫結改成這樣。</p>\n<code-example header=\"src/app/heroes/heroes.component.html\" path=\"toh-pt1/src/app/heroes/heroes.component.html\" region=\"pipe\">\n&lt;h2&gt;{{hero.name | <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a>}} Details&lt;/h2&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4xg7a2ghwxfah6g3uiutqda9l\"><a href=\"guide/pipes\">通道</a> 是格式化字串、金額、日期和其它顯示資料的好辦法。Angular 發布了一些內建通道，而且你還可以建立自己的通道。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"48k9aeohvuf7ktr567vazq7ov\">繫結表示式中的 <code><a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a></code> 位於通道運算子 <code>|</code> 後面，用來呼叫內建通道 <code>UppercasePipe</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fi1ocxszxvbb32jpxlf8cmnf\"><a href=\"guide/pipes-overview\">通道</a>是格式化字串、貨幣金額、日期和其他顯示資料的好方法。 Angular 預裝了幾個內建通道，你也可以建立自己的。</p>\n<h2 id=\"edit-the-hero\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ep57s1il9r3vpuawp06db4ke\">編輯英雄名字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#edit-the-hero\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4augxg5r6s51ihgji15r2rzq1\">要想讓這種資料流動自動化，就要在表單元素 <code>&lt;input&gt;</code> 和元件的 <code>hero.name</code> 屬性之間建立雙向資料繫結。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6a5b03u8yelrvj34oqtcnb5j\">當用戶輸入時，這個輸入框應該能同時<em>顯示</em>和<em>修改</em>英雄的 <code>name</code> 屬性。也就是說，資料流從元件類別<strong>流出到螢幕</strong>，並且從螢幕<strong>流回到元件類別</strong>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9daeofp4u4i5d25ghjmc8zr0b\">要想讓這種資料流動自動化，就要在表單元素 <code>&lt;input&gt;</code> 和元件的 <code>hero.name</code> 屬性之間建立雙向資料繫結。</p>\n<h3 id=\"two-way-binding\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4xy6wmoza9k1s7w2doa894ml4\">雙向繫結<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#two-way-binding\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"chefihw490nvrfd14mlz7fylh\">把範本中的英雄詳情區重構成這樣：</p>\n<code-example header=\"src/app/heroes/heroes.component.html (HeroesComponent's template)\" path=\"toh-pt1/src/app/heroes/heroes.component.1.html\" region=\"name-input\">\n&lt;div&gt;\n  &lt;label for=\"name\"&gt;Hero name: &lt;/label&gt;\n  &lt;input id=\"name\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"hero.name\" placeholder=\"name\"&gt;\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qfup89imay09zpep545xjzq0\">這裡把 <code>hero.name</code> 屬性繫結到了 HTML 的 textbox 元素上，以便資料流可以<strong>雙向流動</strong>。資料可以從 <code>hero.name</code> 屬性流動到 textbox，也可以從 textbox 流回到 <code>hero.name</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"726pi00lhzyuy39bbha4xbys5\">這裡把 <code>hero.name</code> 屬性繫結到了 HTML 的 textbox 元素上，以便資料流可以<strong>雙向流動</strong>。資料可以從 <code>hero.name</code> 屬性流動到 textbox，也可以從 textbox 流回到 <code>hero.name</code>。</p>\n<h3 id=\"the-missing-formsmodule\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a12gn9j8j5kygfm4zsswx1vcy\">缺少 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#the-missing-formsmodule\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9jtbl445b3tah12hgbut2zm5q\">開啟瀏覽器的開發工具，就會在控制台中看到如下訊息：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5f281r6ei62a9bf9resmkyzb2\">開啟瀏覽器的開發工具，就會在控制台中看到如下訊息：</p>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nTemplate parse errors:\nCan't bind to 'ngModel' since it isn't a known property of 'input'.\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzl5jg93jq54nfmkpgua1ens\">它屬於一個可選模組 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>，你必須自行新增此模組才能使用該指令。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3bxuk0zknaeascwmih84jgye\">它屬於一個可選模組 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>，你必須自行新增此模組才能使用該指令。</p>\n<h2 id=\"appmodule\"><code>AppModule</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#appmodule\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cex0lc5zsfb69vzfy6770nam0\"><code>ng new</code> 在建立專案的時候就在 <code>src/app/app.module.ts</code> 中建立了一個 <code>AppModule</code> 類別。這裡也就是你要新增 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> 的地方。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bk031vjhwyxnyzyhfiov8yqyt\">有些元資料位於 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中，你會把它加到元件類別上。另一些關鍵性的元資料位於 <a href=\"guide/ngmodules\"><code>@NgModule</code></a> 裝飾器中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76zf9a2idkxrp3xbip7q9nl7r\">最重要的 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 裝飾器位於頂層類別 <strong>AppModule</strong> 上。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ji1kk1fcq7s6tht46e398irv\"><code>ng new</code> 在建立專案的時候就在 <code>src/app/app.module.ts</code> 中建立了一個 <code>AppModule</code> 類別。這裡也就是你要新增 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> 的地方。</p>\n<h3 id=\"import-formsmodule\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ie9l1vk6pju05fydvboeyj29\">匯入 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#import-formsmodule\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1w0hxah5s1r6i8l8vvf5kv0ig\">開啟 <code>app.module.ts</code> 並從 <code>@angular/forms</code> 函式庫中匯入 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> 符號。</p>\n<code-example path=\"toh-pt1/src/app/app.module.ts\" header=\"app.module.ts (FormsModule symbol import)\" region=\"formsmodule-js-import\">\nimport { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> } from '@angular/forms'; // &lt;-- <a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a> lives here\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"jgweoc4fat83d4hiw9fkphjq\">然後把 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> 新增到 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>imports</code> 陣列中，這裡是該應用所需外部模組的清單。</p>\n<code-example header=\"app.module.ts (@NgModule imports)\" path=\"toh-pt1/src/app/app.module.ts\" region=\"ng-imports\">\nimports: [\n  <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n  <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>\n],\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bf4qr9icabv052tg5h8nnlyf7\">重新整理瀏覽器，應用又能正常工作了。你可以編輯英雄的名字，並且會看到這個改動立刻體現在這個輸入框上方的 <code>&lt;h2&gt;</code> 中。</p>\n<h3 id=\"declare-heroescomponent\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5puon0bqovzi62gk1vuipydr4\">宣告 <code>HeroesComponent</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#declare-heroescomponent\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqri84b7seqol38spwkiiapeh\">開啟 <code>src/app/app.module.ts</code> 你就會發現 <code>HeroesComponent</code> 已經在頂部匯入過了。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bq0vkm281bzy1ry3lfcf0tyxp\"><em>你</em>沒有宣告過 <code>HeroesComponent</code>，可為什麼本應用卻正常呢？</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b1i6ubeur720bk6li2gv6gj53\">這是因為 Angular CLI 在生成 <code>HeroesComponent</code> 元件的時候就自動把它加到了 <code>AppModule</code> 中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32htf4g7adwqvmxu3cyz35r2c\">開啟 <code>src/app/app.module.ts</code> 你就會發現 <code>HeroesComponent</code> 已經在頂部匯入過了。</p>\n<code-example path=\"toh-pt1/src/app/app.module.ts\" header=\"src/app/app.module.ts\" region=\"heroes-import\">\nimport { HeroesComponent } from './heroes/heroes.component';\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74toddh2vvh4tfd3lvn8ollgl\"><code>HeroesComponent</code> 也已經宣告在了 <code>@<a href=\"api/core/NgModule#declarations\" class=\"code-anchor\">NgModule.declarations</a></code> 陣列中。</p>\n<code-example header=\"src/app/app.module.ts\" path=\"toh-pt1/src/app/app.module.ts\" region=\"declarations\">\ndeclarations: [\n  AppComponent,\n  HeroesComponent\n],\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ci6z0p3hqq6g0vmkpmitwkl65\"><code>AppModule</code> 宣告了應用中的所有元件，<code>AppComponent</code> 和 <code>HeroesComponent</code>。</p>\n</div>\n<h2 id=\"final-code-review\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9wa7wkqdj6wmwmxq53bbnpvt\">檢視最終程式碼<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#final-code-review\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eilmfylhtwekadywj9b0lljjc\">下面是本頁所提到的原始碼。</p>\n<code-tabs>\n    <code-pane header=\"src/app/heroes/heroes.component.ts\" path=\"toh-pt1/src/app/heroes/heroes.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { Hero } from '../hero';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent {\n  hero: Hero = {\n    id: 1,\n    name: 'Windstorm'\n  };\n}\n\n</code-pane>\n    <code-pane header=\"src/app/heroes/heroes.component.html\" path=\"toh-pt1/src/app/heroes/heroes.component.html\">\n&lt;h2&gt;{{hero.name | <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a>}} Details&lt;/h2&gt;\n&lt;div&gt;&lt;span&gt;id: &lt;/span&gt;{{hero.id}}&lt;/div&gt;\n&lt;div&gt;\n  &lt;label for=\"name\"&gt;Hero name: &lt;/label&gt;\n  &lt;input id=\"name\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"hero.name\" placeholder=\"name\"&gt;\n&lt;/div&gt;\n\n\n</code-pane>\n    <code-pane header=\"src/app/app.module.ts\" path=\"toh-pt1/src/app/app.module.ts\">\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> } from '@angular/forms'; // &lt;-- <a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a> lives here\n\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent,\n    HeroesComponent\n  ],\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n    <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n</code-pane>\n    <code-pane header=\"src/app/app.component.ts\" path=\"toh-pt1/src/app/app.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n\n\n</code-pane>\n    <code-pane header=\"src/app/app.component.html\" path=\"toh-pt1/src/app/app.component.html\">\n&lt;h1&gt;{{title}}&lt;/h1&gt;\n&lt;app-heroes&gt;&lt;/app-heroes&gt;\n\n\n</code-pane>\n    <code-pane header=\"src/app/hero.ts\" path=\"toh-pt1/src/app/hero.ts\">\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n\n</code-pane>\n</code-tabs>\n<h2 id=\"summary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fflknbbur8ttwdtn3o9w4vat\">總結<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#summary\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b1x3iuo97wuiqjx801y6abwj9\">你使用 <code>ng generate</code> 建立了第二個元件 <code>HeroesComponent</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qfptwrc2nu52ms8gg3i1vte6\">你把 <code>HeroesComponent</code> 新增到了殼元件 <code>AppComponent</code> 中，以便顯示它。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ek6zhutxslsxd71nm4fkcengl\">你使用 <code>UppercasePipe</code> 來格式化英雄的名字。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21o9j4ukrkx8e20dxh3hg2wz5\">你用 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 指令實現了雙向資料繫結。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"86ey9pucwcw89osgfkjz70jlc\">你知道了 <code>AppModule</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31nckb7pmc0ac0wcsu8qwlsn3\">你把 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code> 匯入了 <code>AppModule</code>，以便 Angular 能識別並應用 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code> 指令。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enopyf1kdy42qcxtdbmnmwciw\">你知道了把元件宣告到 <code>AppModule</code> 是很重要的。</li>\n</ul>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt1#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"uyxpgw8g6j7f9u9dcj0j5zua\"><a href=\"tutorial/tour-of-heroes/toh-pt2\">2. 顯示清單</a></li>\n</ul>\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/example-apps-list\n - guide/localizing-angular\n - tutorial/tour-of-heroes/toh-pt0\n-->\n<!-- links from this doc:\n - api/common/UpperCasePipe\n - api/core/Component\n - api/core/NgModule\n - api/core/NgModule#declarations\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/platform-browser/BrowserModule\n - guide/ngmodules\n - guide/pipes-overview\n - tutorial/tour-of-heroes/toh-pt1#add-a-hero-property\n - tutorial/tour-of-heroes/toh-pt1#appmodule\n - tutorial/tour-of-heroes/toh-pt1#create-a-hero-interface\n - tutorial/tour-of-heroes/toh-pt1#create-the-heroes-component\n - tutorial/tour-of-heroes/toh-pt1#declare-heroescomponent\n - tutorial/tour-of-heroes/toh-pt1#edit-the-hero\n - tutorial/tour-of-heroes/toh-pt1#final-code-review\n - tutorial/tour-of-heroes/toh-pt1#format-with-the-uppercasepipe\n - tutorial/tour-of-heroes/toh-pt1#import-formsmodule\n - tutorial/tour-of-heroes/toh-pt1#next-steps\n - tutorial/tour-of-heroes/toh-pt1#selector\n - tutorial/tour-of-heroes/toh-pt1#show-the-hero\n - tutorial/tour-of-heroes/toh-pt1#show-the-hero-object\n - tutorial/tour-of-heroes/toh-pt1#show-the-heroescomponent-view\n - tutorial/tour-of-heroes/toh-pt1#summary\n - tutorial/tour-of-heroes/toh-pt1#the-hero-editor\n - tutorial/tour-of-heroes/toh-pt1#the-missing-formsmodule\n - tutorial/tour-of-heroes/toh-pt1#two-way-binding\n - tutorial/tour-of-heroes/toh-pt2\n - https://developer.mozilla.org/docs/Web/CSS/Type_selectors\n-->"}