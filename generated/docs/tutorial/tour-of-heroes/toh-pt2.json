{"id":"tutorial/tour-of-heroes/toh-pt2","title":"显示英雄列表","contents":"<div class=\"content\">\n  <h1 id=\"display-a-selection-list\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32635mw5qjyi8eozzke2zbh3n\">显示英雄列表<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#display-a-selection-list\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bztxdzzhkl7zsuy83daamdwro\">本教程向你展示了如何：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cv7w4c71ume6lgqje08k9geuq\">展开《英雄之旅》应用以显示英雄列表。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"91wsaxio1t5ibytk2xiktob2g\">允许用户选择英雄并显示英雄的详细信息。</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d5oeh6bf2o8adlc4yerbj497y\">这里所说的范例应用，参阅<live-example></live-example>。</p>\n</div>\n<h2 id=\"create-mock-heroes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aogy9ftc3pcrpdhxxhfbmbudn\">创建模拟（mock）的英雄数据<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#create-mock-heroes\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"551u9gvq33r07084x3vc3qssm\">第一步是创建一些要显示的英雄。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8tguuhmpt7zuarf3flpqsxxm6\">在 <code>src/app/</code> 目录下创建一个名叫 <code>mock-heroes.ts</code> 的文件。定义一个包含十个英雄的常量数组 <code>HEROES</code>，并导出它。该文件是这样的。</p>\n<code-example header=\"src/app/mock-heroes.ts\" path=\"toh-pt2/src/app/mock-heroes.ts\">\nimport { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 12, name: 'Dr. Nice' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr. IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n\n\n</code-example>\n<h2 id=\"displaying-heroes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5f3up5by0o1mkmutxmjbegsml\">显示这些英雄<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#displaying-heroes\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2y3et6c6h90qo9vwgymzqmaoj\">打开 <code>HeroesComponent</code> 类文件，并导入模拟的 <code>HEROES</code>。</p>\n<code-example header=\"src/app/heroes/heroes.component.ts (import HEROES)\" path=\"toh-pt2/src/app/heroes/heroes.component.ts\" region=\"import-heroes\">\nimport {HEROES} from '../mock-heroes';\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32rm8478n597xw2n98jrwjsj3\">往类中添加一个 <code>heroes</code> 属性，这样可以暴露出这个 <code>HEROES</code> 数组，以供绑定。</p>\n<code-example header=\"src/app/heroes/heroes.component.ts\" path=\"toh-pt2/src/app/heroes/heroes.component.ts\" region=\"component\">\nexport class HeroesComponent {\n  heroes = HEROES;\n}\n\n</code-example>\n<h3 id=\"list-heroes-with-ngfor\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ynpffxqe7ylo2ev25fxp9ui4\">使用 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 列出这些英雄<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#list-heroes-with-ngfor\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5l9cg3gnru5rrc1lfwspubpkk\">在\n<code>HeroesComponent</code>组件文件中，导入\n<code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code>指令并将其添加到导入数组中。</p>\n<code-example header=\"src/app/heroes/heroes.component.ts\" path=\"toh-pt2/src/app/heroes/heroes.component.ts\" region=\"import-ngfor\">\nimport {\n  /* . . . */\n  <a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a>,\n  /* . . . */\n} from '@angular/common';\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  imports: [\n    <a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a>,\n  ],\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pnfs6yp3kwmwhwhn909a6y8b\">打开 <code>HeroesComponent</code> 的模板文件，并做如下修改：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ggz8mlikd9gstoxqgzt8xixo\">在顶部添加 <code>&lt;h2&gt;</code>，。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3l9gc8n4g8qtpn4a6eq2kfrcc\">在 <code>&lt;h2&gt;</code> 下方，添加 <code>&lt;ul&gt;</code> 元素。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"67sxptrxg37vdaaedlg1u45ii\">在 <code>&lt;ul&gt;</code> 元素中，插入 <code>&lt;li&gt;</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wa9dueb898eht7gqqakxsr51\">在 <code>&lt;li&gt;</code> 中放一个 <code>&lt;button&gt;</code> 元素，以便在 <code>&lt;span&gt;</code> 元素中显示单个 <code>hero</code> 的属性。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"estvtp8xk50kgyunkd191uywi\">添加 CSS 类以设置组件的样式。</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6mcb597ofl1gp1z0zxj6ycr3u\">应该类似于以下内容：</p>\n<code-example header=\"heroes.component.html (heroes template)\" path=\"toh-pt2/src/app/heroes/heroes.component.1.html\" region=\"list\">\n&lt;h2&gt;My Heroes&lt;/h2&gt;\n&lt;ul class=\"heroes\"&gt;\n  &lt;li&gt;\n    &lt;button type=\"button\"&gt;\n      &lt;span class=\"badge\"&gt;{{hero.id}}&lt;/span&gt;\n      &lt;span class=\"name\"&gt;{{hero.name}}&lt;/span&gt;\n    &lt;/button&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"anbjej7l6yw24wziqxyj4c3qc\">由于属性 <code>hero</code> 不存在，因此会显示一个错误。要访问每个英雄并列出所有英雄，请在 <code>&lt;li&gt;</code> 上添加 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 以遍历英雄列表：</p>\n<code-example path=\"toh-pt2/src/app/heroes/heroes.component.1.html\" region=\"li\">\n&lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e81toi2byesoptou060yrwddj\"><a href=\"guide/built-in-directives#ngFor\"><code>*ngFor</code></a> 是一个 Angular 的复写器（repeater）指令。它会为列表中的每项数据复写它的宿主元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ly3wjebd96oqwpkqijvsybzd\">这个例子中涉及的语法如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p44mx807exjp3s0k9dwbuxla\">语法</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>&lt;li&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"879uc0o0dbcyu7w5mj0sr05ri\">宿主元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>heroes</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"91w1g9h21fm4r86vvqwwvjv5y\">保存来自\n<code>HeroesComponent</code>类的模拟英雄列表，模拟英雄列表。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>hero</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"pj9yvyezd09mo12zu7t48ne9\">每次通过列表进行迭代时都会保存当前的英雄对象。</td>\n</tr>\n</tbody>\n</table>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9k4it34idhh9fi1xikyjrcb5t\">不要忘了在 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 前面放上星号（<code>*</code>），它是该语法中的关键部分。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uxo5eced9nx4old7frg2qgup\">浏览器刷新之后，英雄列表出现了。</p>\n<div class=\"callout is-helpful\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f05okairs8rpk6p5puh1jbeak\">交互元素</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3853ei5wbq4ifvym8t5qvc17g\">在 <code>&lt;li&gt;</code> 元素中，添加一个 <code>&lt;button&gt;</code> 元素，以包裹此英雄的详细信息，然后让 hero 编程可点击的。要增强无障碍性的，最好使用原生交互式 HTML 元素（例如 <code>&lt;button&gt;</code>），而不是向非交互式元素添加事件侦听器（例如 <code>&lt;li&gt;</code>）。在这里，就使用了交互元素 <code>&lt;button&gt;</code>，而不是往 <code>&lt;li&gt;</code> 元素上直接添加事件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69rh9vyryk8hmyjpv2jrnk7ja\">有关无障碍性的更多详细信息，请参阅<a href=\"guide/accessibility\">Angular</a>中的无障碍性。</p>\n</div>\n<p><a id=\"styles\"></a></p>\n<h3 id=\"style-the-heroes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8dsvp93epxy6rmr0we3pirpnw\">给英雄列表“美容”<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#style-the-heroes\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cirwjbpysyupfwkl3mig53r4w\">英雄列表应该富有吸引力，并且当用户把鼠标移到某个英雄上和从列表中选中某个英雄时，应该给出视觉反馈。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8n7vwjcbj3j6ldl111pkiwnrr\">在<a href=\"tutorial/tour-of-heroes/toh-pt0#app-wide-styles\">教程的第一章</a>，你曾在 <code>styles.css</code> 中为整个应用设置了一些基础的样式。但那个样式表并不包含英雄列表所需的样式。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74ghn931oe7zvvwan7biqhpt0\">固然，你可以把更多样式加入到 <code>styles.css</code>，并且放任它随着你添加更多组件而不断膨胀。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"287d7w4owe3g07pnyyollj8c6\">你可以定义属于特定组件的私有样式。这会让组件所需的一切（比如代码、HTML 和 CSS）都放在一起。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aam1eqy8rz306r9vup1ic8xf3\">这种方式让你在其它地方复用该组件更加容易，并且即使全局样式和这里不一样，组件也仍然具有期望的外观。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"777p7oh6ntgb3glpuaxcar5t9\">你可以用多种方式定义私有样式，或者内联在 <code>@<a href=\"api/core/Component#styles\" class=\"code-anchor\">Component.styles</a></code> 数组中，或者在 <code>@<a href=\"api/core/Component#styleUrls\" class=\"code-anchor\">Component.styleUrls</a></code> 所指出的样式表文件中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ddxi9pi0t5jd8ecfdv0gq7vd2\">当 <code>ng generate</code> 创建 <code>HeroesComponent</code> 时，它也同时为 <code>HeroesComponent</code> 创建了空白的 <code>heroes.component.css</code> 样式表文件，并且让 <code>@<a href=\"api/core/Component#styleUrls\" class=\"code-anchor\">Component.styleUrls</a></code> 指向它，就像这样。</p>\n<code-example header=\"src/app/heroes/heroes.component.ts (@Component)\" path=\"toh-pt2/src/app/heroes/heroes.component.ts\" region=\"metadata\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css'],\n  imports: [\n    <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>,\n    <a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a>,\n    <a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a>,\n    <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">UpperCasePipe</a>,\n  ],\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3ovds650l7sqbw996qi94cmm\">打开 <code>heroes.component.css</code> 文件，并且把 <code>HeroesComponent</code> 的私有 CSS 样式粘贴进去。\n你可以在<a href=\"tutorial/tour-of-heroes/toh-pt2#final-code-review\">查看最终代码</a>中找到它们。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66yc929yshyq5egpq558lodhw\"><code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 元数据中指定的样式和样式表都是局限于该组件的。<code>heroes.component.css</code> 中的样式只会作用于 <code>HeroesComponent</code>，既不会影响到组件外的 HTML，也不会影响到其它组件中的 HTML。</p>\n</div>\n<h2 id=\"viewing-details\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aj848jdpejyhn7z91kvvb68sh\">查看详情<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#viewing-details\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhith6k4ya0lk7xz2czbgcpg\">当用户在此列表中点击一个英雄时，该组件应该在页面底部显示所选英雄的详情。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxxa9azsu9ti6h7idwtuj4tl7\">本节中的代码会监听英雄条目的点击事件，并显示与更新英雄的详情。</p>\n<h3 id=\"add-a-click-event-binding\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"40o8da41dfpi8y9xycrs71ad5\">添加 <code>click</code> 事件绑定<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#add-a-click-event-binding\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6zbmio0n8ztijvixs5cy5ar6o\">为 <code>&lt;li&gt;</code> 中的 <code>&lt;button&gt;</code> 上添加一个点击事件的绑定代码：</p>\n<code-example header=\"heroes.component.html (template excerpt)\" path=\"toh-pt2/src/app/heroes/heroes.component.1.html\" region=\"selectedHero-click\">\n&lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\"&gt;\n  &lt;button type=\"button\" (click)=\"onSelect(hero)\"&gt;\n  &lt;!-- ... --&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20hvo9we6br1pmnp5lep47uqt\">这是 Angular <a href=\"guide/event-binding\">事件绑定</a> 语法的例子。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8n8cq6a9ub3xrnee96xw2qz2c\"><code>click</code> 外面的圆括号会让 Angular 监听这个 <code>&lt;button&gt;</code> 元素的 <code>click</code> 事件。\n当用户点击 <code>&lt;button&gt;</code> 时，Angular 就会执行表达式 <code>onSelect(hero)</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fmhj9lhe3sl83rnb9dkpouxc\">下一部分，会在 <code>HeroesComponent</code> 上定义一个 <code>onSelect()</code> 方法，用来显示 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 表达式所定义的那个英雄（<code>hero</code>）。</p>\n<h3 id=\"add-the-click-event-handler\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4jqkfiglwl07i38hecdt2d8h\">添加 <code>click</code> 事件处理器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#add-the-click-event-handler\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2f8fg8qmy6xdcpcxpqd6wcvk6\">把该组件的 <code>hero</code> 属性改名为 <code>selectedHero</code>，但不要为它赋值。\n因为应用刚刚启动时并没有<em>所选英雄</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1p9zz7hy3shnvlsyfl9pbjlqa\">添加如下 <code>onSelect()</code> 方法，它会把模板中被点击的英雄赋值给组件的 <code>selectedHero</code> 属性。</p>\n<code-example header=\"src/app/heroes/heroes.component.ts (onSelect)\" path=\"toh-pt2/src/app/heroes/heroes.component.ts\" region=\"on-select\">\nselectedHero?: Hero;\nonSelect(hero: Hero): void {\n  this.selectedHero = hero;\n}\n\n</code-example>\n<h3 id=\"add-a-details-section\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29v8mqtz73hf2vktjwhrlv4ku\">添加详情区<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#add-a-details-section\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bu8mb1otohjdj8m3r9q2167g\">现在，组件的模板中有一个列表。要想在点击列表中英雄的名字时显示该英雄的详情，就要在模板中添加一个区域，用来显示这些详情。在 <code>heroes.component.html</code> 中该列表的紧下方，添加如下代码：</p>\n<code-example header=\"heroes.component.html (selected hero details)\" path=\"toh-pt2/src/app/heroes/heroes.component.html\" region=\"selectedHero-details\">\n&lt;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"selectedHero\"&gt;\n  &lt;h2&gt;{{selectedHero.name | <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a>}} Details&lt;/h2&gt;\n  &lt;div&gt;id: {{selectedHero.id}}&lt;/div&gt;\n  &lt;div&gt;\n    &lt;label for=\"hero-name\"&gt;Hero name: &lt;/label&gt;\n    &lt;input id=\"hero-name\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"selectedHero.name\" placeholder=\"name\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"apf639mskfbijs50skqn7djgv\">只有在选择英雄时才应该显示英雄详情。当组件初始创建时，没有选定的英雄。在你的组件中导入\n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>指令（类似于\n<code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code>），并将\n<code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>指令添加到包裹英雄详情的\n<code>&lt;div&gt;</code>中。这个指令告诉 Angular 只有在通过点击英雄后，\n<code>selectedHero</code>被定义时才渲染这部分内容。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8s10l7c980qc9cl79ngvh01zk\">不要忘了 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 前面的星号（<code>*</code>），它是该语法中的关键部分。</p>\n</div>\n<h3 id=\"style-the-selected-hero\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2igv40askqfzbr71oj2ku5mp7\">为选定的英雄设置样式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#style-the-selected-hero\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"274eva8ofr154ro62xkvh0759\">为了标出选定的英雄，你可以在<a href=\"tutorial/tour-of-heroes/toh-pt2#styles\">以前添加过的样式中</a>增加 CSS 类 <code>.selected</code>。若要把 <code>.selected</code> 类应用于此 <code>&lt;li&gt;</code> 上，请使用类绑定。</p>\n<div class=\"lightbox\">\n<img alt=\"Selected hero with dark background and light text that differentiates it from unselected list items\" src=\"generated/images/guide/toh/heroes-list-selected.png\" width=\"594\" height=\"290\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"wmewl84sl4bzrem3ku6k96gn\">Angular 的<a href=\"guide/class-binding\">类绑定</a>可以有条件地添加和删除 CSS 类。只需将 <code>[class.some-css-class]=\"some-condition\"</code> 添加到要设置样式的元素即可。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e35fg813crhfo4mul89p6378l\">在 <code>HeroesComponent</code> 模板中的 <code>&lt;button&gt;</code> 元素上添加 <code>[class.selected]</code> 绑定，代码如下：</p>\n<code-example header=\"heroes.component.html (toggle the 'selected' CSS class)\" path=\"toh-pt2/src/app/heroes/heroes.component.1.html\" region=\"class-selected\">\n[class.selected]=\"hero === selectedHero\"\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2t0zyniiwru9kxvevicutp6ap\">如果当前行的英雄和 <code>selectedHero</code> 相同，Angular 就会添加 CSS 类 <code>selected</code>，否则就会移除它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4mag5isacs88mjmvbinagn4ji\">最终的 <code>&lt;li&gt;</code> 是这样的：</p>\n<code-example header=\"heroes.component.html (list item hero)\" path=\"toh-pt2/src/app/heroes/heroes.component.html\" region=\"li\">\n&lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\"&gt;\n  &lt;button [class.selected]=\"hero === selectedHero\" type=\"button\" (click)=\"onSelect(hero)\"&gt;\n    &lt;span class=\"badge\"&gt;{{hero.id}}&lt;/span&gt;\n    &lt;span class=\"name\"&gt;{{hero.name}}&lt;/span&gt;\n  &lt;/button&gt;\n&lt;/li&gt;\n\n</code-example>\n<p><a id=\"final-code-review\"></a></p>\n<h2 id=\"final-code-review\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9wa7wkqdj6wmwmxq53bbnpvt\">查看最终代码<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#final-code-review\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5f1hyr4jsxxaq41hg14falawv\">下面是本页面中所提及的代码文件，包括 <code>HeroesComponent</code> 的样式。</p>\n<code-tabs>\n    <code-pane header=\"src/app/mock-heroes.ts\" path=\"toh-pt2/src/app/mock-heroes.ts\">\nimport { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 12, name: 'Dr. Nice' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr. IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n\n\n</code-pane>\n    <code-pane header=\"src/app/heroes/heroes.component.ts\" path=\"toh-pt2/src/app/heroes/heroes.component.ts\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\nimport {\n  <a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a>,\n  <a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a>,\n  <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">UpperCasePipe</a>,\n} from '@angular/common';\nimport {<a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>} from '@angular/forms';\n\nimport {Hero} from '../hero';\nimport {HEROES} from '../mock-heroes';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css'],\n  imports: [\n    <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>,\n    <a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a>,\n    <a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a>,\n    <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">UpperCasePipe</a>,\n  ],\n})\n\nexport class HeroesComponent {\n  heroes = HEROES;\n  selectedHero?: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n}\n\n\n</code-pane>\n    <code-pane header=\"src/app/heroes/heroes.component.html\" path=\"toh-pt2/src/app/heroes/heroes.component.html\">\n&lt;h2&gt;My Heroes&lt;/h2&gt;\n&lt;ul class=\"heroes\"&gt;\n  &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\"&gt;\n    &lt;button [class.selected]=\"hero === selectedHero\" type=\"button\" (click)=\"onSelect(hero)\"&gt;\n      &lt;span class=\"badge\"&gt;{{hero.id}}&lt;/span&gt;\n      &lt;span class=\"name\"&gt;{{hero.name}}&lt;/span&gt;\n    &lt;/button&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"selectedHero\"&gt;\n  &lt;h2&gt;{{selectedHero.name | <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a>}} Details&lt;/h2&gt;\n  &lt;div&gt;id: {{selectedHero.id}}&lt;/div&gt;\n  &lt;div&gt;\n    &lt;label for=\"hero-name\"&gt;Hero name: &lt;/label&gt;\n    &lt;input id=\"hero-name\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"selectedHero.name\" placeholder=\"name\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n\n</code-pane>\n    <code-pane header=\"src/app/heroes/heroes.component.css\" path=\"toh-pt2/src/app/heroes/heroes.component.css\">\n/* HeroesComponent's private CSS styles */\n.heroes {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 0;\n  width: 15em;\n}\n\n.heroes li {\n  display: flex;\n}\n\n.heroes button {\n  flex: 1;\n  cursor: pointer;\n  position: relative;\n  left: 0;\n  background-color: #EEE;\n  margin: .5em;\n  padding: 0;\n  border-radius: 4px;\n  display: flex;\n  align-items: stretch;\n  height: 1.8em;\n}\n\n.heroes button:hover {\n  color: #2c3a41;\n  background-color: #e6e6e6;\n  left: .1em;\n}\n\n.heroes button:active {\n  background-color: #525252;\n  color: #fafafa;\n}\n\n.heroes button.selected {\n  background-color: black;\n  color: white;\n}\n\n.heroes button.selected:hover {\n  background-color: #505050;\n  color: white;\n}\n\n.heroes button.selected:active {\n  background-color: black;\n  color: white;\n}\n\n.heroes .badge {\n  display: inline-block;\n  font-size: small;\n  color: white;\n  padding: 0.8em 0.7em 0 0.7em;\n  background-color: #405061;\n  line-height: 1em;\n  margin-right: .8em;\n  border-radius: 4px 0 0 4px;\n}\n\n.heroes .name {\n  align-self: center;\n}\n\n\n</code-pane>\n</code-tabs>\n<h2 id=\"summary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fflknbbur8ttwdtn3o9w4vat\">总结<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#summary\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83h6w9d18oc2zh6odfxkdafqy\">英雄之旅应用在一个主从视图中显示了英雄列表。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6peid57ma6o993ntb81p1o80o\">用户可以选择一个英雄，并查看该英雄的详情。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3tax9j4fe6ys1u1o8ombqc2jg\">你使用 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 显示了一个列表。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bwkd3jsbjf7qh3h9br1jvbudi\">你使用 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 来根据条件包含或排除了一段 HTML。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9yuxlfmtox7vn4php2o9ohnup\">你可以用 <code>class</code> 绑定来切换 CSS 的样式类。</li>\n</ul>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/tour-of-heroes/toh-pt2#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"uqck6qzaq54j3fzpwi25e5cw\"><a href=\"tutorial/tour-of-heroes/toh-pt3\">3. 创建一个特性组件</a></li>\n</ul>\n\n  <div class=\"reviewed\">最后复查时间：Wed Aug 30 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/example-apps-list\n - guide/localizing-angular\n - tutorial/tour-of-heroes/toh-pt1\n - tutorial/tour-of-heroes/toh-pt3\n-->\n<!-- links from this doc:\n - api/common/NgFor\n - api/common/NgIf\n - api/common/UpperCasePipe\n - api/core/Component\n - api/core/Component#styleUrls\n - api/core/Component#styles\n - api/forms/FormsModule\n - api/forms/NgModel\n - guide/accessibility\n - guide/built-in-directives#ngFor\n - guide/class-binding\n - guide/event-binding\n - tutorial/tour-of-heroes/toh-pt0#app-wide-styles\n - tutorial/tour-of-heroes/toh-pt2#add-a-click-event-binding\n - tutorial/tour-of-heroes/toh-pt2#add-a-details-section\n - tutorial/tour-of-heroes/toh-pt2#add-the-click-event-handler\n - tutorial/tour-of-heroes/toh-pt2#create-mock-heroes\n - tutorial/tour-of-heroes/toh-pt2#display-a-selection-list\n - tutorial/tour-of-heroes/toh-pt2#displaying-heroes\n - tutorial/tour-of-heroes/toh-pt2#final-code-review\n - tutorial/tour-of-heroes/toh-pt2#list-heroes-with-ngfor\n - tutorial/tour-of-heroes/toh-pt2#next-steps\n - tutorial/tour-of-heroes/toh-pt2#style-the-heroes\n - tutorial/tour-of-heroes/toh-pt2#style-the-selected-hero\n - tutorial/tour-of-heroes/toh-pt2#styles\n - tutorial/tour-of-heroes/toh-pt2#summary\n - tutorial/tour-of-heroes/toh-pt2#viewing-details\n - tutorial/tour-of-heroes/toh-pt3\n-->"}