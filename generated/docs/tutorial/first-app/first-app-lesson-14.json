{"id":"tutorial/first-app/first-app-lesson-14","title":"第14课：向应用添加 HTTP 通信","contents":"<div class=\"content\">\n  <h1 id=\"lesson-14-add-http-communication-to-your-app\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ee9auekvi1gd6j24kh2zuibr\">第14课：向应用添加 HTTP 通信<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-14-add-http-communication-to-your-app\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zu0r1j9brhncg2jsuv3fw2z2\">本教程演示如何将 HTTP 和 API 集成到应用程序中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c5rnwwioukzmjpg48glhjzr83\">到目前为止，应用程序都在从 Angular 服务中的静态数组读取数据。下一步是让应用程序通过 HTTP 与 JSON 服务器通信。HTTP 请求将会模拟处理来自服务器的数据的体验。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yrs6yvmlabo3pu7w8cj5do0j\"><strong>预计时间</strong>：约15分钟</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zwe6zuh9gf7zmfin6bgujbhg\"><strong>起始代码：</strong> \n<live-example name=\"first-app-lesson-13\"></live-example></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"86dyd1lhtdpn90hshiwdtsxq9\"><strong>完成代码：</strong> \n<live-example name=\"first-app-lesson-14\"></live-example></p>\n<h2 id=\"what-youll-learn\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cy8qhuh22qozu5okjmjfdf3nx\">你将学到<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#what-youll-learn\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"443kwq9gq631pznbo37xy0f9p\">应用程序将使用来自 JSON 服务器的数据</p>\n<h2 id=\"step-1---configure-the-json-server\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78kbyfactynzahp9nb3vyoor0\">第 1 步 - 配置 JSON 服务器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-1---configure-the-json-server\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"18blsp3zwdre73iumrcg696k7\">JSON Server 是一种用于创建模拟 REST API 的开源工具。你将使用它来提供当前存储在房屋服务中的房屋位置数据。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6h7rr80zdf6jj4ithpjxkl93r\">通过以下命令从 npm 安装\n<code>json-server</code>。 \n<code-example language=\"bash\" format=\"bash\">\n  npm install -g json-server \n</code-example></p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dly0kbc67ixrh0ojxrvmma887\">在项目的根目录中，创建一个名为 <code>db.json</code> 的文件。这是你将存储 <code>json-server</code> 数据的地方。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5z2mvx7d9kaztxsw7awm75xp3\">打开\n<code>db.json</code>，将以下代码复制到文件中 \n<code-example language=\"json\" format=\"json\">\n  { \"locations\": [ { \"id\": 0, \"name\": \"Acme Fresh Start Housing\", \"city\": \"Chicago\", \"state\": \"IL\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/bernard-hermant-CLKGGwIBTaY-unsplash.jpg\", \"availableUnits\": 4, \"wifi\": true, \"laundry\": true }, { \"id\": 1, \"name\": \"A113 Transitional Housing\", \"city\": \"Santa Monica\", \"state\": \"CA\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/brandon-griggs-wR11KBaB86U-unsplash.jpg\", \"availableUnits\": 0, \"wifi\": false, \"laundry\": true }, { \"id\": 2, \"name\": \"Warm Beds Housing Support\", \"city\": \"Juneau\", \"state\": \"AK\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/i-do-nothing-but-love-lAyXdl1-Wmc-unsplash.jpg\", \"availableUnits\": 1, \"wifi\": false, \"laundry\": false }, { \"id\": 3, \"name\": \"Homesteady Housing\", \"city\": \"Chicago\", \"state\": \"IL\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/ian-macdonald-W8z6aiwfi1E-unsplash.jpg\", \"availableUnits\": 1, \"wifi\": true, \"laundry\": false }, { \"id\": 4, \"name\": \"Happy Homes Group\", \"city\": \"Gary\", \"state\": \"IN\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/krzysztof-hepner-978RAXoXnH4-unsplash.jpg\", \"availableUnits\": 1, \"wifi\": true, \"laundry\": false }, { \"id\": 5, \"name\": \"Hopeful Apartment Group\", \"city\": \"Oakland\", \"state\": \"CA\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/r-architecture-JvQ0Q5IkeMM-unsplash.jpg\", \"availableUnits\": 2, \"wifi\": true, \"laundry\": true }, { \"id\": 6, \"name\": \"Seriously Safe Towns\", \"city\": \"Oakland\", \"state\": \"CA\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/phil-hearing-IYfp2Ixe9nM-unsplash.jpg\", \"availableUnits\": 5, \"wifi\": true, \"laundry\": true }, { \"id\": 7, \"name\": \"Hopeful Housing Solutions\", \"city\": \"Oakland\", \"state\": \"CA\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/r-architecture-GGupkreKwxA-unsplash.jpg\", \"availableUnits\": 2, \"wifi\": true, \"laundry\": true }, { \"id\": 8, \"name\": \"Seriously Safe Towns\", \"city\": \"Oakland\", \"state\": \"CA\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/saru-robert-9rP3mxf8qWI-unsplash.jpg\", \"availableUnits\": 10, \"wifi\": false, \"laundry\": false }, { \"id\": 9, \"name\": \"Capital Safe Towns\", \"city\": \"Portland\", \"state\": \"OR\", \"photo\": \"https://angular.io/assets/images/tutorials/faa/webaliser-_TPTXZd9mOo-unsplash.jpg\", \"availableUnits\": 6, \"wifi\": true, \"laundry\": true } ] } \n</code-example></p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5o4m0mbz6xkgc4k6pb8lpnltc\">保存此文件。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13w1nos2v5r29ex8ipneaoo4o\">是时候测试你的配置了。打开命令行窗口，在项目的根目录下运行以下命令。</p>\n<code-example language=\"bash\" format=\"bash\">\n    json-server --watch db.json\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9mqw6abb6d0fz3iupadiqcbw\">在你的 Web 浏览器中，导航到 <code>http://localhost:3000/locations</code> 并确认响应里包括存储在 <code>db.json</code> 中的数据。</p>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5c18qh2qp67g60d9jrwpphn4t\">如果你的配置有任何问题，可以在<a href=\"https://www.npmjs.com/package/json-server\">官方文档</a>中找到更多详细信息。</p>\n<h2 id=\"step-2---update-service-to-use-web-server-instead-of-local-array\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"sasegbo39v9euoo8wa1ie60x\">第 2 步 - 更新服务以使用 Web 服务器而非本地数组<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-2---update-service-to-use-web-server-instead-of-local-array\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ltyz4v4gh1bisx0jzdvutt8l\">数据源已配置，下一步是更新你的 Web 应用程序以连接到它来使用数据。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7m3bzlxqw7t2vdvshccln5862\">在 <code>src/app/housing.service.ts</code> 中，进行以下更改：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a65zpqwlbxdlwegwo2q0u5x4m\">更新代码以删除 <code>housingLocationList</code> 属性和包含数据的数组。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"68y2615xl4871320zcsyh8b51\">添加一个名为\n<code>url</code>的字符串属性，并将其值设置为\n<code>'http://localhost:3000/locations'</code></p>\n<code-example language=\"javascript\" format=\"javascript\">\nurl = 'http://localhost:3000/locations';\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hgnpj2w13wdpugodony0lm2c\">此代码将导致文件其余部分出错，因为它依赖 <code>housingLocationList</code> 属性。接下来我们将更新服务方法。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xbi06qrxkjtbfwcltme1g19b\">更新 <code>getAllHousingLocations</code> 函数以调用你配置好的 Web 服务器。</p>\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/housing.service.ts\" region=\"update-getAllHousingLocations\">\n<a href=\"api/platform-browser/animations/async\" class=\"code-anchor\">async</a> getAllHousingLocations(): Promise&lt;HousingLocation[]&gt; {\n  const data = await fetch(this.url);\n  return await data.json() ?? [];\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"mifc2tifk745krrhfo1qrjao\">代码现在使用异步代码通过 HTTP 发送 \n<strong>GET</strong> 请求。</p>\n<div class=\"callout is-helpful\">\nFor this example, the code uses `fetch`. For more advanced use cases consider using `HttpClient` provided by Angular.\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20nfd75ywz4ryesvuwu0gdu7i\">更新 <code>getHousingLocationsById</code> 函数以调用你配置好的 Web 服务器。</p>\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/housing.service.ts\" region=\"update-getHousingLocationById\">\n<a href=\"api/platform-browser/animations/async\" class=\"code-anchor\">async</a> getHousingLocationById(id: number): Promise&lt;HousingLocation | undefined&gt; {\n  const data = await fetch(`${this.url}/${id}`);\n  return await data.json() ?? {};\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"df8kv4mysw9gnfz1qqodehacc\">一旦所有更新完成，你的更新后的服务应该与以下代码匹配。</p>\n<code-example header=\"Final version of housing.service.ts\" path=\"first-app-lesson-14/src/app/housing.service.ts\">\nimport { <a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> } from '@angular/core';\nimport { HousingLocation } from './housinglocation';\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  url = 'http://localhost:3000/locations';\n\n  <a href=\"api/platform-browser/animations/async\" class=\"code-anchor\">async</a> getAllHousingLocations(): Promise&lt;HousingLocation[]&gt; {\n    const data = await fetch(this.url);\n    return await data.json() ?? [];\n  }\n\n  <a href=\"api/platform-browser/animations/async\" class=\"code-anchor\">async</a> getHousingLocationById(id: number): Promise&lt;HousingLocation | undefined&gt; {\n    const data = await fetch(`${this.url}/${id}`);\n    return await data.json() ?? {};\n  }\n\n  submitApplication(firstName: string, lastName: string, <a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a>: string) {\n    console.log(firstName, lastName, <a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a>);\n  }\n}\n\n\n</code-example>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"step-3---update-the-components-to-use-asynchronous-calls-to-the-housing-service\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nz40owpn0m1r0y8ioonjv4a\">第 3 步 - 更新组件以使用异步方式调用房屋服务<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#step-3---update-the-components-to-use-asynchronous-calls-to-the-housing-service\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pwhrelh8w7zmowwnjiiaknbn\">服务器现在正在从 HTTP 请求中读取数据，但依赖于该服务的组件现在出现错误，因为它们被编程为使用该服务的同步版本。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"570ii2ap5px1xcb3xdy6q3uwz\">在 \n<code>src/app/home/home.component.ts</code> 中，更新 \n<code>constructor</code> 使用新的 \n<code>getAllHousingLocations</code> 方法的异步版本。</p>\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/home/home.component.ts\" region=\"update-home-component-constructor\">\nconstructor() {\n  this.housingService.getAllHousingLocations().then((housingLocationList: HousingLocation[]) =&gt; {\n    this.housingLocationList = housingLocationList;\n    this.filteredLocationList = housingLocationList;\n  });\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ckkx0krtwhv3ooeys3nsnplv\">在 \n<code>src/app/details/details.component.ts</code> 中，更新 \n<code>constructor</code> 使用新的 \n<code>getHousingLocationById</code> 方法的异步版本。</p>\n<code-example header=\"\" path=\"first-app-lesson-14/src/app/details/details.component.ts\" region=\"update-details-component-constructor\">\nconstructor() {\n  const housingLocationId = parseInt(this.route.snapshot.params['id'], 10);\n  this.housingService.getHousingLocationById(housingLocationId).then(housingLocation =&gt; {\n    this.housingLocation = housingLocation;\n  });\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d9bvruz5d6s4tuafhg77ynow5\">保存你的代码。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ivt98pn4yu9uy8aydeoomd2s\">在浏览器中打开应用程序并确认它运行没有任何错误。</p>\n</li>\n</ol>\n<h2 id=\"lesson-review\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckmo8mg671uh3oxv2z72tuj64\">课程回顾<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-14#lesson-review\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d5ud8w00ppczgc6czqimjxyvo\">在这节课中，你将应用更新为：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alhqhlbpnru90kvgst5qbtr7o\">使用本地网络服务器（<code>json-server</code>）</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1uo5b7mc0p2kd2qqsxqieaffy\">使用异步服务方法来检索数据。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bid4loxb5z390uy1k9t701z43\">恭喜！你已成功完成本教程，并已准备好继续构建更复杂的 Angular 应用程序。如果你想了解更多信息，请考虑完成 Angular 的一些其他开发者<a href=\"tutorial\">教程</a>和<a href=\"/guide/developer-guide-overview\">指南</a>。</p>\n\n  <div class=\"reviewed\">最后复查时间：Wed Jul 12 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - tutorial/first-app/first-app-lesson-13\n-->\n<!-- links from this doc:\n - /guide/developer-guide-overview\n - api/core/Injectable\n - api/forms/EmailValidator\n - api/platform-browser/animations/async\n - tutorial\n - tutorial/first-app/first-app-lesson-14#lesson-14-add-http-communication-to-your-app\n - tutorial/first-app/first-app-lesson-14#lesson-review\n - tutorial/first-app/first-app-lesson-14#step-1---configure-the-json-server\n - tutorial/first-app/first-app-lesson-14#step-2---update-service-to-use-web-server-instead-of-local-array\n - tutorial/first-app/first-app-lesson-14#step-3---update-the-components-to-use-asynchronous-calls-to-the-housing-service\n - tutorial/first-app/first-app-lesson-14#what-youll-learn\n - https://www.npmjs.com/package/json-server\n-->"}