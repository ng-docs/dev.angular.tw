{"id":"tutorial/first-app/first-app-lesson-09","title":"第09課：Angular 服務","contents":"<div class=\"content\">\n  <h1 id=\"lesson-09-angular-services\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82ccwtl352bru0bttz397dbk2\">第09課：Angular 服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#lesson-09-angular-services\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z6u8w9z2sllmcdmt2ilmk8pf\">本課程示範瞭如何建立 Angular 服務並使用依賴注入將其包含在應用程式中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yrs6yvmlabo3pu7w8cj5do0j\"><strong>預計時間</strong>：約15分鐘</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6gait1eqa64rghrfujeypznr\"><strong>起始程式碼:</strong> \n<live-example name=\"first-app-lesson-08\"></live-example></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5slcc79f4dpvz5vmux4oqb458\"><strong>完成程式碼:</strong> \n<live-example name=\"first-app-lesson-09\"></live-example></p>\n<h2 id=\"what-youll-learn\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cy8qhuh22qozu5okjmjfdf3nx\">你將學到<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#what-youll-learn\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eh5xd0flx6kyyj6bxvwcf7b0c\">你的應用有一個服務來為應用提供資料。在本課程結束時，該服務從本地靜態資料中讀取資料。在後續課程中，你將更新服務以從網路服務獲取資料。</p>\n<h2 id=\"conceptual-preview-of-services\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"copl288p1ysit3n9ndciwv2f8\">服務的概念性預覽<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#conceptual-preview-of-services\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5r6xo1zhoy3hw99e81kywsdpu\">本教程會介紹 Angular 服務和依賴注入。</p>\n<!-- markdownLint-disable MD001 -->\n<h4 id=\"angular-services\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"63jw9u4ujv24z0l5uphv9dp9e\">Angular 服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#angular-services\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aekmi2kaxjs13matmvtvbdl4k\"><em>Angular 服務</em>為你提供了一種分離 Angular 應用程式資料和功能的方法，這些資料和功能可由應用程式中的多個元件使用。要被多個元件使用，服務必須是可<em>注入的</em>。由元件注入和使用的服務就成了該組件的依賴項。該組件依賴於這些服務，沒有它們就無法執行。</p>\n<h4 id=\"dependency-injection\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ev35fdpq1f46jvj853hmazgoj\">依賴注入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#dependency-injection\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1697wg05g6nsxkgsj7yeargn\"><em>依賴注入</em>是一種用於管理應用程式元件和其他元件可以使用的服務的依賴關係的機制。</p>\n<h2 id=\"step-1---create-a-new-service-for-your-app\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qtmzs59k9jya39pq29bi3zp1\">第 1 步 - 為你的應用建立新服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-1---create-a-new-service-for-your-app\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13t3aue2kpjqs1ulrzduz7dnk\">此步驟為應用程式建立可注入服務。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qxzh26n32qnw247t9h8ej3kf\">在 IDE 的<strong>終端</strong>窗格中：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8frcif09w62kpccxwvjafu1rz\">在你的專案目錄中，導向到 <code>first-app</code> 目錄。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"275500hdel1a1p7oj17dzih4u\">在 <code>first-app</code> 目錄中，執行此指令以建立新服務。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate service housing --skip-tests\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"djpd1auvkjlnwtfldc83fg9ue\">執行 <code>ng serve</code> 來建立應用程式並將其提供給 <code>http://localhost:4200</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zz0za5ogwktknzyeafgd8ja5\">確保應用在建立時沒有錯誤。在繼續下一步之前更正所有錯誤。</p>\n</li>\n</ol>\n<h2 id=\"step-2---add-static-data-to-the-new-service\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dhmsk76q48kvhgu7tn7r1tdr1\">第 2 步 - 將靜態資料新增到新服務中<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-2---add-static-data-to-the-new-service\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eec9u1kq0rtbsdzy6euit0voh\">本步驟向你的新服務新增了一些範例資料。在後續課程中，你將用一個網路介面替換靜態資料，以便像在真實應用中那樣獲取資料。目前，你的應用的新服務使用迄今在\n<code>HomeComponent</code>中本地建立的資料。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9r6pgvig5ms9l5ukrbwsza8xg\">在 IDE 的<strong>編輯</strong>窗格中：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2yede7vauf91qy6am7oie3mu3\">在 <code>src/app/home/home.component.ts</code> 中，從 <code>HomeComponent</code> 複製 <code>housingLocationList</code> 變數及其陣列值。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2j970qjopepddhctot79bqvvl\">在 <code>src/app/housing.service.ts</code> 中：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2g3cg0rf4nlbpcqc5o6qrm5rs\">在 <code>HousingService</code> 類別中，貼上你上一步從 <code>HomeComponent</code> 複製出來的變數。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqaynsecqqor8whircqyo29fp\">在 <code>HousingService</code> 類別中，將這些函式貼上到你剛剛複製的資料之後。這些函式允許依賴項訪問此服務的資料。</p>\n<code-example header=\"Service functions in src/app/housing.service.ts\" path=\"first-app-lesson-09/src/app/housing.service.ts\" region=\"service-functions\">\ngetAllHousingLocations(): HousingLocation[] {\n  return this.housingLocationList;\n}\n\ngetHousingLocationById(id: number): HousingLocation | undefined {\n  return this.housingLocationList.find(housingLocation =&gt; housingLocation.id === id);\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7hk5c6vtuzh1c6yl1s0t1ovhv\">在以後的課程中你將用到這些功能。現在，只要瞭解這些函式會通過 id 回傳特定的 <code>HousingLocation</code> 或整個清單就足夠了。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xfwp3qwlpj62y8jlva067glo\">為 <code>HousingLocation</code> 新增檔案級匯入。</p>\n<code-example header=\"Import HousingLocation type in  src/app/housing.service.ts\" path=\"first-app-lesson-09/src/app/housing.service.ts\" region=\"import-housing-location\">\nimport { HousingLocation } from './housinglocation';\n\n</code-example>\n</li>\n</ol>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zz0za5ogwktknzyeafgd8ja5\">確保應用在建立時沒有錯誤。在繼續下一步之前更正所有錯誤。</p>\n</li>\n</ol>\n<h2 id=\"step-3---inject-the-new-service-into-homecomponent\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"uc6wxbj13cfriljjdalwq6yp\">第 3 步 - 將新服務注入 <code>HomeComponent</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-3---inject-the-new-service-into-homecomponent\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5a7chpu10gagf2xquualk10km\">本步驟將新服務注入到你的應用的\n<code>HomeComponent</code>中，以便它從服務中讀取應用的資料。在後續課程中，你將用一個實時資料來源替換靜態資料，以便像在真實應用中那樣獲取資料。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cgmaujw5lrzar1xxgstw85pjz\">在 IDE 的<strong>編輯</strong>窗格中，開啟 <code>src/app/home/home.component.ts</code> 檔案：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b4flommk3jvfezpv5uic2ii18\">在\n<code>src/app/home/home.component.ts</code>的頂部，從\n<code>@angular/core</code>匯入的專案中新增\n<code>inject</code>。這將把\n<code>inject</code>函式匯入到\n<code>HomeComponent</code>類別中。</p>\n<code-example header=\"Update to src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"import-inject\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, inject } from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60p2cjbgg3nyp8prqp2cc4jv6\">為 <code>HousingService</code> 新增一個新的檔案級匯入：</p>\n<code-example header=\"Add import to src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"import-service\">\nimport { HousingService } from '../housing.service';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3krmiacr5mu3esu2ktmo7p8zh\">從\n<code>HomeComponent</code>中，刪除\n<code>housingLocationList</code>陣列條目，並將\n<code>housingLocationList</code>賦值為空陣列（\n<code>[]</code>）。在接下來的幾步中，你將更新程式碼以從\n<code>HousingService</code>中獲取資料。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"574zbb1kez7kxt9xsb3c9grcg\">在\n<code>HomeComponent</code>中，新增以下程式碼以注入新服務並初始化應用的資料。當建立此元件時，\n<code>constructor</code>是第一個執行的函式。在\n<code>constructor</code>中的程式碼將把\n<code>housingLocationList</code>賦值為呼叫\n<code>getAllHousingLocations</code>的回傳值。</p>\n<code-example header=\"Initialize data from service in src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"use-new-service\">\nhousingLocationList: HousingLocation[] = [];\nhousingService: HousingService = inject(HousingService);\n\nconstructor() {\n  this.housingLocationList = this.housingService.getAllHousingLocations();\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bwycams7rbnxwbltbfhsgx8z\">將更改儲存到 <code>src/app/home/home.component.ts</code> 確保應用在建立時沒有錯誤。在繼續下一步之前更正所有錯誤。</p>\n</li>\n</ol>\n<h2 id=\"lesson-review\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckmo8mg671uh3oxv2z72tuj64\">課程回顧<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#lesson-review\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hnhtvfaqh0gnwgi4i4j5vb4h\">在這節課中，你嚮應用程式新增了一個 Angular 服務，並將其注入到\n<code>HomeComponent</code>類別中。這樣可以隔離應用程式獲取資料的方式。目前，新服務從靜態資料陣列中獲取資料。在以後的課程中，你將重構服務，從 API 端點獲取資料。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2vi4aou9du2w1ijyabax7x8qx\">如果你在學習這節課時遇到了任何問題，可以在<live-example></live-example>檢視完整程式碼。</p>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4l19hvbzht8wlbfrart10zapf\"><a href=\"tutorial/first-app/first-app-lesson-10\">第 10 課 - 嚮應用程式新增路由</a></li>\n</ul>\n<h2 id=\"more-information\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4i4l0z1p0mxth3he9lk6m2op\">更多訊息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#more-information\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ep5mlw3d5q1ucm62jzem9a7pc\">有關這節課中涵蓋的主題的更多訊息，請訪問：</p>\n<!-- vale Angular.Google_WordListSuggestions = NO -->\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xt1wo2cjuis6xqw9pi8erpc9\"><a href=\"guide/creating-injectable-service\">建立可注入服務</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"kppxg024lcgrb3znlv3h6jk4\"><a href=\"guide/dependency-injection-overview\">Angular 中的依賴注入</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qiluywjz1fxs8i5xp8qp9c8f\"><a href=\"cli/generate#service\">ng generate service</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8a5x7vpakz9jxdiejlvn3md2\"><a href=\"cli/generate\">ng generate</a></li>\n</ul>\n\n  <div class=\"reviewed\">最後複查時間：Sat Jul 15 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - tutorial/first-app/first-app-lesson-08\n-->\n<!-- links from this doc:\n - api/core/Component\n - cli/generate\n - cli/generate#service\n - guide/creating-injectable-service\n - guide/dependency-injection-overview\n - tutorial/first-app/first-app-lesson-09#angular-services\n - tutorial/first-app/first-app-lesson-09#conceptual-preview-of-services\n - tutorial/first-app/first-app-lesson-09#dependency-injection\n - tutorial/first-app/first-app-lesson-09#lesson-09-angular-services\n - tutorial/first-app/first-app-lesson-09#lesson-review\n - tutorial/first-app/first-app-lesson-09#more-information\n - tutorial/first-app/first-app-lesson-09#next-steps\n - tutorial/first-app/first-app-lesson-09#step-1---create-a-new-service-for-your-app\n - tutorial/first-app/first-app-lesson-09#step-2---add-static-data-to-the-new-service\n - tutorial/first-app/first-app-lesson-09#step-3---inject-the-new-service-into-homecomponent\n - tutorial/first-app/first-app-lesson-09#what-youll-learn\n - tutorial/first-app/first-app-lesson-10\n-->"}