{"id":"tutorial/first-app/first-app-lesson-09","title":"第09课：Angular 服务","contents":"<div class=\"content\">\n  <h1 id=\"lesson-09-angular-services\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82ccwtl352bru0bttz397dbk2\">第09课：Angular 服务<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#lesson-09-angular-services\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z6u8w9z2sllmcdmt2ilmk8pf\">本课程示范了如何创建 Angular 服务并使用依赖注入将其包含在应用程序中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yrs6yvmlabo3pu7w8cj5do0j\"><strong>预计时间</strong>：约15分钟</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6gait1eqa64rghrfujeypznr\"><strong>起始代码:</strong> \n<live-example name=\"first-app-lesson-08\"></live-example></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5slcc79f4dpvz5vmux4oqb458\"><strong>完成代码:</strong> \n<live-example name=\"first-app-lesson-09\"></live-example></p>\n<h2 id=\"what-youll-learn\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cy8qhuh22qozu5okjmjfdf3nx\">你将学到<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#what-youll-learn\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eh5xd0flx6kyyj6bxvwcf7b0c\">你的应用有一个服务来为应用提供数据。在本课程结束时，该服务从本地静态数据中读取数据。在后续课程中，你将更新服务以从网络服务获取数据。</p>\n<h2 id=\"conceptual-preview-of-services\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"copl288p1ysit3n9ndciwv2f8\">服务的概念性预览<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#conceptual-preview-of-services\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5r6xo1zhoy3hw99e81kywsdpu\">本教程会介绍 Angular 服务和依赖注入。</p>\n<!-- markdownLint-disable MD001 -->\n<h4 id=\"angular-services\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"63jw9u4ujv24z0l5uphv9dp9e\">Angular 服务<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#angular-services\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aekmi2kaxjs13matmvtvbdl4k\"><em>Angular 服务</em>为你提供了一种分离 Angular 应用程序数据和功能的方法，这些数据和功能可由应用程序中的多个组件使用。要被多个组件使用，服务必须是可<em>注入的</em>。由组件注入和使用的服务就成了该组件的依赖项。该组件依赖于这些服务，没有它们就无法运行。</p>\n<h4 id=\"dependency-injection\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ev35fdpq1f46jvj853hmazgoj\">依赖注入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#dependency-injection\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1697wg05g6nsxkgsj7yeargn\"><em>依赖注入</em>是一种用于管理应用程序组件和其他组件可以使用的服务的依赖关系的机制。</p>\n<h2 id=\"step-1---create-a-new-service-for-your-app\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qtmzs59k9jya39pq29bi3zp1\">第 1 步 - 为你的应用创建新服务<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-1---create-a-new-service-for-your-app\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13t3aue2kpjqs1ulrzduz7dnk\">此步骤为应用程序创建可注入服务。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qxzh26n32qnw247t9h8ej3kf\">在 IDE 的<strong>终端</strong>窗格中：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8frcif09w62kpccxwvjafu1rz\">在你的项目目录中，导航到 <code>first-app</code> 目录。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"275500hdel1a1p7oj17dzih4u\">在 <code>first-app</code> 目录中，运行此命令以创建新服务。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate service housing --skip-tests\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"djpd1auvkjlnwtfldc83fg9ue\">运行 <code>ng serve</code> 来构建应用程序并将其提供给 <code>http://localhost:4200</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zz0za5ogwktknzyeafgd8ja5\">确保应用在构建时没有错误。在继续下一步之前更正所有错误。</p>\n</li>\n</ol>\n<h2 id=\"step-2---add-static-data-to-the-new-service\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dhmsk76q48kvhgu7tn7r1tdr1\">第 2 步 - 将静态数据添加到新服务中<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-2---add-static-data-to-the-new-service\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eec9u1kq0rtbsdzy6euit0voh\">本步骤向你的新服务添加了一些示例数据。在后续课程中，你将用一个网络接口替换静态数据，以便像在真实应用中那样获取数据。目前，你的应用的新服务使用迄今在\n<code>HomeComponent</code>中本地创建的数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9r6pgvig5ms9l5ukrbwsza8xg\">在 IDE 的<strong>编辑</strong>窗格中：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2yede7vauf91qy6am7oie3mu3\">在 <code>src/app/home/home.component.ts</code> 中，从 <code>HomeComponent</code> 复制 <code>housingLocationList</code> 变量及其数组值。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2j970qjopepddhctot79bqvvl\">在 <code>src/app/housing.service.ts</code> 中：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2g3cg0rf4nlbpcqc5o6qrm5rs\">在 <code>HousingService</code> 类中，粘贴你上一步从 <code>HomeComponent</code> 复制出来的变量。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqaynsecqqor8whircqyo29fp\">在 <code>HousingService</code> 类中，将这些函数粘贴到你刚刚复制的数据之后。这些函数允许依赖项访问此服务的数据。</p>\n<code-example header=\"Service functions in src/app/housing.service.ts\" path=\"first-app-lesson-09/src/app/housing.service.ts\" region=\"service-functions\">\ngetAllHousingLocations(): HousingLocation[] {\n  return this.housingLocationList;\n}\n\ngetHousingLocationById(id: number): HousingLocation | undefined {\n  return this.housingLocationList.find(housingLocation =&gt; housingLocation.id === id);\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7hk5c6vtuzh1c6yl1s0t1ovhv\">在以后的课程中你将用到这些功能。现在，只要了解这些函数会通过 id 返回特定的 <code>HousingLocation</code> 或整个列表就足够了。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xfwp3qwlpj62y8jlva067glo\">为 <code>HousingLocation</code> 添加文件级导入。</p>\n<code-example header=\"Import HousingLocation type in  src/app/housing.service.ts\" path=\"first-app-lesson-09/src/app/housing.service.ts\" region=\"import-housing-location\">\nimport { HousingLocation } from './housinglocation';\n\n</code-example>\n</li>\n</ol>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zz0za5ogwktknzyeafgd8ja5\">确保应用在构建时没有错误。在继续下一步之前更正所有错误。</p>\n</li>\n</ol>\n<h2 id=\"step-3---inject-the-new-service-into-homecomponent\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"uc6wxbj13cfriljjdalwq6yp\">第 3 步 - 将新服务注入 <code>HomeComponent</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-3---inject-the-new-service-into-homecomponent\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5a7chpu10gagf2xquualk10km\">本步骤将新服务注入到你的应用的\n<code>HomeComponent</code>中，以便它从服务中读取应用的数据。在后续课程中，你将用一个实时数据源替换静态数据，以便像在真实应用中那样获取数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cgmaujw5lrzar1xxgstw85pjz\">在 IDE 的<strong>编辑</strong>窗格中，打开 <code>src/app/home/home.component.ts</code> 文件：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b4flommk3jvfezpv5uic2ii18\">在\n<code>src/app/home/home.component.ts</code>的顶部，从\n<code>@angular/core</code>导入的项目中添加\n<code>inject</code>。这将把\n<code>inject</code>函数导入到\n<code>HomeComponent</code>类中。</p>\n<code-example header=\"Update to src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"import-inject\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, inject } from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60p2cjbgg3nyp8prqp2cc4jv6\">为 <code>HousingService</code> 添加一个新的文件级导入：</p>\n<code-example header=\"Add import to src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"import-service\">\nimport { HousingService } from '../housing.service';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3krmiacr5mu3esu2ktmo7p8zh\">从\n<code>HomeComponent</code>中，删除\n<code>housingLocationList</code>数组条目，并将\n<code>housingLocationList</code>赋值为空数组（\n<code>[]</code>）。在接下来的几步中，你将更新代码以从\n<code>HousingService</code>中获取数据。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"574zbb1kez7kxt9xsb3c9grcg\">在\n<code>HomeComponent</code>中，添加以下代码以注入新服务并初始化应用的数据。当创建此组件时，\n<code>constructor</code>是第一个运行的函数。在\n<code>constructor</code>中的代码将把\n<code>housingLocationList</code>赋值为调用\n<code>getAllHousingLocations</code>的返回值。</p>\n<code-example header=\"Initialize data from service in src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"use-new-service\">\nhousingLocationList: HousingLocation[] = [];\nhousingService: HousingService = inject(HousingService);\n\nconstructor() {\n  this.housingLocationList = this.housingService.getAllHousingLocations();\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bwycams7rbnxwbltbfhsgx8z\">将更改保存到 <code>src/app/home/home.component.ts</code> 确保应用在构建时没有错误。在继续下一步之前更正所有错误。</p>\n</li>\n</ol>\n<h2 id=\"lesson-review\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckmo8mg671uh3oxv2z72tuj64\">课程回顾<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#lesson-review\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5hnhtvfaqh0gnwgi4i4j5vb4h\">在这节课中，你向应用程序添加了一个 Angular 服务，并将其注入到\n<code>HomeComponent</code>类中。这样可以隔离应用程序获取数据的方式。目前，新服务从静态数据数组中获取数据。在以后的课程中，你将重构服务，从 API 端点获取数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2vi4aou9du2w1ijyabax7x8qx\">如果你在学习这节课时遇到了任何问题，可以在<live-example></live-example>查看完整代码。</p>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4l19hvbzht8wlbfrart10zapf\"><a href=\"tutorial/first-app/first-app-lesson-10\">第 10 课 - 向应用程序添加路由</a></li>\n</ul>\n<h2 id=\"more-information\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4i4l0z1p0mxth3he9lk6m2op\">更多信息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#more-information\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ep5mlw3d5q1ucm62jzem9a7pc\">有关这节课中涵盖的主题的更多信息，请访问：</p>\n<!-- vale Angular.Google_WordListSuggestions = NO -->\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xt1wo2cjuis6xqw9pi8erpc9\"><a href=\"guide/creating-injectable-service\">创建可注入服务</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"kppxg024lcgrb3znlv3h6jk4\"><a href=\"guide/dependency-injection-overview\">Angular 中的依赖注入</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qiluywjz1fxs8i5xp8qp9c8f\"><a href=\"cli/generate#service\">ng generate service</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8a5x7vpakz9jxdiejlvn3md2\"><a href=\"cli/generate\">ng generate</a></li>\n</ul>\n\n  <div class=\"reviewed\">最后复查时间：Sat Jul 15 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - tutorial/first-app/first-app-lesson-08\n-->\n<!-- links from this doc:\n - api/core/Component\n - cli/generate\n - cli/generate#service\n - guide/creating-injectable-service\n - guide/dependency-injection-overview\n - tutorial/first-app/first-app-lesson-09#angular-services\n - tutorial/first-app/first-app-lesson-09#conceptual-preview-of-services\n - tutorial/first-app/first-app-lesson-09#dependency-injection\n - tutorial/first-app/first-app-lesson-09#lesson-09-angular-services\n - tutorial/first-app/first-app-lesson-09#lesson-review\n - tutorial/first-app/first-app-lesson-09#more-information\n - tutorial/first-app/first-app-lesson-09#next-steps\n - tutorial/first-app/first-app-lesson-09#step-1---create-a-new-service-for-your-app\n - tutorial/first-app/first-app-lesson-09#step-2---add-static-data-to-the-new-service\n - tutorial/first-app/first-app-lesson-09#step-3---inject-the-new-service-into-homecomponent\n - tutorial/first-app/first-app-lesson-09#what-youll-learn\n - tutorial/first-app/first-app-lesson-10\n-->"}