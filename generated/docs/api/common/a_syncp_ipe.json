{"id":"api/common/AsyncPipe","title":"AsyncPipe","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/AsyncPipe\", \"name\": \"AsyncPipe\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/common\">@angular/common</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/src/pipes/async_pipe.ts#L68-L198\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"asyncpipe\">AsyncPipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#asyncpipe\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label pipe\">pipe</label>\n    <label class=\"api-status-label impure-pipe\">非纯管道</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gnzkz5004n7mjtrqlurkg2fh\">从一个异步回执中解出一个值。</p>\n\n    <p><a href=\"api/common/AsyncPipe#description\">查看更多...</a></p>\n  </section>\n\n\n<section class=\"pipe-overview\">\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">{{ obj_expression | <span class=\"kwd nocode\">async</span> }}</code-example>\n\n  \n<h2 id=\"导出自\">导出自<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#导出自\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n  <li>\n    <a href=\"api/common/CommonModule\">\n      <code>CommonModule</code>\n    </a>\n  </li>\n</ul>\n  <h2 id=\"input-value\">输入值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#input-value\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table parameters-table pipe-parameters\">\n  <tbody>\n    <tr class=\"pipe-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ctbi0a37g18mv6qcymaedix8m\"><a id=\"\"></a>\n        <code>obj</code></td>\n      <td class=\"param-type\"><code>Observable&lt;T&gt; | Subscribable&lt;T&gt; | Promise&lt;T&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n\n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cr46xmitxhklwn0f3tjsjalan\"><code>async</code>管道订阅\n<code>Observable</code>或\n<code>Promise</code>并返回其发出的最新值。当发出新值时，\n<code>async</code>管道会标记组件进行更改检查。当组件被销毁时，\n<code>async</code>管道会自动取消订阅，以避免潜在的内存泄漏。当表达式的引用发生更改时，\n<code>async</code>管道会自动取消订阅旧的\n<code>Observable</code>或\n<code>Promise</code>并订阅新的。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6zm65j9j684nuzc4wzlb576be\">在\n<a href=\"api/common/AsyncPipe#usage-notes\">使用说明...</a>中可以找到更多信息。</p>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"examples\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4iecnoqh39op5dvxqr6b3gip\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#examples\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2xf3pwsxt5ovf2ia3vz0xw88r\">这个例子把一个 <code>Promise</code> 绑定到了视图中。点击 <code><a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a></code> 按钮就会解析此 Promise。</p>\n<code-example path=\"common/pipes/ts/async_pipe.ts\" region=\"AsyncPipePromise\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'async-promise-pipe',\n  template: `&lt;div&gt;\n    &lt;code&gt;promise|async&lt;/code&gt;:\n    &lt;button (click)=\"clicked()\"&gt;{{ arrived ? 'Reset' : '<a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a>' }}&lt;/button&gt;\n    &lt;span&gt;Wait for it... {{ greeting | async }}&lt;/span&gt;\n  &lt;/div&gt;`,\n})\nexport class AsyncPromisePipeComponent {\n  greeting: Promise&lt;string&gt; | null = null;\n  arrived: boolean = false;\n\n  private resolve: Function | null = null;\n\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.arrived = false;\n    this.greeting = new Promise&lt;string&gt;((resolve, reject) =&gt; {\n      this.resolve = resolve;\n    });\n  }\n\n  clicked() {\n    if (this.arrived) {\n      this.reset();\n    } else {\n      this.resolve!('hi there!');\n      this.arrived = true;\n    }\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2p2yvvvvog99c974bq90tmei2\">还可以使用\n<code>async</code>与 Observables。下面的示例将\n<code>time</code> Observable绑定到视图。Observable会持续更新视图的当前时间。</p>\n<code-example path=\"common/pipes/ts/async_pipe.ts\" region=\"AsyncPipeObservable\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'async-observable-pipe',\n  template: '&lt;div&gt;&lt;code&gt;observable|async&lt;/code&gt;: <a href=\"api/common/Time\" class=\"code-anchor\">Time</a>: {{ time | async }}&lt;/div&gt;',\n})\nexport class AsyncObservablePipeComponent {\n  time = new Observable&lt;string&gt;((observer: Observer&lt;string&gt;) =&gt; {\n    setInterval(() =&gt; observer.next(new Date().toString()), 1000);\n  });\n}\n\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common\n - api/common/CommonModule\n - api/common/NgIf\n - api/core/OnDestroy\n - api/core/PipeTransform\n - api/router/testing/RouterTestingHarness\n - guide/dynamic-component-loader\n - guide/dynamic-form\n - guide/hierarchical-dependency-injection\n - guide/http-make-jsonp-request\n - guide/http-optimize-server-interaction\n - guide/http-server-communication\n - guide/observables-in-angular\n - guide/pipes\n - guide/pipes-overview\n - guide/reactive-forms\n - guide/router-tutorial-toh\n - guide/rxjs-interop\n - guide/testing-components-scenarios\n - start/start-data\n - tutorial/tour-of-heroes/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/AsyncPipe#asyncpipe\n - api/common/AsyncPipe#description\n - api/common/AsyncPipe#examples\n - api/common/AsyncPipe#input-value\n - api/common/AsyncPipe#usage-notes\n - api/common/AsyncPipe#导出自\n - api/common/CommonModule\n - api/common/Time\n - api/core/Component\n - api/router/Resolve\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/src/pipes/async_pipe.ts#L68-L198\n-->"}