{"id":"api/common/NgComponentOutlet","title":"NgComponentOutlet","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/NgComponentOutlet\", \"name\": \"NgComponentOutlet\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/common\">@angular/common</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/src/directives/ng_component_outlet.ts#L24-L212\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"ngcomponentoutlet\">NgComponentOutlet<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#ngcomponentoutlet\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label directive\">directive</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ve4zif99gsd923qx2v2h21z7\">实例化单个 <a href=\"api/core/Component\"><code>Component</code></a> 类型，并将其宿主视图插入当前视图。<code><a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">NgComponentOutlet</a></code>\n为动态组件创建提供了一种声明式方法。</p>\n\n    <p><a href=\"api/common/NgComponentOutlet#description\">查看更多...</a></p>\n  </section>\n<h2 id=\"导出自\">导出自<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#导出自\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n  <li>\n    <a href=\"api/common/CommonModule\">\n      <code>CommonModule</code>\n    </a>\n  </li>\n</ul>\n  \n<section class=\"selector-list\">\n  <h2 id=\"selectors\">选择器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#selectors\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><code>[<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>]</code></li>\n  </ul>\n</section>\n\n\n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngComponentOutlet\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\"><a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a></span>: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt; | null</code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngComponentOutletInputs\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">ngComponentOutletInputs</span>?: Record&lt;string, unknown&gt;</code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngComponentOutletInjector\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">ngComponentOutletInjector</span>?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngComponentOutletContent\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">ngComponentOutletContent</span>?: any[][]</code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngComponentOutletNgModule\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">ngComponentOutletNgModule</span>?: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;</code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngComponentOutletNgModuleFactory\"></a>\n          <code class=\"deprecated-api-item\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">ngComponentOutletNgModuleFactory</span>?: <a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a>&lt;any&gt;</code>\n        </td>\n        <td>\n          <label class=\"api-status-label deprecated\" title=\"本 API 已弃用\">已弃用</label>\n          \n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"efzta0j03bio6hmukea21z1oo\">不推荐使用此输入，请改用 <code>ngComponentOutletNgModule</code>。</p>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n\n  \n  <section class=\"description\">\n    <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhkd3rupch3g721phvxw3mzbi\"><code><a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">NgComponentOutlet</a></code> 所需的组件类型，如果设置为假值，则视图将被清除并且任何现有组件将被销毁。</p>\n\n    <h3 id=\"fine-tune-control\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"46btoxvjgtyh2fydncleaf74w\">微调控制<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#fine-tune-control\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dq0kjcnl4yhp4drgv74po1bvt\">你可以使用以下可选属性来控制组件的创建过程：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfyd31b1w7udzljz31786sb6q\"><code>ngComponentOutletInputs</code>: 可选的组件输入对象，将绑定到该组件。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1k7fkkewzpffmtnbck9d9wz4u\"><code>ngComponentOutletInjector</code>：可选的自定义 <a href=\"api/core/Injector\"><code>Injector</code></a>，将用作 Component\n的父级。默认为当前视图容器的注入器。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zb6y3wi9nrdzjhiz1f304ob4\"><code>ngComponentOutletContent</code>：要插入组件的 content 部分的可项目节点的可选列表（如果存在）。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8j19c8xcbz4hcuqcxe3cfd261\"><code>ngComponentOutletNgModule</code>：可选的 NgModule\n类引用，以允许动态加载另一个模块，然后从该模块加载组件。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"511rngfoag5og4oeoc5yorelf\"><code>ngComponentOutletNgModuleFactory</code>: 已弃用的配置选项，允许提供可选的NgModule工厂，以允许动态加载另一个模块，然后从该模块加载组件。改用\n<code>ngComponentOutletNgModule</code>。</p>\n</li>\n</ul>\n<h3 id=\"syntax\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p44mx807exjp3s0k9dwbuxla\">语法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#syntax\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1vmlj0s3t7wnn0chr27ix8y2o\">简单</p>\n<code-example>\n&lt;ng-container *<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>=\"componentTypeExpression\"&gt;&lt;/ng-container&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15vkq3xcgeo71zkw98df74sbg\">带输入</p>\n<code-example>\n&lt;ng-container *<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>=\"componentTypeExpression;\n                                  inputs: inputsExpression;\"&gt;\n&lt;/ng-container&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8rpmhhpcjiba2gtzm93t7dvg\">定制的注入器/内容</p>\n<code-example>\n&lt;ng-container *<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>=\"componentTypeExpression;\n                                  injector: injectorExpression;\n                                  content: contentNodesExpression;\"&gt;\n&lt;/ng-container&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1yfi6n1b5ehpnxuykmm1gv6e7\">定制的 ngModule 引用</p>\n<code-example>\n&lt;ng-container *<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>=\"componentTypeExpression;\n                                  ngModule: ngModuleClass;\"&gt;\n&lt;/ng-container&gt;\n</code-example>\n<h3 id=\"a-simple-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agsr72nwnjjreml09tsmnu14u\">一个简单的例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgComponentOutlet#a-simple-example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example path=\"common/ngComponentOutlet/ts/module.ts\" region=\"SimpleExample\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({selector: 'hello-world', template: 'Hello World!'})\nexport class HelloWorld {}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-component-outlet-simple-example',\n  template: `&lt;ng-container *<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>=\"HelloWorld\"&gt;&lt;/ng-container&gt;`,\n})\nexport class NgComponentOutletSimpleExample {\n  // This field is necessary to expose HelloWorld to the template.\n  HelloWorld = HelloWorld;\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6f2jr7lawht4oosq1t280jxtw\">带有附加选项的更完整示例：</p>\n<code-example path=\"common/ngComponentOutlet/ts/module.ts\" region=\"CompleteExample\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nexport class Greeter {\n  suffix = '!';\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'complete-component',\n  template: `{{ label }}: &lt;ng-content&gt;&lt;/ng-content&gt; &lt;ng-content&gt;&lt;/ng-content&gt;{{ greeter.suffix }}`,\n})\nexport class CompleteComponent {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() label!: string;\n\n  constructor(public greeter: Greeter) {}\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-component-outlet-complete-example',\n  template: ` &lt;ng-template #ahoj&gt;Ahoj&lt;/ng-template&gt;\n    &lt;ng-template #svet&gt;Svet&lt;/ng-template&gt;\n    &lt;ng-container\n      *<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>=\"\n        CompleteComponent;\n        inputs: myInputs;\n        injector: myInjector;\n        content: myContent\n      \"\n    &gt;&lt;/ng-container&gt;`,\n})\nexport class NgComponentOutletCompleteExample implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  // This field is necessary to expose CompleteComponent to the template.\n  CompleteComponent = CompleteComponent;\n\n  myInputs = {'label': 'Complete'};\n\n  myInjector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>;\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('ahoj', {<a href=\"api/upgrade/static\" class=\"code-anchor\">static</a>: true}) ahojTemplateRef!: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&lt;any&gt;;\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('svet', {<a href=\"api/upgrade/static\" class=\"code-anchor\">static</a>: true}) svetTemplateRef!: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&lt;any&gt;;\n  myContent?: any[][];\n\n  constructor(\n    injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>,\n    private vcr: <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a>,\n  ) {\n    this.myInjector = Injector.create({\n      providers: [{provide: Greeter, deps: []}],\n      parent: injector,\n    });\n  }\n\n  ngOnInit() {\n    // Create the projectable content from the templates\n    this.myContent = [\n      this.vcr.createEmbeddedView(this.ahojTemplateRef).rootNodes,\n      this.vcr.createEmbeddedView(this.svetTemplateRef).rootNodes,\n    ];\n  }\n}\n\n</code-example>\n\n  </section>\n\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common\n - api/common/CommonModule\n - api/core/DoCheck\n - api/core/OnChanges\n - api/core/OnDestroy\n - guide/deprecations\n - guide/dynamic-component-loader\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/CommonModule\n - api/common/NgComponentOutlet#a-simple-example\n - api/common/NgComponentOutlet#description\n - api/common/NgComponentOutlet#fine-tune-control\n - api/common/NgComponentOutlet#instance-properties\n - api/common/NgComponentOutlet#ngcomponentoutlet\n - api/common/NgComponentOutlet#selectors\n - api/common/NgComponentOutlet#syntax\n - api/common/NgComponentOutlet#导出自\n - api/core/Component\n - api/core/Injectable\n - api/core/Injector\n - api/core/Input\n - api/core/NgModuleFactory\n - api/core/OnInit\n - api/core/TemplateRef\n - api/core/Type\n - api/core/ViewChild\n - api/core/ViewContainerRef\n - api/upgrade/static\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/src/directives/ng_component_outlet.ts#L24-L212\n-->"}