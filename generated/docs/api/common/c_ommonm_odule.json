{"id":"api/common/CommonModule","title":"CommonModule","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/CommonModule\", \"name\": \"CommonModule\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/common\">@angular/common</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/src/common_module.ts#L13-L28\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"commonmodule\">CommonModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/CommonModule#commonmodule\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label ngmodule\">ngmodule</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c88aqtwcy5jyw78jcnhy60iis\">导出所有基本的 Angular 指令和管道，比如 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>、<code><a href=\"api/common/NgForOf\" class=\"code-anchor\">NgForOf</a></code>、<code><a href=\"api/common/DecimalPipe\" class=\"code-anchor\">DecimalPipe</a></code> 等。\n它会由 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 进行二次导出，当你使用 CLI 的 <code>new</code> 命令创建新应用时，<code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>\n会自动包含在根模块 <code>AppModule</code> 中。</p>\n\n  </section>\n  <section class=\"ngmodule-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> {\n}\n</code-example>\n\n</section>\n\n\n  \n  \n\n\n  \n\n\n\n\n\n  \n\n  \n\n<section class=\"directives\">\n  <h2 id=\"指令\">指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/CommonModule#指令\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table directive-table\">\n    <thead>\n    <tr>\n      <th>名称</th>\n      <th>说明</th>\n    </tr>\n    </thead>\n    <tbody>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgClass\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgClass</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"rm8e4keowvkunvocplxwt4mn\">从 HTML 元素上添加和移除 CSS 类。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgComponentOutlet\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgComponentOutlet</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ve4zif99gsd923qx2v2h21z7\">实例化单个 <a href=\"api/core/Component\"><code>Component</code></a> 类型，并将其宿主视图插入当前视图。<code><a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">NgComponentOutlet</a></code>\n为动态组件创建提供了一种声明式方法。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgFor\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgFor</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1l4vbmz9j0o3j8agspalfm5sh\">一种<a href=\"guide/structural-directives\">结构型指令</a>，为集合中的每个条目渲染一个模板。如果指令放置在一个元素上，该元素就会成为克隆后的模板的父级。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgForOf\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgForOf</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1l4vbmz9j0o3j8agspalfm5sh\">一种<a href=\"guide/structural-directives\">结构型指令</a>，为集合中的每个条目渲染一个模板。如果指令放置在一个元素上，该元素就会成为克隆后的模板的父级。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgIf\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgIf</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31886fc104fg2szplr364w2sl\">本结构型指令用于根据表达式的值（强转为\nboolean）是否为真值，来有条件的包含某个模板。当表达式计算为 true 时，Angular 会渲染 <code>then</code>\n子句中提供的模板，当为 false 或 null 时则渲染可选的 <code>else</code> 子句中的模板。<code>else</code>\n子句的默认模板是空白模板。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgPlural\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgPlural</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8c4qn085txgrp56wljv4v6gil\">根据数字值添加/删除 DOM 子树。为支持复数词量身定制。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgPluralCase\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgPluralCase</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6daeoo8ihohbfjhmng3h3ku7z\">创建一个视图，当给定表达式根据 CLDR 规则与复数表达式匹配时，将在父视图 <a href=\"api/common/NgPlural\"><code>NgPlural</code></a>\n中添加/删除该视图。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgStyle\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgStyle</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29c2gbjpeql3bpoa8anl8lxaw\">一个属性指令，用于更新容器元素的样式。可以通过指定用冒号分隔的键值对来设置一个或多个样式属性。其键是样式名称，带有可选的 <code>&lt;unit&gt;</code> 后缀（比如 'top.px'，'font-style.em'）；其值是待求值的表达式。如果求值结果不是 null，则把用指定单位表示的结果赋值给指定的样式属性；如果是 null，则删除相应的样式。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgSwitch\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgSwitch</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uc1lrb2k11svm9qduhfrb1sj\">容器上的 <code>[<a href=\"api/common/NgSwitch\" class=\"code-anchor\">ngSwitch</a>]</code> 指令指定要匹配的表达式。匹配的表达式由容器内视图上的 <code><a href=\"api/common/NgSwitchCase\" class=\"code-anchor\">ngSwitchCase</a></code>\n指令提供。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"sg243roaugbykli73q8o6gq6\">如果有匹配项，则渲染匹配的视图。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30bpbrrs8df3qk5pktmpu8nah\">如果没有匹配项，则渲染 <code><a href=\"api/common/NgSwitchDefault\" class=\"code-anchor\">ngSwitchDefault</a></code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80pt34p3lhpb0iua8tdjx3bhr\">    <code>[<a href=\"api/common/NgSwitch\" class=\"code-anchor\">NgSwitch</a>]</code> 语句内任何除 <code><a href=\"api/common/NgSwitchCase\" class=\"code-anchor\">NgSwitchCase</a></code> 或 <code><a href=\"api/common/NgSwitchDefault\" class=\"code-anchor\">ngSwitchDefault</a></code> 指令之外的元素都保留在原位。</li>\n</ul>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgSwitchCase\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgSwitchCase</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enmgaae53ud0ajgl96ytqrwzd\">提供一个 switch case 表达式来匹配一个封闭的 <code><a href=\"api/common/NgSwitch\" class=\"code-anchor\">ngSwitch</a></code> 表达式。当表达式匹配时，将渲染给定的\n<code><a href=\"api/common/NgSwitchCase\" class=\"code-anchor\">NgSwitchCase</a></code> 模板。如果多个匹配表达式与开关表达式值相匹配，则会全部显示。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgSwitchDefault\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgSwitchDefault</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"907vogpi3t81gzqi9k5b7na0a\">创建一个当没有任何 <code><a href=\"api/common/NgSwitchCase\" class=\"code-anchor\">NgSwitchCase</a></code> 表达式能匹配 <code><a href=\"api/common/NgSwitch\" class=\"code-anchor\">NgSwitch</a></code> 表达时要渲染的视图。该语句应该是\n<code><a href=\"api/common/NgSwitch\" class=\"code-anchor\">NgSwitch</a></code> 的最后一种情况。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/NgTemplateOutlet\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">NgTemplateOutlet</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4t2c6ua8oc7t3szaabke2sfym\">根据一个提前备好的 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> 插入一个内嵌视图。</p>\n\n        </td>\n      </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n  \n\n<section class=\"pipes\">\n  <h2 id=\"管道\">管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/CommonModule#管道\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table pipe-table\">\n    <thead>\n    <tr>\n      <th>名称</th>\n      <th>说明</th>\n    </tr>\n    </thead>\n    <tbody>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/AsyncPipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">AsyncPipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gnzkz5004n7mjtrqlurkg2fh\">从一个异步回执中解出一个值。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/CurrencyPipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">CurrencyPipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nrwnc3k470e50q7nufo16ek0\">将数字转换为货币字符串，根据确定组大小和分隔符、小数点字符和其他特定于区域设置的配置的区域设置规则进行格式化。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/DatePipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">DatePipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1akl69rz8a1me49o5ehugw0lu\">根据区域设置规则格式化日期值。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/DecimalPipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">DecimalPipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6q7lp98brzwjyz110d58ohdr7\">根据数字选项和区域设置规则格式化值。区域设置确定组的大小和分隔符、小数点字符和其他特定于区域设置的配置。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/I18nPluralPipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">I18nPluralPipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mo4gxoz61vm3slysewhl4za5\">将值映射到根据语言环境规则对该值进行复数化的字符串。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/I18nSelectPipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">I18nSelectPipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aih8v2pvp87fl9b18p9toj8t6\">通用选择器，用于显示与当前值匹配的字符串。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/JsonPipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">JsonPipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cpt5nk38s7xptmqkhf7xyuon\">把一个值转换成 JSON 字符串格式。在调试时很有用。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/KeyValuePipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">KeyValuePipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5momgq2pwnfmum3fwbyipgrvz\">将 Object 或 Map 转换为键值对数组。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/LowerCasePipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">LowerCasePipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2uh0ahm9ryydiryybfua28a8l\">把文本转换成全小写形式。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/PercentPipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">PercentPipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60v0vz2v7q9vgzucpa9y590vj\">将数字转换为百分比字符串，根据确定组大小和分隔符、小数点字符和其他特定于区域设置的配置的区域设置规则进行格式化。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/SlicePipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">SlicePipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"321mgxaa4ae9lfjct279xr3kh\">从一个 <code>Array</code> 或 <code>String</code> 中创建其元素一个新子集（slice）。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/TitleCasePipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">TitleCasePipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evwl461d95dgcrsh1u8ekj42n\">把文本转换成标题形式。\n把每个单词的第一个字母转成大写形式，并把单词的其余部分转成小写形式。\n单词之间用任意空白字符进行分隔，比如空格、Tab 或换行符。</p>\n\n        </td>\n      </tr>\n    \n      <tr>\n        <td>\n          <a href=\"api/common/UpperCasePipe\">\n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">UpperCasePipe</code-example>\n          </a>\n        </td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7j7h3zn8zk5onqps4xzua66f2\">把文本转换成全大写形式。</p>\n\n        </td>\n      </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n</div>\n</article>\n\n<!-- links to this doc:\n - api/common\n - api/common/AsyncPipe\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/I18nPluralPipe\n - api/common/I18nSelectPipe\n - api/common/JsonPipe\n - api/common/KeyValuePipe\n - api/common/LowerCasePipe\n - api/common/NgClass\n - api/common/NgComponentOutlet\n - api/common/NgFor\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/NgPlural\n - api/common/NgPluralCase\n - api/common/NgStyle\n - api/common/NgSwitch\n - api/common/NgSwitchCase\n - api/common/NgSwitchDefault\n - api/common/NgTemplateOutlet\n - api/common/PercentPipe\n - api/common/SlicePipe\n - api/common/TitleCasePipe\n - api/common/UpperCasePipe\n - api/core/NgModule\n - api/core/forwardRef\n - api/platform-browser\n - api/platform-browser/BrowserModule\n - extended-diagnostics/NG8103\n - guide/built-in-directives\n - guide/cheatsheet\n - guide/dynamic-form\n - guide/feature-modules\n - guide/forms\n - guide/frequent-ngmodules\n - guide/lazy-loading-ngmodules\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/observables-in-angular\n - guide/pipes\n - guide/router\n - guide/router-tutorial-toh\n - guide/sharing-ngmodules\n - guide/singleton-services\n - guide/standalone-components\n - guide/standalone-migration\n - guide/structural-directives\n - guide/styleguide\n - guide/testing-components-scenarios\n - guide/user-input\n - tutorial/first-app/first-app-lesson-03\n - tutorial/first-app/first-app-lesson-04\n - tutorial/first-app/first-app-lesson-05\n - tutorial/first-app/first-app-lesson-11\n - tutorial/first-app/first-app-lesson-12\n - tutorial/tour-of-heroes/toh-pt5\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/AsyncPipe\n - api/common/CommonModule#commonmodule\n - api/common/CommonModule#指令\n - api/common/CommonModule#管道\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/I18nPluralPipe\n - api/common/I18nSelectPipe\n - api/common/JsonPipe\n - api/common/KeyValuePipe\n - api/common/LowerCasePipe\n - api/common/NgClass\n - api/common/NgComponentOutlet\n - api/common/NgFor\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/NgPlural\n - api/common/NgPluralCase\n - api/common/NgStyle\n - api/common/NgSwitch\n - api/common/NgSwitchCase\n - api/common/NgSwitchDefault\n - api/common/NgTemplateOutlet\n - api/common/PercentPipe\n - api/common/SlicePipe\n - api/common/TitleCasePipe\n - api/common/UpperCasePipe\n - api/core/Component\n - api/core/TemplateRef\n - api/platform-browser/BrowserModule\n - guide/structural-directives\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/src/common_module.ts#L13-L28\n-->"}