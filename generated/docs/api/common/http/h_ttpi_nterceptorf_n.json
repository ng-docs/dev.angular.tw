{"id":"api/common/http/HttpInterceptorFn","title":"HttpInterceptorFn","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/http\", \"name\": \"@angular/common/http\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.io/api/common/http/HttpInterceptorFn\", \"name\": \"HttpInterceptorFn\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/common\">@angular/common</a> &gt; <a href=\"api/common/http\">@angular/common/http</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/interceptor.ts#L90-L135\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"httpinterceptorfn\">HttpInterceptorFn<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#httpinterceptorfn\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label type-alias\">type-alias</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lscit82h81ohpuqe1p5nyxqb\">通过 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 发出的 HTTP 请求的拦截器。</p>\n\n    <p><a href=\"api/common/http/HttpInterceptorFn#description\">查看更多...</a></p>\n  </section>\n  <section class=\"type-alias-overview\">\n    <code-example language=\"ts\" hidecopy=\"true\">\n    type <a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a> = (req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;unknown&gt;, next: <a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a>) =&gt; Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;unknown&gt;&gt;;\n    </code-example>\n  </section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8so7ib9vlc8hp6bdb0v866k9i\"><a href=\"guide/http-intercept-requests-and-responses\">HTTP指南</a></p></li>\n    <li><a href=\"api/common/http/withInterceptors\"><code>withInterceptors</code></a></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cb268oidaztx69wzsefnqx2si\"><code><a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a></code> 是 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 在发出请求时调用的中间件函数。这些函数有机会修改传出请求或任何返回的响应，以及阻止、重定向或以其他方式更改请求或响应语义。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bh9ujrgr7hrs4p4dd6y4x0cnv\">提供了一个表示下一个拦截器（或将发出真实 HTTP 请求的后端）的 <code><a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a></code>。大多数拦截器会委托给此函数，但这不是必需的（有关详细信息，请参阅 <code><a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a></code> ）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"111w6wqyj0roz2je0ljm21vqe\"><code><a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a></code>在一个\n<code><a href=\"/guide/dependency-injection-context\">注入上下文</a></code>中执行。它们可以通过配置它们的\n<code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code>访问\n<code>inject()</code>。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6gnzd01jdmop6gviev967tfg7\">更多信息可在\n<a href=\"api/common/http/HttpInterceptorFn#usage-notes\">使用说明...</a>中找到。</p>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qesrtjogzyl3b4ste9y2natx\">这是一个无操作拦截器，仅将请求通过而不对其进行修改：</p>\n<code-example language=\"typescript\">\nexport const noopInterceptor: <a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a> = (req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;unknown&gt;, next:\n<a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a>) =&gt; {\n  return next(modifiedReq);\n};\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elifnpmrrjmv6wrsdu0i3uitt\">如果要修改请求，请先克隆它，然后在将其传递给\n<code>next()</code>处理函数之前修改克隆。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5o5di87fsk2u6bhs067v51jg5\">这是一个基本拦截器，向标头添加一个令牌。</p>\n<code-example language=\"typescript\">\nexport const authenticationInterceptor: <a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a> = (req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;unknown&gt;, next:\n<a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a>) =&gt; {\n   const userToken = 'MY_TOKEN'; const modifiedReq = req.clone({\n     headers: req.headers.set('Authorization', `Bearer ${userToken}`),\n   });\n\n   return next(modifiedReq);\n};\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HttpInterceptor\n - api/common/http/withInterceptors\n-->\n<!-- links from this doc:\n - /api\n - /guide/dependency-injection-context\n - api/common\n - api/common/http\n - api/common/http/HttpClient\n - api/common/http/HttpEvent\n - api/common/http/HttpHandlerFn\n - api/common/http/HttpInterceptorFn#description\n - api/common/http/HttpInterceptorFn#httpinterceptorfn\n - api/common/http/HttpInterceptorFn#see-also\n - api/common/http/HttpInterceptorFn#usage-notes\n - api/common/http/HttpRequest\n - api/common/http/withInterceptors\n - api/core/EnvironmentInjector\n - guide/http-intercept-requests-and-responses\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/interceptor.ts#L90-L135\n-->"}