{"id":"api/common/http/HttpClient","title":"HttpClient","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/http\", \"name\": \"@angular/common/http\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.io/api/common/http/HttpClient\", \"name\": \"HttpClient\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/common\">@angular/common</a> &gt; <a href=\"api/common/http\">@angular/common/http</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L57-L3697\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"httpclient\">HttpClient<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#httpclient\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"此类不可派生。\">\n      <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/docs/PUBLIC_API.md#final-classes\">最终类</a>\n    </label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1mvtmoayl0utngoaynqka9s2o\">执行 HTTP 请求。该服务作为可注入类提供，带有执行 HTTP\n请求的方法。每个请求方法都有多个签名，并且返回类型会根据所调用的签名（主要的值是 <code>observe</code> 和\n<code>responseType</code>）而有所不同。</p>\n\n    <p><a href=\"api/common/http/HttpClient#description\">查看更多...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a> {<br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(first: string | HttpRequest&lt;any&gt;, url?: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...... = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>&lt;R&gt;(req: HttpRequest&lt;any&gt;): Observable&lt;HttpEvent&lt;R&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boole...): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; tra...): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; tra...): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; ... 4 more ...; transferCache?: boolean | { ...; }; }): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; tr...): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; tr...): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; reportProgress?: boolean; observe: \"events\"; params?: HttpParams | { ...; }; responseType?: \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;HttpEvent&lt;any&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; reportProgress?: boolean; observe: \"events\"; params?: HttpParams | { ...; }; responseType?: \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;HttpEvent&lt;R&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; reportProgress?: boolean; observe: \"response\"; params?: HttpParams | { ...; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; reportProgress?: boolean; observe: \"response\"; params?: HttpParams | { ...; }; responseType?: \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;HttpResponse&lt;R&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; tr...): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options?: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; tr...): Observable&lt;R&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; ... 4 more ...; transferCache?: boolean | { ...; }; }): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; body?: any; } = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?:...): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?...): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;HttpEvent&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;HttpEvent&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; bod...): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any...): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any...): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...): Observable&lt;HttpResponse&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; } = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;HttpEvent&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;HttpEvent&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;HttpResponse&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; } = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;HttpEvent&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;HttpEvent&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;HttpResponse&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#jsonp\"><span class=\"member-name\">jsonp</span>&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#jsonp\"><span class=\"member-name\">jsonp</span>(url: string, callbackParam: string): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#jsonp\"><span class=\"member-name\">jsonp</span>&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; } = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;HttpEvent&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;HttpEvent&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;HttpResponse&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;T&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { ...; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"; withCredentials?: boolean; } = {}): Observable&lt;any&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"events\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpEvent&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;ArrayBuffer&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;Blob&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;string&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;Object&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; observe: \"response\"; context?: HttpContext; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;HttpResponse&lt;T&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</a><br><a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\"; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</a>\n}\n</code-example>\n\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqy8msbtjks9rc6kggb2rhybq\"><a href=\"guide/understanding-communicating-with-http\">HTTP指南</a></p></li>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4umryqtn6u7b6ovaoghcfovsz\"><a href=\"guide/http\">HTTP 指南</a></p></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ab40ik47nk1i6nvwtdlq8fq3n\">请注意，<code>responseType</code>\n<em>选项</em>的值是一个字符串，用于标识此响应的单一数据类型。该方法的各个重载版本处理每种响应类型。正如组合签名所暗示的那样\n<code>responseType</code> 的值不能为联合类型。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6u51da2f5k6oz94kxa2jsu9t2\">更多信息可在\n<a href=\"api/common/http/HttpClient#usage-notes\">使用说明...</a>中找到。</p>\n</section>\n  \n<section class=\"instance-methods\">\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"request\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"request\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cu7sac90chvnwwy5spb8dhz70\">request()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#request\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L575-L734\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dh7uhmti8bi9h7w9uual65p0p\">为任意 HTTP\n请求构造一个可观察的对象，该请求在被订阅时将通过已注册的拦截器链触发该请求，然后发送到服务器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"17-个重载形式\">17 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6mekea0g5vu1855072d8y2k72\">发送 <code>HTTPRequest</code> 并返回 <code>HTTPEvents</code> 流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;any&gt;): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4iljmw3xyhfl0mduwth30k559\"><a id=\"\"></a>\n        <code>req</code></td>\n      <td class=\"param-type\"><code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&lt;any&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"39ozhecsv8bcjonbpz063km2u\">响应对象的 <code>Observable</code>，其响应体为 <code>HTTPEvents</code> 流。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"72jyfwwcwvww7yp5e2obcqgp6\">构造一个请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boole...): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boole...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8j8zlh8yqbwopi0xd95gxd8\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fol8060dmq32ffxaomt3gwxi\">构造一个请求，将请求体解释为 <code>Blob</code> 类型，其响应体为 <code>Blob</code> 类型。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; tra...): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; tra...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d8109qkd9i5r4exxpdd0rlaz3\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4s8ydobjiitfhd9xjn9jod4bt\">构造一个请求，它将请求体解释为字符串，并且返回一个字符串。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; tra...): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; tra...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9kjlmgsnrfmd4uk2pwvorldq\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"17ree6v3jvxkx2k8z9r7sc5u0\">构造一个请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; ... 4 more ...; transferCache?: boolean | { ...; }; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5u3wnqw43lk1xb4dzxb0sel1\">一个响应对象的 <code>Observable</code>，其响应主体为此请求的 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code></p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6mtuw4hhx1dllqox549mzly4\">构造一个请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; tr...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; tr...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b0cwr2gbnc8upmfrgfk4avhjy\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fmufxwnpwyf44ud4jb4mwfze\">构造一个请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; tr...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; tr...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cw3betg8yqjqoz96vsbci24am\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"sh2z75odocsuyb2z4dlow377\">构造一个请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"events\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;any&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2lneyyuwr9uy0wjdcmnd53tun\">要和此请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtwj07tw2l3h462g1a08rhlxx\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"sh2z75odocsuyb2z4dlow377\">构造一个请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"events\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;R&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gdiq0rknxzic83fcjtq8dunj\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>R</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1v5v6uz7qqfo21wlfsymkrxtw\">构造一个请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38bki3iacilinjjotu27ce3qu\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e52bt2rv5dmi419cjx4y6st52\">构造一个请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2k41mro830lvcqx02celyozl\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zf50irp4qhio05ozqqgnqmgh\">构造一个请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27z8d56yz0m82ynv107ozxd5t\">此请求的 <code>HTTP response</code> 的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1y9rnvvijkpkjarmap14lgmge\">构造一个请求，它将请求体解释为 JSON 对象，并返回完整 <code>HTTPResponse</code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"response\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7it9fwm2at7un1j0m9q87l07l\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ito3c1o2fe6qtnaedfozgt4w\">构造一个请求，它将请求体解释为 JSON 对象，并返回带有请求主体类型 <code>HTTPResponse</code></p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"response\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { ...; }; responseType?: \"json\"; withCredentials?: boolean; transferCache?: boolean | { ...; }; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;R&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dda54y0oh551e16qtaqdpj3vc\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 <code>R</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yfmft22au81eclehm87gd9fy\">构造一个请求，它将请求体解释为 JSON 对象，并返回完整的 <code>HTTPResponse</code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; tr...): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; tr...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c6votaganboaj56vqqvm1l3dm\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-16\">重载 #16</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xrfatg8342idz3972zotplxt\">构造一个请求，它将请求体解释为 JSON 对象，并返回所请求类型的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&lt;R&gt;(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; tr...): Observable&lt;R&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | ... 2 more ... | readonly (string | ... 1 more ... | boolean)[]; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; tr...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2urwq0b7e0u8bmrrwsw4775pg\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>R</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-17\">重载 #17</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78rgqmjxh52nyqwmffjwnr2f3\">构造一个请求，其中的响应类型和所请求的可观察对象都不是静态已知的。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; ... 4 more ...; transferCache?: boolean | { ...; }; }): Observable&lt;any&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqtpq63illdusrnijtyvg8vyj\"><a id=\"\"></a>\n        <code>method</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evp3ndmj2naody42xph6a5lqm\">HTTP 方法。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uo8prpyh2ph89vdlscqc2bx2\">所请求的响应对象的 <code>Observable</code>，其响应体是 <code>any</code> 类型。</p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3654zyd60nu4z9x49ujvyuoov\">你可以直接把 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 作为唯一参数。在这种情况下，该调用将返回原始 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>\n流的可观察值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ay86ay6txeprs90qwr1eo3nu\">或者，你可以将 HTTP 方法作为第一个参数，将 URL\n字符串作为第二个参数，将包含请求正文的选项哈希作为第三个参数。参见\n<code>addBody()</code>。在这种情况下，指定的 <code>responseType</code> 和 <code>observe</code> 选项会决定要返回的 observable\n类型。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gxekdpa46ice22npai72z8vz\">此 <code>responseType</code> 值确定如何解析成功的响应体。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1e212uj5bqmqecm5c42nw9z80\">如果 <code>responseType</code> 是默认的 <code>json</code>，你可以将结果对象的类型接口作为类型参数传递给调用。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dioeg1fm13yv8k4yl8nd36l\"><code>observe</code> 值根据你感兴趣的观察值确定其返回类型。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1v4vps614h3v4w8r70poxl7x2\">事件的 observable 值会返回原始 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 流的可 <code>observe</code> 值，默认包括进度事件。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezcig17tndbvb981wc1cu3chn\">response 的 <code>observe</code> 值会返回 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse&lt;T&gt;</a></code> 的 observable，其中 <code>T</code> 参数取决于\n<code>responseType</code> 和任何可选提供的类型参数。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pi46h17p2109bskosrnkspus\"><code>observe</code> 的 body 值会返回与 <code>T</code> 的响应体具有相同类型的 <code>&lt;T&gt;</code> 型可观察对象。</li>\n</ul>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"delete\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"delete\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8880nqzcxej3fl4kcbwfhqmro\">delete()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#delete\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1116-L1142\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"99xu1mjzopj99l9ou7znoxd2m\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>DELETE</code>\n请求。参见它的各个独立重载形式，以了解其返回值类型。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-个重载形式\">15 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1-1\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"612m97u33y1jfwgrhxk6ocw6b\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?:...): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?:...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbyzv8zta4t8s41hl3i1joxod\">类型为 <code>ArrayBuffer</code> 的响应体的 <code>Observable</code>。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2-1\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30kitgljjxsbfndv023mdwmqz\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5b3hgplt3n7p3a8dla3pk8j51\">类型为 <code>Blob</code> 的响应体的 <code>Observable</code>。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3-1\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2rjif8k1v7w9d6gpyjpvcd8ig\">构造一个 <code>DELETE</code> 请求，它将请求体解释为字符串，并且返回一个字符串。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9kjlmgsnrfmd4uk2pwvorldq\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4-1\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cijwla13uba816ofudp37y2j4\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nnrjpei8qr11bv9x0yr81qr5\">此请求的所有 <code>HTTPEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5-1\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtki7sxq7kytgksvck78bd5sg\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"48i6t451sfqokf2tn081dm8r1\">此请求的所有 <code>HTTPEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6-1\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1h8vezf4yzqgl39egi32mdne3\">构造一个 <code>DELETE</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ypz8mml4nkoeazqwzy7kfeq7\">表示啥此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7-1\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2z191t5bw1yocq5dyz54qj0e2\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8j849pjyciuw9j7wsmh79y9am\">表示啥此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8-1\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sfc8woxbtjba7iz0irwr4mts\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"94t755gyaguq3kvdownbcjibx\">表示此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9-1\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"gtp5qp6ofchxjpaoeniy3swp\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; bod...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; bod...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2k66yjaq1cbdar4uctrt8x75s\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10-1\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"almqk9r4cardj6vgqv6o55452\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2k41mro830lvcqx02celyozl\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11-1\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cd75t68vkkddueqkle14z0r5n\">构造一个 <code>DELETE</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"75f7i4hhlsvedw239tgmajhng\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12-1\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"chs54ndujlt5vwwgn853frnt8\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gzyaqey1a9cocenc0tj3qc1s\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13-1\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dukufob8jifmdo30j78s1u3i1\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: an...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rxdo6rqsw9k1wx6g3b1u7sup\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14-1\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4hldat5qg6funre2qgxstivz\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d8m8srq9iaboduy7yas21jozo\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15-1\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1f17brezw6kqhn2ypyo79mzof\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9j3pcg4ik59w7gm4f6duflvo1\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"get\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"get\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6p3z6rwl3g1qyz7uu6cmg29dd\">get()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#get\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1525-L1547\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9cg19oq6jfpjis9imiw59l1jz\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>GET</code>\n请求。参见它的各个独立重载形式，以了解其返回值类型。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-个重载形式-1\">15 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1-2\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qp8jbytv6h6ztt6sue012dl5\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8j8zlh8yqbwopi0xd95gxd8\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2-2\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"loebmtbuyt0bj0u1d32a7wxm\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccfuj4m8vpee7sp8majkdjfuc\">响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3-2\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fcg369q5gezyro1xsdiyu2is\">构造一个 <code>GET</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9kjlmgsnrfmd4uk2pwvorldq\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4-2\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3sl3z9pxxy3dyrqgi4csmfz0e\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dnmhnyra3ub5st6gxxa1agzql\">表示此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，响应体为 n <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5-2\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mrwq8bli9k0emm40zi1zpi1t\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7tcmac9cvs03hvm9e5v6pzz0\">响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6-2\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dk28o5moo83otkz091rjmsed7\">构造一个 <code>GET</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zr8gp5jiju3cvr8cw4n53cua\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7-2\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ewm88hnpxbnsrr1w7lcbutca\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50538h9ip4bejgkpf8z0x3u15\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8-2\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xhohfx8yjoh10b7crm6acilu\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78rcsgqvrwxf6zj3u645uyznd\">响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9-2\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eu6dplugoptzoqm14ph83h51n\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv6uz135cozvsj3gcjhmuvyt9\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10-2\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2jopi33u767iv4aypnx65i9uq\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"306192d8v1ozhrf4p3p5hudti\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11-2\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1qahkyf88gjdqr77cp8345i5o\">构造一个 <code>GET</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4feny8is6crdci5672jvzah2h\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12-2\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"czsg7wcu60bwxa4lf7pliny4e\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7it9fwm2at7un1j0m9q87l07l\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13-2\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"czsg7wcu60bwxa4lf7pliny4e\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vebqtmxdf3mobylaub5u6448\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14-2\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34axehktrmbq2o4t04646ais9\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zzc5m4zzx4q4k81573inzmc\">响应体的 <code>Observable</code> 作为 JSON 对象。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15-2\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2omgm7vhhz6rp2cjdrjn1dk14\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bu0e09xj0idxfgwetu4m8y59u\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"head\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"head\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1z4fdpxrtoynutu83hr4kccdk\">head()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#head\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1936-L1960\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ub5pmk0uq78ikm37yf0j1vza\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>HEAD</code> 请求。<code>HEAD</code>\n方法会返回该资源的元数据，而不会传输资源本身。参见它的各个独立重载形式，以了解其返回类型。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-个重载形式-2\">15 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1-3\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d7qjd8pgli0r8pnaydbu45u7s\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8j8zlh8yqbwopi0xd95gxd8\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2-3\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32oqlyymkm0auhsyayxtu2qo\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccfuj4m8vpee7sp8majkdjfuc\">响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3-3\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zk8jl8uvtlzbn2b1iwj8477a\">构造一个 <code>HEAD</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9kjlmgsnrfmd4uk2pwvorldq\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4-3\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a35oyoi0lyoav0udfcrwkdp3r\">构造一个 <code>HEAD</code> 请求，它把请求体解释为 <code>ArrayBuffer</code>，并返回完整事件的流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4s4k99usvfsqinkyl8fkwkp5i\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5-3\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1htx59fm5ve0c4amf0f6uwy0j\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d4mdr5p4yu55mtrr5movzamva\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6-3\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3gywszz5p70kjz7p4t2cq06sy\">构造一个 <code>HEAD</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59g6qph0qm7ao6x93cyt4z6ac\">表示啥此请求的 <code>HttpEvents for the request</code> 的 <code>Observable</code>，响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7-3\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8iggflkcsqnushzmvq2yzna3q\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2iwjl5z3vjjjrb5vp9nryz9vo\">表示啥此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8-3\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"36afvifdth0mnfmiooxyx36ml\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8pts89th0doyx9mkx3ga9m2b\">表示此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9-3\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53uk3487vy16ik3re6x82a09l\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv6uz135cozvsj3gcjhmuvyt9\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10-3\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1wdib5qcmsn02dfe1udsxz6l\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92xob9dq495onimj8b6gb9cmb\">此请求的响应对象的 <code>Observable</code>，其响应体为 blob 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11-3\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ewwnpw3radb18s0690dvuywa\">构造一个 <code>HEAD</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4feny8is6crdci5672jvzah2h\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12-3\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9lx97fxo3x2f9oyyktiib8fhu\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4z6zswecupogu12tpes98xanb\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13-3\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cp3qwzmonr3ijondahrzi71g5\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qe0ql3eo80erqja7miiekx2d\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14-3\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6rz137y1bzenf0f9iy74jtx5b\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uffezgcp8ugl32qsbf09npf\">响应对象的 <code>Observable</code>，其响应体为 JSON 对象。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15-3\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5j8o7kgnv76abbnkdox902ckd\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pcdyno67ch9rpj516vrxoogr\">与请求一起发送的 HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"av41ru5mnj7wln07km2lwilvt\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"jsonp\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"jsonp\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pzee9lte0kkft0ja675b35gg\">jsonp()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1985-L2010\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"y6dfftfk8hqrw2j41viixlxz\">构造一个 <code>Observable</code>，当订阅该 Observable 时，将通过拦截器管道分派特殊的 <code>JSONP</code> 方法。<a href=\"https://en.wikipedia.org/wiki/JSONP\">JSONP\n模式</a> 可绕过某些 API\n端点的局限性，这些端点不支持新的方式。更推荐使用\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a> 协议。JSONP 将端点 API 视为\nJavaScript 文件，并欺骗浏览器处理请求，即使 API\n端点与发出请求的客户端应用不在同一个域（源）上。端点 API 必须支持 JSONP 回调，JSONP\n请求才能正常工作。此资源 API 会返回包装在回调函数中的 JSON\n响应。你可以将回调函数名称作为查询参数之一传递。请注意，JSONP 请求只能与 <code>GET</code> 请求一起使用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"28i71rhay3rok5v0uimlafl9n\">为给定的 URL 和回调参数的名称构造一个 <code>JSONP</code></p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">jsonp</span>(url: string, callbackParam: string): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btcvvi5oys9o85e21l1x8wmis\">资源 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2piy8yf3zgdalll8od2w6n5n\"><a id=\"\"></a>\n        <code>callbackParam</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zm52us9kwdyz0c62co2b44df\">回调函数名称。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7fkri1ku5aiv2mnyea57li84\">响应对象的 <code>Observable</code>，其响应体为对象类型。</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"28i71rhay3rok5v0uimlafl9n\">为给定的 URL 和回调参数的名称构造一个 <code>JSONP</code></p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">jsonp</span>&lt;T&gt;(url: string, callbackParam: string): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btcvvi5oys9o85e21l1x8wmis\">资源 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2piy8yf3zgdalll8od2w6n5n\"><a id=\"\"></a>\n        <code>callbackParam</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zm52us9kwdyz0c62co2b44df\">回调函数名称。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7udj3zedo5pwjsq5njkc3j1oj\">你必须安装合适的拦截器，比如 <code><a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a></code>\n提供的拦截器。如果未经过此类拦截器，则所配置的后端可以拒绝 <code>JSONP</code></p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a34qg0o8fseeef1ta7sj9n23m\">响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"options\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"options\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o690xsagt4gw1cl9z79mkh1i\">options()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#options\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L2382-L2405\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9f4g3if4twsq0r0o3skfbetz2\">构造一个 <code>Observable</code>，当订阅该 Observable 时，它会让已配置的 <code>OPTIONS</code>\n请求在服务器上执行。此方法允许客户端确定所支持的 HTTP\n方法和端点的其他功能，而无需进行隐式资源操作。有关返回类型的详细信息，请参见各个重载。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-个重载形式-3\">15 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1-4\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2r17kjg1r53zalaizuvqefij5\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8j8zlh8yqbwopi0xd95gxd8\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2-4\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7o1olsatnn46xza50h0q56cs3\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccfuj4m8vpee7sp8majkdjfuc\">响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3-4\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83rouf42dei9yux16k1y9buz5\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为字符串，并且返回一个字符串。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9kjlmgsnrfmd4uk2pwvorldq\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4-4\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9lobtuf6trpttgh6wb2l10glq\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4s4k99usvfsqinkyl8fkwkp5i\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5-4\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6lbcazq7rhxvreh8n8of9spjm\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d4mdr5p4yu55mtrr5movzamva\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6-4\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xi4xwun2mye38stkbgcvyjqv\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5iskuoaaercjjjvllbrhf874d\">此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7-4\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sh7557yhqpgt3p1przmq0eox\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"248ir7jv8hmlbwa97010552xs\">表示啥此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8-4\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e0lllhbwwx2n46c507p63stjl\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8pts89th0doyx9mkx3ga9m2b\">表示此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9-4\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8gxldjlcd8x4rysml9kl1hk1x\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv6uz135cozvsj3gcjhmuvyt9\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10-4\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3x4dy92ymdha70j20tdbq6sq\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"306192d8v1ozhrf4p3p5hudti\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11-4\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1dbin0r1tk1oq32p4iwj4de6f\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4feny8is6crdci5672jvzah2h\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12-4\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4f15pwo6lviokcusukc6b2g7t\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4z6zswecupogu12tpes98xanb\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13-4\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9aqgf4ir6w4er5c6ulq6m7aib\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ybv41ks9wgulbpkyc5hoifx6\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14-4\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2j1at5ulrpmg2vi75g2x8uwle\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uffezgcp8ugl32qsbf09npf\">响应对象的 <code>Observable</code>，其响应体为 JSON 对象。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15-4\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1qi5igujxr1ro97jed4idnrok\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&lt;T&gt;(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1a79nc7t4ngkj5o1o9khepk8s\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"patch\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"patch\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1438o2eutaoftkuahz17par1m\">patch()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L2809-L2831\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rc4cskywmymm93cfeb9r77h8\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>PATCH</code>\n请求。参见它的各个独立重载形式，以了解其返回值类型。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-个重载形式-4\">15 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1-5\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5vafekw16w68ijkkdijqmlaq9\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8j8zlh8yqbwopi0xd95gxd8\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2-5\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3s19r5ukkgi5c8cjcn5i0jq6j\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccfuj4m8vpee7sp8majkdjfuc\">响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3-5\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"al64gzm9o8phbqohrlvghx4pb\">构造一个 <code>PATCH</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1tvytbib2rc3iv3yhpnis1vd\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4-5\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1l38xv9nmm4hqnsgpjpfeu81e\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4iur75xz2rfqhk1tsc8p775wo\">此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5-5\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fgc1z9i3vrg90lm7klu35zwq\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ag3wg7y5lcxzvcldlsnczdzoh\">表示此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6-5\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3aifra83wwza2jx4mewte8o4x\">构造一个 <code>PATCH</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"oau0gkz3yqgbhm93ji35610y\">表示啥此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7-5\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6qk8jdin95njef4f4318szh0d\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"77ilhyhhve7rfa4gl1vwv4bb7\">此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8-5\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6qk8jdin95njef4f4318szh0d\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8pts89th0doyx9mkx3ga9m2b\">表示此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9-5\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cv1evcg2ryni0gb8cwffnol8i\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv6uz135cozvsj3gcjhmuvyt9\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10-5\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fd2a2172aoau9uto7zrplxhk\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"306192d8v1ozhrf4p3p5hudti\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11-5\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7chpt38zgt9mbpb1m3g2jopnr\">构造一个 <code>PATCH</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ukuoqala8kp7e9203npy1d8r\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12-5\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eflh3fx7bvrvsilfxdnalp8j1\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4kcwnd56i0031bo7u81a9o1gk\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13-5\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eflh3fx7bvrvsilfxdnalp8j1\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"263fto9ad3yrn8vr9n2pf6tsr\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14-5\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yu3f7r2y113tu03198cu9ynr\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uffezgcp8ugl32qsbf09npf\">响应对象的 <code>Observable</code>，其响应体为 JSON 对象。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15-5\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"brknj0333nam4lxx4ljszjuds\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&lt;T&gt;(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11joo9497haava4syfuh7kv6b\">要编辑的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3z8ppru3vvlhct8ljfif1v296\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"post\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"post\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"18a7kjifddyufxeh1kndx7brh\">post()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#post\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L3248-L3272\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11hzrn1qnlst2e66ap80ds08i\">构造一个 <code>Observable</code>，当订阅该 Observable 时，它会让已配置的 <code>POST</code>\n请求在服务器上执行。。服务器以替换后资源的位置进行响应。有关返回类型的详细信息，请参见各个重载。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-个重载形式-5\">15 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1-6\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4kbacpihsxzuiujs70ocrrb1r\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; transf...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11bgs66ayav1ebtg3gkzrayxu\">HTTP 选项。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8j8zlh8yqbwopi0xd95gxd8\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2-6\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bf9ehzr31htjnxxw6myh6d3vx\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCache...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccfuj4m8vpee7sp8majkdjfuc\">响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3-6\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1v30rw2mt5hdm10fqho6a39my\">构造一个 <code>POST</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCache...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1tvytbib2rc3iv3yhpnis1vd\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4-6\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lvjrda8526xw2dtbdokojmso\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; trans...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4s4k99usvfsqinkyl8fkwkp5i\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5-6\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2urvj516mr2vfr7lwpgt67v41\">构造一个 <code>POST</code> 请求，它把请求体解释为 <code>Blob</code>，并返回完整事件流的 <code>Observable</code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ex76vfwws9diy08eokjwgj9rc\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6-6\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"42p0w9ojbfbxlcrvusblwbjvl\">构造一个 <code>POST</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e4425t3hltu705xl8pawewtq4\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7-6\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xoox5phmhymu15aed97suuug\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7puvqacfdj8wzwhh17d7b92x7\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8-6\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xoox5phmhymu15aed97suuug\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCac...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16iwb5558cjtqv0wep6ewqu5x\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9-6\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dil9m0pw7ocvhz4gsc5am6gou\">构造一个 POST 请求，它将请求体解释为 <code>ArrayBuffer</code> 类型，并返回完整的 <code>HTTPresponse</code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; tra...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"rpnnlxczieg2wqw6cm7pjpx\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10-6\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95udxee9n0h2egjx9lvx615b1\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; transferCa...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"306192d8v1ozhrf4p3p5hudti\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11-6\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8v5v0qe9ue3od2m6qcnxca06p\">构造一个 <code>POST</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; transferCa...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ukuoqala8kp7e9203npy1d8r\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12-6\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0rk07mae5yfczj2n8zm6bc62\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9e8fdoh67p029361yqxll6535\">表示啥此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13-6\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8pc1vpf16hyser8a3leoe5x4s\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferC...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"28y9lpz8a2ljusbei5sb1dz6i\">表示此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14-6\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5n7se6p470lm027iav8sruy1m\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uffezgcp8ugl32qsbf09npf\">响应对象的 <code>Observable</code>，其响应体为 JSON 对象。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15-6\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9k3dce0ddz24ly6ska8sko53b\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回响应对象的 <code>Observable</code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&lt;T&gt;(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bykgfdv802ccs9ml75ndt20ew\">要替换的内容。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; transferCach...</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"db45rjrtbphe2xd5ga410lubw\">表示此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为所请求的类型。</p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"put\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"put\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2yux1lx2vbeo3n8g4v9v0hd8\">put()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#put\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L3673-L3696\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"448ngsss8fp664fc2f3gol2iu\">构造一个 <code>Observable</code>，当订阅该 Observable 时，它会让已配置的 <code>PUT</code> 请求在服务器上执行。。\n<code>PUT</code> 方法用一组新值替换现有资源。有关返回类型的详细信息，请参见各个重载。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"15-个重载形式-6\">15 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"重载-1-7\">重载 #1</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"12z0alwyojxe55hqjexvo9t69\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;ArrayBuffer&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8j8zlh8yqbwopi0xd95gxd8\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-2-7\">重载 #2</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lfufi8cyzldar1ughhx26kwh\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;Blob&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccfuj4m8vpee7sp8majkdjfuc\">响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-3-7\">重载 #3</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ehjknkz362u9voy15xfepgifd\">构造一个 <code>PUT</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;string&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1tvytbib2rc3iv3yhpnis1vd\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-4-7\">重载 #4</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gpz9ga3ngzk56yp811i66oz4\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4s4k99usvfsqinkyl8fkwkp5i\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-5-7\">重载 #5</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"z2fi6e4yhhnxs976nd8doqop\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d4mdr5p4yu55mtrr5movzamva\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-6-7\">重载 #6</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b578ves3dq3zgz019z3ipn6u\">构造一个 <code>PUT</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqv30cyknc0ta58l7e6og2qrq\">表示啥此请求的 <code>HttpEvents for the request</code> 的 <code>Observable</code>，响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-7-7\">重载 #7</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"702np00hgpgdpwd1ud141oix\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2iwjl5z3vjjjrb5vp9nryz9vo\">表示啥此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-8-7\">重载 #8</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"77gl0ktroqws733seoo9hc02m\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16iwb5558cjtqv0wep6ewqu5x\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-9-7\">重载 #9</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2sxhdy2e106159wjt68u80vqw\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;ArrayBuffer&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"rpnnlxczieg2wqw6cm7pjpx\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-10-7\">重载 #10</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cx4i4lqlsspegxpwawcuk32eo\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Blob&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"306192d8v1ozhrf4p3p5hudti\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-11-7\">重载 #11</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5wqff4be1mm967kpv0nfj3zwj\">构造一个 <code>PUT</code> 请求，它将请求体解释为文本流，并返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;string&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cr82ib3lxzpzpc2qqn40gvxxy\">表示啥此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为 string 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-12-7\">重载 #12</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"vx26ms6i55l6ynejla08bwkm\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;Object&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dhbymiitasysxg9w9ay8zobhc\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-13-7\">重载 #13</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3i945t62g58yzswnqq4dqlkfd\">构造一个 <code>PUT</code> 请求，它将请求体解释为所请求类型的实例，并返回完整的 HTTP 响应对象。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&lt;T&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ybv41ks9wgulbpkyc5hoifx6\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-14-7\">重载 #14</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fvdfq0ucx4w6iyv8gzc436ts\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并返回 JSON 对象的 <code>Observable</code>。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;Object&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2c7ijwt39v9nvd40nzwj37k50\">JSON 格式的响应对象的 <code>Observable</code></p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"重载-15-7\">重载 #15</h5>\n            <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4hzp8p3m3pxnh3c5kgi7t0p12\">构造一个 <code>PUT</code> 请求，它将请求体解释为所请求类型的实例，并返回所请求类型的响应流。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&lt;T&gt;(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | number | boolean | readonly (string | ... 1 more ... | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&lt;T&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bipr28x1mmn9ubtnimuzq617a\"><a id=\"\"></a>\n        <code>url</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81dekhujyi9223t1ckeb0wnvo\">端点 URL。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ak2dkuknsssvgzd5cmnl5x4ym\"><a id=\"\"></a>\n        <code>body</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2z59b9lofxgh7k8hqfce50s3\">要添加/更新的资源。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e90vyu4r6p57rya73cchsinu5\">HTTP 选项</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"de2ik8ldip0mndt9e3aifkapv\">所请求类型的 <code>Observable</code></p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6yz53educczcjtltvzo92csbq\"><a href=\"/tutorial/tour-of-heroes/toh-pt0\">“英雄之旅”</a>应用程序的示例 HTTP 请求。</p>\n<h3 id=\"http-request-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ty7fi9huo2j3d8u8x6ye44z3\">HTTP 请求示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#http-request-example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n // GET heroes whose name contains search term\nsearchHeroes(term: string): observable&lt;Hero[]&gt;{\n\n const params = new <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a>({fromString: 'name=term'});\n   return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50jpx5b9l35zfeqriakosymls\">或者，可以通过直接加入 URL 来使用参数字符串，而无需调用 HttpParams。</p>\n<code-example>\nthis.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n</code-example>\n<h3 id=\"jsonp-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cf9dkkjcq3yxkicm8fekxkemz\">JSONP 示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp-example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nrequestJsonp(url, callback = 'callback') {\n return this.httpClient.jsonp(this.heroesURL, callback);\n}\n</code-example>\n<h3 id=\"patch-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"anedfnpqc2de52hiwpjeg5rcb\">PATCH 示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch-example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n// PATCH one of the heroes' name\npatchHero (id: number, heroName: string): Observable&lt;{}&gt; {\nconst url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n return this.httpClient.patch(url, {name: heroName}, httpOptions)\n   .pipe(catchError(this.handleError('patchHero')));\n}\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HttpBackend\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/common/http/HttpInterceptorFn\n - api/common/http/provideHttpClient\n - api/common/http/testing\n - api/common/http/testing/HttpClientTestingModule\n - api/common/http/withFetch\n - api/common/http/withInterceptors\n - api/common/http/withInterceptorsFromDi\n - api/common/http/withJsonpSupport\n - api/common/http/withNoXsrfProtection\n - api/common/http/withRequestsMadeViaParent\n - api/common/http/withXsrfConfiguration\n - api/core/APP_INITIALIZER\n - api/platform-browser/provideClientHydration\n - errors/NG02800\n - guide/architecture-next-steps\n - guide/architecture-services\n - guide/creating-injectable-service\n - guide/deprecations\n - guide/example-apps-list\n - guide/http-handle-request-errors\n - guide/http-intercept-requests-and-responses\n - guide/http-interceptor-use-cases\n - guide/http-make-jsonp-request\n - guide/http-pass-metadata-to-interceptors\n - guide/http-request-data-from-server\n - guide/http-security-xsrf-protection\n - guide/http-send-data-to-server\n - guide/http-server-communication\n - guide/http-setup-server-communication\n - guide/http-test-requests\n - guide/http-track-show-request-progress\n - guide/observables-in-angular\n - guide/pipes\n - guide/rx-library\n - guide/schematics-for-libraries\n - guide/security\n - guide/ssr\n - guide/styleguide\n - guide/testing-components-scenarios\n - guide/testing-services\n - guide/understanding-communicating-with-http\n - guide/update-to-version-14\n - guide/upgrade\n - guide/zone\n - start/start-data\n - tutorial/tour-of-heroes/toh-pt4\n - tutorial/tour-of-heroes/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - /tutorial/tour-of-heroes/toh-pt0\n - api/common\n - api/common/http\n - api/common/http/HttpClient#delete\n - api/common/http/HttpClient#description\n - api/common/http/HttpClient#get\n - api/common/http/HttpClient#head\n - api/common/http/HttpClient#http-request-example\n - api/common/http/HttpClient#httpclient\n - api/common/http/HttpClient#instance-methods\n - api/common/http/HttpClient#jsonp\n - api/common/http/HttpClient#jsonp-example\n - api/common/http/HttpClient#options\n - api/common/http/HttpClient#patch\n - api/common/http/HttpClient#patch-example\n - api/common/http/HttpClient#post\n - api/common/http/HttpClient#put\n - api/common/http/HttpClient#request\n - api/common/http/HttpClient#see-also\n - api/common/http/HttpClient#usage-notes\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpContext\n - api/common/http/HttpEvent\n - api/common/http/HttpHeaders\n - api/common/http/HttpParams\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - guide/understanding-communicating-with-http\n - https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n - https://en.wikipedia.org/wiki/JSONP\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/docs/PUBLIC_API.md#final-classes\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1116-L1142\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1525-L1547\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1936-L1960\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L1985-L2010\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L2382-L2405\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L2809-L2831\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L3248-L3272\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L3673-L3696\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L57-L3697\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/src/client.ts#L575-L734\n-->"}