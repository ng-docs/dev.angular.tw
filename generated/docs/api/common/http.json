{"id":"api/common/http","title":"@angular/common/http","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/http\", \"name\": \"@angular/common/http\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/common\">@angular/common</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/PACKAGE.md\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n<header class=\"api-header\">\n  <h1 id=\"angularcommonhttp\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"221dcso4aia5m37oc97gz2ezh\">@angular/common/http<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#angularcommonhttp\"><i class=\"material-icons\">link</i></a></h1>\n  <label class=\"api-type-label NaN\">entry-point</label>\n  \n  \n  \n</header>\n\n  \n\n  <div class=\"api-body\"><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pawpyk5r8bxkk3t066sntly4\">为 Angular 应用程序实现了一个依赖于浏览器暴露的\n<code>XMLHttpRequest</code>接口的 HTTP 客户端 API。</p>\n\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1iskhqhl5gwc3kd5jhnhsd08d\">包括可测试性功能、类型化请求和响应对象、请求和响应拦截、可观察API以及简化的错误处理。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ay9nouzf4m22bymtjke2f4i50\">有关使用信息，请查看\n<a href=\"guide/understanding-communicating-with-http\">HTTP客户端</a>指南。</p>\n\n\n  \n\n  \n\n\n<h2 id=\"entry-point-exports\">入口点的导出<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#entry-point-exports\"><i class=\"material-icons\">link</i></a></h2>\n\n  \n  \n  \n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#ngmodules\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpClientJsonpModule\">HttpClientJsonpModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btlubwlzxkxir98z8twy6u7xg\">为支持 JSONP 的 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 配置<a href=\"guide/glossary#injector\">依赖注入器</a>。如果没有该模块，Jsonp 请求就会被发送到后端，然后被后端拒绝。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpClientModule\">HttpClientModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8q10xoeupm5dwltrt571akxpr\">为支持 XSRF 的 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 配置<a href=\"guide/glossary#injector\">依赖注入器</a>。它会被 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 自动导入。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpClientXsrfModule\">HttpClientXsrfModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fgmox0nyo24cfa0926ctiddg\">配置 XSRF 保护，以支持外发请求。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类\">类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#类\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"classes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtpuzegyjmcbul5yz5jn1ham3\">类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#classes\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/FetchBackend\">FetchBackend</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"au52hyasb5xta9r3va8f7tb5g\">使用\n<code>fetch</code>发送请求到后端服务器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpBackend\">HttpBackend</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1mw0mkvjhs5fn0n3k0rea01om\">最后一个 <code><a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a></code>，它将会把该请求通过浏览器的 HTTP API 发到后端。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpClient\">HttpClient</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1mvtmoayl0utngoaynqka9s2o\">执行 HTTP 请求。该服务作为可注入类提供，带有执行 HTTP\n请求的方法。每个请求方法都有多个签名，并且返回类型会根据所调用的签名（主要的值是 <code>observe</code> 和\n<code>responseType</code>）而有所不同。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpContext\">HttpContext</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aokv3k6ly5d9hmzg9gt16vlku\">Http 上下文存储任意用户定义的值，并在不了解类型的情况下确保类型安全。它由 <code>Map</code>\n支持，并保证键不会冲突。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpContextToken\">HttpContextToken</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78n8a0gbd6kcl8s0hx1wzjjqp\">用于操作和访问存储在 <code><a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a></code> 中的值的令牌。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpErrorResponse\">HttpErrorResponse</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b28flhp4rqgdbyhe69kfo0lng\">一个用于表示错误或失败的响应对象，或者来自执行请求时发生的错误给出的失败的 HTTP\n状态码，或者来自在解析响应对象期间发生的其它错误。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpHandler\">HttpHandler</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1tun28ert6qmrzallqy5cqktm\">把一个 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 转换成 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 组成的流，<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> 就是其中之一。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpHeaderResponse\">HttpHeaderResponse</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2dtypy5hv4676736yw64r8zg5\">一个部分 HTTP 请求，它只包括状态和响应头数据，但没有响应体。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpHeaders\">HttpHeaders</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4h3dq7vw6sjf67uxgtezap1t1\">Http 头的不可变集合，惰性解析。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpParams\">HttpParams</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"39ag29w1kx5fdk0d49h1r3mfa\">HTTP 请求体/响应体，用来表示序列化参数，它们的 MIME 类型都是\n<code>application/x-www-form-urlencoded</code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpRequest\">HttpRequest</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5nvk4bxfd23u8gmv5a02jhdze\">一个外发的 HTTP 请求，带有一个可选的类型化的请求体（<code>body</code>）。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpResponse\">HttpResponse</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4c6oogvmbyla8dyzn1se384d0\">一个完整的 HTTP 响应对象，包括一个带类型的响应体（如果没返回内容，则为 <code>null</code>）。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpResponseBase\">HttpResponseBase</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxfpkayw96zutm6vjibips8yf\"><code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> 和 <code><a href=\"api/common/http/HttpHeaderResponse\" class=\"code-anchor\">HttpHeaderResponse</a></code> 的共同基类。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpUrlEncodingCodec\">HttpUrlEncodingCodec</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1voeqm10rtpq4erbluml7kz4w\">提供 URL 参数和查询字符串值的编码和解码。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpXhrBackend\">HttpXhrBackend</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4v268f7dwz97iuepwt36jltrd\">使用 <code>XMLHttpRequest</code> 将请求发送到后端服务器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpXsrfTokenExtractor\">HttpXsrfTokenExtractor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4kdum0guofbyqvz0uxc001mxi\">检索当前的 XSRF 标记以用于下一个传出请求。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/JsonpClientBackend\">JsonpClientBackend</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"54sbp5kr3k3awm14djvyefv9z\">通过执行 JSONP 风格的请求，使用 JSONP 方法处理 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code></p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/JsonpInterceptor\">JsonpInterceptor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yae190w2en2netlb4dig5kau\">使用 JSONP 方法标识这些请求，并将其转移到 <code><a href=\"api/common/http/JsonpClientBackend\" class=\"code-anchor\">JsonpClientBackend</a></code>。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"函数\">函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#函数\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"functions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt2uvbdl3r7k4tmkiulzt8lb8\">函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#functions\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/provideHttpClient\">provideHttpClient</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2r2pz53g5nb874f924bo41ij0\">将 Angular 的 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 服务配置为可注入。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/withFetch\">withFetch</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6se1lvz7lf8qqeudrboaknalj\">配置当前\n<code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code>实例，以使用fetch API进行请求。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/withInterceptors\">withInterceptors</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"x1sx1sb37fetvu62yms4j8lb\">将一个或多个功能风格的 HTTP 拦截器添加到 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 实例的配置中。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/withInterceptorsFromDi\">withInterceptorsFromDi</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b74sc7au7qkjax8oq57qqhcht\">包括使用当前注入器中的多重提供器配置的基于类的拦截器到配置的 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 实例中。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/withJsonpSupport\">withJsonpSupport</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"63gtl1tgsyibav2pt8h470wm\">将 JSONP 支持添加到当前 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 实例的配置中。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/withNoXsrfProtection\">withNoXsrfProtection</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3weuota4h9yj6psao4yzqxkid\">在当前 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 实例的配置中禁用 XSRF 保护。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/withRequestsMadeViaParent\">withRequestsMadeViaParent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"51a8fhakqbh0qp4t4pk5tm334\">将当前的 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 实例配置为通过父注入器的 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 而不是直接发出请求。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/withXsrfConfiguration\">withXsrfConfiguration</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bj38liygzgst7gk63olcqwpw4\">为当前 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 实例的配置自定义 XSRF 保护。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"结构\">结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#结构\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"structures\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pvj0r4hennzfp5hvt5swfw10\">结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#structures\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpDownloadProgressEvent\">HttpDownloadProgressEvent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6436ebxvkkgyzevyhpvxdeu4x\">下载进度事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpEventType\">HttpEventType</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6d10j25bi1qwgpiu28jm0uod\">不同种类的 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 的枚举类型。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpFeature\">HttpFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"i34u0x1kgczs5apttzrzpv4\">配置 <code><a href=\"api/common/http/provideHttpClient\" class=\"code-anchor\">provideHttpClient</a></code> 时使用的特性。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpFeatureKind\">HttpFeatureKind</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1yrefxvpv33uq18hjjzi97m0u\">标识一种特定类型的 <code><a href=\"api/common/http/HttpFeature\" class=\"code-anchor\">HttpFeature</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpInterceptor\">HttpInterceptor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dfpjv1aod4ycbd6zokoxgsur3\">拦截 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 并处理它们。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpParameterCodec\">HttpParameterCodec</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cdluevxkl0h0b4fnm27fuuhwq\">一个用来在 URL 中编码和解码参数的编解码器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpParamsOptions\">HttpParamsOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cepv19706z266u3cuzpxeeww3\">用于构造 <code><a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a></code> 实例的选项。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpProgressEvent\">HttpProgressEvent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2royt2gdj2q2f2xlpd4ecm2at\">进度事件的基础接口。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpSentEvent\">HttpSentEvent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2x21fenxc0xeuiefz0zi9ksz\">用于表示请求已经发到服务器的事件。\n当请求可能被多次接受时很有用，以区分出最终事件流上的重试行为。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpStatusCode\">HttpStatusCode</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3okfcwjckkcrgrn0q44s4gh73\">Http 状态代码。根据 <a href=\"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\">https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml</a></p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpUploadProgressEvent\">HttpUploadProgressEvent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ao2yfkzk8tp278etlwue9nax3\">上传进度事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpUserEvent\">HttpUserEvent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9n3xmalikwe6j9s1ert3sbsxz\">用户定义的事件。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类型\">类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#类型\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"types\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edj3fs52fiqyg9u6mdyxchcwv\">类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http#types\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HTTP_INTERCEPTORS\">HTTP_INTERCEPTORS</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mfouu61uirtvutpbcg4sk4sd\">一个多重提供者（multi-provider）令牌，它代表所有已注册的 <code><a href=\"api/common/http/HttpInterceptor\" class=\"code-anchor\">HttpInterceptor</a></code> 构成的数组。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpEvent\">HttpEvent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10v3txbjwxvnrbr1n93rvveh1\">响应流中所有可能出现的事件的联合类型。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpHandlerFn\">HttpHandlerFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dsvttql6x6u8c1hu3t6ahc307\">表示拦截器链中的下一个拦截器，如果没有进一步的拦截器，则表示真正的后端。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpInterceptorFn\">HttpInterceptorFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lscit82h81ohpuqe1p5nyxqb\">通过 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 发出的 HTTP 请求的拦截器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/common/http/HttpTransferCacheOptions\">HttpTransferCacheOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvcxnfhnrnrzy2cm5xhqwmuhh\">配置如何使用TransferCache缓存通过HttpClient发出的请求的选项。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/common\n - api/common/http/FetchBackend\n - api/common/http/HTTP_INTERCEPTORS\n - api/common/http/HttpBackend\n - api/common/http/HttpClient\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/common/http/HttpClientXsrfModule\n - api/common/http/HttpContext\n - api/common/http/HttpContextToken\n - api/common/http/HttpDownloadProgressEvent\n - api/common/http/HttpErrorResponse\n - api/common/http/HttpEvent\n - api/common/http/HttpEventType\n - api/common/http/HttpFeature\n - api/common/http/HttpFeatureKind\n - api/common/http/HttpHandler\n - api/common/http/HttpHandlerFn\n - api/common/http/HttpHeaderResponse\n - api/common/http/HttpHeaders\n - api/common/http/HttpInterceptor\n - api/common/http/HttpInterceptorFn\n - api/common/http/HttpParameterCodec\n - api/common/http/HttpParams\n - api/common/http/HttpParamsOptions\n - api/common/http/HttpProgressEvent\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - api/common/http/HttpResponseBase\n - api/common/http/HttpSentEvent\n - api/common/http/HttpStatusCode\n - api/common/http/HttpTransferCacheOptions\n - api/common/http/HttpUploadProgressEvent\n - api/common/http/HttpUrlEncodingCodec\n - api/common/http/HttpUserEvent\n - api/common/http/HttpXhrBackend\n - api/common/http/HttpXsrfTokenExtractor\n - api/common/http/JsonpClientBackend\n - api/common/http/JsonpInterceptor\n - api/common/http/provideHttpClient\n - api/common/http/withFetch\n - api/common/http/withInterceptors\n - api/common/http/withInterceptorsFromDi\n - api/common/http/withJsonpSupport\n - api/common/http/withNoXsrfProtection\n - api/common/http/withRequestsMadeViaParent\n - api/common/http/withXsrfConfiguration\n - api/common/upgrade/$locationShim\n - api/core/APP_INITIALIZER\n - guide/angular-package-format\n - guide/deprecations\n - guide/feature-modules\n - guide/frequent-ngmodules\n - guide/http-configure-http-url-parameters\n - guide/http-intercept-requests-and-responses\n - guide/http-send-data-to-server\n - guide/http-server-communication\n - guide/http-setup-server-communication\n - guide/http-test-requests\n - guide/i18n-common-deploy\n - guide/npm-packages\n - guide/pipes\n - guide/router-tutorial-toh\n - guide/schematics-for-libraries\n - guide/styleguide\n - guide/understanding-communicating-with-http\n - guide/upgrade\n - guide/upgrade-setup\n - start/start-data\n - tutorial/tour-of-heroes/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/http#\n - api/common/http#angularcommonhttp\n - api/common/http#classes\n - api/common/http#entry-point-exports\n - api/common/http#functions\n - api/common/http#ngmodules\n - api/common/http#structures\n - api/common/http#types\n - api/common/http#函数\n - api/common/http#类\n - api/common/http#类型\n - api/common/http#结构\n - api/common/http/FetchBackend\n - api/common/http/HTTP_INTERCEPTORS\n - api/common/http/HttpBackend\n - api/common/http/HttpClient\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/common/http/HttpClientXsrfModule\n - api/common/http/HttpContext\n - api/common/http/HttpContextToken\n - api/common/http/HttpDownloadProgressEvent\n - api/common/http/HttpErrorResponse\n - api/common/http/HttpEvent\n - api/common/http/HttpEventType\n - api/common/http/HttpFeature\n - api/common/http/HttpFeatureKind\n - api/common/http/HttpHandler\n - api/common/http/HttpHandlerFn\n - api/common/http/HttpHeaderResponse\n - api/common/http/HttpHeaders\n - api/common/http/HttpInterceptor\n - api/common/http/HttpInterceptorFn\n - api/common/http/HttpParameterCodec\n - api/common/http/HttpParams\n - api/common/http/HttpParamsOptions\n - api/common/http/HttpProgressEvent\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - api/common/http/HttpResponseBase\n - api/common/http/HttpSentEvent\n - api/common/http/HttpStatusCode\n - api/common/http/HttpTransferCacheOptions\n - api/common/http/HttpUploadProgressEvent\n - api/common/http/HttpUrlEncodingCodec\n - api/common/http/HttpUserEvent\n - api/common/http/HttpXhrBackend\n - api/common/http/HttpXsrfTokenExtractor\n - api/common/http/JsonpClientBackend\n - api/common/http/JsonpInterceptor\n - api/common/http/provideHttpClient\n - api/common/http/withFetch\n - api/common/http/withInterceptors\n - api/common/http/withInterceptorsFromDi\n - api/common/http/withJsonpSupport\n - api/common/http/withNoXsrfProtection\n - api/common/http/withRequestsMadeViaParent\n - api/common/http/withXsrfConfiguration\n - guide/glossary#injector\n - guide/understanding-communicating-with-http\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/common/http/PACKAGE.md\n - https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\n-->"}