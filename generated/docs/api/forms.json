{"id":"api/forms","title":"@angular/forms","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/forms\", \"name\": \"@angular/forms\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/PACKAGE.md\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n<header class=\"api-header\">\n  <h1 id=\"angularforms\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cilqa1r6l2ltkpux41ihon5kd\">@angular/forms<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#angularforms\"><i class=\"material-icons\">link</i></a></h1>\n  <label class=\"api-type-label package\">package</label>\n  \n  \n  \n</header>\n\n  \n\n  <div class=\"api-body\"><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o2p4jubbx0cuz7wkbewe1nku\">实现一组指令和提供者，用于在构建表单时与原生DOM元素通信以捕获用户输入。</p>\n\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhfewsb4wy2khwm56cjssv3f\">使用此 API 注册指令，构建表单和数据模型，并为表单提供验证。验证器可以根据您的用例是同步还是异步的。您还可以通过使用接口和标记来扩展 Angular 中表单提供的内置功能，创建自定义验证器和输入元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dm2wz1rzb1nvwdcrofujexpqg\">Angular 表单使您能够：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7m2cfya5tqrwdogrbdkgqxmhb\">捕获表单的当前值和验证状态。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45sffiq20wqo624o74u02b670\">跟踪并监听表单数据模型的更改。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ghc5i6hkj1meddiwedweaqek\">验证用户输入的正确性。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80qr9rqwobh8439v4ztc146ze\">创建自定义验证器和输入元素。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9k0qkvjm4qqdynzwzu1ahwxsg\">您可以通过以下两种方式构建表单：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6e6aciwzgxvcg2r5cul5pk1w\"><em>响应式表单</em> 使用现有的 \n<code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 或 \n<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 实例来构建一个表单模型。通过指令，该表单模型与表单输入元素同步，以跟踪和传达更改回表单模型。控件的值和状态的更改以可观察者的形式提供。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9jm1dxub50lx0g8e0frjs1uzj\"><em>模板驱动表单</em> 依赖于诸如 \n<code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 和 \n<code><a href=\"api/forms/NgModelGroup\" class=\"code-anchor\">NgModelGroup</a></code> 等指令为你创建表单模型，因此对表单的任何更改都通过模板传达。</li>\n</ul>\n\n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"51zs702oymin7zytr11to6w8\">在 \n<a href=\"guide/forms-overview\">表单概述</a> 中了解更多信息。</p></li>\n  </ul>\n</section>\n\n  \n<h2 id=\"entry-points\">入口点<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#entry-points\"><i class=\"material-icons\">link</i></a></h2>\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"主要\">主要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#主要\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"primary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fkfm2umomg24u7zlbw0i7dqq\">主要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#primary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms#primary-entry-point-exports\">@angular/forms</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o2p4jubbx0cuz7wkbewe1nku\">实现一组指令和提供者，用于在构建表单时与原生DOM元素通信以捕获用户输入。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n  \n\n\n<h2 id=\"primary-entry-point-exports\">主要入口点的导出<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#primary-entry-point-exports\"><i class=\"material-icons\">link</i></a></h2>\n\n  \n  \n  \n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#ngmodules\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormsModule\">FormsModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"75nyqz0vebfvyzsek5skhmnbd\">导出模板驱动表单所需的提供者和指令，使其可用于导入了该模块的 NgModule 中。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/ReactiveFormsModule\">ReactiveFormsModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81ozxkokfxtuwujpedn7hbkiq\">导出响应式表单所需的基础设施和指令，使其能用于任何导入了本模块的 NgModule 中。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类\">类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#类\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"classes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtpuzegyjmcbul5yz5jn1ham3\">类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#classes\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/AbstractControl\">AbstractControl</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aeje1i7xwz0pt88k72gdyk61e\">这是 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 和 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的基类。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/AbstractControlDirective\">AbstractControlDirective</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82knh9d4ley8k1odd2woku4hy\">控件指令的基类。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/ControlContainer\">ControlContainer</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dla23iytfov74qj453gl2a26i\">包含多个已注册 <code><a href=\"api/forms/NgControl\" class=\"code-anchor\">NgControl</a></code> 实例的指令的基类。仅由表单模块使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormArray\">FormArray</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6efsai0sn7inhmszmg3iz9yav\">跟踪 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 或 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 实例的数组的值和有效状态。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormBuilder\">FormBuilder</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3p6rjnhnj8aifyovgiab3t3e\">使用用户指定的配置创建 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormGroup\">FormGroup</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5do88fzt8i0o63lbmogfm148a\">跟踪一组 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例的值和有效性状态。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormRecord\">FormRecord</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5g6hnkidurdptqzl9t7qopie\">跟踪 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例集合的值和有效性状态，每个实例都具有相同的值类型。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NgControl\">NgControl</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bulltqf5a3azg6mk2fubx5qm8\"><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 的指令扩展的基类。它将 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 对象绑定到 DOM 元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NonNullableFormBuilder\">NonNullableFormBuilder</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c226g1h9p9mb1uxu5wq5kvusj\"><code><a href=\"api/forms/NonNullableFormBuilder\" class=\"code-anchor\">NonNullableFormBuilder</a></code> 类似于 <a href=\"api/forms/FormBuilder\"><code>FormBuilder</code></a>，但自动构建的 <a href=\"api/forms/FormControl\"><code>FormControl</code></a> 元素具有 <code>{nonNullable: true}</code> 且不可为 null。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/UntypedFormBuilder\">UntypedFormBuilder</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3f2vqer288hixwcwfsdqu8rw6\">UntypedFormBuilder 与 <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> 相同，但它提供无类型控件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/Validators\">Validators</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"547cyu3tijlphwc3qx56fzt8c\">提供一组内置验证器，可用于各种表单控件。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"结构\">结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#结构\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"structures\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pvj0r4hennzfp5hvt5swfw10\">结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#structures\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/AbstractControlOptions\">AbstractControlOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qkguaw0c5ww90iw9yqkunzu\">提供给 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 的配置项接口。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/AsyncValidator\">AsyncValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cqa9e2j432b7k05kxr0pkszwa\">由执行异步验证的类实现的接口。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/AsyncValidatorFn\">AsyncValidatorFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qoq7uzadrqm2qc0c5jp1jura\">本函数接收控件并返回 Promise 或 Observable，如果存在，则该函数会发出验证错误，否则为 null。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/ControlValueAccessor\">ControlValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47j1w3p6obpx319avjyb664fx\">定义一个接口，该接口充当 Angular 表单 API 和 DOM 中的原生元素之间的桥梁。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/Form\">Form</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"kjl6e5uktfufufy5psn8vvm1\">由 <code><a href=\"api/forms/FormGroupDirective\" class=\"code-anchor\">FormGroupDirective</a></code> 和 <code><a href=\"api/forms/NgForm\" class=\"code-anchor\">NgForm</a></code> 实现的接口。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormControlOptions\">FormControlOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ml2hsfbxmmryrswxy0s2treb\">提供给 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 的选项的接口。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormControlState\">FormControlState</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5v87gq6hrar77f14t1r43tpen\">FormControlState 是一个装箱的表单值。它是一个带有 <code>value</code> 键和 <code>disabled</code> 键的对象。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/Validator\">Validator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elkt3y08qj05oxzpn2q6creut\">一个接口，实现了它的类可以扮演验证器的角色。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/ValidatorFn\">ValidatorFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1q2ti45k0q2p8wnsdw6b729g\">本函数接收控件并同步返回验证错误的映射表（如果存在），否则返回 null。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"指令\">指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#指令\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"directives\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uaad125h3hufxqa64leub0r9\">指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#directives\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/AbstractFormGroupDirective\">AbstractFormGroupDirective</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9u39kzaj8m6z5x7umjpbf4c2t\"><code><a href=\"api/forms/NgModelGroup\" class=\"code-anchor\">NgModelGroup</a></code> 和 <code><a href=\"api/forms/FormGroupName\" class=\"code-anchor\">FormGroupName</a></code> 指令之间共享代码的基类。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/CheckboxControlValueAccessor\">CheckboxControlValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xhpioww0oofqmx0phu5s8gjf\">一个 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code>，用于写入值并监听复选框输入元素上的更改。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/CheckboxRequiredValidator\">CheckboxRequiredValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7x5tn5x6ovr8p97q43fafwgc1\">该指令会借助 <code><a href=\"api/forms/NG_VALIDATORS\" class=\"code-anchor\">NG_VALIDATORS</a></code> 绑定把 <code>required</code> 验证器添加到任何带有 <code>required</code> 属性的检查框控件上。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/DefaultValueAccessor\">DefaultValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1kevbwem4q8uhtgsldvp7kig\">默认的 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code>，用于写入值并监听输入元素的更改。该访问器供 <code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>\n、<code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code> 和 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 指令使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/EmailValidator\">EmailValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uts76ebqcxgqdq19tkxaipa7\">该指令会借助 <code><a href=\"api/forms/NG_VALIDATORS\" class=\"code-anchor\">NG_VALIDATORS</a></code> 绑定把 <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> 验证器添加到任何带有 <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> 属性的控件上。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormArrayName\">FormArrayName</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55e3johngmz3l61no95ot6fbj\">将嵌套的 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 同步到 DOM 元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormControlDirective\">FormControlDirective</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bd6w0fguzbqcoptec17twvh42\">将独立的 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例同步到表单控件元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormControlName\">FormControlName</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3tr62262jgv6bc5k7lv3z60gx\">根据名字将现有 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 中的 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 与一个表单控件进行同步。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormGroupDirective\">FormGroupDirective</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2vaa4lazod68zlf30b52aocs5\">将现有的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 绑定到 DOM 元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormGroupName\">FormGroupName</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4mzhgw38bf0agsvlom5ga7xzm\">将嵌套的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 同步到 DOM 元素上。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/MaxLengthValidator\">MaxLengthValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a88gcq96n232acqcx7aeq913i\">该指令为带有 \n<code><a href=\"api/forms/MaxLengthValidator\" class=\"code-anchor\">maxlength</a></code> 属性标记的控件添加最大长度验证。该指令接收 \n<code><a href=\"api/forms/NG_VALIDATORS\" class=\"code-anchor\">NG_VALIDATORS</a></code> 多提供者列表。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/MaxValidator\">MaxValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2a06hfk442mg34hw3ykkq56l5\">一个指令，它为任何 <code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a></code>、<code>formControl</code> 或使用也具有 <code><a href=\"api/forms/MaxValidator\" class=\"code-anchor\">max</a></code> 属性的 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code>\n的控件安装 <a href=\"api/forms/MaxValidator\"><code>MaxValidator</code></a>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/MinLengthValidator\">MinLengthValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"djlxil2j7f3c9rab0r1zwvvxu\">该指令用于为带有 <code><a href=\"api/forms/MinLengthValidator\" class=\"code-anchor\">minlength</a></code> 属性的控件添加最小长度验证器。该指令会提供 <code><a href=\"api/forms/NG_VALIDATORS\" class=\"code-anchor\">NG_VALIDATORS</a></code> 多重提供者列表。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/MinValidator\">MinValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"636366a2bpwe4hrr4gme1o84l\">一个指令，它为任何 <code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a></code>、<code>formControl</code> 或使用也具有 <code><a href=\"api/forms/MinValidator\" class=\"code-anchor\">min</a></code> 属性的 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a></code>\n的控件安装 <a href=\"api/forms/MinValidator\"><code>MinValidator</code></a>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NgControlStatus\">NgControlStatus</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bbbzkmnf3h9kqboafesa1l5b\">指令自动应用于 Angular 表单控件，该控件会根据控件状态设置 CSS 类。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NgControlStatusGroup\">NgControlStatusGroup</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5oy9iupydd4nmlaci1r37edar\">该指令自动应用于 Angular 表单组，基于控件的状态（有效、无效、脏等）设置 CSS 类。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NgForm\">NgForm</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mez4ug3rcbancsyk849n296j\">创建一个顶级的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 实例，并把它绑定到一个表单，以跟踪表单的聚合值及其验证状态。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NgModel\">NgModel</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ni4yxf8l2e43f3n9f3wejm9d\">根据领域对象创建一个 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例，并把它绑定到一个表单控件元素上。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NgModelGroup\">NgModelGroup</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5tkiamrn67me4dlmioamv81qn\">创建 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 的实例并将其绑定到 DOM 元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NgSelectOption\">NgSelectOption</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amu8r4ytuw5jetfoq7nkt4lyb\">把选项 <code>&lt;option&gt;</code> 标记为动态的，这样 Angular 就会在选项变化时得到通知。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NumberValueAccessor\">NumberValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4agjefaa8520ltsyr35r0fxu0\">用于写入数字值和监听数字输入框更改的 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code>。这个值访问器由 <code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>、<code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code> 和 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 指令使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/PatternValidator\">PatternValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fqgltswcv2qzd3ggq3bmrnc9\">该指令会借助 <code><a href=\"api/forms/NG_VALIDATORS\" class=\"code-anchor\">NG_VALIDATORS</a></code> 绑定来把 <code><a href=\"api/forms/PatternValidator\" class=\"code-anchor\">pattern</a></code> 验证器添加到任何带有 <code><a href=\"api/forms/PatternValidator\" class=\"code-anchor\">pattern</a></code> 属性的控件上。\n它会使用该属性的值作为正则表达式来验证控件的值。\n它会遵循 <code><a href=\"api/forms/PatternValidator\" class=\"code-anchor\">pattern</a></code> 属性的语义，也就是说，该正则表达式必须匹配整个控件值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/RadioControlValueAccessor\">RadioControlValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1h2903yotlleept8xpgb1kbk2\"><code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> 用于写入单选控件的值和监听单选控件值的更改。这个值访问器由 <code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>、<code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code> 和 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 指令使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/RangeValueAccessor\">RangeValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dy5jng2v0y4plpg24up9z3shy\">此 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> 用于写入范围输入器的值，并监听范围输入器的变化。它被 <code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>、<code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code> 和 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/RequiredValidator\">RequiredValidator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d8c0la0kii1uiks4iji7srt8z\">该指令会借助 <code><a href=\"api/forms/NG_VALIDATORS\" class=\"code-anchor\">NG_VALIDATORS</a></code> 绑定把 <code>required</code> 验证器添加到任何带 <code>required</code> 属性的控件上。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/SelectControlValueAccessor\">SelectControlValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6r334kogd3zpe1ha6tm1yy54\">该 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> 用于写入 select 控件的值，并监听 select 控件的变化。该值访问器会被\n<code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>、<code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code> 和 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 指令使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/SelectMultipleControlValueAccessor\">SelectMultipleControlValueAccessor</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqv33wqo35z7tetrpxdg3uxzi\">本 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> 用于写入多选控件值和监听多选控件更改。这个值访问器由\n<code><a href=\"api/forms/FormControlDirective\" class=\"code-anchor\">FormControlDirective</a></code>、<code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">FormControlName</a></code> 和 <code><a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a></code> 指令使用。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类型\">类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#类型\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"types\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edj3fs52fiqyg9u6mdyxchcwv\">类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms#types\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/COMPOSITION_BUFFER_MODE\">COMPOSITION_BUFFER_MODE</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1e8m7wahn4yynxau5be6irbwm\">提供此令牌来控制表单指令是否要缓冲 IME 输入，直到发生“ compositionend” 事件为止。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/ControlConfig\">ControlConfig</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5z9q1z3nd24skiavh5ywrcviq\">控制配置</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/FormControlStatus\">FormControlStatus</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1pqh1hxq7yx5mt11vbd8cj9eg\">一个表单可以有几种不同的状态。每种可能的状态都作为字符串文字返回。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NG_ASYNC_VALIDATORS\">NG_ASYNC_VALIDATORS</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7b6obc6lc0v98njrom5n0pudi\">一个 <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>，用于注册额外的异步验证器，供 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NG_VALIDATORS\">NG_VALIDATORS</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dviud2kkv8ri5blobwgun54bz\">一个 <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>，用于注册额外的同步验证器，供 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/NG_VALUE_ACCESSOR\">NG_VALUE_ACCESSOR</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7psps3s9emzooeu0m1ze2pfwj\">用于为表单控件提供 <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code></p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/SetDisabledStateOption\">SetDisabledStateOption</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7d281yk7uo4wvxprogbgp3k0q\">CALL_SET_DISABLED_STATE 的类型。如果 <code>always</code>，则 ControlValueAccessor 将在附加时始终调用 <code>setDisabledState</code>，这是最正确的行为。否则，它只会在禁用时被调用，这是为了兼容的传统行为。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/UntypedFormArray\">UntypedFormArray</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vjs6i4iznz5av0aa3fre8agl\">UntypedFormArray 是 @see FormArray 的非强类型版本，它允许进行异构控件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/UntypedFormControl\">UntypedFormControl</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfl4lol0n5kfj2zdjvsi7i3p4\">UntypedFormControl 是 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 的非强类型版本。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/UntypedFormGroup\">UntypedFormGroup</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1qmofsi8enrgz2x3fes58pxa\">UntypedFormGroup 是 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 的非强类型版本。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/ValidationErrors\">ValidationErrors</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3rm4c5p1pkkj4wsn2icjqfn3\">定义从失败的验证检查返回的错误映射表。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/isFormArray\">isFormArray</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ny6bxnb5icvbpayw85sxwb5s\">断言给定的控件是 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的一个实例</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/isFormControl\">isFormControl</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7shmg0a3bhqp7mrugjhngug4z\">断言给定的控件是 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 的一个实例</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/isFormGroup\">isFormGroup</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"867uaj2cefekf1tc9j4b6e0sz\">断言给定的控件是 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 的一个实例</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/forms/isFormRecord\">isFormRecord</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xzwno29b7k1injitkmzchhod\">断言给定的控件是 <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code> 的一个实例</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/forms/AbstractControl\n - api/forms/AbstractControlDirective\n - api/forms/AbstractControlOptions\n - api/forms/AbstractFormGroupDirective\n - api/forms/AsyncValidator\n - api/forms/AsyncValidatorFn\n - api/forms/COMPOSITION_BUFFER_MODE\n - api/forms/CheckboxControlValueAccessor\n - api/forms/CheckboxRequiredValidator\n - api/forms/ControlConfig\n - api/forms/ControlContainer\n - api/forms/ControlValueAccessor\n - api/forms/DefaultValueAccessor\n - api/forms/EmailValidator\n - api/forms/Form\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormControlOptions\n - api/forms/FormControlState\n - api/forms/FormControlStatus\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/FormRecord\n - api/forms/FormsModule\n - api/forms/MaxLengthValidator\n - api/forms/MaxValidator\n - api/forms/MinLengthValidator\n - api/forms/MinValidator\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/NG_VALUE_ACCESSOR\n - api/forms/NgControl\n - api/forms/NgControlStatus\n - api/forms/NgControlStatusGroup\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/NgModelGroup\n - api/forms/NgSelectOption\n - api/forms/NonNullableFormBuilder\n - api/forms/NumberValueAccessor\n - api/forms/PatternValidator\n - api/forms/RadioControlValueAccessor\n - api/forms/RangeValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/RequiredValidator\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/forms/SetDisabledStateOption\n - api/forms/UntypedFormArray\n - api/forms/UntypedFormBuilder\n - api/forms/UntypedFormControl\n - api/forms/UntypedFormGroup\n - api/forms/ValidationErrors\n - api/forms/Validator\n - api/forms/ValidatorFn\n - api/forms/Validators\n - api/forms/isFormArray\n - api/forms/isFormControl\n - api/forms/isFormGroup\n - api/forms/isFormRecord\n - guide/npm-packages\n - guide/reactive-forms\n-->\n<!-- links from this doc:\n - /api\n - api/core/InjectionToken\n - api/forms#\n - api/forms#angularforms\n - api/forms#classes\n - api/forms#directives\n - api/forms#entry-points\n - api/forms#ngmodules\n - api/forms#primary\n - api/forms#primary-entry-point-exports\n - api/forms#see-also\n - api/forms#structures\n - api/forms#types\n - api/forms#主要\n - api/forms#指令\n - api/forms#类\n - api/forms#类型\n - api/forms#结构\n - api/forms/AbstractControl\n - api/forms/AbstractControlDirective\n - api/forms/AbstractControlOptions\n - api/forms/AbstractFormGroupDirective\n - api/forms/AsyncValidator\n - api/forms/AsyncValidatorFn\n - api/forms/COMPOSITION_BUFFER_MODE\n - api/forms/CheckboxControlValueAccessor\n - api/forms/CheckboxRequiredValidator\n - api/forms/ControlConfig\n - api/forms/ControlContainer\n - api/forms/ControlValueAccessor\n - api/forms/DefaultValueAccessor\n - api/forms/EmailValidator\n - api/forms/Form\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormControlOptions\n - api/forms/FormControlState\n - api/forms/FormControlStatus\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/FormRecord\n - api/forms/FormsModule\n - api/forms/MaxLengthValidator\n - api/forms/MaxValidator\n - api/forms/MinLengthValidator\n - api/forms/MinValidator\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/NG_VALUE_ACCESSOR\n - api/forms/NgControl\n - api/forms/NgControlStatus\n - api/forms/NgControlStatusGroup\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/NgModelGroup\n - api/forms/NgSelectOption\n - api/forms/NonNullableFormBuilder\n - api/forms/NumberValueAccessor\n - api/forms/PatternValidator\n - api/forms/RadioControlValueAccessor\n - api/forms/RangeValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/RequiredValidator\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/forms/SetDisabledStateOption\n - api/forms/UntypedFormArray\n - api/forms/UntypedFormBuilder\n - api/forms/UntypedFormControl\n - api/forms/UntypedFormGroup\n - api/forms/ValidationErrors\n - api/forms/Validator\n - api/forms/ValidatorFn\n - api/forms/Validators\n - api/forms/isFormArray\n - api/forms/isFormControl\n - api/forms/isFormGroup\n - api/forms/isFormRecord\n - guide/forms-overview\n - https://en.wikipedia.org/wiki/Domain_model\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/PACKAGE.md\n-->"}