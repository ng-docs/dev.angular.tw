{"id":"api/core/ContentChildren","title":"ContentChildren","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/ContentChildren\", \"name\": \"ContentChildren\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/di.ts#L176-L184\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"contentchildren\">ContentChildren<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#contentchildren\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uyp69594femajq5dhdzvjdty\">用于配置内容查询的参数装饰器。</p>\n\n    <p><a href=\"api/core/ContentChildren#description\">查看更多...</a></p>\n  </section>\n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bf0u7myx1zlw94ki6kawhl37u\"><strong>元数据属性</strong>：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2mv0w7n7tz5ea75fcgwsnpzqt\">在调用 <code>ngAfterContentInit</code> 之前设置的内容查询。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uj2fyc3tcal5md4lyybxoc4e\">不检索其他组件模板中的元素或指令，因为组件模板对其祖先来说始终是黑匣子。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"958p250s4a4gqxdqtti9sbuqo\"><strong>元数据属性</strong>：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59spbvqm8cpa6royeh8occk6l\"><strong>selector</strong> - 要查询的指令类型或名称。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"duzz3kqfdgumvsb2xsi2kjzsn\">  <strong>后代</strong> - 包含所有后代时为 true，否则仅包括直接子代。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2lg8i5hkuhxttg6mgqdjyjv8w\">  <strong>read</strong> - 用于从查询的元素中读取不同的令牌。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7r4y6m3967yuqbqr6ux3c6g6b\"><strong>read</strong> - 用于从查询到的元素中读取不同的令牌。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f08e65jh4yx0pw6hnbokpkhry\">支持下列选择器：。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"330yjla87rxyroyq6xsq9o9op\">任何带有 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 或 <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code> 装饰器的类</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80l4c3iznsa5m4dse4gx5asrk\">字符串形式的模板引用变量（例如，使用 <code>@<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>('cmp')</code> 查询 <code>&lt;my-component #cmp&gt;&lt;/my-component&gt;</code>）</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4zoxkwyxyqiuqewxn7308iorg\">在当前组件的子组件树中定义的任何提供者（例如 <code>@<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(SomeService) someService: SomeService</code>）</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9v0yjr288aivff00qusmtbw03\">通过字符串标记定义的任何提供程序（例如 <code>@<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>('someToken') someTokenVal: any</code>）</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6qk9ffgtdj1bf6pm4c2ig6gcr\"><code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code>（例如使用 <code>@<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(<a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>) template;</code> 查询 <code>&lt;ng-template&gt;&lt;/ng-template&gt;</code> ；）</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"erz5ulzk6ihgosixj37byz0ax\">此外，多个字符串选择器可以用逗号分隔（例如 <code>@<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>('cmp1,cmp2')</code>）</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30xysbii0fi7zioc9r2fhgsm9\"><code>read</code> 支持以下值：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"330yjla87rxyroyq6xsq9o9op\">任何带有 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 或 <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code> 装饰器的类</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"coewcx1n8w3uha9rpq3nc07sb\">在此查询的 <code>selector</code> 匹配的组件注入器上定义的任何提供程序</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4a5dny1l0sl0prfh4x77ge8cs\">通过字符串标记定义的任何提供程序（例如 <code>{provide: 'token', useValue: 'val'}</code>）</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bwws9nk3malja82otpkhgtiog\"><code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code>、<code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> 和 <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code></li>\n</ul>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38oln7s49tszv2e613egl1nsg\">进一步信息可在\n<a href=\"api/core/ContentChildren#usage-notes\">用法注释</a>中找到。</p>\n</section>\n\n<section class=\"decorator-options\">\n  <h2 id=\"options\">选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e7r6qq5zjbji2w81l8asuis9h\">这里是如何使用 <code><a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a></code> 装饰器的简单演示。</p>\n<code-example path=\"core/di/ts/contentChildren/content_children_howto.ts\" region=\"HowTo\">\nimport {<a href=\"api/core/AfterContentInit\" class=\"code-anchor\">AfterContentInit</a>, <a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>, <a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'child-directive'})\nclass ChildDirective {}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'someDir'})\nclass SomeDir implements <a href=\"api/core/AfterContentInit\" class=\"code-anchor\">AfterContentInit</a> {\n  @<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(ChildDirective) <a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a>!: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&lt;ChildDirective&gt;;\n\n  ngAfterContentInit() {\n    // <a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a> is set\n  }\n}\n\n</code-example>\n<h3 id=\"tab-pane-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zmkcvg5n933zg8lmciqasuvk\">选项卡窗格示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#tab-pane-example\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bn4rvro5ymm3ln4y98rdr0uxg\">下面是一个稍微更实际的示例，展示了如何使用 <code><a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a></code> 装饰器来实现选项卡窗格组件。</p>\n<code-example path=\"core/di/ts/contentChildren/content_children_example.ts\" region=\"Component\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>, <a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a>, <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'pane'})\nexport class Pane {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() id!: string;\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'tab',\n  template: `\n    &lt;div class=\"top-level\"&gt;Top level panes: {{ serializedPanes }}&lt;/div&gt;\n    &lt;div class=\"nested\"&gt;Arbitrary nested panes: {{ serializedNestedPanes }}&lt;/div&gt;\n  `,\n})\nexport class Tab {\n  @<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(Pane) topLevelPanes!: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&lt;Pane&gt;;\n  @<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(Pane, {descendants: true}) arbitraryNestedPanes!: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&lt;Pane&gt;;\n\n  get serializedPanes(): string {\n    return this.topLevelPanes ? this.topLevelPanes.map((p) =&gt; p.id).join(', ') : '';\n  }\n  get serializedNestedPanes(): string {\n    return this.arbitraryNestedPanes ? this.arbitraryNestedPanes.map((p) =&gt; p.id).join(', ') : '';\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  template: `\n    &lt;tab&gt;\n      &lt;pane id=\"1\"&gt;&lt;/pane&gt;\n      &lt;pane id=\"2\"&gt;&lt;/pane&gt;\n      &lt;pane id=\"3\" *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"shouldShow\"&gt;\n        &lt;tab&gt;\n          &lt;pane id=\"3_1\"&gt;&lt;/pane&gt;\n          &lt;pane id=\"3_2\"&gt;&lt;/pane&gt;\n        &lt;/tab&gt;\n      &lt;/pane&gt;\n    &lt;/tab&gt;\n\n    &lt;button (click)=\"show()\"&gt;Show 3&lt;/button&gt;\n  `,\n})\nexport class ContentChildrenComp {\n  shouldShow = false;\n\n  show() {\n    this.shouldShow = true;\n  }\n}\n\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/Directive\n - api/core/Query\n - api/core/QueryList\n - guide/cheatsheet\n - guide/content-projection\n - guide/dependency-injection-navtree\n - guide/lifecycle-hooks\n - guide/lightweight-injection-tokens\n - guide/signal-queries\n - guide/static-query-migration\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgIf\n - api/core\n - api/core/AfterContentInit\n - api/core/Component\n - api/core/ContentChildren#contentchildren\n - api/core/ContentChildren#description\n - api/core/ContentChildren#options\n - api/core/ContentChildren#tab-pane-example\n - api/core/ContentChildren#usage-notes\n - api/core/Directive\n - api/core/ElementRef\n - api/core/Input\n - api/core/QueryList\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/contentChildren\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/di.ts#L176-L184\n-->"}