{"id":"api/core/ChangeDetectorRef","title":"ChangeDetectorRef","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/ChangeDetectorRef\", \"name\": \"ChangeDetectorRef\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L17-L128\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"changedetectorref\">ChangeDetectorRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#changedetectorref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccxhcf05bnm3isno2l815upyn\">Angular 各種檢視的基礎類，提供變更檢測功能。\n變更檢測樹會收集要檢查的所有檢視。\n使用這些方法從樹中新增或移除檢視、初始化變更檢測並顯式地把這些檢視標記為<em>髒的</em>，意思是它們變了、需要重新渲染。</p>\n\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nabstract class <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a> {<br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#markForCheck\">abstract <span class=\"member-name\">markForCheck</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detach\">abstract <span class=\"member-name\">detach</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detectChanges\">abstract <span class=\"member-name\">detectChanges</span>(): void</a><br><a class=\"code-anchor deprecated-api-item\" href=\"api/core/ChangeDetectorRef#checkNoChanges\">abstract <span class=\"member-name\">checkNoChanges</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#reattach\">abstract <span class=\"member-name\">reattach</span>(): void</a>\n}\n</code-example>\n\n  <div class=\"descendants class\">\n    <h2 id=\"子類別\">子類別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#子類別\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code>\n    \n<ul>\n  <li>\n    <code><a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a></code>\n    \n  </li>\n</ul>\n  </li>\n</ul>\n  </div>\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"85agdce2x02nycdixv2mf2uwy\"><a href=\"guide/lifecycle-hooks#using-change-detection-hooks\">使用變更檢測鉤子</a></p></li>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d106et2pv515a8jiybmjc8xxf\"><a href=\"guide/lifecycle-hooks#defining-custom-change-detection\">定義自定義變更檢測</a></p></li>\n  </ul>\n</section>\n  \n  \n<section class=\"instance-methods\">\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"markForCheck\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"markforcheck\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cs1tev1gmt0lh9x4axxgkvt80\">markForCheck()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#markforcheck\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L64-L76\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5yyej9vi65agip6k5tyzlafhz\">當檢視使用\n<code>ChangeDetectionStrategy#OnPush</code>（checkOnce）變更檢測策略時，顯式標記檢視已更改，以便重新檢查。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">markForCheck</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"93plg3pru4hskvn8r4sak2tm1\">當輸入已更改或檢視中發生了事件時，元件通常會標記為髒的（需要重新渲染）。呼叫此方法會確保即使那些觸發器沒有被觸發，也仍然檢查該組件。</p>\n<!-- TODO: Add a link to a chapter on OnPush components -->\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"detach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"detach\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6om6kr9l7pzf8jmcc95p35e2y\">detach()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#detach\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L77-L90\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a05i3bq8rqn6r00ts1xirkyqr\">從變更檢測樹中分離開檢視。\n已分離的檢視在重新附加上去之前不會被檢查。\n與 <code>detectChanges()</code> 結合使用，可以實現區域性變更檢測。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">detach</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16sa1h9x8clcdzbrl65li8t6h\">即使已分離的檢視已標記為髒的，它們在重新附加上去之前也不會被檢查。</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"detectChanges\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"detectchanges\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dfkjmc8qdf79uu5lt1a003fhk\">detectChanges()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#detectchanges\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L91-L100\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"12vmslpuhl36l8ghv5rxx5fbb\">檢查此檢視及其子檢視。與\n<a href=\"api/core/ChangeDetectorRef#detach\"><code>ChangeDetectorRef#detach</code></a>結合使用，以實現區域性變更檢測。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">detectChanges</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dieikqjuxfcncu0kce6x7v24\"><!-- TODO: 新增一個關於分離/重新附加/區域性檢測的章節連結 --> \n<!-- TODO: 一旦ref.detectChanges合併到主分支中，請新增一個動態範例 --></td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"checkNoChanges\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 class=\"deprecated-api-item\" id=\"checknochanges\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hzxcgtn9y9l891v1ebbxgmpg\">checkNoChanges()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#checknochanges\"><i class=\"material-icons\">link</i></a></h3>\n      <label class=\"api-status-label deprecated\" title=\"本 API 已棄用\">已棄用</label>\n      \n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L101-L112\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32wevngxbqanb7kg8cuxvx7y1\">檢查變更檢測器及其子檢測器，如果檢測到任何更改，則丟擲異常。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">abstract <span class=\"member-name\">checkNoChanges</span>(): void</code-example>\n  <div class=\"deprecated\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7on3l5kns5maom7h1pbajlvx3\"><strong>已棄用</strong> 這是一個僅用於測試的 API，在生產介面中沒有位置。 \n<code>checkNoChanges</code>已經作為應用在開發模式下執行時\n<code><a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a></code>的一部分。對於更細粒度的\n<code>checkNoChanges</code>驗證，請使用\n<code><a href=\"api/core/testing/ComponentFixture\" class=\"code-anchor\">ComponentFixture</a></code>。</p>\n\n  </div>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3jozxoxehphibqhxyzttmua3\">在開發模式下可用來驗證正在執行的變更檢測器是否引入了其它變更。在生產模式下調用它時沒有任何效果。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"reattach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"reattach\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqpcuv41ymlfiqhn3m2jwqojf\">reattach()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#reattach\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L113-L121\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76h2kc17jby0luj8z9ueeqohe\">把以前分離開的檢視重新附加到變更檢測樹上。\n檢視會被預設附加到這棵樹上。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">reattach</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <p>沒有引數。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cgt8ngv5fu49qbeeywdk5hlu9\"><!-- TODO: 新增一個關於分離/重新附加/區域性檢測的章節連結 --></td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9jq645ywrq5w02o7oimrxsinj\">下面的例子示範了如何修改預設的變更檢測行為，以便在需要時執行顯式變更檢測。</p>\n<h3 id=\"use-markforcheck-with-checkonce-strategy\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3iut46gkz9gs33izt0ocogll\">使用 <code>markForCheck()</code> 和 <code>CheckOnce</code> 策略<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#use-markforcheck-with-checkonce-strategy\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ws34r4htcr6524utpf7v93ba\">下面的例子為元件設定了 <code>OnPush</code> 變更檢測策略（<code>CheckOnce</code> 而不是預設的\n<code>CheckAlways</code>），然後每隔一段時間強制進行第二輪檢測。\n參見<a href=\"http://plnkr.co/edit/GC512b?p=preview\">線上例子</a>。</p>\n<code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"mark-for-check\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  template: `Number of ticks: {{ numberOfTicks }}`,\n  changeDetection: <a href=\"api/core/ChangeDetectionStrategy#OnPush\" class=\"code-anchor\">ChangeDetectionStrategy.OnPush</a>,\n})\nclass AppComponent {\n  numberOfTicks = 0;\n\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>) {\n    setInterval(() =&gt; {\n      this.numberOfTicks++;\n      // require view to be updated\n      this.ref.markForCheck();\n    }, 1000);\n  }\n}\n\n</code-example>\n<h3 id=\"detach-change-detector-to-limit-how-often-check-occurs\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"at2atb0sz90zqm0nu2bnqpvok\">分離開變更檢測器以限制變更檢測的發生頻度<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#detach-change-detector-to-limit-how-often-check-occurs\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b9fmlzi8jy6kmazquny1f4nfw\">下面的例子定義了一個帶有只讀資料的大型清單，這些資料預計每秒會變化很多次。\n為了提高效能，我們檢測和更新清單的頻率就應該比實際發生的變化少得多。\n要解決這個問題，就要分離開變更檢測器，並每隔五秒鐘顯式執行一次變更檢查。</p>\n<code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\">\nclass DataListProvider {\n  // in a real application the returned data will be different every time\n  get data() {\n    return [1, 2, 3, 4, 5];\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'giant-list',\n  template: ` &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let d of dataProvider.data\"&gt;<a href=\"api/router/Data\" class=\"code-anchor\">Data</a> {{ d }}&lt;/li&gt; `,\n})\nclass GiantList {\n  constructor(\n    private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>,\n    public dataProvider: DataListProvider,\n  ) {\n    ref.detach();\n    setInterval(() =&gt; {\n      this.ref.detectChanges();\n    }, 5000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  providers: [DataListProvider],\n  template: ` &lt;giant-list&gt;&lt;/giant-list&gt; `,\n})\nclass App {}\n\n</code-example>\n<h3 id=\"reattaching-a-detached-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e5xlfew2l0cv94eq24fom49xj\">重新附加一個已分離的元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#reattaching-a-detached-component\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6cxg64nzypej0945175j1ofiz\">下面的例子建立了一個用來顯示活動資料的元件。\n當 <code>live</code> 屬性為 <code>false</code> 時，該組件就把它的變更檢測器從主變更檢測器樹中分離出來，當該屬性變為\n<code>true</code> 時，則重新附加上它。</p>\n<code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\">\nclass DataProvider {\n  data = 1;\n  constructor() {\n    setInterval(() =&gt; {\n      this.data = 2;\n    }, 500);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({selector: 'live-data', inputs: ['live'], template: '<a href=\"api/router/Data\" class=\"code-anchor\">Data</a>: {{dataProvider.data}}'})\nclass LiveData {\n  constructor(\n    private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>,\n    public dataProvider: DataProvider,\n  ) {}\n\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()\n  set live(value: boolean) {\n    if (value) {\n      this.ref.reattach();\n    } else {\n      this.ref.detach();\n    }\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  providers: [DataProvider],\n  template: `\n    Live Update: &lt;input type=\"checkbox\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"live\" /&gt;\n    &lt;live-data [live]=\"live\"&gt;&lt;/live-data&gt;\n  `,\n})\nclass App1 {\n  live = true;\n}\n\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationRef\n - api/core/ChangeDetectionStrategy\n - api/core/ComponentRef\n - api/core/EmbeddedViewRef\n - api/core/ViewRef\n - api/core/testing/ComponentFixture\n - api/router/InMemoryScrollingOptions\n - api/upgrade/static/downgradeComponent\n - guide/change-detection-skipping-subtrees\n - guide/deprecations\n - guide/glossary\n - guide/testing-utility-apis\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgFor\n - api/core\n - api/core/ApplicationRef\n - api/core/ChangeDetectionStrategy#OnPush\n - api/core/ChangeDetectorRef#changedetectorref\n - api/core/ChangeDetectorRef#checkNoChanges\n - api/core/ChangeDetectorRef#checknochanges\n - api/core/ChangeDetectorRef#detach\n - api/core/ChangeDetectorRef#detach-change-detector-to-limit-how-often-check-occurs\n - api/core/ChangeDetectorRef#detectChanges\n - api/core/ChangeDetectorRef#detectchanges\n - api/core/ChangeDetectorRef#instance-methods\n - api/core/ChangeDetectorRef#markForCheck\n - api/core/ChangeDetectorRef#markforcheck\n - api/core/ChangeDetectorRef#reattach\n - api/core/ChangeDetectorRef#reattaching-a-detached-component\n - api/core/ChangeDetectorRef#see-also\n - api/core/ChangeDetectorRef#usage-notes\n - api/core/ChangeDetectorRef#use-markforcheck-with-checkonce-strategy\n - api/core/ChangeDetectorRef#子類別\n - api/core/Component\n - api/core/EmbeddedViewRef\n - api/core/Input\n - api/core/ViewRef\n - api/core/testing/ComponentFixture\n - api/forms/NgModel\n - api/router/Data\n - guide/lifecycle-hooks#defining-custom-change-detection\n - guide/lifecycle-hooks#using-change-detection-hooks\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L101-L112\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L113-L121\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L17-L128\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L64-L76\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L77-L90\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/change_detection/change_detector_ref.ts#L91-L100\n-->"}