{"id":"api/core/NgModule","title":"NgModule","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/NgModule\", \"name\": \"NgModule\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L209-L221\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"ngmodule\">NgModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#ngmodule\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9pfm0zwp0wq6ygqrmfnip4nul\">把一个类标记为 NgModule，并提供配置元数据。</p>\n\n  </section>\n<section class=\"decorator-overview\">\n  <table class=\"is-full-width list-table option-overview\">\n  <thead>\n  <tr>\n    <th>选项</th>\n    <th>说明</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96zmo589lziv77qicdigwysmb\"><a class=\"code-anchor\" href=\"api/core/NgModule#providers\"> <code>提供者？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6dkww196f4120ocy4jb6ktxu\">在当前模块的注入器中可用的一组可注入对象。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8mmf93zu7y2330ev29ztv3u5\"><a class=\"code-anchor\" href=\"api/core/NgModule#declarations\"> <code>声明？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"s501kwzbtg85oe8fdlzd7wpd\">属于该模块的一组组件、指令和管道（统称<a href=\"guide/glossary#declarable\">可声明对象</a>）。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqypuj6ml7ko87v7zqd95mj4n\"><a class=\"code-anchor\" href=\"api/core/NgModule#imports\"> <code>导入？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43bogo4k2it7m6iy9im5ckhgg\">这里列出的 NgModule 所导出的<a href=\"guide/glossary#declarable\">可声明对象</a>可用在当前模块内的模板中。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7or4v5w1it4r4m3ws8docuz5r\"><a class=\"code-anchor\" href=\"api/core/NgModule#exports\"> <code>导出？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"s0v6aixse0z05nfon7sp1ffh\">此 NgModule 中声明的一组组件、指令和管道可以在导入了本模块的模块下任何组件的模板中使用。\n导出的这些可声明对象就是该模块的公共 API。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8u0onslenlmhlthir01kefeh9\"><a class=\"code-anchor\" href=\"api/core/NgModule#bootstrap\"> <code>启动？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hnhoxobmajfjiofkurc1o4uo\">引导此模块时引导的一组组件。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8a4b8mtinpcx9lxjxor2m2mct\"><a class=\"code-anchor\" href=\"api/core/NgModule#schemas\"> <code>模式？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"iculyj0o7l6l3132tb9hzmjl\">该 NgModule 中允许使用的声明元素的 schema（HTML 架构）。\n元素和属性（无论是 Angular 组件还是指令）都必须声明在 schema 中。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3b9ema4whbivuk1t9c8yy1cm\"><a class=\"code-anchor\" href=\"api/core/NgModule#id\"> <code>标识？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dx20fuis1l72cw7cdzgsy25e\">当前 NgModule 在 <code><a href=\"api/core/getModuleFactory\" class=\"code-anchor\">getModuleFactory</a></code> 中的名字或唯一标识符。如果为 <code>undefined</code>，则该模块不会被注册进 <code><a href=\"api/core/getModuleFactory\" class=\"code-anchor\">getModuleFactory</a></code> 中。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f297x4rwfx3t7e7vh0rskv18q\"><a class=\"code-anchor\" href=\"api/core/NgModule#jit\"> <code>即时编译？</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31n9twkz2mbid9tbxcqel97rk\">如果存在，则该指令/组件将被 AOT 编译器忽略。它会保留在发布代码中，并且 JIT 编译器会尝试在运行时在浏览器中对其进行编译。为了确保其行为正确，该应用程序必须导入 <code>@angular/compiler</code> 。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n</section>\n\n\n<section class=\"decorator-options\">\n  <h2 id=\"options\">选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  <a id=\"providers\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"providers\">providers<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#providers\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L35-L82\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6dkww196f4120ocy4jb6ktxu\">在当前模块的注入器中可用的一组可注入对象。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            providers?: Array&lt;<a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a> | <a href=\"api/core/EnvironmentProviders\" class=\"code-anchor\">EnvironmentProviders</a>&gt;\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55vaw0e7yna42m0q6g3io6w66\">惰性加载的模块有自己的注入器，通常它是根注入器的一个子注入器。\n惰性加载的服务，其作用范围局限于这个惰性加载模块的注入器。\n如果惰性加载模块也提供了 <code>UserService</code>，则任何在该模块的上下文中创建的组件（比如通过路由导航）都会获得该服务的一个局部实例，\n而不是根注入器中的全局实例。\n而外部模块中的组件仍然会使用由它们的注入器提供的实例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amdumrci74hf7oukxfzgtbdn7\">惰性加载的模块有自己的注入器，通常它是根注入器的一个子注入器。惰性加载的服务，其作用范围局限于这个惰性加载模块的注入器。如果惰性加载模块也提供了 <code>UserService</code>，则任何在该模块的上下文中创建的组件（比如通过路由导航）都会获得该服务的一个局部实例，而不是根注入器中的全局实例。而外部模块中的组件仍然会使用由它们的注入器提供的实例。</p>\n<h4 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\">范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#example\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"49yu85gdd534dc3e1id2ozxt9\">下面的例子定义了一个类，它被注册在 HelloWorld 这个 NgModule 的注入器下：</p>\n<code-example>\nclass Greeter {\n   greet(name:string) {\n     return 'Hello ' + name + '!';\n   }\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  providers: [\n    Greeter\n  ]\n})\nclass HelloWorld {\n  greeter:Greeter;\n\n  constructor(greeter:Greeter) {\n    this.greeter = greeter;\n  }\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"declarations\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"declarations\">declarations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#declarations\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L83-L110\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"s501kwzbtg85oe8fdlzd7wpd\">属于该模块的一组组件、指令和管道（统称<a href=\"guide/glossary#declarable\">可声明对象</a>）。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            declarations?: Array&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt; | any[]&gt;\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d8gndb2ld5p0pkvpzxdekmysf\">可声明对象必须属于也只能属于一个模块。\n如果你尝试把同一个类声明在多个模块中，那么编译器就会报错。\n要注意不能声明那些从其它模块中导入的类。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cxgc99iucuh3118rkf72njs4\">可声明对象必须属于也只能属于一个模块。如果你尝试把同一个类声明在多个模块中，那么编译器就会报错。要注意不能声明那些从其它模块中导入的类。</p>\n<h4 id=\"example-1\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\">范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#example-1\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3lp6saqfvm1w7kcojlnokax0q\">下面的例子允许 CommonModule 使用 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code> 指令。</p>\n<code-example language=\"javascript\">\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [<a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a>]\n})\nclass <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> {\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"imports\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"imports\">imports<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#imports\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L111-L139\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43bogo4k2it7m6iy9im5ckhgg\">这里列出的 NgModule 所导出的<a href=\"guide/glossary#declarable\">可声明对象</a>可用在当前模块内的模板中。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            imports?: Array&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt; | <a href=\"api/core/ModuleWithProviders\" class=\"code-anchor\">ModuleWithProviders</a>&lt;{}&gt; | any[]&gt;\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6v0mtqzlzwckc178gq6re4a5b\">模板可以使用来自任何导入模块中所导出的可声明对象，包括它们从别的模块导入后重新导出的。\n比如，<code>ModuleA</code> 导入了 <code>ModuleB</code> 并导出了它，就会让 <code>ModuleB</code> 中的可声明对象也同样在那些导入了 <code>ModuleA</code> 的模块中可用。</p>\n<h4 id=\"example-2\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\">范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#example-2\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5m23r5e3rc1jsb51mlm26v7bo\">下列例子允许 <code>MainModule</code> 使用 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 中导入的任意可声明对象：</p>\n<code-example language=\"javascript\">\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [<a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a>]\n})\nclass MainModule {\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"exports\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"exports\">exports<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#exports\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L140-L171\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"s0v6aixse0z05nfon7sp1ffh\">此 NgModule 中声明的一组组件、指令和管道可以在导入了本模块的模块下任何组件的模板中使用。\n导出的这些可声明对象就是该模块的公共 API。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            exports?: Array&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt; | any[]&gt;\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80s2ylh76lrzjr4p330t46dn9\">导出具有传递性。ModuleA 可以导入 ModuleB 并将其导出，这会让所有 ModuleB 中的导出同样可用在导入了 ModuleA 的那些模块中。</p>\n\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jprlu1bvmmxw7vy0i38tpku0\">默认情况下，可声明对象是私有的。如果 ModuleA 不导出 UserComponent，那么只有这个 ModuleA 中的组件才能使用 UserComponent。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6fbuo2oc3xul1vrzo2jpn5tbv\">导出具有传递性。ModuleA 可以导入 ModuleB 并将其导出，这会让所有 ModuleB 中的导出同样可用在导入了 ModuleA 的那些模块中。</p>\n<h4 id=\"example-3\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\">范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#example-3\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bw95545u2i08pdxl0xuvo10bl\">下面的例子导出了来自 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 的 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code> 指令。</p>\n<code-example language=\"javascript\">\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  exports: [<a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a>]\n})\nclass <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> {\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"bootstrap\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"bootstrap\">bootstrap<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#bootstrap\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L172-L176\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hnhoxobmajfjiofkurc1o4uo\">引导此模块时引导的一组组件。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            bootstrap?: Array&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt; | any[]&gt;\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"schemas\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"schemas\">schemas<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#schemas\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L177-L188\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"iculyj0o7l6l3132tb9hzmjl\">该 NgModule 中允许使用的声明元素的 schema（HTML 架构）。\n元素和属性（无论是 Angular 组件还是指令）都必须声明在 schema 中。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            schemas?: Array&lt;<a href=\"api/core/SchemaMetadata\" class=\"code-anchor\">SchemaMetadata</a> | any[]&gt;\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6coegv1hxz2d80macug2pnssc\">允许的取值包括 <code><a href=\"api/core/NO_ERRORS_SCHEMA\" class=\"code-anchor\">NO_ERRORS_SCHEMA</a></code> 和 <code><a href=\"api/core/CUSTOM_ELEMENTS_SCHEMA\" class=\"code-anchor\">CUSTOM_ELEMENTS_SCHEMA</a></code>。</p>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"id\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"id\">id<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#id\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L189-L194\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dx20fuis1l72cw7cdzgsy25e\">当前 NgModule 在 <code><a href=\"api/core/getModuleFactory\" class=\"code-anchor\">getModuleFactory</a></code> 中的名字或唯一标识符。如果为 <code>undefined</code>，则该模块不会被注册进 <code><a href=\"api/core/getModuleFactory\" class=\"code-anchor\">getModuleFactory</a></code> 中。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            id?: string\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"jit\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"jit\">jit<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/NgModule#jit\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L195-L202\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31n9twkz2mbid9tbxcqel97rk\">如果存在，则该指令/组件将被 AOT 编译器忽略。它会保留在发布代码中，并且 JIT 编译器会尝试在运行时在浏览器中对其进行编译。为了确保其行为正确，该应用程序必须导入 <code>@angular/compiler</code> 。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            jit?: true\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/common/APP_BASE_HREF\n - api/common/NgOptimizedImage\n - api/common/upgrade\n - api/common/upgrade/LocationUpgradeModule\n - api/core\n - api/core/APP_INITIALIZER\n - api/core/ApplicationRef\n - api/core/Compiler\n - api/core/Component\n - api/core/DEFAULT_CURRENCY_CODE\n - api/core/Directive\n - api/core/EnvironmentProviders\n - api/core/ErrorHandler\n - api/core/Injectable\n - api/core/InjectionToken\n - api/core/NgModuleRef\n - api/core/Pipe\n - api/core/PlatformRef\n - api/core/SchemaMetadata\n - api/core/Testability\n - api/core/getModuleFactory\n - api/core/getNgModuleById\n - api/core/testing/TestBed\n - api/platform-browser/animations/BrowserAnimationsModule\n - api/platform-browser/provideClientHydration\n - api/router/ActivatedRoute\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanDeactivate\n - api/router/CanLoad\n - api/router/CanMatch\n - api/router/Resolve\n - api/router/RouterModule\n - api/router/provideRoutes\n - api/router/upgrade/RouterUpgradeInitializer\n - api/service-worker/SwRegistrationOptions\n - api/upgrade/UpgradeAdapter\n - api/upgrade/static\n - api/upgrade/static/UpgradeModule\n - api/upgrade/static/downgradeInjectable\n - api/upgrade/static/downgradeModule\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - errors/NG01203\n - errors/NG0201\n - errors/NG0301\n - errors/NG0302\n - errors/NG0403\n - errors/NG05104\n - errors/NG1001\n - errors/NG3003\n - errors/NG6100\n - errors/NG8003\n - guide/add-an-animation\n - guide/animations\n - guide/aot-compiler\n - guide/architecture-modules\n - guide/bootstrapping\n - guide/cheatsheet\n - guide/component-overview\n - guide/defer\n - guide/dependency-injection\n - guide/deprecations\n - guide/docs-style-guide\n - guide/feature-modules\n - guide/forms\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/hierarchical-dependency-injection\n - guide/hydration\n - guide/lazy-loading-ngmodules\n - guide/migration-module-with-providers\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/ngmodule-vs-jsmodule\n - guide/ngmodules\n - guide/pipes\n - guide/pipes-custom-data-trans\n - guide/providers\n - guide/route-animations\n - guide/router-tutorial\n - guide/router-tutorial-toh\n - guide/sharing-ngmodules\n - guide/singleton-services\n - guide/ssr\n - guide/standalone-components\n - guide/standalone-migration\n - guide/styleguide\n - guide/testing-components-scenarios\n - guide/testing-utility-apis\n - guide/update-to-version-15\n - guide/upgrade\n - guide/upgrade-performance\n - guide/upgrade-setup\n - guide/what-is-angular\n - start\n - start/start-data\n - start/start-routing\n - tutorial/first-app/first-app-lesson-02\n - tutorial/tour-of-heroes/toh-pt0\n - tutorial/tour-of-heroes/toh-pt1\n - tutorial/tour-of-heroes/toh-pt4\n - tutorial/tour-of-heroes/toh-pt5\n - tutorial/tour-of-heroes/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/common/CommonModule\n - api/common/NgFor\n - api/core\n - api/core/CUSTOM_ELEMENTS_SCHEMA\n - api/core/EnvironmentProviders\n - api/core/ModuleWithProviders\n - api/core/NO_ERRORS_SCHEMA\n - api/core/NgModule#bootstrap\n - api/core/NgModule#declarations\n - api/core/NgModule#example\n - api/core/NgModule#example-1\n - api/core/NgModule#example-2\n - api/core/NgModule#example-3\n - api/core/NgModule#exports\n - api/core/NgModule#id\n - api/core/NgModule#imports\n - api/core/NgModule#jit\n - api/core/NgModule#ngmodule\n - api/core/NgModule#options\n - api/core/NgModule#providers\n - api/core/NgModule#schemas\n - api/core/Provider\n - api/core/SchemaMetadata\n - api/core/Type\n - api/core/getNgModuleById\n - guide/glossary#declarable\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L111-L139\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L140-L171\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L172-L176\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L177-L188\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L189-L194\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L195-L202\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L209-L221\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L35-L82\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/ng_module.ts#L83-L110\n-->"}