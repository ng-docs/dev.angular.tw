{"id":"api/core/Component","title":"组件","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/Component\", \"name\": \"Component\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L685-L686\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2n8tguxhs6hbmqbwyqfclvff1\">组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#component\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61m6fifd40kz3i6qngjurcd0j\">一个装饰器，用于把某个类标记为 Angular 组件，并为它配置一些元数据，以决定该组件在运行期间该如何处理、实例化和使用。</p>\n\n    <p><a href=\"api/core/Component#description\">查看更多...</a></p>\n  </section>\n<section class=\"decorator-overview\">\n  <table class=\"is-full-width list-table option-overview\">\n  <thead>\n  <tr>\n    <th>选项</th>\n    <th>说明</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dof42c5fzgpdjuidudlg2vwgw\"><a class=\"code-anchor\" href=\"api/core/Component#changeDetection\"> <code>changeDetection?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8wsjzhx5r4eur34rwpmkal78o\">用于当前组件的变更检测策略。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"917weyufvzpow2llyxkbcrk68\"><a class=\"code-anchor\" href=\"api/core/Component#viewProviders\"> <code>viewProviders?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3cb9arro9unucgsou817rm3e\">定义对其视图 DOM 子级可见的可注入对象集。请参见<a href=\"api/core/Component#injecting-a-class-with-a-view-provider\">示例</a>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2r8e8d8d3k8pkttp2kjqizgpb\"><a class=\"code-anchor deprecated-api-item\" href=\"api/core/Component#moduleId\"> <code>moduleId?</code> </a></td>\n      <td>\n        <label class=\"api-status-label deprecated\">已弃用</label>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1gztaj6c9mirqppe451baykzo\">包含该组件的那个模块的 ID。该组件必须能解析模板和样式表中使用的相对 URL。SystemJS 在每个模块中都导出了 <code>__moduleName</code> 变量。在 CommonJS 中，它可以设置为 <code>module.id</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"br3qqou0e8tv2vqix63frvxq5\"><a class=\"code-anchor\" href=\"api/core/Component#templateUrl\"> <code>templateUrl?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eo7zr124jl0m6cetw7keg3b58\">Angular 组件模板文件的 URL。如果提供了它，就不要再用 <code>template</code> 来提供内联模板了。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ej8mxmvszxf1r0en3ny2g28bd\"><a class=\"code-anchor\" href=\"api/core/Component#template\"> <code>template?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bgowegrzgx7ifj54tfcyomfc\">Angular 组件的内联模板。如果提供了它，就不要再用 <code>templateUrl</code> 提供模板了。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dyzba0xq1s10y5e3rpserxz3y\"><a class=\"code-anchor\" href=\"api/core/Component#styleUrl\"> <code>styleUrl?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dkmgi1js11diyi1vz25r6amk\">相对路径或包含 CSS 样式表的文件的绝对 URL，用于在该组件中使用。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1p8k6eqslxpnfoqzt7gfn5jiv\"><a class=\"code-anchor\" href=\"api/core/Component#styleUrls\"> <code>styleUrls?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpmt4s1sfb2joju9ct273tgo3\">相对路径或包含 CSS 样式表的文件的绝对 URL，用于在该组件中使用。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2m4vhkj43xo6j2bkfolfy1l3c\"><a class=\"code-anchor\" href=\"api/core/Component#styles\"> <code>styles?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fvenwx99fjhbokxkbl28b8z7\">本组件用到的一个或多个内联 CSS 样式。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ikr1e9fihbqkqtwbmo7g83jc\"><a class=\"code-anchor\" href=\"api/core/Component#animations\"> <code>animations?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qkxjm3is13ch59c34rze7i7e\">一个或多个动画 <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> 调用，包含一些 <code>state()</code> 和 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 定义。参见<a href=\"/guide/animations\">动画</a>和相关的 API 文档。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3n9zwkeuo7352myinppy8d5y6\"><a class=\"code-anchor\" href=\"api/core/Component#encapsulation\"> <code>encapsulation?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1zjqvhhjna1b5sztb3zouo1w\">供模板和 CSS 样式使用的样式封装策略。取值为：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tm7mwfkacf0i22wsf2s9xuz9\"><code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>：使用垫片（shimmed) CSS 来模拟原生行为。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"33wqhhp13m94q8v61vnvdiylt\"><code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>：使用不带任何封装的全局 CSS。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vuct0s9tvxep4fczt7swudgp\"><code><a href=\"api/core/ViewEncapsulation#ShadowDom\" class=\"code-anchor\">ViewEncapsulation.ShadowDom</a></code>：使用 Shadow DOM v1，封装样式。</li>\n</ul>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpez0i1sb4q2d78radio1t59s\"><a class=\"code-anchor\" href=\"api/core/Component#interpolation\"> <code>interpolation?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7uicie7jrlq46i3g11eallq9h\">改写默认的插值表达式起止分界符（<code>{{</code> 和 <code>}}</code>）。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"efteqhtyxac7tmx4i2fskngws\"><a class=\"code-anchor\" href=\"api/core/Component#preserveWhitespaces\"> <code>preserveWhitespaces?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"533a3usun0raw0bpqscw69j1a\">为 <code>true</code> 则保留，为 <code>false</code> 则从编译后的模板中移除可能多余的空白字符。空白字符就是指那些能在 JavaScript 正则表达式中匹配 <code>\\s</code> 的字符。默认为 <code>false</code>，除非通过编译器选项改写了它。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"abw84g3bewgwmr7ipo8owlfq1\"><a class=\"code-anchor\" href=\"api/core/Component#standalone\"> <code>standalone?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gkvmhg7e0ryyjq7onrp00k9\">标记为 <code>standalone</code> 的 Angular 组件不需要在 NgModule 中声明。此类组件通过 imports 属性直接管理它们自己的模板依赖项（模板中使用的组件、指令和管道）。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bgret0uqzhnu6917p9mebe1eq\"><a class=\"code-anchor\" href=\"api/core/Component#imports\"> <code>imports?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b7zc5kxjt1zqwivxr8ejf1l0d\">imports 属性指定独立组件的模板依赖项——那些可以在其模板中使用的指令、组件和管道。独立组件可以导入其他独立组件、指令和管道以及现有的 NgModule。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"12q4amryuzeobq7ho7xugvwry\"><a class=\"code-anchor\" href=\"api/core/Component#schemas\"> <code>schemas?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43xaev22evggixyi3rfkji6zv\">声明要在独立组件中允许的元素的模式集。既不是 Angular 组件也不是指令的元素和属性必须在模式中声明。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h3 class=\"no-toc\" id=\"继承自-directive-装饰器\">继承自 <a class=\"code-anchor\" href=\"api/core/Directive\">Directive</a> 装饰器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#继承自-directive-装饰器\"><i class=\"material-icons\">link</i></a></h3>\n<table class=\"is-full-width list-table option-overview\">\n  <thead>\n  <tr>\n    <th>选项</th>\n    <th>说明</th>\n  </tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1qaig7r0yva29gxjsfr1dzwrp\"><a class=\"code-anchor\" href=\"api/core/Directive#selector\"> <code>selector?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d8fi7ccf1edtwqsayvh6mm6hj\">这个 CSS 选择器用于在模板中标记出该指令，并触发该指令的实例化。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alu4ryc7rtohajiti0vqrurd7\"><a class=\"code-anchor\" href=\"api/core/Directive#inputs\"> <code>inputs?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elizlaqtphj4ype17d3pzyp6j\">列举某个指令的一组可供数据绑定的输入属性</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xkiwajn6st4i5nmppzswbnkl\"><a class=\"code-anchor\" href=\"api/core/Directive#outputs\"> <code>outputs?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arkbfu9xqvfmi8by7s1fs8e2s\">列举一组可供事件绑定的输出属性。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"hgrdiaubrsh8e5nxpefx6p9r\"><a class=\"code-anchor\" href=\"api/core/Directive#providers\"> <code>providers?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1h7vrlh8vxhzgc846bx1oqdbg\">一组依赖注入令牌，它允许 DI 系统为这个指令或组件提供依赖。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2233t54wy53q8plg3qlx9wemj\"><a class=\"code-anchor\" href=\"api/core/Directive#exportAs\"> <code>exportAs?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6nkz4tbhrxm4vhuboismt49k0\">定义一个名字，用于在模板中把该指令赋值给一个变量。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aopla479yxu06lo34ftnga8kv\"><a class=\"code-anchor\" href=\"api/core/Directive#queries\"> <code>queries?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96nqwwl1g4kle3zw75y5xho3w\">配置一些查询，它们将被注入到该指令中。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16zkk8b7yfe7sj6ffyihm1xxi\"><a class=\"code-anchor\" href=\"api/core/Directive#host\"> <code>host?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2d0ri2jc53xn6y3pjkjzyynta\">使用一组键-值对，把类的属性映射到宿主元素的绑定（Property、Attribute 和事件）。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"defbjmh49boglx0hsogfl6mwy\"><a class=\"code-anchor\" href=\"api/core/Directive#jit\"> <code>jit?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"175rapszg4ohizzsadqs2y7q1\">如果存在，则该指令/组件将被 AOT 编译器忽略。它会保留在发布代码中，并且 JIT 编译器会尝试在运行时在浏览器中对其进行编译。为了确保其行为正确，该应用程序必须导入 <code>@angular/compiler</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtfh32wtwzh7ib2jx1sctbkfm\"><a class=\"code-anchor\" href=\"api/core/Directive#standalone\"> <code>standalone?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pueqh2tt1kr2zwbawd4dy42k\">标记为 <code>standalone</code> 的 Angular 指令不需要在 NgModule 中声明。此类指令不依赖于 NgModule 的任何“中间上下文”（例如配置的提供程序）。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6kxz92m7tvipy6qlo5saeajm2\"><a class=\"code-anchor\" href=\"api/core/Directive#hostDirectives\"> <code>hostDirectives?</code> </a></td>\n      <td>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzhuo5e95yi2610qbflsf9gz2\">指令匹配时应该应用于宿主的独立指令。默认情况下，host 指令的任何输入或输出在宿主上都不可用，除非它们在 <code>inputs</code> 或 <code>outputs</code> 属性中指定。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n</section>\n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60r0ahi5k7auql1foivurjny9\">注意，除了这些用来对指令进行配置的选项之外，你还可以通过实现生命周期钩子来控制组件的运行期行为。要了解更多，参见 <a href=\"guide/lifecycle-hooks\">生命周期钩子</a> 章。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"col88zkhfgkjkch3f28zcg3lt\">Angular 的组件是指令的一个子集，它总是有一个与之关联的模板。和其它指令不同，模板中的每个元素只能具有一个组件实例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9cjfue5hizih7dxzm0ni0l77d\">组件必须从属于某个 NgModule 才能被其它组件或应用使用。要想让它成为某个 NgModule 中的一员，请把它列在 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 元数据的 <code>declarations</code> 字段中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3stz06wtbn34filk0ggymw7sv\">注意，除了这些用来对指令进行配置的选项之外，你还可以通过实现生命周期钩子来控制组件的运行期行为。要了解更多，参见 <a href=\"guide/lifecycle-hooks\">生命周期钩子</a> 章。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9uu7ggvupsahpq1rb1dilo52\">进一步的信息可在\n<a href=\"api/core/Component#usage-notes\">使用说明...</a>中找到。</p>\n</section>\n\n<section class=\"decorator-options\">\n  <h2 id=\"options\">选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  <a id=\"changeDetection\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"changedetection\">changeDetection<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#changedetection\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L534-L543\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8wsjzhx5r4eur34rwpmkal78o\">用于当前组件的变更检测策略。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            changeDetection?: <a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7h7zzsdo9kqffmypzla8s31jd\">当组件实例化之后，Angular 就会创建一个变更检测器，它负责传播组件各个绑定值的变化。该策略是下列值之一：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1voarlmzi0hcjhvvpyiijuqc8\"><code><a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>#OnPush</code> 把策略设置为 <code>CheckOnce</code>（按需）。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"au33s5uyxqzskcnt0r5wrb5qx\"><code><a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>#Default</code> 把策略设置为 <code>CheckAlways</code>。</li>\n</ul>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"viewProviders\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"viewproviders\">viewProviders<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#viewproviders\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L544-L550\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3cb9arro9unucgsou817rm3e\">定义对其视图 DOM 子级可见的可注入对象集。请参见<a href=\"api/core/Component#injecting-a-class-with-a-view-provider\">示例</a>。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            viewProviders?: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"moduleId\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"moduleid\">moduleId<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#moduleid\"><i class=\"material-icons\">link</i></a></h3>\n            <label class=\"api-status-label deprecated\">已弃用</label>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L551-L560\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1gztaj6c9mirqppe451baykzo\">包含该组件的那个模块的 ID。该组件必须能解析模板和样式表中使用的相对 URL。SystemJS 在每个模块中都导出了 <code>__moduleName</code> 变量。在 CommonJS 中，它可以设置为 <code>module.id</code>。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">\n            moduleId?: string\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"templateUrl\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"templateurl\">templateUrl<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#templateurl\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L561-L567\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eo7zr124jl0m6cetw7keg3b58\">Angular 组件模板文件的 URL。如果提供了它，就不要再用 <code>template</code> 来提供内联模板了。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            templateUrl?: string\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"template\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"template\">template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#template\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L568-L574\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bgowegrzgx7ifj54tfcyomfc\">Angular 组件的内联模板。如果提供了它，就不要再用 <code>templateUrl</code> 提供模板了。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            template?: string\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"styleUrl\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"styleurl\">styleUrl<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#styleurl\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L575-L580\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dkmgi1js11diyi1vz25r6amk\">相对路径或包含 CSS 样式表的文件的绝对 URL，用于在该组件中使用。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            styleUrl?: string\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"styleUrls\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"styleurls\">styleUrls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#styleurls\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L581-L585\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpmt4s1sfb2joju9ct273tgo3\">相对路径或包含 CSS 样式表的文件的绝对 URL，用于在该组件中使用。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            styleUrls?: string[]\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"styles\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"styles\">styles<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#styles\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L586-L591\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fvenwx99fjhbokxkbl28b8z7\">本组件用到的一个或多个内联 CSS 样式。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            styles?: string | string[]\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"animations\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"animations\">animations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#animations\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L592-L599\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qkxjm3is13ch59c34rze7i7e\">一个或多个动画 <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> 调用，包含一些 <code>state()</code> 和 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 定义。参见<a href=\"/guide/animations\">动画</a>和相关的 API 文档。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            animations?: any[]\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"encapsulation\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"encapsulation\">encapsulation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#encapsulation\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L600-L616\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1zjqvhhjna1b5sztb3zouo1w\">供模板和 CSS 样式使用的样式封装策略。取值为：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tm7mwfkacf0i22wsf2s9xuz9\"><code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>：使用垫片（shimmed) CSS 来模拟原生行为。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"33wqhhp13m94q8v61vnvdiylt\"><code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>：使用不带任何封装的全局 CSS。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vuct0s9tvxep4fczt7swudgp\"><code><a href=\"api/core/ViewEncapsulation#ShadowDom\" class=\"code-anchor\">ViewEncapsulation.ShadowDom</a></code>：使用 Shadow DOM v1，封装样式。</li>\n</ul>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            encapsulation?: <a href=\"api/core/ViewEncapsulation\" class=\"code-anchor\">ViewEncapsulation</a>\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2q646bjteaagbfou55oa0jean\">如果没有提供，该值就会从 <code><a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a></code> 中获取它。默认的编译器选项是 <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mk6nhfvfjhupccujw9vv54gj\">如果策略是\n<code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>，并且组件没有\n<code><a href=\"api/core/Component#styles\">Component#styles</a></code>或\n<code><a href=\"api/core/Component#styleUrls\">Component#styleUrls</a></code>，则策略会自动切换为\n<code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>。</p>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"interpolation\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"interpolation\">interpolation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#interpolation\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L617-L621\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7uicie7jrlq46i3g11eallq9h\">改写默认的插值表达式起止分界符（<code>{{</code> 和 <code>}}</code>）。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            interpolation?: [\n    string,\n    string\n]\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"preserveWhitespaces\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"preservewhitespaces\">preserveWhitespaces<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#preservewhitespaces\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L622-L629\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"533a3usun0raw0bpqscw69j1a\">为 <code>true</code> 则保留，为 <code>false</code> 则从编译后的模板中移除可能多余的空白字符。空白字符就是指那些能在 JavaScript 正则表达式中匹配 <code>\\s</code> 的字符。默认为 <code>false</code>，除非通过编译器选项改写了它。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            preserveWhitespaces?: boolean\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"standalone\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"standalone\">standalone<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#standalone\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L630-L639\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gkvmhg7e0ryyjq7onrp00k9\">标记为 <code>standalone</code> 的 Angular 组件不需要在 NgModule 中声明。此类组件通过 imports 属性直接管理它们自己的模板依赖项（模板中使用的组件、指令和管道）。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            standalone?: boolean\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8m42bqxgsjcx2m3wxa5e55go9\">有关独立组件、指令和管道的更多信息，请参阅<a href=\"guide/standalone-components\">本指南</a>。</p>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"imports\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"imports\">imports<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#imports\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L640-L652\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b7zc5kxjt1zqwivxr8ejf1l0d\">imports 属性指定独立组件的模板依赖项——那些可以在其模板中使用的指令、组件和管道。独立组件可以导入其他独立组件、指令和管道以及现有的 NgModule。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            imports?: (<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt; | ReadonlyArray&lt;any&gt;)[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78od6c7m6g2f0vyu5mvelolf0\">此属性仅适用于独立组件 - 为 NgModule 中声明的组件指定它会生成编译错误。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8m42bqxgsjcx2m3wxa5e55go9\">有关独立组件、指令和管道的更多信息，请参阅<a href=\"guide/standalone-components\">本指南</a>。</p>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  \n  \n  <a id=\"schemas\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"schemas\">schemas<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#schemas\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L664-L675\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43xaev22evggixyi3rfkji6zv\">声明要在独立组件中允许的元素的模式集。既不是 Angular 组件也不是指令的元素和属性必须在模式中声明。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            schemas?: <a href=\"api/core/SchemaMetadata\" class=\"code-anchor\">SchemaMetadata</a>[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78od6c7m6g2f0vyu5mvelolf0\">此属性仅适用于独立组件 - 为 NgModule 中声明的组件指定它会生成编译错误。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8m42bqxgsjcx2m3wxa5e55go9\">有关独立组件、指令和管道的更多信息，请参阅<a href=\"guide/standalone-components\">本指南</a>。</p>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"setting-component-inputs\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7b1mwc7e0wapj3k35vdxfqx9r\">设置组件的输入属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#setting-component-inputs\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9l5f4nx5da9hegl7w9vqfbbeu\">下免得例子创建了一个带有两个数据绑定属性的组件，它是通过 <code>inputs</code> 值来指定的。</p>\n<code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-bank-account',\n  inputs: ['bankName', 'id: account-id'],\n  template: ` Bank Name: {{ bankName }} Account Id: {{ id }} `,\n})\nexport class BankAccountComponent {\n  bankName: string | null = null;\n  id: string | null = null;\n\n  // this property is not bound, and won't be automatically updated by Angular\n  normalizedBankName: string | null = null;\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-my-input',\n  template: ` &lt;app-bank-account bankName=\"RBC\" account-id=\"4747\"&gt; &lt;/app-bank-account&gt; `,\n})\nexport class MyInputComponent {}\n\n</code-example>\n<h3 id=\"setting-component-outputs\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3eqbcl6eq2dgdhnrm2aif1qwp\">设置组件的输出属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#setting-component-outputs\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8roo0gx3x6quq8rd4jm1wx0jv\">下面的例子展示了两个事件发生器，它们定时发出事件。一个每隔一秒发出一个输出事件，另一个则隔五秒。</p>\n<code-example path=\"core/ts/metadata/directives.ts\" region=\"component-output-interval\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'app-interval-dir', outputs: ['everySecond', 'fiveSecs: everyFiveSeconds']})\nexport class IntervalDirComponent {\n  everySecond = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;string&gt;();\n  fiveSecs = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;string&gt;();\n\n  constructor() {\n    setInterval(() =&gt; this.everySecond.emit('event'), 1000);\n    setInterval(() =&gt; this.fiveSecs.emit('event'), 5000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-my-output',\n  template: `\n    &lt;app-interval-dir (everySecond)=\"onEverySecond()\" (everyFiveSeconds)=\"onEveryFiveSeconds()\"&gt;\n    &lt;/app-interval-dir&gt;\n  `,\n})\nexport class MyOutputComponent {\n  onEverySecond() {\n    console.log('second');\n  }\n  onEveryFiveSeconds() {\n    console.log('five seconds');\n  }\n}\n\n</code-example>\n<h3 id=\"injecting-a-class-with-a-view-provider\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2sey95789g5rkdfof9jalu5fk\">使用视图提供者注入一个类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#injecting-a-class-with-a-view-provider\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"k9pezdp0g71q3o0igs8w6u79\">下面的例子示范了如何在组件元数据中使用视图提供者来把一个类注入到组件中：</p>\n<code-example language=\"ts\">\nclass Greeter {\n   greet(name:string) {\n     return 'Hello ' + name + '!';\n   }\n}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'needs-greeter'\n})\nclass NeedsGreeter {\n  greeter:Greeter;\n\n  constructor(greeter:Greeter) {\n    this.greeter = greeter;\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'greet',\n  viewProviders: [\n    Greeter\n  ],\n  template: `&lt;needs-greeter&gt;&lt;/needs-greeter&gt;`\n})\nclass HelloWorld {\n}\n\n</code-example>\n<h3 id=\"preserving-whitespace\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5wb2wbiipy46kdpgyqfhh3jd8\">保留空格<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#preserving-whitespace\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c7ntgvlde9u90r69acnlpmwx2\">删除空格可以大大减少 AOT 生成的代码大小并加快视图创建。从 Angular 6 开始，<code>preserveWhitespaces</code> 的默认值为 false（删除空格）。要更改应用程序中所有组件的默认设置，请设置 AOT 编译器的 <code>preserveWhitespaces</code> 选项。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9wkpwyjh7szu1yjkuauqb48t7\">默认情况下，AOT 编译器会删除空白字符，如下所示：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7kwonnn1q8xsgepq6q80ppbcy\">修剪模板开头和结尾的所有空格。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bav118uea0ycej4y27khq0y17\">删除只有空白的文本节点。例如，</li>\n</ul>\n<code-example language=\"html\">\n&lt;button&gt;Action 1&lt;/button&gt;  &lt;button&gt;Action 2&lt;/button&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a2zs0f7hcwog9i7ud4ukxwixs\">变成：</p>\n<code-example language=\"html\">\n&lt;button&gt;Action 1&lt;/button&gt;&lt;button&gt;Action 2&lt;/button&gt;\n</code-example>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bgdv35ayasbmx7uqg9zvmbvng\">用单个空格替换文本节点中的一系列空白字符。例如，<code>&lt;span&gt;\\n some text\\n&lt;/span&gt;</code> 变成了 <code>&lt;span&gt; some text &lt;/span&gt;</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f551htlvy43p2zlfulgjpujsu\">不改变 HTML 标签内的文本节点，例如 <code>&lt;pre&gt;</code> 或 <code>&lt;<a href=\"api/forms/DefaultValueAccessor\" class=\"code-anchor\">textarea</a>&gt;</code>，其中空白字符很重要。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70rlmxawpak15d4q9qk7e7ixq\">请注意，这些转换会影响 DOM 节点布局，尽管影响应该很小。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9kpp9td4v4qtvdftff1pqo59l\">你可以覆盖默认行为以在模板的某些片段中保留空白字符。例如，你可以使用 <code>ngPreserveWhitespaces</code> 属性排除整个 DOM 子树：</p>\n<code-example language=\"html\">\n&lt;div ngPreserveWhitespaces&gt;\n    whitespaces are preserved here\n    &lt;span&gt;    and here &lt;/span&gt;\n&lt;/div&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5sjlc7pwalo7v1k04phl6oozk\">你可以使用 <code>&amp;ngsp;</code>，它被 Angular 的模板编译器替换为空格字符：</p>\n<code-example language=\"html\">\n&lt;a&gt;Spaces&lt;/a&gt;&amp;ngsp;&lt;a&gt;between&lt;/a&gt;&amp;ngsp;&lt;a&gt;links.&lt;/a&gt;\n&lt;!-- compiled to be equivalent to:\n &lt;a&gt;Spaces&lt;/a&gt; &lt;a&gt;between&lt;/a&gt; &lt;a&gt;links.&lt;/a&gt;  --&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2t5f2129dxhr9w9vn2p451p0g\">请注意 <code>&amp;ngsp;</code> 的序列当 <code>preserveWhitespaces</code> 选项设置为 <code>false</code> 时，它​​们仍然折叠为只有一个空格字符。</p>\n<code-example language=\"html\">\n&lt;a&gt;before&lt;/a&gt;&amp;ngsp;&amp;ngsp;&amp;ngsp;&lt;a&gt;after&lt;/a&gt;\n&lt;!-- compiled to be equivalent to:\n &lt;a&gt;before&lt;/a&gt; &lt;a&gt;after&lt;/a&gt; --&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9rkl0yh3wyj0tmpbp56xipe1c\">要保留空白字符序列，请使用 <code>ngPreserveWhitespaces</code> 属性。</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationEvent\n - api/animations/query\n - api/animations/stagger\n - api/animations/trigger\n - api/common\n - api/common/AsyncPipe\n - api/common/CommonModule\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/HashLocationStrategy\n - api/common/I18nPluralPipe\n - api/common/I18nSelectPipe\n - api/common/JsonPipe\n - api/common/KeyValuePipe\n - api/common/Location\n - api/common/LowerCasePipe\n - api/common/NgComponentOutlet\n - api/common/NgIf\n - api/common/NgOptimizedImage\n - api/common/NgTemplateOutlet\n - api/common/PathLocationStrategy\n - api/common/PercentPipe\n - api/common/SlicePipe\n - api/common/TitleCasePipe\n - api/core\n - api/core/AfterContentChecked\n - api/core/AfterContentInit\n - api/core/AfterViewChecked\n - api/core/AfterViewInit\n - api/core/Attribute\n - api/core/ChangeDetectorRef\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/Directive\n - api/core/DoCheck\n - api/core/EventEmitter\n - api/core/Host\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/Input\n - api/core/IterableDiffers\n - api/core/KeyValueDiffers\n - api/core/NgZone\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/QueryList\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/ViewEncapsulation\n - api/core/afterNextRender\n - api/core/afterRender\n - api/core/contentChild\n - api/core/contentChildren\n - api/core/createComponent\n - api/core/forwardRef\n - api/core/inject\n - api/core/makeEnvironmentProviders\n - api/core/reflectComponentType\n - api/core/testing/TestBed\n - api/core/viewChild\n - api/core/viewChildren\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/NgModelGroup\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/platform-browser/bootstrapApplication\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/CanDeactivateFn\n - api/router/Resolve\n - api/router/ResolveFn\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/UrlCreationOptions\n - api/router/UrlSegment\n - api/router/UrlTree\n - api/router/testing/RouterTestingHarness\n - api/upgrade/UpgradeAdapter\n - api/upgrade/static/downgradeComponent\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - errors/NG0203\n - errors/NG0300\n - errors/NG0500\n - errors/NG0503\n - errors/NG0504\n - errors/NG0506\n - errors/NG05104\n - errors/NG0602\n - errors/NG0912\n - errors/NG1001\n - errors/NG2009\n - errors/NG3003\n - errors/NG6100\n - extended-diagnostics/NG8102\n - extended-diagnostics/NG8103\n - extended-diagnostics/NG8105\n - extended-diagnostics/NG8107\n - extended-diagnostics/NG8109\n - guide/accessibility\n - guide/add-an-animation\n - guide/ajs-quick-reference\n - guide/angular-compiler-options\n - guide/animations\n - guide/animations-attach-to-html-template\n - guide/aot-compiler\n - guide/aot-metadata-errors\n - guide/architecture\n - guide/architecture-components\n - guide/architecture-modules\n - guide/architecture-services\n - guide/binding-overview\n - guide/build\n - guide/built-in-directives\n - guide/change-detection-skipping-subtrees\n - guide/change-detection-zone-pollution\n - guide/cheatsheet\n - guide/class-binding\n - guide/complex-animation-sequences\n - guide/component-interaction\n - guide/component-overview\n - guide/component-styles\n - guide/content-projection\n - guide/defer\n - guide/dependency-injection\n - guide/dependency-injection-context\n - guide/dependency-injection-in-action\n - guide/dependency-injection-navtree\n - guide/deprecations\n - guide/directive-composition-api\n - guide/docs-style-guide\n - guide/dynamic-component-loader\n - guide/dynamic-form\n - guide/elements\n - guide/forms\n - guide/forms-overview\n - guide/glossary\n - guide/hierarchical-dependency-injection\n - guide/hydration\n - guide/i18n-example\n - guide/inputs-outputs\n - guide/lazy-loading-ngmodules\n - guide/lifecycle-hooks\n - guide/lightweight-injection-tokens\n - guide/model-inputs\n - guide/ngmodule-faq\n - guide/npm-packages\n - guide/observables-in-angular\n - guide/pipe-template\n - guide/pipes\n - guide/pipes-custom-data-trans\n - guide/pipes-transform-data\n - guide/providers\n - guide/reactive-forms\n - guide/reusable-animations\n - guide/route-animations\n - guide/router\n - guide/router-tutorial-toh\n - guide/rxjs-interop\n - guide/signal-inputs\n - guide/signal-queries\n - guide/signals\n - guide/ssr\n - guide/standalone-components\n - guide/standalone-migration\n - guide/structural-directives\n - guide/styleguide\n - guide/svg-in-templates\n - guide/template-typecheck\n - guide/testing-attribute-directives\n - guide/testing-components-basics\n - guide/testing-components-scenarios\n - guide/testing-utility-apis\n - guide/transition-and-triggers\n - guide/two-way-binding\n - guide/understanding-template-expr-overview\n - guide/update-to-version-17\n - guide/upgrade\n - guide/upgrade-setup\n - guide/user-input\n - guide/view-encapsulation\n - guide/what-is-angular\n - guide/zone\n - start\n - start/start-data\n - start/start-forms\n - start/start-routing\n - tutorial/first-app/first-app-lesson-01\n - tutorial/first-app/first-app-lesson-02\n - tutorial/first-app/first-app-lesson-03\n - tutorial/first-app/first-app-lesson-04\n - tutorial/first-app/first-app-lesson-05\n - tutorial/first-app/first-app-lesson-06\n - tutorial/first-app/first-app-lesson-07\n - tutorial/first-app/first-app-lesson-09\n - tutorial/first-app/first-app-lesson-10\n - tutorial/first-app/first-app-lesson-11\n - tutorial/tour-of-heroes/toh-pt0\n - tutorial/tour-of-heroes/toh-pt1\n - tutorial/tour-of-heroes/toh-pt2\n - tutorial/tour-of-heroes/toh-pt3\n - tutorial/tour-of-heroes/toh-pt4\n - tutorial/tour-of-heroes/toh-pt5\n - tutorial/tour-of-heroes/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - /guide/animations\n - api/animations/state\n - api/animations/transition\n - api/animations/trigger\n - api/core\n - api/core/ChangeDetectionStrategy\n - api/core/CompilerOptions\n - api/core/Component#animations\n - api/core/Component#changeDetection\n - api/core/Component#changedetection\n - api/core/Component#component\n - api/core/Component#description\n - api/core/Component#encapsulation\n - api/core/Component#imports\n - api/core/Component#injecting-a-class-with-a-view-provider\n - api/core/Component#interpolation\n - api/core/Component#moduleId\n - api/core/Component#moduleid\n - api/core/Component#options\n - api/core/Component#preserveWhitespaces\n - api/core/Component#preservewhitespaces\n - api/core/Component#preserving-whitespace\n - api/core/Component#schemas\n - api/core/Component#setting-component-inputs\n - api/core/Component#setting-component-outputs\n - api/core/Component#standalone\n - api/core/Component#styleUrl\n - api/core/Component#styleUrls\n - api/core/Component#styles\n - api/core/Component#styleurl\n - api/core/Component#styleurls\n - api/core/Component#template\n - api/core/Component#templateUrl\n - api/core/Component#templateurl\n - api/core/Component#usage-notes\n - api/core/Component#viewProviders\n - api/core/Component#viewproviders\n - api/core/Component#继承自-directive-装饰器\n - api/core/Directive\n - api/core/Directive#exportAs\n - api/core/Directive#host\n - api/core/Directive#hostDirectives\n - api/core/Directive#inputs\n - api/core/Directive#jit\n - api/core/Directive#outputs\n - api/core/Directive#providers\n - api/core/Directive#queries\n - api/core/Directive#selector\n - api/core/Directive#standalone\n - api/core/EventEmitter\n - api/core/NgModule\n - api/core/Provider\n - api/core/SchemaMetadata\n - api/core/Type\n - api/core/ViewEncapsulation\n - api/core/ViewEncapsulation#Emulated\n - api/core/ViewEncapsulation#None\n - api/core/ViewEncapsulation#ShadowDom\n - api/forms/DefaultValueAccessor\n - guide/glossary#di-token\n - guide/glossary#injector\n - guide/glossary#provider\n - guide/lifecycle-hooks\n - guide/standalone-components\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L534-L543\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L544-L550\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L551-L560\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L561-L567\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L568-L574\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L575-L580\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L581-L585\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L586-L591\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L592-L599\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L600-L616\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L617-L621\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L622-L629\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L630-L639\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L640-L652\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L664-L675\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/metadata/directives.ts#L685-L686\n-->"}