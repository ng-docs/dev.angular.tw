{"id":"api/core/AfterRenderPhase","title":"AfterRenderPhase","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/AfterRenderPhase\", \"name\": \"AfterRenderPhase\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/render3/after_render_hooks.ts#L18-L80\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"afterrenderphase\">AfterRenderPhase<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/AfterRenderPhase#afterrenderphase\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label enum\">enum</label>\n    <label class=\"api-status-label dev-preview\" title=\"此 API 仅供开发者预览\">\n      <a href=\"guide/releases#developer-preview\">开发者预览</a>\n    </label>\n    \n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"715i3dvnekaltnanzo87fy8cc\">在哪个阶段运行\n<code><a href=\"api/core/afterRender\" class=\"code-anchor\">afterRender</a></code>或\n<code><a href=\"api/core/afterNextRender\" class=\"code-anchor\">afterNextRender</a></code>回调。</p>\n\n    <p><a href=\"api/core/AfterRenderPhase#description\">查看更多...</a></p>\n  </section>\n<section class=\"enum-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nenum <a href=\"api/core/AfterRenderPhase\" class=\"code-anchor\">AfterRenderPhase</a> {\n  <a class=\"code-anchor\" href=\"api/core/AfterRenderPhase#EarlyRead\"><span class=\"member-name\">EarlyRead</span></a>\n  <a class=\"code-anchor\" href=\"api/core/AfterRenderPhase#Write\"><span class=\"member-name\">Write</span></a>\n  <a class=\"code-anchor\" href=\"api/core/AfterRenderPhase#MixedReadWrite\"><span class=\"member-name\">MixedReadWrite</span></a>\n  <a class=\"code-anchor\" href=\"api/core/AfterRenderPhase#Read\"><span class=\"member-name\">Read</span></a>\n}\n</code-example>\n</section>\n\n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/AfterRenderPhase#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tt7mi7ox0o8io02fqdncaml8\">在同一阶段的回调按注册顺序运行。每次渲染后，阶段按以下顺序运行：</p>\n<ol>\n<li><code><a href=\"api/core/AfterRenderPhase#EarlyRead\" class=\"code-anchor\">AfterRenderPhase.EarlyRead</a></code></li>\n<li><code><a href=\"api/core/AfterRenderPhase#Write\" class=\"code-anchor\">AfterRenderPhase.Write</a></code></li>\n<li><code><a href=\"api/core/AfterRenderPhase#MixedReadWrite\" class=\"code-anchor\">AfterRenderPhase.MixedReadWrite</a></code></li>\n<li><code><a href=\"api/core/AfterRenderPhase#Read\" class=\"code-anchor\">AfterRenderPhase.Read</a></code></li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"drwopg6y7pn48ozempknbeqpd\">Angular 无法验证或强制执行阶段的正确使用，而是依赖于每个开发者遵循为每个值记录的指南并谨慎选择适当的值，必要时重构其代码。通过这样做，Angular 更能够最小化与手动 DOM 访问相关的性能下降，确保最佳的用户体验。</p>\n</section>\n\n<section class=\"members\">\n  <a id=\"properties\"></a>\n  <h2 id=\"members\">成员列表<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/AfterRenderPhase#members\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>成员</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"member\">\n        <td>\n          <a id=\"EarlyRead\"></a>\n          <code class=\"\"><span class=\"member-name\">EarlyRead</span></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9oie5f0ihp5bik3fg8v9er58w\">使用\n<code><a href=\"api/core/AfterRenderPhase#EarlyRead\" class=\"code-anchor\">AfterRenderPhase.EarlyRead</a></code>用于只需要在后续\n<code><a href=\"api/core/AfterRenderPhase#Write\" class=\"code-anchor\">AfterRenderPhase.Write</a></code>回调之前\n<strong>读取</strong>DOM的回调，例如执行浏览器不原生支持的自定义布局。\n<strong>永远</strong>不要在可以写入DOM或\n<code><a href=\"api/core/AfterRenderPhase#Read\" class=\"code-anchor\">AfterRenderPhase.Read</a></code>足够时使用此阶段。</p>\n          <div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vq0r86tv6uzw7ag0nbxnkvy\">使用这个值可能会降低性能。 相反，尽量在可能的情况下使用内置的浏览器功能。</p>\n</div>\n\n        </td>\n      </tr>\n      <tr class=\"member\">\n        <td>\n          <a id=\"Write\"></a>\n          <code class=\"\"><span class=\"member-name\">Write</span></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66sg25vggxh3q7odgcwoj202c\">使用\n<code><a href=\"api/core/AfterRenderPhase#Write\" class=\"code-anchor\">AfterRenderPhase.Write</a></code>用于只\n<strong>写入</strong>DOM的回调。永远不要 在可以从DOM读取的回调中使用此阶段。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"member\">\n        <td>\n          <a id=\"MixedReadWrite\"></a>\n          <code class=\"\"><span class=\"member-name\">MixedReadWrite</span></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6g2spnnj9iybu5v3pezo1b6yy\">使用\n<code><a href=\"api/core/AfterRenderPhase#MixedReadWrite\" class=\"code-anchor\">AfterRenderPhase.MixedReadWrite</a></code>用于读取或写入DOM的回调，尚未重构为使用不同阶段。永远不要 使用此阶段，而应该使用不同的阶段。</p>\n          <div class=\"alert is-critical\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cggzbrw7phjrlowqj9ncj3wj6\">使用这个值可能会\n<strong>显著</strong>降低性能。 相反，最好重构为使用更具体阶段的多个回调。</p>\n</div>\n\n        </td>\n      </tr>\n      <tr class=\"member\">\n        <td>\n          <a id=\"Read\"></a>\n          <code class=\"\"><span class=\"member-name\">Read</span></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eo0mgj88e925x9tmc0wiecxku\">使用\n<code><a href=\"api/core/AfterRenderPhase#Read\" class=\"code-anchor\">AfterRenderPhase.Read</a></code>用于只\n<strong>读取</strong>DOM的回调。永远不要 使用此阶段，而应该写入DOM。</p>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/AfterRenderOptions\n - api/core/afterNextRender\n - api/core/afterRender\n - guide/lifecycle-hooks\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/AfterRenderPhase#EarlyRead\n - api/core/AfterRenderPhase#MixedReadWrite\n - api/core/AfterRenderPhase#Read\n - api/core/AfterRenderPhase#Write\n - api/core/AfterRenderPhase#afterrenderphase\n - api/core/AfterRenderPhase#description\n - api/core/AfterRenderPhase#members\n - api/core/afterNextRender\n - api/core/afterRender\n - guide/releases#developer-preview\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/render3/after_render_hooks.ts#L18-L80\n-->"}