{"id":"api/core/ApplicationRef","title":"ApplicationRef","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/ApplicationRef\", \"name\": \"ApplicationRef\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L174-L673\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"applicationref\">ApplicationRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#applicationref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"此类不可派生。\">\n      <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/docs/PUBLIC_API.md#final-classes\">最终类</a>\n    </label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7rscrgt3ut9qra3k2gfu9sjkh\">对页面上运行的 Angular 应用程序的引用。</p>\n\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#destroyed\"><span class=\"member-name\">destroyed</span></a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#componentTypes\"><span class=\"member-name\">componentTypes</span>: Type&lt;any&gt;[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#components\"><span class=\"member-name\">components</span>: ComponentRef&lt;any&gt;[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#isStable\"><span class=\"member-name\">isStable</span>: Observable&lt;boolean&gt;</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#injector\"><span class=\"member-name\">injector</span>: EnvironmentInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#viewCount\"><span class=\"member-name\">viewCount</span></a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(componentOrFactory: ComponentFactory&lt;C&gt; | Type&lt;C&gt;, rootSelectorOrNode?: any): ComponentRef&lt;C&gt;</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(component: Type&lt;C&gt;, rootSelectorOrNode?: any): ComponentRef&lt;C&gt;</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(componentFactory: ComponentFactory&lt;C&gt;, rootSelectorOrNode?: any): ComponentRef&lt;C&gt;</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#tick\"><span class=\"member-name\">tick</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#attachView\"><span class=\"member-name\">attachView</span>(viewRef: ViewRef): void</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#detachView\"><span class=\"member-name\">detachView</span>(viewRef: ViewRef): void</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#onDestroy\"><span class=\"member-name\">onDestroy</span>(callback: () =&gt; void): VoidFunction</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#destroy\"><span class=\"member-name\">destroy</span>(): void</a>\n}\n</code-example>\n\n</section>\n\n<h2 id=\"提供于\">提供于<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#提供于\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n  <li>\n    <code>'root'</code>\n  </li>\n</ul>\n  \n  \n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"destroyed\"></a>\n          <code class=\"\"><span class=\"member-name\">destroyed</span></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"er87jn3mvt6l3qqx5joer7yzj\">表明此实例是否已销毁。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"componentTypes\"></a>\n          <code class=\"\"><span class=\"member-name\">componentTypes</span>: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;[]</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzu353rzumqqijfzitap3lhb3\">获取注册到该应用程序的组件类型的列表。在创建组件之前，会填充此列表。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"components\"></a>\n          <code class=\"\"><span class=\"member-name\">components</span>: <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;any&gt;[]</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epqxxz9dwki2ez4pru63x3rcq\">获取已注册到该应用中的组件的列表。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"isStable\"></a>\n          <code class=\"\"><span class=\"member-name\">isStable</span>: Observable&lt;boolean&gt;</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cku67efooxu4mky6q509os8us\">返回一个 Observable，指示应用程序何时变得稳定或不稳定。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"injector\"></a>\n          <code class=\"\"><span class=\"member-name\">injector</span>: <a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1u6kg6pc2zoqxzp7zerat7rlw\">用于创建此应用程序的 <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"viewCount\"></a>\n          <code class=\"\"><span class=\"member-name\">viewCount</span></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6pc62n9jit9xxfa60cbkvvfid\">返回已附加视图的数量。</p>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"bootstrap\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"bootstrap\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"am2qks12w4fze5fyt7767ekj3\">bootstrap()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L398-L482\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6nstya2wt7qd5bh7vdcby822w\">将组件引导到其选择器标识的元素上，或者（可选）引导到指定的元素。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(component: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;C&gt;, rootSelectorOrNode?: any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;C&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gmda0y6ibkrofexsxd13se6\"><a id=\"\"></a>\n        <code>component</code></td>\n      <td class=\"param-type\"><code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;C&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amohcwdoqlh44nzyacvkipzkd\"><a id=\"\"></a>\n        <code>rootSelectorOrNode</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef&lt;C&gt;</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"><span class=\"member-name\">bootstrap</span>&lt;C&gt;(componentFactory: <a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a>&lt;C&gt;, rootSelectorOrNode?: any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;C&gt;</code-example>\n  <div class=\"deprecated\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62yzp0p7cvallx49zrl5jvrtb\">将组件工厂作为 <code>Application.bootstrap</code> 函数参数传递已弃用。改为传递组件类型。</p>\n\n  </div>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ca4jwv4ps8m92sy9qlfc49lxt\"><a id=\"\"></a>\n        <code>componentFactory</code></td>\n      <td class=\"param-type\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory&lt;C&gt;</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amohcwdoqlh44nzyacvkipzkd\"><a id=\"\"></a>\n        <code>rootSelectorOrNode</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef&lt;C&gt;</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"bootstrap-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"bootstrap-process\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zflwojio2e3gumkrspb9c1hj\">引导过程<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-process\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fyjyrnkzpeqsgdc7ipfhmj8a\">引导组件时，Angular 会将其挂载到目标 DOM 元素上并启动自动变更检测。可以用 <code>rootSelectorOrNode</code> 参数提供目标 DOM 元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vlj1cxurzhinahr414v3un4d\">（可选）可以将组件安装到与 componentType 的选择器不匹配的 DOM 元素上。</p>\n<h5 id=\"example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\">范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#example\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69dhtuvekmb8p0o2pzmjpabpi\">一般来说，我们在 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>bootstrap</code> 数组中定义要引导的组件，但它需要我们在编写应用程序代码时了解组件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8lhobdpxvlk65n85pudzk46zf\">想象这样一种情况，我们必须等待 API 调用来决定要引导的组件。我们可以用 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的 <code>ngDoBootstrap</code> 钩子并调用此方法来动态引导组件。</p>\n<code-example path=\"core/ts/platform/platform.ts\" region=\"componentSelector\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  this.fetchDataFromApi().then((componentName: string) =&gt; {\n    if (componentName === 'ComponentOne') {\n      appRef.bootstrap(ComponentOne);\n    } else {\n      appRef.bootstrap(ComponentTwo);\n    }\n  });\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"940ufgswgrlwl3k1so9g08lj1\">可选地，可以将组件安装到与引导组件的选择器不匹配的 DOM 元素上。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1n4d03scn373rb4niw72jsqlh\">在下面的示例中，我们提供了一个 CSS 选择器来匹配目标元素。</p>\n<code-example path=\"core/ts/platform/platform.ts\" region=\"cssSelector\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.bootstrap(ComponentThree, '#root-element');\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"wrvhtlm749grthizq5i4o00k\">在此示例中，我们提供对 DOM 节点的引用。</p>\n<code-example path=\"core/ts/platform/platform.ts\" region=\"domNode\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  const element = document.querySelector('#root-element');\n  appRef.bootstrap(ComponentFour, element);\n}\n\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"tick\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"tick\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4fwud5uq8h00xv3lomx2dkoea\">tick()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#tick\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L483-L521\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezkzu863laro99f5s2upacbgr\">调用此方法可以显式处理变更检测及其副作用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\"><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a></span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xwxfk0ang1yj3kvmdmbm3dxm\">在开发模式下，<code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> 还会执行第二个变更检测周期，以确保没有检测到其他更改。如果在第二个周期内获取了其他更改，则应用程序中的绑定就会产生副作用，这些副作用无法通过一次变更检测过程解决。在这种情况下，Angular 就会引发错误，因为 Angular 应用程序只能进行一次变更检测遍历，在此过程中必须完成所有变更检测。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"attachView\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"attachview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8j2hbdxsq6lobbnd4bib2dg6q\">attachView()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#attachview\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L559-L571\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kuchdtlabzyiroo9050p14na\">附加视图，以便对其进行脏检查。视图销毁后将自动分离。如果视图已附加到 ViewContainer，则会抛出此错误。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">attachView</span>(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9ha0samqjmug2n1pgftuqjy5\"><a id=\"\"></a>\n        <code>viewRef</code></td>\n      <td class=\"param-type\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"detachView\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"detachview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8b3orz9iorwjzk4abxmiyp0k0\">detachView()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#detachview\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L572-L581\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2v8gt4jpuil5zsbtqsyaybvy9\">再次从脏检查中分离视图。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">detachView</span>(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9ha0samqjmug2n1pgftuqjy5\"><a id=\"\"></a>\n        <code>viewRef</code></td>\n      <td class=\"param-type\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"onDestroy\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"ondestroy\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ceu68dkkxewxmgzn8hb15vzwj\">onDestroy()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#ondestroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L620-L631\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jx9oqejiw523dv5xqq3du3i0\">注册一个侦听器，在实例被销毁时调用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">onDestroy</span>(callback: () =&gt; void): VoidFunction</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1u07soqllrwux3on5v3eoiwl\"><a id=\"\"></a>\n        <code>callback</code></td>\n      <td class=\"param-type\"><code>() =&gt; void</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a5f9l848humdowavr5hls56j1\">添加为侦听器的回调函数。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84mg2rl5jdpiubihv8v0ctvi\">注销侦听器的函数。</p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"destroy\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"destroy\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ppst4xxtnqp9kcd43i8pnuyf\">destroy()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#destroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L632-L657\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e7r271hv1jnc0o4bb8cmh453v\">销毁此 <code><a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a></code> 表示的 Angular 应用程序。调用此函数将破坏关联的环境注入器以及所有带有视图的引导组件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">destroy</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"is-stable-examples\"></a>\n<h3 id=\"isstable-examples-and-caveats\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mr6arcpit9rhxirou8h2sd60\">isStable 示例和注意事项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#isstable-examples-and-caveats\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5i9g6p0aghxjxhmx1ktekx1cm\">请注意关于 <code>isStable</code> 两个要点，在下面的示例中进行了演示：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"12zn1603stmnfe0snu4zu1qvw\">如果在应用程序启动时启动任何类型的循环异步任务，应用程序将永远不会稳定（例如，对于轮询过程，使用 <code>setInterval</code> 、 <code>setTimeout</code> 或使用 RxJS 操作符如 <code>interval</code> ）；</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"driz4u2t6lajh4hifo86dc6oz\"><code>isStable</code> Observable 在 Angular 区域之外运行。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6knyfn1hvfc7ev0kc1fzhoknc\">假设你开始一个循环任务（这里使用 RxJS <code>interval</code> 递增一个计数器），同时订阅 <code>isStable</code>。</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n     filter(stable =&gt; stable)\n  ).subscribe(() =&gt; console.log('App is stable now');\n  interval(1000).subscribe(counter =&gt; console.log(counter));\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dg5elb6zw8ketdozpzndpfa0j\">在此示例中，<code>isStable</code> 永远不会发出 <code>true</code>，并且永远不会记录“A​​pp 现在稳定”的跟踪。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqnaeklnc8qrr61tibioz9e3s\">如果你想在应用程序稳定时执行某些操作，则必须等待应用程序稳定后再开始轮询过程。</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    tap(stable =&gt; console.log('App is stable now')),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; console.log(counter));\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ul4y6ln9z14jv492zs9zbhng\">在此示例中，将记录跟踪“应用程序现在稳定”，然后计数器开始每秒递增。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"act6jk1k4q1gjqbxf6833y2an\">另请注意，此 Observable 在 Angular 区域之外运行，这意味着订阅此 Observable 中的代码不会触发变更检测。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bftaotj0eghq1imx2wm6tvvuq\">假设你不记录计数器值，而是更新组件的一个字段并将其显示在其模板中。</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; this.value = counter);\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"18lwzw8e4hbaj2xqh69ll0y3t\">由于 <code>isStable</code> Observable 在 zone 外运行，<code>value</code> 字段会正确更新，但模板不会刷新！</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30qznbi0b89175ojk6x4gkpq\">你必须手动触发变更检测才能更新模板。</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, cd: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; {\n    this.value = counter;\n    cd.detectChanges();\n  });\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dut2k1jyvkxnxfftnpi8w2y5r\">或者让订阅回调在区域内运行。</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, zone: <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a>) {\n  appRef.isStable.pipe(\n    first(stable =&gt; stable),\n    switchMap(() =&gt; interval(1000))\n  ).subscribe(counter =&gt; zone.run(() =&gt; this.value = counter));\n}\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationModule\n - api/core/ChangeDetectorRef\n - api/core/DoBootstrap\n - api/core/createComponent\n - api/platform-browser\n - api/platform-browser/bootstrapApplication\n - api/platform-browser/createApplication\n - api/platform-server/renderApplication\n - errors/NG0506\n - guide/bootstrapping\n - guide/component-interaction\n - guide/deprecations\n - guide/elements\n - guide/service-worker-communications\n - guide/ssr\n - guide/zone\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/ApplicationRef#applicationref\n - api/core/ApplicationRef#attachView\n - api/core/ApplicationRef#attachview\n - api/core/ApplicationRef#bootstrap\n - api/core/ApplicationRef#bootstrap-process\n - api/core/ApplicationRef#bootstrap-usage-notes\n - api/core/ApplicationRef#componentTypes\n - api/core/ApplicationRef#components\n - api/core/ApplicationRef#destroy\n - api/core/ApplicationRef#destroyed\n - api/core/ApplicationRef#detachView\n - api/core/ApplicationRef#detachview\n - api/core/ApplicationRef#example\n - api/core/ApplicationRef#injector\n - api/core/ApplicationRef#instance-methods\n - api/core/ApplicationRef#instance-properties\n - api/core/ApplicationRef#isStable\n - api/core/ApplicationRef#isstable-examples-and-caveats\n - api/core/ApplicationRef#onDestroy\n - api/core/ApplicationRef#ondestroy\n - api/core/ApplicationRef#tick\n - api/core/ApplicationRef#usage-notes\n - api/core/ApplicationRef#viewCount\n - api/core/ApplicationRef#提供于\n - api/core/ChangeDetectorRef\n - api/core/ComponentFactory\n - api/core/ComponentRef\n - api/core/EnvironmentInjector\n - api/core/NgModule\n - api/core/NgZone\n - api/core/Type\n - api/core/ViewRef\n - api/core/testing/tick\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/docs/PUBLIC_API.md#final-classes\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L174-L673\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L398-L482\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L483-L521\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L559-L571\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L572-L581\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L620-L631\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/application/application_ref.ts#L632-L657\n-->"}