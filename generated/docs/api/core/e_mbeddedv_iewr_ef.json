{"id":"api/core/EmbeddedViewRef","title":"EmbeddedViewRef","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/EmbeddedViewRef\", \"name\": \"EmbeddedViewRef\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/linker/view_ref.ts#L38-L102\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"embeddedviewref\">EmbeddedViewRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#embeddedviewref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezya5m49wcwkv7tlv9neqwd9j\">表示檢視容器中的 Angular\n<a href=\"guide/glossary#view\">檢視</a>。<a href=\"guide/glossary#view-tree\">嵌入檢視</a>可以從在範本中定義它的宿主元件之外的元件中引用，也可以由\n<code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> 進行獨立定義。</p>\n\n    <p><a href=\"api/core/EmbeddedViewRef#description\">檢視更多...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nabstract class <a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a>&lt;C&gt; extends <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/EmbeddedViewRef#context\">abstract <span class=\"member-name\">context</span>: C</a>\n  <a class=\"code-anchor\" href=\"api/core/EmbeddedViewRef#rootNodes\">abstract <span class=\"member-name\">rootNodes</span>: any[]</a>\n\n// 繼承自 <a class=\"code-anchor\" href=\"api/core/ViewRef\">core/ViewRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewRef#destroyed\">abstract <span class=\"member-name\">destroyed</span>: boolean</a><br><a class=\"code-anchor\" href=\"api/core/ViewRef#destroy\">abstract <span class=\"member-name\">destroy</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ViewRef#onDestroy\">abstract <span class=\"member-name\">onDestroy</span>(callback: Function): void</a>\n\n// 繼承自 <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef\">core/ChangeDetectorRef</a><br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#markForCheck\">abstract <span class=\"member-name\">markForCheck</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detach\">abstract <span class=\"member-name\">detach</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detectChanges\">abstract <span class=\"member-name\">detectChanges</span>(): void</a><br><a class=\"code-anchor deprecated-api-item\" href=\"api/core/ChangeDetectorRef#checkNoChanges\">abstract <span class=\"member-name\">checkNoChanges</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#reattach\">abstract <span class=\"member-name\">reattach</span>(): void</a>\n}\n</code-example>\n\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><a href=\"api/core/ViewContainerRef\"><code>ViewContainerRef</code></a></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7v00i23rnsm37sr46mkylg8\">檢視中元素的屬性可以更改，但是檢視中元素的結構（數量和順序）不能更改。透過在檢視容器中插入，移動或刪除巢狀檢視來更改元素的結構。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ziqx433gkibdeqvifmaz19le\">更多訊息請參閱 \n<a href=\"api/core/EmbeddedViewRef#usage-notes\">用法說明...</a></p>\n</section>\n  \n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>屬性</th>\n        <th>說明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"context\"></a>\n          <code class=\"\">abstract <span class=\"member-name\">context</span>: C</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ctbnmbwifgz5cetooa7jww4mb\">該檢視的上下文，繼承自錨點元素。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"rootNodes\"></a>\n          <code class=\"\">abstract <span class=\"member-name\">rootNodes</span>: any[]</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只讀</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6wno0mn3aj65tgpf8stujurm4\">此嵌入式檢視的根節點。</p>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bd3rrjay624yykud2l1dwj96h\">以下範本分為兩個單獨的 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> 實例，一個外部實例和一個內部實例。</p>\n<code-example>\nCount: {{items.length}}\n&lt;ul&gt;\n  &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let  item of items\"&gt;{{item}}&lt;/li&gt;\n&lt;/ul&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"boz2fdgkj58kcxtss1ssqybie\">這是外部 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> ：</p>\n<code-example>\nCount: {{items.length}}\n&lt;ul&gt;\n  &lt;ng-template <a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a> let-item [<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngForOf</a>]=\"items\"&gt;&lt;/ng-template&gt;\n&lt;/ul&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9orpq8dmfec89e4kuagp0nnr4\">這是內部的 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> ：</p>\n<code-example>\n  &lt;li&gt;{{item}}&lt;/li&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ddzzbnymtgvwrzpnwe57hg65\">外部和內部 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> 實例按如下方式組裝到檢視中：</p>\n<code-example>\n&lt;!-- <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: outer-0 --&gt;\nCount: 2\n&lt;ul&gt;\n  &lt;ng-template view-container-ref&gt;&lt;/ng-template&gt;\n  &lt;!-- <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-1 --&gt;&lt;li&gt;first&lt;/li&gt;&lt;!-- /<a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-1 --&gt;\n  &lt;!-- <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-2 --&gt;&lt;li&gt;second&lt;/li&gt;&lt;!-- /<a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-2 --&gt;\n&lt;/ul&gt;\n&lt;!-- /<a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: outer-0 --&gt;\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/ChangeDetectorRef\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/ViewRef\n - guide/structural-directives\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgFor\n - api/common/NgForOf\n - api/core\n - api/core/ChangeDetectorRef\n - api/core/ChangeDetectorRef#checkNoChanges\n - api/core/ChangeDetectorRef#detach\n - api/core/ChangeDetectorRef#detectChanges\n - api/core/ChangeDetectorRef#markForCheck\n - api/core/ChangeDetectorRef#reattach\n - api/core/EmbeddedViewRef#context\n - api/core/EmbeddedViewRef#description\n - api/core/EmbeddedViewRef#embeddedviewref\n - api/core/EmbeddedViewRef#instance-properties\n - api/core/EmbeddedViewRef#rootNodes\n - api/core/EmbeddedViewRef#see-also\n - api/core/EmbeddedViewRef#usage-notes\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/ViewRef\n - api/core/ViewRef#destroy\n - api/core/ViewRef#destroyed\n - api/core/ViewRef#onDestroy\n - guide/glossary#view\n - guide/glossary#view-hierarchy\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/src/linker/view_ref.ts#L38-L102\n-->"}