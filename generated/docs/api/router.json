{"id":"api/router","title":"@angular/router","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/router\", \"name\": \"@angular/router\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/PACKAGE.md\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n<header class=\"api-header\">\n  <h1 id=\"angularrouter\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7uz5ml7kmwo70llbctf73qr0\">@angular/router<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#angularrouter\"><i class=\"material-icons\">link</i></a></h1>\n  <label class=\"api-type-label package\">package</label>\n  \n  \n  \n</header>\n\n  \n\n  <div class=\"api-body\"><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9qks7z7q9m2b1i5erf3wrlgt\">实现了Angular路由器服务，该服务允许用户在执行应用程序任务时从一个视图导航到另一个视图。</p>\n\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b8oj2qdpswjtpaziqoukas9em\">定义了将URL路径映射到组件的\n<code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>对象，以及您用于在模板中放置路由视图的\n<code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>指令，以及一个完整的用于配置、查询和控制路由器状态的API。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2id3i4hkl4uk84x6yaqqu7h19\">导入\n<code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code>以在应用中使用路由器服务。更多使用信息，请参阅\n<a href=\"guide/router\">路由和导航</a>指南。</p>\n\n\n  \n\n  \n<h2 id=\"entry-points\">入口点<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#entry-points\"><i class=\"material-icons\">link</i></a></h2>\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"主要\">主要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#主要\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"primary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fkfm2umomg24u7zlbw0i7dqq\">主要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#primary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router#primary-entry-point-exports\">@angular/router</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9qks7z7q9m2b1i5erf3wrlgt\">实现了Angular路由器服务，该服务允许用户在执行应用程序任务时从一个视图导航到另一个视图。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"次要\">次要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#次要\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"secondary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qmb2o62wilek3owziq44q5ie\">次要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#secondary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/testing\">@angular/router/testing</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ertxi7xq16pwya5507hpwqvu\">为 Angular \n<code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 子系统提供测试模块。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/upgrade\">@angular/router/upgrade</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4csdscj6hjw04rkmfb1znizlq\">为从 Angular JS 升级到 Angular 的路由应用提供支持。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n\n\n<h2 id=\"primary-entry-point-exports\">主要入口点的导出<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#primary-entry-point-exports\"><i class=\"material-icons\">link</i></a></h2>\n\n  \n  \n  \n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#ngmodules\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterModule\">RouterModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dnnxi7syo4hkc844nwygppd7\">添加指令和提供者，以便在应用程序中定义的视图之间进行应用内导航。使用 Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务以声明方式指定应用程序状态并管理状态转换。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类\">类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#类\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"classes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtpuzegyjmcbul5yz5jn1ham3\">类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#classes\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivatedRoute\">ActivatedRoute</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jyuh86n12wkldpnxpqeb28hj\">允许访问与某出口中加载的组件关联路由信息。用于遍历 <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> 树并从节点提取信息。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivatedRouteSnapshot\">ActivatedRouteSnapshot</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cb8q21f694lmrc8q5lqri8jq8\">包含与当前组件相关的路由的当前瞬间信息。<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 也可用于遍历路由器的状态树。<code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code> 也能用于遍历路由器状态树。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivationEnd\">ActivationEnd</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61nmj6fqtpicvhy6jssqelo9t\">在路由的“解析”阶段的激活部分结束时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivationStart\">ActivationStart</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3pkn3s0s272vhfy3rwgzlaaj5\">在路由的“解析”阶段的激活部分开始时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/BaseRouteReuseStrategy\">BaseRouteReuseStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0ucvpu3ja3k2pvzoivrhigfm\">此基本路由复用策略仅在匹配的路由器配置完全相同时复用路由。这样可以防止仅在片段或查询参数发生更改时销毁和重新创建组件（也就是<em>复用</em>现有组件）。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ChildActivationEnd\">ChildActivationEnd</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6hi2r55wqjxl0ubsnwkytw56w\">在路由的“解析”阶段的子路由激活部分结束时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ChildActivationStart\">ChildActivationStart</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aabn9gmrorzdpycev8r5mwqcu\">在路由的“解析”阶段的子路由激活部分开始时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ChildrenOutletContexts\">ChildrenOutletContexts</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqqklkw4odd3fpd06x7mcp6k7\">存储关于子级（=嵌套）<code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的上下文信息。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DefaultTitleStrategy\">DefaultTitleStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mypgnm6xidzrw4nbfu261or7\">使用 <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务更新标题的路由器使用的默认 <code><a href=\"api/router/TitleStrategy\" class=\"code-anchor\">TitleStrategy</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DefaultUrlSerializer\">DefaultUrlSerializer</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ce1957tlxvmfp7bhioxfxhyc\"><code><a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a></code> 的默认实现。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/GuardsCheckEnd\">GuardsCheckEnd</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9264meux7bh42crh6l0etzo9s\">表示路由的守卫（<code>Guard</code>）阶段的结束。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/GuardsCheckStart\">GuardsCheckStart</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ecey9j7lvh4natbteqd6p8s8p\">表示路由的守卫（<code>Guard</code>）阶段的开始。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationCancel\">NavigationCancel</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b83m30djv6ddqqgp22r549gkn\">直接或间接取消导航时触发的事件。当路由守卫返回了 <code>false</code>，或返回了 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>\n以发起重定向时，可能会发生这种情况。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationEnd\">NavigationEnd</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d46rmet3dt43olz4x89pauz50\">表示当导航成功结束时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationError\">NavigationError</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ylvd9rzgyuyps40h59apsu90\">表示当导航出错时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationSkipped\">NavigationSkipped</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1iiykw4gp5q98weh856rdcrid\">跳过导航时触发的事件。发生这种情况的原因有很多，包括 onSameUrlHandling 设置为 <code>ignore</code> 并且导航 URL 与当前状态没有区别。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationStart\">NavigationStart</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ddvkeb6c1s8jonjkpey13t8y0\">代表导航开始时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NoPreloading\">NoPreloading</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aks1wv7p0agnhhvkrje0hja4c\">提供不预加载任何模块的预加载策略。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/OutletContext\">OutletContext</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21m13y4n8spihauh89mq3ufdx\">存储关于 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的上下文信息</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PreloadAllModules\">PreloadAllModules</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zbkwayin1v7flxzie9ub1e52\">提供一种预加载策略，以尽快预加载所有模块。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PreloadingStrategy\">PreloadingStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6gxaqmtvu9gsf0m4yimyqgydm\">提供预加载策略。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveEnd\">ResolveEnd</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1c0uje64nwdbkm6xvlssopzoq\">在路由的“解析”阶段结束时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveStart\">ResolveStart</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5s2ft0bmpu6znilwnmc7has59\">在路由的“解析”阶段开始时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouteConfigLoadEnd\">RouteConfigLoadEnd</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9d91dmzzhwgdotzak47stpsg7\">表示当某个路由被惰性加载时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouteConfigLoadStart\">RouteConfigLoadStart</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o8km9bpgq0scn12xd2jv4xsf\">表示在惰性加载某个路由配置前触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouteReuseStrategy\">RouteReuseStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9tq4giuc74s224wwpkikc4ccc\">提供一种自定义复用已激活路由的方式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Router\">Router</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ecolfgbkg80pagwv5toj6oexq\">一个提供导航和操纵 URL 能力的 NgModule。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterEvent\">RouterEvent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmwwbaqxhsyuf351qxyqd71or\">路由器相关事件的（而不是关于特定路由的）基类。对于任何指定的导航，<code><a href=\"api/router/RouterEvent\" class=\"code-anchor\">RouterEvent</a></code> 只会触发一次。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterPreloader\">RouterPreloader</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"akfpdi5pi816frgwa0j38d50y\">预加载器会乐观加载所有路由器配置，以使导航到应用程序的惰性加载部分的速度更快。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterState\">RouterState</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8uditbrbp0j3pzdkqvkx5vpg\">将路由器的状态表示为已激活路由的树。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterStateSnapshot\">RouterStateSnapshot</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"m81q0kjzg0g4nrdcoe9xhhox\">表示路由器在当前瞬间的状态。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RoutesRecognized\">RoutesRecognized</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ab33mcfah2flqpkarufcx2lj2\">表示当路由被识别出来时触发的事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Scroll\">Scroll</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e13ix8r5b2lm0n9n0fimeixua\">表示一个滚动事件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/TitleStrategy\">TitleStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"vpx36oeztrpng24q9bbr2in9\">提供一种在路由器导航后设置页面标题的策略。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlHandlingStrategy\">UrlHandlingStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5bx4a3qzte57vy42v2jvlp0s\">提供一种将 AngularJS 应用程序迁移到 Angular 的方法。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlSegment\">UrlSegment</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1f09j9pxljgyhbfk0l0jzr99m\">表示一个 URL 段。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlSegmentGroup\">UrlSegmentGroup</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"67z6frknib1up6eq25afpmux4\">表示已解析的 URL 段组。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlSerializer\">UrlSerializer</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9njvsbgw384axtez6irgh9xok\">将 URL 字符串序列化和反序列化为 URL 树。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlTree\">UrlTree</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"17ni1ji6r89s4mpwv5u8y5rkg\">代表已解析的 URL。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"函数\">函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#函数\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"functions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt2uvbdl3r7k4tmkiulzt8lb8\">函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#functions\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/convertToParamMap\">convertToParamMap</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9v437v6wdgmrrmf3r0j02xkct\">将 <code><a href=\"api/router/Params\" class=\"code-anchor\">Params</a></code> 实例转换为 <code><a href=\"api/router/ParamMap\" class=\"code-anchor\">ParamMap</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/createUrlTreeFromSnapshot\">createUrlTreeFromSnapshot</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9yc9iis6qjpo4i0ufgqik101c\">创建相对于 <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code> 的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/defaultUrlMatcher\">defaultUrlMatcher</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bgsz8zrqx6i3nerrinyowqabd\">将路由配置 ( <code>route</code> ) 与实际 URL ( <code>segments</code> ) 匹配。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanActivate\">mapToCanActivate</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bbc10oec629ek9hxqctovac9\">将具有 canActivate 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanActivateFn\" class=\"code-anchor\">CanActivateFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanActivateChild\">mapToCanActivateChild</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1b7c8r9n4s6wh4keze0feyw3\">将具有 canActivateChild 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanActivateChildFn\" class=\"code-anchor\">CanActivateChildFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanDeactivate\">mapToCanDeactivate</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fmldaf7feh3ceic20qzrj7gx\">将具有 canDeactivate 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanDeactivateFn\" class=\"code-anchor\">CanDeactivateFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanMatch\">mapToCanMatch</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"duscrp51u3bkip6vz5es91gy4\">将具有 canMatch 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToResolve\">mapToResolve</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6smp0s17720bl9lqdori048eh\">将具有解析函数的可注入类映射到等效的 <code><a href=\"api/router/ResolveFn\" class=\"code-anchor\">ResolveFn</a></code> 以用于 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/provideRouter\">provideRouter</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"26xfg8v9xf46w0475czd3iipz\">设置为应用程序启用 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 特性所需的提供程序。允许配置一组路由以及应该启用的额外特性。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/provideRoutes\" class=\"deprecated-api-item\">provideRoutes</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> If necessary, provide routes using the <code><a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a></code> <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ip3ekn2p6t5ujp21sqo0nhwo\">为一组路由注册<a href=\"guide/glossary#provider\">DI 提供程序</a>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withComponentInputBinding\">withComponentInputBinding</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"p0qi4luk4e6ycndamxuw8caa\">启用从 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 状态直接绑定到 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 配置中组件输入的信息。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withDebugTracing\">withDebugTracing</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bb2vysue35vixb7aqai0f9t6j\">启用将所有内部导航事件记录到控制台。额外的日志可能可用于调试以检查路由器事件顺序。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withDisabledInitialNavigation\">withDisabledInitialNavigation</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l4lg1ptwoahpu42apmeb3l1n\">禁用初始导航。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withEnabledBlockingInitialNavigation\">withEnabledBlockingInitialNavigation</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81akx0xq6rgqgsdxipedwmhv1\">将初始导航配置为在创建根组件之前启动。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withHashLocation\">withHashLocation</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"hhrm7yc0gcr7hergntzxgxy\">提供使用 URL 片段而不是 history API 的定位策略。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withInMemoryScrolling\">withInMemoryScrolling</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5tzoinzd1vql78nc3kj4n0tpr\">为路由器导航启用可自定义的滚动行为。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withNavigationErrorHandler\">withNavigationErrorHandler</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6xnd0mvqgpmwxdjsourstfvj5\">订阅路由器的导航事件并在发生 <code><a href=\"api/router/NavigationError\" class=\"code-anchor\">NavigationError</a></code> 时调用给定的函数。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withPreloading\">withPreloading</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"49gmeby7x3dvg8lym6wv6s8j9\">允许配置要使用的预加载策略。该策略是通过提供对实现 <code><a href=\"api/router/PreloadingStrategy\" class=\"code-anchor\">PreloadingStrategy</a></code> 的类的引用来配置的。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withRouterConfig\">withRouterConfig</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gs514effz1wa5rfp4o949e0i\">允许提供额外的参数来配置路由器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withViewTransitions\">withViewTransitions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9khctz9e4m9s1vauhnzsdazkh\">通过在\n<code>document.startViewTransition</code>中运行路由激活和停用来启用路由器中的视图过渡。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"结构\">结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#结构\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"structures\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pvj0r4hennzfp5hvt5swfw10\">结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#structures\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanActivate\" class=\"deprecated-api-item\">CanActivate</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <a href=\"api/core/inject\"><code>inject</code></a>\nfunction: <code>canActivate: [() =&gt; inject(myGuard).canActivate()]</code>.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9d59o8gf2yqy16jnqaw4j35ns\">类可以实现的接口，作为决定是否可以激活路由的守卫。如果所有警卫都返回 <code>true</code>，则导航继续。如果任何警卫返回 <code>false</code>，则导航被取消。如果任何警卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，则当前导航被取消，并开始对从警卫返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 进行新的导航。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanActivateChild\" class=\"deprecated-api-item\">CanActivateChild</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <a href=\"api/core/inject\"><code>inject</code></a>\nfunction: <code>canActivateChild: [() =&gt; inject(myGuard).canActivateChild()]</code>.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alj8dyb8dziaco4csks41e9uu\">类可以实现的接口，作为决定是否可以激活子路由的守卫。如果所有警卫都返回 <code>true</code>，则导航继续。如果任何警卫返回 <code>false</code>，则导航被取消。如果任何警卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，则当前导航被取消，并开始对从警卫返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 进行新的导航。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanDeactivate\" class=\"deprecated-api-item\">CanDeactivate</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <a href=\"api/core/inject\"><code>inject</code></a>\nfunction: <code>canDeactivate: [() =&gt; inject(myGuard).canDeactivate()]</code>.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47qoei1wys32fn7xy6w7j2i8m\">类可以实现的接口，作为决定是否可以停用路由的警卫。如果所有警卫都返回 <code>true</code>，则导航继续。如果任何警卫返回 <code>false</code>，则导航被取消。如果任何警卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，则当前导航被取消，并开始对从警卫返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 进行新的导航。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanLoad\" class=\"deprecated-api-item\">CanLoad</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Use <a href=\"api/router/CanMatchFn\"><code>CanMatchFn</code></a> instead</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6tb95rbppkct1c12zs8nz9t1\">类可以实现的接口，用于确定是否可以加载子路由。如果所有守卫都返回了 <code>true</code>，那么导航将继续。如果任何守卫返回 <code>false</code>，则导航将被取消。如果任何守卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，当前导航被取消，新的导航开始到守卫所返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanMatch\" class=\"deprecated-api-item\">CanMatch</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <a href=\"api/core/inject\"><code>inject</code></a>\nfunction: <code>canMatch: [() =&gt; inject(myGuard).canMatch()]</code>.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cgzuabl4v8kd8gx2dhtjgnbbz\">类可以实现的接口作为决定是否可以匹配 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 的守卫。如果所有警卫都返回 <code>true</code>，则导航继续，并且 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 将在激活期间使用 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>。如果任何警卫返回 <code>false</code>，则会跳过 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 进行匹配，并改为处理其他 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 配置。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DefaultExport\">DefaultExport</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8r5koq1jpokwbhkkorw527tey\">具有给定类型的默认导出的 ES 模块对象。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/EventType\">EventType</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6j58fuw0y6wxzgc5hbei5qsha\">标识路由器事件的类型。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ExtraOptions\">ExtraOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajmkkg6a2ihjg0uruoreb55q2\">路由器模块的一组配置选项，在 <code>forRoot()</code> 方法中提供。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InMemoryScrollingOptions\">InMemoryScrollingOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2185em3ssff1exwg04gon8psy\">可与 <code><a href=\"api/router/withInMemoryScrolling\" class=\"code-anchor\">withInMemoryScrolling</a></code> 函数一起使用的滚动特性的配置选项。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/IsActiveMatchOptions\">IsActiveMatchOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76aksbfoma567mu3lxt523knr\">一组选项，指定如何在给定当前路由器状态的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 的情况下确定 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 是否处于活动状态。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Navigation\">Navigation</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bvsa7n4hlspl8t4zx0stw7wt5\">有关导航操作的信息。使用<a href=\"api/router/Router#getcurrentnavigation\">Router.getCurrentNavigation() 方法</a>检索最新的导航对象。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationBehaviorOptions\">NavigationBehaviorOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1axjx4tzl9xqx61ip1e1xf0xr\">修改 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航策略的选项。将包含这些属性中的任何一个的对象提供给 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航函数，以控制应如何处理导航。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationCancellationCode\">NavigationCancellationCode</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ku0ps43s2dtkahighler0z3l\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 的 <code><a href=\"api/router/NavigationCancel\" class=\"code-anchor\">NavigationCancel</a></code> 事件的代码，用于表明导航失败的原因。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationExtras\">NavigationExtras</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"l7kptc63yiawnrxa9yvk0bb5\">修改 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航策略的选项。将包含这些属性中的任何一个的对象提供给 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航函数，以控制目标 URL 的构建或解释方式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationSkippedCode\">NavigationSkippedCode</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47k7q6wmzrxq665n5yn7nxi1n\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 的 <code><a href=\"api/router/NavigationSkipped\" class=\"code-anchor\">NavigationSkipped</a></code> 事件的代码，用于指示跳过导航的原因。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ParamMap\">ParamMap</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xeao5rct8fxu34zys154cflb\">提供访问特定于路由的必需和可选参数的映射表。该映射表支持使用 <code>get()</code> 检索单个值或使用 <code>getAll()</code>\n检索多个值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/Resolve\" class=\"deprecated-api-item\">Resolve</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> resolvers are deprecated in favor of functional resolvers. An\ninjectable class can be used as a functional guard using the <a href=\"api/core/inject\"><code>inject</code></a>\nfunction: <code>resolve: {'user': () =&gt; inject(UserResolver).resolve()}</code>.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8lykfbvy1qd4ivr2sku953a3\">类可以实现为数据提供者的接口。数据提供者类可以与路由器一起使用，以在导航期间解析数据。该接口定义了一个 <code>resolve()</code> 方法，该方法会在 <code><a href=\"api/router/ResolveStart\" class=\"code-anchor\">ResolveStart</a></code> 路由器事件之后立即调用。路由器会在最终激活路由之前等待数据被解析。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Route\">Route</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bo05z5e451uelnqvbwz52c5of\">定义单个路由的配置对象。一组路由被收集在 <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> 数组中以定义 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 配置。路由器会尝试使用此对象中定义的配置选项，将给定 URL 的段与每个路由进行匹配。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterConfigOptions\">RouterConfigOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvet8w4ug6bcrlu0lvevruhaz\">可以与 <code><a href=\"api/router/withRouterConfig\" class=\"code-anchor\">withRouterConfig</a></code> 函数一起使用的额外配置选项。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterFeature\">RouterFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1b96qem37nsjlptiy87tbucmp\">表示路由器特性的帮助器类型。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterOutletContract\">RouterOutletContract</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4xdg0aqctouf9pu965x0mc8ne\">一个接口，定义了为 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 开发组件出口的契约。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlCreationOptions\">UrlCreationOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ct3cq68p3tcl8xs1c7fuwe4hz\">修改 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> URL 的选项。将包含这些属性中的任何一个的对象提供给 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航函数，以控制目标 URL 的构建方式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ViewTransitionInfo\">ViewTransitionInfo</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8tov4h5tc41cx8jfg3ywkpe7l\">传递给\n<code>onViewTransitionCreated</code>函数的信息是在\n<code><a href=\"api/router/withViewTransitions\" class=\"code-anchor\">withViewTransitions</a></code>特性选项中提供的。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ViewTransitionsFeatureOptions\">ViewTransitionsFeatureOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dhjsxh3i3o2oaw4c8fmeeuyat\">用于配置路由器中的视图过渡集成的选项。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"指令\">指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#指令\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"directives\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uaad125h3hufxqa64leub0r9\">指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#directives\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterLink\">RouterLink</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1cj4d2yp0qj03e38wouxe2ae8\">当应用于模板中的元素时，使该元素成为开始导航到某个路由的链接。导航会在页面上的 <code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code>\n位置上打开一个或多个路由组件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterLinkActive\">RouterLinkActive</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8cq1twm5vj7uk1bv29yxmeo9p\">跟踪元素上的链接路由当前是否处于活动状态，并允许你指定一个或多个 CSS\n类，以便在链接路由处于活动状态时添加到该元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterLinkWithHref\">RouterLinkWithHref</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1cj4d2yp0qj03e38wouxe2ae8\">当应用于模板中的元素时，使该元素成为开始导航到某个路由的链接。导航会在页面上的 <code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code>\n位置上打开一个或多个路由组件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterOutlet\">RouterOutlet</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agu7rkeox2ahmukt8lf2ykmpc\">一个占位符，Angular 会根据当前的路由器状态动态填充它。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类型\">类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#类型\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"types\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edj3fs52fiqyg9u6mdyxchcwv\">类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#types\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanActivateChildFn\">CanActivateChildFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"braoyt29vt30b1ov4ai05givu\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canActivateChild</code> 保护的函数的签名。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanActivateFn\">CanActivateFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"gf37vjfle2ch2crtexu0yjj\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canActivate</code> 保护的函数的签名。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanDeactivateFn\">CanDeactivateFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8llj2zuf98r4ttyww5lc47vo8\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canDeactivate</code> 保护的函数的签名。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanLoadFn\" class=\"deprecated-api-item\">CanLoadFn</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Use <code><a href=\"api/router/Route#canMatch\" class=\"code-anchor\">Route.canMatch</a></code> and <code><a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a></code> instead</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a80q3bakt6ms4d4ryffm7b5n3\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canLoad</code> 保护的函数的签名。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanMatchFn\">CanMatchFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8lmzsekqtxltcrq34hicjjlkw\">在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上用作 <code><a href=\"api/router/CanMatch\" class=\"code-anchor\">CanMatch</a></code> 保护的函数的签名。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Data\">Data</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a54ppo7p87nhovnhou2hd5ypp\">表示与特定路由关联的静态数据。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DebugTracingFeature\">DebugTracingFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cekansbub350v7on1jptnbo1c\"><code><a href=\"api/router/withDebugTracing\" class=\"code-anchor\">withDebugTracing</a></code> 返回的提供程序的类型别名，与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DeprecatedGuard\" class=\"deprecated-api-item\">DeprecatedGuard</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> </p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"744jfeextpvvs037hlal5w5jm\">用于守卫和解析器的\n<code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>和\n<code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code>类已被弃用，而改为使用普通的 JavaScript 函数。仍可以使用\n<code>@angular/core</code>中的\n<code>inject</code>函数进行依赖注入，并且可以使用可注入类作为功能守卫，使用\n<code>inject</code>：\n<code>canActivate: [() =&gt; inject(myGuard).canActivate()]</code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DetachedRouteHandle\">DetachedRouteHandle</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dd6wuk31r5tqk80o326e0e763\">表示已分离的路由树。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DisabledInitialNavigationFeature\">DisabledInitialNavigationFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lc1v2gt9aa461t7rkvf26yr9\"><code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> <code><a href=\"api/router/withDisabledInitialNavigation\" class=\"code-anchor\">withDisabledInitialNavigation</a></code> 使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/EnabledBlockingInitialNavigationFeature\">EnabledBlockingInitialNavigationFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4kov3a45s1dwcobs5h2q00j6s\"><code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> <code><a href=\"api/router/withEnabledBlockingInitialNavigation\" class=\"code-anchor\">withEnabledBlockingInitialNavigation</a></code> 使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Event\">Event</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6si5qdok33d6h8t2a1vb3c7u0\">路由器事件能让你跟踪路由器的生命周期。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/GuardResult\">GuardResult</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8gvha1kae38u99vkxw6scg0e\">可以从\n<code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code>守卫返回的支持类型。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InMemoryScrollingFeature\">InMemoryScrollingFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"71py44yhxd6kbho4e66vl1b15\"><code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> <code><a href=\"api/router/withInMemoryScrolling\" class=\"code-anchor\">withInMemoryScrolling</a></code> 使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InitialNavigation\">InitialNavigation</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c5da2hxkn99euftfcx7g64nqm\">在路由器执行初始导航操作时配置的 <code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code> 对象中允许的值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InitialNavigationFeature\">InitialNavigationFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5daytt7zg3ou49oiup70a19e\">由 <code><a href=\"api/router/withEnabledBlockingInitialNavigation\" class=\"code-anchor\">withEnabledBlockingInitialNavigation</a></code> 或 <code><a href=\"api/router/withDisabledInitialNavigation\" class=\"code-anchor\">withDisabledInitialNavigation</a></code> 函数返回的提供程序的类型别名，与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/LoadChildren\">LoadChildren</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zjk96qymd7839r3hyife80mn\">返回一组要加载的路由的函数。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/LoadChildrenCallback\">LoadChildrenCallback</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6jlz5t7rzi8t8dgsxg77uct5i\">为解析惰性加载的路由集合而调用的函数。必须是以下形式的箭头函数：<code>() =&gt; import('...').then(mod =&gt; mod.MODULE)</code> 或 <code>() =&gt; import('...').then(mod =&gt; mod.ROUTES)</code></p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/MaybeAsync\">MaybeAsync</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47was3uu1rtk64s49ul6aib8z\">用于表示可能是同步或异步的值的类型。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationErrorHandlerFeature\">NavigationErrorHandlerFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dbqv2q4j2cwk0o8cbvnok9wz0\"><code><a href=\"api/router/withNavigationErrorHandler\" class=\"code-anchor\">withNavigationErrorHandler</a></code> 返回的提供者的类型别名，用于 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/OnSameUrlNavigation\">OnSameUrlNavigation</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"67e41sd77bicj23jcoveh4vny\">定义当路由器收到一个导航到当前 URL 的请求时应该怎么做。可取下列值之一：</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PRIMARY_OUTLET\">PRIMARY_OUTLET</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eajmm2dok3t8z75ns8x0iamft\">主路由出口的名字。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Params\">Params</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"93mvtndhiurz9wh4hvyel0tnl\">矩阵和查询 URL 参数的集合。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PreloadingFeature\">PreloadingFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9wqb8whc44kzunq30za0mafk7\">一种类型别名，表示在 Router 中启用预加载的特性。该类型用于描述 <code><a href=\"api/router/withPreloading\" class=\"code-anchor\">withPreloading</a></code> 函数的返回值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/QueryParamsHandling\">QueryParamsHandling</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evvcidt6sqsg1tz4z5g1ujosc\">如何处理路由器链接中的查询参数。之一：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqanvjpxlnlizsvh2jizpxmou\"><code>merge</code>：将新参数与当前参数合并。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cnvrfo04py932vph42ac8u2g2\"><code>preserve</code>：保留当前参数。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d14sx3uo5qxr3zfg5xgwcwosd\"><code>preserve</code>：保留当前参数。</li>\n</ul>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ROUTER_CONFIGURATION\">ROUTER_CONFIGURATION</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ucmieprfznlib59w9pokdh89\">路由器服务的<a href=\"guide/glossary/#di-token\">DI 令牌</a>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ROUTER_INITIALIZER\">ROUTER_INITIALIZER</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4fgdnkssarq0qsxwbtuxtz992\">一个代表路由器初始化器的令牌，应用引导完毕后就会调用它。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ROUTES\">ROUTES</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvhbsxytd94iabovj2rse7943\">路由器配置的 <a href=\"guide/glossary/#di-token\">DI 令牌。</a></p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveData\">ResolveData</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2luylatodu3omv4qn4vozbff5\">表示与特定路由关联的解析数据。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveFn\">ResolveFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66cvn6yatg3rt6qwk6morsdxk\">数据提供者的函数类型定义。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterConfigurationFeature\">RouterConfigurationFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"75xmfcgwlj97yx46o5cwes5a1\"><code><a href=\"api/router/withRouterConfig\" class=\"code-anchor\">withRouterConfig</a></code> 返回的提供程序的类型别名，与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterFeatures\">RouterFeatures</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ofupfjcu0lrok99uidribtp\">一个类型别名，表示可与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用的所有路由器特性。可以通过向 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 调用添加特殊函数来启用特性。请参阅每个符号的文档以查找对应的函数名称。有关如何使用这些函数，另请参阅 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 文档。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterHashLocationFeature\">RouterHashLocationFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9gyvb9i28m3jc91qpxlo6p1vj\"><code><a href=\"api/router/withHashLocation\" class=\"code-anchor\">withHashLocation</a></code> 返回的提供者的类型别名，用于 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Routes\">Routes</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"17vm39yo5q3zut3uq9kcxaq16\">表示 Router 服务的路由配置。<code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 对象的数组，在 <code><a href=\"api/router/Route#children\" class=\"code-anchor\">Route.children</a></code> 中使用以及在 <code><a href=\"api/router/Router#config\" class=\"code-anchor\">Router.config</a></code> 中用于嵌套路由配置。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RunGuardsAndResolvers\">RunGuardsAndResolvers</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ek7dxho1xkkew0j03z87z9ae1\">何时在路由上运行警卫和解析器的策略。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlMatchResult\">UrlMatchResult</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvwfkxrdgve9vtmakby2gkcxu\">表示使用自定义匹配函数匹配 URL 的结果。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlMatcher\">UrlMatcher</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9e680w7lun3t7024w5n7megew\">将路由与 URL 匹配的函数。当 <code>path</code> 和 <code>pathMatch</code> 的组合没有足够的表现力时，为 <code><a href=\"api/router/Route#matcher\" class=\"code-anchor\">Route.matcher</a></code> 实现自定义 URL 匹配器。不能与 <code>path</code> 和 <code>pathMatch</code> 一起使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ViewTransitionsFeature\">ViewTransitionsFeature</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ahwirvex1v275fm09syuzq20j\">用于与\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>一起使用的由\n<code><a href=\"api/router/withViewTransitions\" class=\"code-anchor\">withViewTransitions</a></code>返回的提供者的类型别名。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/ActivationEnd\n - api/router/ActivationStart\n - api/router/BaseRouteReuseStrategy\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanActivateChildFn\n - api/router/CanActivateFn\n - api/router/CanDeactivate\n - api/router/CanDeactivateFn\n - api/router/CanLoad\n - api/router/CanLoadFn\n - api/router/CanMatch\n - api/router/CanMatchFn\n - api/router/ChildActivationEnd\n - api/router/ChildActivationStart\n - api/router/ChildrenOutletContexts\n - api/router/Data\n - api/router/DebugTracingFeature\n - api/router/DefaultExport\n - api/router/DefaultTitleStrategy\n - api/router/DefaultUrlSerializer\n - api/router/DeprecatedGuard\n - api/router/DetachedRouteHandle\n - api/router/DisabledInitialNavigationFeature\n - api/router/EnabledBlockingInitialNavigationFeature\n - api/router/Event\n - api/router/EventType\n - api/router/ExtraOptions\n - api/router/GuardResult\n - api/router/GuardsCheckEnd\n - api/router/GuardsCheckStart\n - api/router/InMemoryScrollingFeature\n - api/router/InMemoryScrollingOptions\n - api/router/InitialNavigation\n - api/router/InitialNavigationFeature\n - api/router/IsActiveMatchOptions\n - api/router/LoadChildren\n - api/router/LoadChildrenCallback\n - api/router/MaybeAsync\n - api/router/Navigation\n - api/router/NavigationBehaviorOptions\n - api/router/NavigationCancel\n - api/router/NavigationCancellationCode\n - api/router/NavigationEnd\n - api/router/NavigationError\n - api/router/NavigationErrorHandlerFeature\n - api/router/NavigationExtras\n - api/router/NavigationSkipped\n - api/router/NavigationSkippedCode\n - api/router/NavigationStart\n - api/router/NoPreloading\n - api/router/OnSameUrlNavigation\n - api/router/OutletContext\n - api/router/PRIMARY_OUTLET\n - api/router/ParamMap\n - api/router/Params\n - api/router/PreloadAllModules\n - api/router/PreloadingFeature\n - api/router/PreloadingStrategy\n - api/router/QueryParamsHandling\n - api/router/ROUTER_CONFIGURATION\n - api/router/ROUTER_INITIALIZER\n - api/router/ROUTES\n - api/router/Resolve\n - api/router/ResolveData\n - api/router/ResolveEnd\n - api/router/ResolveFn\n - api/router/ResolveStart\n - api/router/Route\n - api/router/RouteConfigLoadEnd\n - api/router/RouteConfigLoadStart\n - api/router/RouteReuseStrategy\n - api/router/Router\n - api/router/RouterConfigOptions\n - api/router/RouterConfigurationFeature\n - api/router/RouterEvent\n - api/router/RouterFeature\n - api/router/RouterFeatures\n - api/router/RouterHashLocationFeature\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterLinkWithHref\n - api/router/RouterModule\n - api/router/RouterOutlet\n - api/router/RouterOutletContract\n - api/router/RouterPreloader\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/Routes\n - api/router/RoutesRecognized\n - api/router/RunGuardsAndResolvers\n - api/router/Scroll\n - api/router/TitleStrategy\n - api/router/UrlCreationOptions\n - api/router/UrlHandlingStrategy\n - api/router/UrlMatchResult\n - api/router/UrlMatcher\n - api/router/UrlSegment\n - api/router/UrlSegmentGroup\n - api/router/UrlSerializer\n - api/router/UrlTree\n - api/router/ViewTransitionInfo\n - api/router/ViewTransitionsFeature\n - api/router/ViewTransitionsFeatureOptions\n - api/router/convertToParamMap\n - api/router/createUrlTreeFromSnapshot\n - api/router/defaultUrlMatcher\n - api/router/mapToCanActivate\n - api/router/mapToCanActivateChild\n - api/router/mapToCanDeactivate\n - api/router/mapToCanMatch\n - api/router/mapToResolve\n - api/router/provideRouter\n - api/router/provideRoutes\n - api/router/testing\n - api/router/testing/RouterTestingHarness\n - api/router/testing/RouterTestingModule\n - api/router/upgrade\n - api/router/upgrade/RouterUpgradeInitializer\n - api/router/upgrade/locationSyncBootstrapListener\n - api/router/upgrade/setUpLocationSync\n - api/router/withComponentInputBinding\n - api/router/withDebugTracing\n - api/router/withDisabledInitialNavigation\n - api/router/withEnabledBlockingInitialNavigation\n - api/router/withHashLocation\n - api/router/withInMemoryScrolling\n - api/router/withNavigationErrorHandler\n - api/router/withPreloading\n - api/router/withRouterConfig\n - api/router/withViewTransitions\n - guide/npm-packages\n - guide/router-tutorial\n - guide/routing-with-urlmatcher\n-->\n<!-- links from this doc:\n - /api\n - api/core/Injectable\n - api/core/InjectionToken\n - api/core/inject\n - api/platform-browser/Title\n - api/router#\n - api/router#angularrouter\n - api/router#classes\n - api/router#directives\n - api/router#entry-points\n - api/router#functions\n - api/router#ngmodules\n - api/router#primary\n - api/router#primary-entry-point-exports\n - api/router#secondary\n - api/router#structures\n - api/router#types\n - api/router#主要\n - api/router#函数\n - api/router#指令\n - api/router#次要\n - api/router#类\n - api/router#类型\n - api/router#结构\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/ActivationEnd\n - api/router/ActivationStart\n - api/router/BaseRouteReuseStrategy\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanActivateChildFn\n - api/router/CanActivateFn\n - api/router/CanDeactivate\n - api/router/CanDeactivateFn\n - api/router/CanLoad\n - api/router/CanLoadFn\n - api/router/CanMatch\n - api/router/CanMatchFn\n - api/router/ChildActivationEnd\n - api/router/ChildActivationStart\n - api/router/ChildrenOutletContexts\n - api/router/Data\n - api/router/DebugTracingFeature\n - api/router/DefaultExport\n - api/router/DefaultTitleStrategy\n - api/router/DefaultUrlSerializer\n - api/router/DeprecatedGuard\n - api/router/DetachedRouteHandle\n - api/router/DisabledInitialNavigationFeature\n - api/router/EnabledBlockingInitialNavigationFeature\n - api/router/Event\n - api/router/EventType\n - api/router/ExtraOptions\n - api/router/GuardResult\n - api/router/GuardsCheckEnd\n - api/router/GuardsCheckStart\n - api/router/InMemoryScrollingFeature\n - api/router/InMemoryScrollingOptions\n - api/router/InitialNavigation\n - api/router/InitialNavigationFeature\n - api/router/IsActiveMatchOptions\n - api/router/LoadChildren\n - api/router/LoadChildrenCallback\n - api/router/MaybeAsync\n - api/router/Navigation\n - api/router/NavigationBehaviorOptions\n - api/router/NavigationCancel\n - api/router/NavigationCancellationCode\n - api/router/NavigationEnd\n - api/router/NavigationError\n - api/router/NavigationErrorHandlerFeature\n - api/router/NavigationExtras\n - api/router/NavigationSkipped\n - api/router/NavigationSkippedCode\n - api/router/NavigationStart\n - api/router/NoPreloading\n - api/router/OnSameUrlNavigation\n - api/router/OutletContext\n - api/router/PRIMARY_OUTLET\n - api/router/ParamMap\n - api/router/Params\n - api/router/PreloadAllModules\n - api/router/PreloadingFeature\n - api/router/PreloadingStrategy\n - api/router/QueryParamsHandling\n - api/router/ROUTER_CONFIGURATION\n - api/router/ROUTER_INITIALIZER\n - api/router/ROUTES\n - api/router/Resolve\n - api/router/ResolveData\n - api/router/ResolveEnd\n - api/router/ResolveFn\n - api/router/ResolveStart\n - api/router/Route\n - api/router/Route#canMatch\n - api/router/Route#children\n - api/router/Route#matcher\n - api/router/RouteConfigLoadEnd\n - api/router/RouteConfigLoadStart\n - api/router/RouteReuseStrategy\n - api/router/Router\n - api/router/Router#config\n - api/router/Router#getcurrentnavigation\n - api/router/RouterConfigOptions\n - api/router/RouterConfigurationFeature\n - api/router/RouterEvent\n - api/router/RouterFeature\n - api/router/RouterFeatures\n - api/router/RouterHashLocationFeature\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterLinkWithHref\n - api/router/RouterModule\n - api/router/RouterOutlet\n - api/router/RouterOutletContract\n - api/router/RouterPreloader\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/Routes\n - api/router/RoutesRecognized\n - api/router/RunGuardsAndResolvers\n - api/router/Scroll\n - api/router/TitleStrategy\n - api/router/UrlCreationOptions\n - api/router/UrlHandlingStrategy\n - api/router/UrlMatchResult\n - api/router/UrlMatcher\n - api/router/UrlSegment\n - api/router/UrlSegmentGroup\n - api/router/UrlSerializer\n - api/router/UrlTree\n - api/router/ViewTransitionInfo\n - api/router/ViewTransitionsFeature\n - api/router/ViewTransitionsFeatureOptions\n - api/router/convertToParamMap\n - api/router/createUrlTreeFromSnapshot\n - api/router/defaultUrlMatcher\n - api/router/mapToCanActivate\n - api/router/mapToCanActivateChild\n - api/router/mapToCanDeactivate\n - api/router/mapToCanMatch\n - api/router/mapToResolve\n - api/router/provideRouter\n - api/router/provideRoutes\n - api/router/testing\n - api/router/upgrade\n - api/router/withComponentInputBinding\n - api/router/withDebugTracing\n - api/router/withDisabledInitialNavigation\n - api/router/withEnabledBlockingInitialNavigation\n - api/router/withHashLocation\n - api/router/withInMemoryScrolling\n - api/router/withNavigationErrorHandler\n - api/router/withPreloading\n - api/router/withRouterConfig\n - api/router/withViewTransitions\n - guide/glossary#provider\n - guide/glossary/#di-token\n - guide/router\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/PACKAGE.md\n-->"}