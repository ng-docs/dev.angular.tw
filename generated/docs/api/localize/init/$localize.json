{"id":"api/localize/init/$localize","title":"$localize","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/localize\", \"name\": \"@angular/localize\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/localize/init\", \"name\": \"@angular/localize/init\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.io/api/localize/init/$localize\", \"name\": \"$localize\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/localize\">@angular/localize</a> &gt; <a href=\"api/localize/init\">@angular/localize/init</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/localize/src/localize/src/localize.ts#L146-L158\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"localize\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84goterhlgk7ruxqo3zrh5sjw\">$localize<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/localize/init/$localize#localize\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label global\">全局</label>\n    <label class=\"api-type-label const\">const</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adlgmyosvfamwywzwokjzg3cv\">标记模板文字字符串以进行本地化。</p>\n\n    <p><a href=\"api/localize/init/$localize#description\">查看更多...</a></p>\n  </section>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const $localize: LocalizeFn;\n  </code-example>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/localize/init/$localize#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4reizjf10jcs1ftw359bt1ndz\">比如：</p>\n<code-example language=\"ts\">\n$localize `some string to localize`\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"458qdkr336zs2qovs4cudecku\"><strong>提供含义、描述和 id</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"584p188acah228gwrw2cn14c3\">你可以选择为本地化字符串指定 <code>meaning</code>、<code>description</code> 和 <code>id</code>\n中的一个或多个，方法是在其前面使用以下形式的冒号分隔块：</p>\n<code-example language=\"ts\">\n$localize`:meaning|description@@id:source message text`;\n\n$localize`:meaning|:source message text`;\n$localize`:description:source message text`;\n$localize`:@@id:source message text`;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dnzqgz491ztexlq96l8811e0\">此格式与 Angular 模板中用于 <code>i18n</code> 标记的格式相同。请参阅<a href=\"guide/i18n-common-prepare#mark-text-in-component-template\">Angular i18n\n指南</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1bu5kxbmptctou9tc9t7m40le\"><strong>命名占位符</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ce4hd6sp0y0x18ymyp8kevzhz\">如果模板文字字符串包含表达式，那么这些表达式将自动为你与占位符名称相关联。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4reizjf10jcs1ftw359bt1ndz\">比如：</p>\n<code-example language=\"ts\">\n$localize `Hi ${name}! There are ${items.length} items.`;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"chg2a74vd7iwlohlifa07t3zr\">将生成 <code>Hi {$PH}! There are {$PH_1} items</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ctwmmjnlqnevyy90yfjtb3ddk\">推荐的实践是命名与每个表达式关联的占位符。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"774irkhu4ntmgslle28oadt1\">通过在表达式之后直接提供用 <code>:</code>\n字符包装的占位符名称来实现。这些占位符名称会从渲染的本地化字符串中删除。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20f9u88fi27tmjxeqbmwisc33\">例如，要命名 <code>items.length</code> 表达式占位符 <code>itemCount</code>，你可以这样写：</p>\n<code-example language=\"ts\">\n$localize `There are ${items.length}:itemCount: items`;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6sq7e5n3fmi6qi8cpnz9awifd\"><strong>转义冒号标记</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l9yxrqhtk35g53t212ngkko1\">如果你需要直接在没有元数据块的标记字符串的开头使用 <code>:</code> 字符，或直接在没有名称的替换表达式之后使用\n:，你必须在 <code>:</code> 之前使用反斜杠来转译：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4reizjf10jcs1ftw359bt1ndz\">比如：</p>\n<code-example language=\"ts\">\n// message has a metadata block so no need to escape colon\n$localize `:some description::this message starts with a colon (:)`;\n// no metadata block so the colon must be escaped\n$localize `\\:this message starts with a colon (:)`;\n</code-example>\n<code-example language=\"ts\">\n// named substitution so no need to escape colon\n$localize `${label}:label:: ${}`\n// anonymous substitution so colon must be escaped\n$localize `${label}\\: ${}`\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mv4hvcami4hlu5y205i5hkx\"><strong>处理本地化字符串：</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpkw3sg7iv13b1twtfazp4yag\">有三种情况：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10ksyfuutzt5g1k40e07ifsui\"><strong>编译时内联</strong>：<code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code>\n标签在编译时由转译器转换，删除标签并使用提供给转译工具的翻译集合中的翻译后的文字字符串替换模板文字字符串。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5ybpetw6bi4a1zrwampyfgyy\"><strong>运行时估算</strong>：<code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code>\n标签是一个运行时函数，它会使用运行时加载的翻译集合中的字符串替换模板文字字符串的部分（静态字符串和表达式）并重新排序。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arwhrwv0bn0ii6v6kt0lzmro3\"><strong>传递估算</strong>：<code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code>\n标签是一个运行时函数，它只是估算原始模板文字字符串，而不对各个部分应用任何翻译。此版本在开发期间或无需翻译本地化模板文字的地方使用。</p>\n</li>\n</ul>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/localize\n - api/localize/clearTranslations\n - api/localize/init\n - api/localize/loadTranslations\n - guide/angular-compiler-options\n - guide/i18n-common-add-package\n - guide/i18n-common-merge\n - guide/i18n-common-prepare\n - guide/i18n-common-translation-files\n - guide/i18n-optional-manage-marked-text\n-->\n<!-- links from this doc:\n - /api\n - api/localize\n - api/localize/init\n - api/localize/init/$localize#description\n - api/localize/init/$localize#localize\n - guide/i18n-common-prepare#mark-text-in-component-template\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/localize/src/localize/src/localize.ts#L146-L158\n-->"}