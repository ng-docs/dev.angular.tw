{"id":"api/router/Route","title":"路由","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/router\", \"name\": \"@angular/router\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/router/Route\", \"name\": \"Route\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/router\">@angular/router</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/models.ts#L268-L678\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"route\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8rh8481e3bmuscr7m1ntnghjw\">路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#route\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bo05z5e451uelnqvbwz52c5of\">定義單個路由的設定物件。一組路由被收集在 <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> 陣列中以定義 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 設定。路由器會嘗試使用此物件中定義的設定選項，將給定 URL 的段與每個路由進行對應。</p>\n\n    <p><a href=\"api/router/Route#description\">檢視更多...</a></p>\n  </section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/router/Route\" class=\"code-anchor\">Route</a> {\n  <a class=\"code-anchor\" href=\"api/router/Route#title\"><span class=\"member-name\">title</span>?: string | Type&lt;Resolve&lt;string&gt;&gt; | ResolveFn&lt;string&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#path\"><span class=\"member-name\">path</span>?: string</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#pathMatch\"><span class=\"member-name\">pathMatch</span>?: 'prefix' | 'full'</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#matcher\"><span class=\"member-name\">matcher</span>?: UrlMatcher</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#component\"><span class=\"member-name\">component</span>?: Type&lt;any&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#loadComponent\"><span class=\"member-name\">loadComponent</span>?: () =&gt; Type&lt;unknown&gt; | Observable&lt;Type&lt;unknown&gt; | DefaultExport&lt;Type&lt;unknown&gt;&gt;&gt; | Promise&lt;Type&lt;unknown&gt; | DefaultExport&lt;Type&lt;unknown&gt;&gt;&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#redirectTo\"><span class=\"member-name\">redirectTo</span>?: string</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#outlet\"><span class=\"member-name\">outlet</span>?: string</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#canActivate\"><span class=\"member-name\">canActivate</span>?: Array&lt;CanActivateFn | DeprecatedGuard&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#canMatch\"><span class=\"member-name\">canMatch</span>?: Array&lt;CanMatchFn | DeprecatedGuard&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#canActivateChild\"><span class=\"member-name\">canActivateChild</span>?: Array&lt;CanActivateChildFn | DeprecatedGuard&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#canDeactivate\"><span class=\"member-name\">canDeactivate</span>?: Array&lt;CanDeactivateFn&lt;any&gt; | DeprecatedGuard&gt;</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/router/Route#canLoad\"><span class=\"member-name\">canLoad</span>?: Array&lt;CanLoadFn | DeprecatedGuard&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#data\"><span class=\"member-name\">data</span>?: Data</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#resolve\"><span class=\"member-name\">resolve</span>?: ResolveData</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#children\"><span class=\"member-name\">children</span>?: Routes</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#loadChildren\"><span class=\"member-name\">loadChildren</span>?: LoadChildren</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#runGuardsAndResolvers\"><span class=\"member-name\">runGuardsAndResolvers</span>?: RunGuardsAndResolvers</a>\n  <a class=\"code-anchor\" href=\"api/router/Route#providers\"><span class=\"member-name\">providers</span>?: Array&lt;Provider | EnvironmentProviders&gt;</a>\n}\n</code-example>\n\n\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4yv2aheyyd8js1psy9ed61wc2\">欲知詳情，請參閱<a href=\"guide/router\">《路由指南》</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dv6tu2ld85qgrdg8pr5n22nc7\">有關詳細的用法訊息，請參閱<a href=\"guide/router\">路由指南</a>。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5rovnlq4er0s7kyxqdfc73n07\">有關\n<a href=\"api/router/Route#usage-notes\">用法說明...</a>的更多訊息。</p>\n</section>\n  \n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>屬性</th>\n        <th>說明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"title\"></a>\n          <code class=\"\"><span class=\"member-name\">title</span>?: string | <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;<a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a>&lt;string&gt;&gt; | <a href=\"api/router/ResolveFn\" class=\"code-anchor\">ResolveFn</a>&lt;string&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7j7e4q25w1u0ls0jwguvut146\">用於定義路由的頁面標題。這可以是靜態字串或實現 <code><a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a></code> 的 <code><a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code>。</p>\n          \n          <p>參見：</p>\n          <ul>\n            <li><a href=\"api/router/TitleStrategy\"><code>TitleStrategy</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"path\"></a>\n          <code class=\"\"><span class=\"member-name\">path</span>?: string</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3zavzyvw9k5g1pqnefrfco31\">對應的路徑。不能與自定義 <code>matcher</code> 功能一起使用。使用路由器對應表示法的 URL 字串。可以是與任何 URL 對應的萬用字元（<code>**</code>）（請參閱下面的使用說明）。預設值為 『/』（根路徑）。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"pathMatch\"></a>\n          <code class=\"\"><span class=\"member-name\">pathMatch</span>?: 'prefix' | 'full'</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7sx1ps3dw57h10ah6p4ph1afm\">路徑對應策略，為 『prefix』 或 『full』 之一。預設為『prefix』。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30leupbkgzv23jkdbrmpenzkj\">預設情況下，路由器會從左側檢查 URL 元素以檢視 URL 是否與給定路徑對應，並在對應上某個設定時停止。重要的是，URL 的每個段仍然必須與某個設定對應。例如，如果路由的子項（children）之一與段『user』對應，則認為『/team/11/user』與字首『team/:id』對應。也就是說，URL '/team/11/user' 可以對應 <code>{path: 'team/:id', children: [{path: ':user', component: User}]}</code> 設定項，但當 <code>{path: 'team/:id', component: Team}</code> 中沒有子項（children 屬性）時則不對應。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dm9ld5rhx53learlvkygxovak\">路徑對應策略 'full' 對應整個 URL。重導向空路徑路由時，這樣做很重要。否則，由於空路徑是任何 URL 的字首，因此路由器即使導向到重導向目標時也會應用重導向，從而建立一個無限迴圈。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"matcher\"></a>\n          <code class=\"\"><span class=\"member-name\">matcher</span>?: <a href=\"api/router/UrlMatcher\" class=\"code-anchor\">UrlMatcher</a></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2m3sy4gnyva8zev8kuqnfx4ih\">自定義 URL 對應功能。不能與 <code>path</code> 一起使用。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"component\"></a>\n          <code class=\"\"><span class=\"member-name\">component</span>?: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ontitesmpdlj3jad6mrk28z4\">路徑對應時實例化的元件。如果要由其子路由指定元件，則可以為空。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"loadComponent\"></a>\n          <code class=\"\"><span class=\"member-name\">loadComponent</span>?: () =&gt; <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;unknown&gt; | Observable&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;unknown&gt; | <a href=\"api/router/DefaultExport\" class=\"code-anchor\">DefaultExport</a>&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;unknown&gt;&gt;&gt; | Promise&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;unknown&gt; | <a href=\"api/router/DefaultExport\" class=\"code-anchor\">DefaultExport</a>&lt;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;unknown&gt;&gt;&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ga6i9qbfuq4r6tyo1u6eg7op\">指定延遲載入元件的物件。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"redirectTo\"></a>\n          <code class=\"\"><span class=\"member-name\">redirectTo</span>?: string</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aavb32k2as4xkf8i2px9qjdfb\">路徑對應時要重導向到的 URL。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dpqtr9lo9sie5smh9okgszcq\">如果 URL 以斜槓 (/) 開頭，則為絕對路徑，否則相對於路徑 URL。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45u3ixd6j8w4yapctq4qee536\">當不存在時，路由器不會重導向。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"outlet\"></a>\n          <code class=\"\"><span class=\"member-name\">outlet</span>?: string</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fxxzqp6g6b4689a7n61cn5w9\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 物件的名字，當路徑對應時會把元件放置在其中。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"canActivate\"></a>\n          <code class=\"\"><span class=\"member-name\">canActivate</span>?: Array&lt;<a href=\"api/router/CanActivateFn\" class=\"code-anchor\">CanActivateFn</a> | <a href=\"api/router/DeprecatedGuard\" class=\"code-anchor\">DeprecatedGuard</a>&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21ilvyjeylrofwot9qwqoglh5\">一個依賴注入標記的陣列，用於查詢 <code><a href=\"api/router/CanActivate\" class=\"code-anchor\">CanActivate</a>()</code> 處理程式，以確定是否允許當前使用者啟用元件。預設情況下，任何使用者都可以啟用。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fetmbxxgsz7ue6jbukqz1exd\">當使用函式而不是 DI 標記時，函式可以呼叫 <code>inject</code> 來獲取任何所需的依賴項。此 <code>inject</code> 呼叫必須在同步上下文中完成。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"canMatch\"></a>\n          <code class=\"\"><span class=\"member-name\">canMatch</span>?: Array&lt;<a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a> | <a href=\"api/router/DeprecatedGuard\" class=\"code-anchor\">DeprecatedGuard</a>&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2v7oypqvujjkhz0mx8l25co1z\">用於查詢 <code><a href=\"api/router/CanMatch\" class=\"code-anchor\">CanMatch</a>()</code> 處理程式的 <code><a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a></code> 或 DI 標記的陣列，以確定是否允許當前使用者對應 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>。預設情況下，任何路由都可以對應。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fetmbxxgsz7ue6jbukqz1exd\">當使用函式而不是 DI 標記時，函式可以呼叫 <code>inject</code> 來獲取任何所需的依賴項。此 <code>inject</code> 呼叫必須在同步上下文中完成。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"canActivateChild\"></a>\n          <code class=\"\"><span class=\"member-name\">canActivateChild</span>?: Array&lt;<a href=\"api/router/CanActivateChildFn\" class=\"code-anchor\">CanActivateChildFn</a> | <a href=\"api/router/DeprecatedGuard\" class=\"code-anchor\">DeprecatedGuard</a>&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"m6r1o9o4oplwx2nmalweou89\">用於查詢 <code><a href=\"api/router/CanActivateChild\" class=\"code-anchor\">CanActivateChild</a>()</code> 處理程式的 DI 標記陣列，以確定是否允許當前使用者啟用元件的子項。預設情況下，任何使用者都可以啟用子項。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fetmbxxgsz7ue6jbukqz1exd\">當使用函式而不是 DI 標記時，函式可以呼叫 <code>inject</code> 來獲取任何所需的依賴項。此 <code>inject</code> 呼叫必須在同步上下文中完成。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"canDeactivate\"></a>\n          <code class=\"\"><span class=\"member-name\">canDeactivate</span>?: Array&lt;<a href=\"api/router/CanDeactivateFn\" class=\"code-anchor\">CanDeactivateFn</a>&lt;any&gt; | <a href=\"api/router/DeprecatedGuard\" class=\"code-anchor\">DeprecatedGuard</a>&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bo6v1ji6zm9v8s7kn68lmj7n\">用於查詢 <code><a href=\"api/router/CanDeactivate\" class=\"code-anchor\">CanDeactivate</a>()</code> 處理程式的 DI 標記陣列，以確定是否允許當前使用者停用元件。預設情況下，任何使用者都可以停用。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fetmbxxgsz7ue6jbukqz1exd\">當使用函式而不是 DI 標記時，函式可以呼叫 <code>inject</code> 來獲取任何所需的依賴項。此 <code>inject</code> 呼叫必須在同步上下文中完成。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"canLoad\"></a>\n          <code class=\"deprecated-api-item\"><span class=\"member-name\">canLoad</span>?: Array&lt;<a href=\"api/router/CanLoadFn\" class=\"code-anchor\">CanLoadFn</a> | <a href=\"api/router/DeprecatedGuard\" class=\"code-anchor\">DeprecatedGuard</a>&gt;</code>\n        </td>\n        <td>\n          <label class=\"api-status-label deprecated\" title=\"本 API 已棄用\">已棄用</label>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtxs8hu8xfqks5rs5fxj3h4l4\">用於查詢 <code><a href=\"api/router/CanLoad\" class=\"code-anchor\">CanLoad</a>()</code> 處理程式的 DI 標記陣列，以確定是否允許當前使用者載入元件。預設情況下，任何使用者都可以載入。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fetmbxxgsz7ue6jbukqz1exd\">當使用函式而不是 DI 標記時，函式可以呼叫 <code>inject</code> 來獲取任何所需的依賴項。此 <code>inject</code> 呼叫必須在同步上下文中完成。</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"951w152o43ik3r72kvpufkeyk\">改為使用 <code>canMatch</code></p>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"data\"></a>\n          <code class=\"\"><span class=\"member-name\">data</span>?: <a href=\"api/router/Data\" class=\"code-anchor\">Data</a></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74c07umcj7opv8qkfclrvo8eb\"><code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 提供給元件的由開發人員定義的額外資料。預設情況下，不傳遞任何額外資料。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"resolve\"></a>\n          <code class=\"\"><span class=\"member-name\">resolve</span>?: <a href=\"api/router/ResolveData\" class=\"code-anchor\">ResolveData</a></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b1giqug6d6pqc6zvdng8s0jm1\">DI 令牌的對映，用於查詢資料解析器。請參閱 <code><a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a></code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"children\"></a>\n          <code class=\"\"><span class=\"member-name\">children</span>?: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95o36c8e4pusfs9asi5xobkju\">一個子 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 物件陣列，用於指定巢狀路由設定。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"loadChildren\"></a>\n          <code class=\"\"><span class=\"member-name\">loadChildren</span>?: <a href=\"api/router/LoadChildren\" class=\"code-anchor\">LoadChildren</a></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"94gyo7yfku1p5mbhi08laxw9q\">一個物件，指定要延遲載入的子路由。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"runGuardsAndResolvers\"></a>\n          <code class=\"\"><span class=\"member-name\">runGuardsAndResolvers</span>?: <a href=\"api/router/RunGuardsAndResolvers\" class=\"code-anchor\">RunGuardsAndResolvers</a></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ek7dxho1xkkew0j03z87z9ae1\">何時在路由上執行警衛和解析器的策略。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27l7v6se7dbvlx4paced4z4r5\">啟用或停用路由時，守衛和/或解析器將始終執行。當路由未更改時，預設行為與 <code>paramsChange</code> 相同。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6uqo2iwzvsn3er31yhkcumryq\"><code>paramsChange</code>：當路徑或路徑引數更改時重新執行警衛和解析器。這不包括查詢引數。此選項是預設值。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bq5q7a6hw9sgt4xof8lu341az\"><code>always</code>：在每次執行時運行。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6tofwqw9w1ttj435p4wxk9d9f\"><code>pathParamsChange</code>：路徑引數更改時重新執行保護器和解析器。這不會比較矩陣或查詢引數。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jr9b5y36guodwhftuuztpjbt\"><code>paramsOrQueryParamsChange</code>：在路徑、矩陣或查詢引數更改時運行。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e81g4ohsxvj4ijuutnz15fch1\"><code>pathParamsOrQueryParamsChange</code>：當路徑引數更改或查詢引數更改時，重新執行保護器和解析器。這不包括矩陣引數。</li>\n</ul>\n\n          <p>參見：</p>\n          <ul>\n            <li><a href=\"api/router/RunGuardsAndResolvers\"><code>RunGuardsAndResolvers</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"providers\"></a>\n          <code class=\"\"><span class=\"member-name\">providers</span>?: Array&lt;<a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a> | <a href=\"api/core/EnvironmentProviders\" class=\"code-anchor\">EnvironmentProviders</a>&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a672jvn7b6y8dykmgrmcqnhht\">用於此 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 及其 <code>children</code> 項的 <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code> 陣列。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6is6cnzssm5z34xfhpdnuz4kb\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 將為此 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 建立一個新的 <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code>，並將其用於此 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 及其 <code>children</code>。如果此路由還有一個回傳 <code><a href=\"api/core/NgModuleRef\" class=\"code-anchor\">NgModuleRef</a></code> 的 <code>loadChildren</code> 函式，則此注入器將被用作延遲載入模組的父級。</p>\n\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n  \n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"simple-configuration\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2197i0blgx8ry9g2slv4rhh2n\">簡單設定<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#simple-configuration\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cz48i0myur6776ot271t5no8l\">以下路由指定在導向到 <code>/team/11/user/bob</code> 時，路由器會在其中建立帶有 'User' 子元件的 'Team' 元件。</p>\n<code-example>\n[{\n  path: 'team/:id',\n component: Team,\n  children: [{\n    path: 'user/:name',\n    component: User\n  }]\n}]\n</code-example>\n<h3 id=\"multiple-outlets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"42vgx2y95lhfqzn08r2xugtb\">多重出口<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#multiple-outlets\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c82d85ei0boapgqwwvrlubhw0\">以下路由建立具有多個出口的兄弟元件。當導向到 <code>/team/11(aux:chat/jim)</code> 時，路由器會在 'Chat' 元件旁邊建立 'Team' 元件。'Chat' 元件放置在 'aux' 出口中。</p>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team\n}, {\n  path: 'chat/:user',\n  component: Chat\n  outlet: 'aux'\n}]\n</code-example>\n<h3 id=\"wild-cards\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a401h6061ueb4ft7imr9drqrr\">萬用字元<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#wild-cards\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66vx85vkx6suovgw5fyop0lto\">以下路由使用萬用字元表示法來指定始終實例化的元件，無論你導向到何處。</p>\n<code-example>\n[{\n  path: '**',\n  component: WildcardComponent\n}]\n</code-example>\n<h3 id=\"redirects\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"hvl8zxsrh2yzgejx0n6963xo\">重導向<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#redirects\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5oul1w2ee7cstwavxx4yn9nn\">以下路由在查詢子路徑時使用 <code>redirectTo</code> 屬性忽略給定 URL 的一部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ho55ru5omla15vsqu669p1gr\">當導向到『/team/11/legacy/user/jim』時，路由器將 URL 段『/team/11/legacy/user/jim』更改為『/team/11/user/jim』，然後實例化包含 User 子元件的團隊元件。</p>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team,\n  children: [{\n    path: 'legacy/user/:name',\n    redirectTo: 'user/:name'\n  }, {\n    path: 'user/:name',\n    component: User\n  }]\n}]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97ox2y76b6igp8kf2z8p6agxj\">重導向路徑可以是相對的（如本範例所示），也可以是絕對的。<code>redirectTo</code> 值更改為絕對 URL 段 '/user/:name'，則結果 URL 也是絕對 URL，'/user/jim'。</p>\n<h3 id=\"empty-path\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aajlfv0qvuxr56o6fv8nell8p\">空路徑<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#empty-path\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aozfj0rurb4t6wx7tzt5tgqbw\">在下列設定中，當導向到 <code>/team/11</code> 時，路由器會實例化 'AllUsers' 元件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3wdio7grvvw3f0r4c3boayuzl\">在以下設定中，導向到 <code>/team/11</code> 時，路由器會實例化 'AllUsers' 元件。</p>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team,\n  children: [{\n    path: '',\n    component: AllUsers\n  }, {\n    path: 'user/:name',\n    component: User\n  }]\n}]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8lmmyphny41mr2l8mm6d6gcpo\">請注意，空路徑路由會繼承其父級的引數和數據。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ltgyth3l2rs0rpk9hixg5ho9\">請注意，空路徑路由會繼承其父級的引數和數據。</p>\n<code-example>\n[{\n  path: 'team/:id',\n  component: Team,\n  children: [{\n    path: '',\n    component: WrapperCmp,\n    children: [{\n      path: 'user/:name',\n      component: User\n    }]\n  }]\n}]\n</code-example>\n<h3 id=\"matching-strategy\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2f836ek0cvuqndi4qi2mpllfc\">對應策略<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#matching-strategy\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9kjeu633jz79ggyzsuna3ibux\">預設的路徑對應策略是 'prefix'，這意味著路由器從左開始檢查 URL 元素以檢視 URL 是否與指定的路徑對應。比如，'/team/11/user' 與 'team/:id' 對應。</p>\n<code-example>\n[{\n  path: '',\n  pathMatch: 'prefix', //default\n  redirectTo: 'main'\n}, {\n  path: 'main',\n  component: Main\n}]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f2jtggdkkkmzlvcyo20o63yfh\">在以下範例中，提供 'full' <code>pathMatch</code> 策略可確保路由器僅在導向到 '/' 時才應用重導向。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"emwvuainzedcr7pxd9wbu68ph\">在以下範例中，提供 'full' <code>pathMatch</code> 策略可確保路由器若且唯若導向到 '/' 時應用重導向。</p>\n<code-example>\n[{\n  path: '',\n  pathMatch: 'full',\n  redirectTo: 'main'\n}, {\n  path: 'main',\n  component: Main\n}]\n</code-example>\n<h3 id=\"componentless-routes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5g9jo11ohe40czope4un0a4zh\">無元件路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#componentless-routes\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3lwg0ym6kmbed6a2k974vj14h\">在以下範例中，'MainChild' 和 'AuxChild' 是同級。當導向到 'parent/10/(a//aux:b)' 時，該路由會實例化彼此相鄰的主要子元件和 aux 子元件。為此，應用程式元件必須定義主要和輔助出口。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cpufijuzn0cry90fqhf8yhzcz\">在以下範例中，『MainChild』和『AuxChild』是同級。當導向到 'parent/10/(a//aux:b)' 時，該路由會實例化彼此相鄰的主子元件和輔助子元件。為此，應用程式元件必須定義主要的出口和輔助出口。</p>\n<code-example>\n[{\n   path: 'parent/:id',\n   children: [\n     { path: 'a', component: MainChild },\n     { path: 'b', component: AuxChild, outlet: 'aux' }\n   ]\n}]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8wm6fc5dobaybc1lnbjxrk621\">當用空路徑字串定義子元件時，這特別有用，如以下範例所示。使用此設定，導向到 '/parent/10' 將建立主要子元件和 aux 元件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"79hxlqtb1p84laa9s1hps3cy4\">當使用空路徑字串定義子元件時，這特別有用，如下例所示。使用此設定，導向到 '/parent/10' 會建立主子元件和 aux 元件。</p>\n<code-example>\n[{\n   path: 'parent/:id',\n   children: [\n     { path: '', component: MainChild },\n     { path: '', component: AuxChild, outlet: 'aux' }\n   ]\n}]\n</code-example>\n<h3 id=\"lazy-loading\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alchbgipmlwh9jnz90njblswq\">延遲載入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Route#lazy-loading\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bo6657akh2mzgut89fbjs41gt\">給定以下範例路由，路由器將使用瀏覽器原生匯入體系按需延遲載入相關模組。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3h3n1ol9r1vqz02g40hijrbbb\">對於以下範例路由，路由器將使用瀏覽器原生匯入系統按需延遲載入關聯的模組。</p>\n<code-example>\n[{\n  path: 'lazy',\n  loadChildren: () =&gt; import('./lazy-route/lazy.module').then(mod =&gt; mod.LazyModule),\n}];\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core/importProvidersFrom\n - api/router\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanActivateChildFn\n - api/router/CanActivateFn\n - api/router/CanDeactivate\n - api/router/CanDeactivateFn\n - api/router/CanLoad\n - api/router/CanLoadFn\n - api/router/CanMatch\n - api/router/CanMatchFn\n - api/router/Data\n - api/router/DefaultExport\n - api/router/ExtraOptions\n - api/router/LoadChildrenCallback\n - api/router/NoPreloading\n - api/router/PreloadAllModules\n - api/router/PreloadingStrategy\n - api/router/ROUTES\n - api/router/Resolve\n - api/router/ResolveData\n - api/router/ResolveFn\n - api/router/RouteConfigLoadEnd\n - api/router/RouteConfigLoadStart\n - api/router/Router\n - api/router/RouterConfigOptions\n - api/router/RouterModule\n - api/router/RouterOutlet\n - api/router/RouterOutletContract\n - api/router/Routes\n - api/router/RunGuardsAndResolvers\n - api/router/TitleStrategy\n - api/router/UrlMatcher\n - api/router/defaultUrlMatcher\n - api/router/mapToCanActivate\n - api/router/mapToCanActivateChild\n - api/router/mapToCanDeactivate\n - api/router/mapToCanMatch\n - api/router/mapToResolve\n - api/router/provideRouter\n - api/router/testing/RouterTestingHarness\n - api/router/withComponentInputBinding\n - guide/cheatsheet\n - guide/deprecations\n - guide/route-animations\n - guide/router\n - guide/router-reference\n - guide/router-tutorial\n - guide/router-tutorial-toh\n - guide/standalone-components\n - guide/update-to-version-14\n - tutorial/tour-of-heroes/toh-pt5\n-->\n<!-- links from this doc:\n - /api\n - api/core/EnvironmentInjector\n - api/core/EnvironmentProviders\n - api/core/Injectable\n - api/core/NgModuleRef\n - api/core/Provider\n - api/core/Type\n - api/router\n - api/router/ActivatedRoute\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanActivateChildFn\n - api/router/CanActivateFn\n - api/router/CanDeactivate\n - api/router/CanDeactivateFn\n - api/router/CanLoad\n - api/router/CanLoadFn\n - api/router/CanMatch\n - api/router/CanMatchFn\n - api/router/Data\n - api/router/DefaultExport\n - api/router/DeprecatedGuard\n - api/router/LoadChildren\n - api/router/Resolve\n - api/router/ResolveData\n - api/router/ResolveFn\n - api/router/Route#canActivate\n - api/router/Route#canActivateChild\n - api/router/Route#canDeactivate\n - api/router/Route#canLoad\n - api/router/Route#canMatch\n - api/router/Route#children\n - api/router/Route#component\n - api/router/Route#componentless-routes\n - api/router/Route#data\n - api/router/Route#description\n - api/router/Route#empty-path\n - api/router/Route#instance-properties\n - api/router/Route#lazy-loading\n - api/router/Route#loadChildren\n - api/router/Route#loadComponent\n - api/router/Route#matcher\n - api/router/Route#matching-strategy\n - api/router/Route#multiple-outlets\n - api/router/Route#outlet\n - api/router/Route#path\n - api/router/Route#pathMatch\n - api/router/Route#providers\n - api/router/Route#redirectTo\n - api/router/Route#redirects\n - api/router/Route#resolve\n - api/router/Route#route\n - api/router/Route#runGuardsAndResolvers\n - api/router/Route#simple-configuration\n - api/router/Route#title\n - api/router/Route#usage-notes\n - api/router/Route#wild-cards\n - api/router/Router\n - api/router/RouterOutlet\n - api/router/Routes\n - api/router/RunGuardsAndResolvers\n - api/router/TitleStrategy\n - api/router/UrlMatcher\n - guide/router\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/models.ts#L268-L678\n-->"}