{"id":"api/router/RouterOutletContract","title":"RouterOutletContract","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/router\", \"name\": \"@angular/router\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/router/RouterOutletContract\", \"name\": \"RouterOutletContract\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/router\">@angular/router</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L36-L131\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"routeroutletcontract\">RouterOutletContract<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#routeroutletcontract\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4xdg0aqctouf9pu965x0mc8ne\">一个接口，定义了为 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 开发组件出口的契约。</p>\n\n    <p><a href=\"api/router/RouterOutletContract#description\">查看更多...</a></p>\n  </section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/router/RouterOutletContract\" class=\"code-anchor\">RouterOutletContract</a> {\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#isActivated\"><span class=\"member-name\">isActivated</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#component\"><span class=\"member-name\">component</span>: Object | null</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#activatedRouteData\"><span class=\"member-name\">activatedRouteData</span>: Data</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#activatedRoute\"><span class=\"member-name\">activatedRoute</span>: ActivatedRoute | null</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#activateEvents\"><span class=\"member-name\">activateEvents</span>?: EventEmitter&lt;unknown&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#deactivateEvents\"><span class=\"member-name\">deactivateEvents</span>?: EventEmitter&lt;unknown&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#attachEvents\"><span class=\"member-name\">attachEvents</span>?: EventEmitter&lt;unknown&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#detachEvents\"><span class=\"member-name\">detachEvents</span>?: EventEmitter&lt;unknown&gt;</a>\n  <a class=\"code-anchor\" href=\"api/router/RouterOutletContract#supportsBindingToComponentInputs\"><span class=\"member-name\">supportsBindingToComponentInputs</span>?: true</a><br><a class=\"code-anchor\" href=\"api/router/RouterOutletContract#activateWith\"><span class=\"member-name\">activateWith</span>(activatedRoute: ActivatedRoute, environmentInjector: EnvironmentInjector): void</a><br><a class=\"code-anchor\" href=\"api/router/RouterOutletContract#deactivate\"><span class=\"member-name\">deactivate</span>(): void</a><br><a class=\"code-anchor\" href=\"api/router/RouterOutletContract#detach\"><span class=\"member-name\">detach</span>(): ComponentRef&lt;unknown&gt;</a><br><a class=\"code-anchor\" href=\"api/router/RouterOutletContract#attach\"><span class=\"member-name\">attach</span>(ref: ComponentRef&lt;unknown&gt;, activatedRoute: ActivatedRoute): void</a>\n}\n</code-example>\n\n\n  <div class=\"descendants class\">\n    <h2 id=\"实现类\">实现类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#实现类\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>\n    \n  </li>\n</ul>\n  </div>\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><a href=\"api/router/ChildrenOutletContexts\"><code>ChildrenOutletContexts</code></a></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e4eeokuasbnlf3jq8zfow6sul\">出口充当占位符，Angular 会根据当前的路由器状态动态填充。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8r8lzgj8r08pwyns4ed552n3l\">路由器出口应该通过 ChildrenOutletContexts#onChildOutletCreated 向 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 注册自己，并通过 <code><a href=\"api/router/ChildrenOutletContexts\" class=\"code-anchor\">ChildrenOutletContexts</a>#onChildOutletCreated</code> <code><a href=\"api/router/ChildrenOutletContexts\" class=\"code-anchor\">ChildrenOutletContexts</a>#onChildOutletDestroyed</code> 注册。当 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 识别到匹配的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 时，它会在 <code><a href=\"api/router/ChildrenOutletContexts\" class=\"code-anchor\">ChildrenOutletContexts</a></code> 中查找注册的插座并激活它。</p>\n</section>\n  \n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"isActivated\"></a>\n          <code class=\"\"><span class=\"member-name\">isActivated</span>: boolean</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9l1jotg06vp1ml2c5l21bib6g\">给定的插座是否已激活。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2zqyfq6ymnanj10qyolvi6f55\">如果插座有活动组件，则认为它是“激活的”。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"component\"></a>\n          <code class=\"\"><span class=\"member-name\">component</span>: Object | null</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5etuimi3hm6kj7bavdpcgwxfm\">已激活组件的实例；如果未激活插座，则为 <code>null</code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"activatedRouteData\"></a>\n          <code class=\"\"><span class=\"member-name\">activatedRouteData</span>: <a href=\"api/router/Data\" class=\"code-anchor\">Data</a></code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4h88zlq9nv7xzjhfdu5odule\"><code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 快照的 <code><a href=\"api/router/Data\" class=\"code-anchor\">Data</a></code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"activatedRoute\"></a>\n          <code class=\"\"><span class=\"member-name\">activatedRoute</span>: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> | null</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qboxhhv4ksjr83iv8twbgwk6\">插座的 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，如果此插座未激活，则为 <code>null</code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"activateEvents\"></a>\n          <code class=\"\"><span class=\"member-name\">activateEvents</span>?: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;unknown&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dfxcgj6sleeynsf5sxa9viyzk\">实例化新组件时发出 activate 事件</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"deactivateEvents\"></a>\n          <code class=\"\"><span class=\"member-name\">deactivateEvents</span>?: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;unknown&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50yznvxf37x635raawa0mgg7k\">当组件被销毁时发出 deactivate 事件。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"attachEvents\"></a>\n          <code class=\"\"><span class=\"member-name\">attachEvents</span>?: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;unknown&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bw7egqsa8we1doxd6hbe72gke\">当 <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code> 指示重新附加以前分离的子树时，发出一个附加的组件实例。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"detachEvents\"></a>\n          <code class=\"\"><span class=\"member-name\">detachEvents</span>?: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;unknown&gt;</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ao7h4a9dhre6jni8h6xa512a3\">当 <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code> 指示分离子树时发出一个分离的组件实例。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"supportsBindingToComponentInputs\"></a>\n          <code class=\"\"><span class=\"member-name\">supportsBindingToComponentInputs</span>?: true</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1o4151zr0pjq95z887aqzv7hv\">用于指示出口能够将数据从 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 绑定到出口组件的输入。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89h0zjncetey2dkse2qhxhz85\">当这是 <code>undefined</code> 或 <code>false</code> 并且开发人员已选择使用 <code><a href=\"api/router/withComponentInputBinding\" class=\"code-anchor\">withComponentInputBinding</a></code> 功能时，如果在应用程序中使用此出口，将在开发模式下记录警告。</p>\n\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n  \n<section class=\"instance-methods\">\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"activateWith\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"activatewith\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b1sa9vgotx3zbshvoaaalym4\">activateWith()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#activatewith\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L70-L77\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uieaxiotqklr3t8ckchovvu3\">在插座应该激活（创建组件）时由 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 调用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">activateWith</span>(activatedRoute: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>, environmentInjector: <a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92kmdg4y6rczjdf4jy9cslzgw\"><a id=\"\"></a>\n        <code>activatedRoute</code></td>\n      <td class=\"param-type\"><code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"em29j0lzg3obl4r8sd9yvjz8u\"><a id=\"\"></a>\n        <code>environmentInjector</code></td>\n      <td class=\"param-type\"><code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"deactivate\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"deactivate\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5vz92oeo8hrp57udsvejtnl7e\">deactivate()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#deactivate\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L78-L85\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5phi2rm7205l0b2yrzik68dqw\">销毁当前激活的组件的请求。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">deactivate</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2woquyh2gddjoxqftgimblwm\">当 <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code> 表明应该删除 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 但存储以供以后重用而不是销毁时，<code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 将改为调用 <code>detach</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"detach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"detach\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6om6kr9l7pzf8jmcc95p35e2y\">detach()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#detach\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L86-L93\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7scdcn4vdfegpcu4ojp252zk1\">受 <code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code> 的指示，从子树中分离开时调用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">detach</span>(): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;unknown&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;unknown&gt;</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9p1khgf57jz8xux309te2upnc\">这类似于 <code>deactivate</code>，但激活的组件 <em> 不应 </em> 被销毁。相反，它会被返回，以便稍后可以通过 <code>attach</code> 方法重新附加它。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"attach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"attach\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"abadb6a1amr40jly3wryw9ibm\">attach()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/RouterOutletContract#attach\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L94-L98\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfmpwao1nkg9usrnrfkxv4xrf\"><code><a href=\"api/router/RouteReuseStrategy\" class=\"code-anchor\">RouteReuseStrategy</a></code> 的指示，把以前分离的子树重新附加回来时调用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">attach</span>(ref: <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;unknown&gt;, activatedRoute: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f2ez1orziud2mmfst0llzsrbp\"><a id=\"\"></a>\n        <code>ref</code></td>\n      <td class=\"param-type\"><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&lt;unknown&gt;</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92kmdg4y6rczjdf4jy9cslzgw\"><a id=\"\"></a>\n        <code>activatedRoute</code></td>\n      <td class=\"param-type\"><code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/ChildrenOutletContexts\n - api/router/OutletContext\n - guide/update-to-version-14\n-->\n<!-- links from this doc:\n - /api\n - api/core/ComponentRef\n - api/core/EnvironmentInjector\n - api/core/EventEmitter\n - api/router\n - api/router/ActivatedRoute\n - api/router/ChildrenOutletContexts\n - api/router/Data\n - api/router/Route\n - api/router/RouteReuseStrategy\n - api/router/Router\n - api/router/RouterOutlet\n - api/router/RouterOutletContract#activateEvents\n - api/router/RouterOutletContract#activateWith\n - api/router/RouterOutletContract#activatedRoute\n - api/router/RouterOutletContract#activatedRouteData\n - api/router/RouterOutletContract#activatewith\n - api/router/RouterOutletContract#attach\n - api/router/RouterOutletContract#attachEvents\n - api/router/RouterOutletContract#component\n - api/router/RouterOutletContract#deactivate\n - api/router/RouterOutletContract#deactivateEvents\n - api/router/RouterOutletContract#description\n - api/router/RouterOutletContract#detach\n - api/router/RouterOutletContract#detachEvents\n - api/router/RouterOutletContract#instance-methods\n - api/router/RouterOutletContract#instance-properties\n - api/router/RouterOutletContract#isActivated\n - api/router/RouterOutletContract#routeroutletcontract\n - api/router/RouterOutletContract#see-also\n - api/router/RouterOutletContract#supportsBindingToComponentInputs\n - api/router/RouterOutletContract#实现类\n - api/router/withComponentInputBinding\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L36-L131\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L70-L77\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L78-L85\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L86-L93\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/directives/router_outlet.ts#L94-L98\n-->"}