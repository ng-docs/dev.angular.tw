{"id":"api/router/UrlCreationOptions","title":"UrlCreationOptions","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/router\", \"name\": \"@angular/router\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/router/UrlCreationOptions\", \"name\": \"UrlCreationOptions\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/router\">@angular/router</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/navigation_transition.ts#L75-L182\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"urlcreationoptions\">UrlCreationOptions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/UrlCreationOptions#urlcreationoptions\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ct3cq68p3tcl8xs1c7fuwe4hz\">修改 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> URL 的选项。将包含这些属性中的任何一个的对象提供给 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航函数，以控制目标 URL 的构建方式。</p>\n\n  </section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/router/UrlCreationOptions\" class=\"code-anchor\">UrlCreationOptions</a> {\n  <a class=\"code-anchor\" href=\"api/router/UrlCreationOptions#relativeTo\"><span class=\"member-name\">relativeTo</span>?: ActivatedRoute | null</a>\n  <a class=\"code-anchor\" href=\"api/router/UrlCreationOptions#queryParams\"><span class=\"member-name\">queryParams</span>?: Params | null</a>\n  <a class=\"code-anchor\" href=\"api/router/UrlCreationOptions#fragment\"><span class=\"member-name\">fragment</span>?: string</a>\n  <a class=\"code-anchor\" href=\"api/router/UrlCreationOptions#queryParamsHandling\"><span class=\"member-name\">queryParamsHandling</span>?: QueryParamsHandling | null</a>\n  <a class=\"code-anchor\" href=\"api/router/UrlCreationOptions#preserveFragment\"><span class=\"member-name\">preserveFragment</span>?: boolean</a>\n}\n</code-example>\n\n  <div class=\"descendants interface\">\n    <h2 id=\"子接口\">子接口<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/UrlCreationOptions#子接口\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/router/NavigationExtras\" class=\"code-anchor\">NavigationExtras</a></code>\n    \n  </li>\n</ul>\n  </div>\n\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/UrlCreationOptions#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><a href=\"api/router/Router#navigate\"><code>Router#navigate</code></a></li>\n    <li><a href=\"api/router/Router#createUrlTree\"><code>Router#createUrlTree</code></a></li>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ca90yy2aiwg50ef3n4d0d9a1\"><a href=\"guide/router\">路由和导航指南</a></p></li>\n  </ul>\n</section>\n  \n  \n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/UrlCreationOptions#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"relativeTo\"></a>\n          <code class=\"\"><span class=\"member-name\">relativeTo</span>?: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> | null</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cwgq3c4y4u3fsnnol0dctuliz\">允许从当前激活的路由进行相对导航。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"88qjgokstzv274kb00q4r95wj\">比如，考虑下列路由器配置，parent 路由拥有两个子路由。</p>\n<code-example>\n[{\n  path: 'parent',\n  component: ParentComponent,\n  children: [{\n    path: 'list',\n    component: ListComponent\n  },{\n    path: 'child',\n    component: ChildComponent\n  }]\n}]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3366wzi9f4j31cjhklc23pcwf\">下面的 <code>go()</code> 函数会把目标 URI 解释为相对于已激活路由 <code>child</code> 的，从而导航到 <code>list</code> 路由。</p>\n<code-example>\n @<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({...})\n class ChildComponent {\n   constructor(private router: <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>, private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>) {}\n\n   go() {\n     router.navigate(['../list'], { relativeTo: this.route });\n   }\n }\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6xk6c7a6icbdzxznq12a6dyz\">值为 <code>null</code> 或 <code>undefined</code> 表明导航命令应该相对于根应用。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"queryParams\"></a>\n          <code class=\"\"><span class=\"member-name\">queryParams</span>?: <a href=\"api/router/Params\" class=\"code-anchor\">Params</a> | null</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bxutb7mlrutj40hzaio3es35z\">设置 URL 的查询参数。</p>\n          <code-example>\n// Navigate to /results?page=1\nrouter.navigate(['/results'], { queryParams: { page: 1 } });\n</code-example>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"fragment\"></a>\n          <code class=\"\"><span class=\"member-name\">fragment</span>?: string</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2f55sjprjkssplqd60m5tuwzf\">设置 URL 的哈希片段（<code>#</code>）。</p>\n          <code-example>\n// Navigate to /results#top\nrouter.navigate(['/results'], { fragment: 'top' });\n</code-example>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"queryParamsHandling\"></a>\n          <code class=\"\"><span class=\"member-name\">queryParamsHandling</span>?: <a href=\"api/router/QueryParamsHandling\" class=\"code-anchor\">QueryParamsHandling</a> | null</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bm6s53hjdlszvbafm05s0s134\">如何在路由器链接中处理查询参数以进行下一个导航。为下列值之一：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6o8pl0g3jx7tqdhl30b90s2fu\"><code>preserve</code> ：保留当前参数。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b0gr6f0ny355jzpitwj2xis9\"><code>merge</code> ：合并新的当前参数。</li>\n</ul>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2nnfwivmg0jt2zg7h3133x58u\">“preserve” 选项将放弃所有新的查询参数：</p>\n<code-example>\n// from /view1?page=1 to/view2?page=1\nrouter.navigate(['/view2'], { queryParams: { page: 2 },  queryParamsHandling: \"preserve\"\n});\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d23n0mffor76rdtnq1jvfih2b\">“merge” 选项会将新的查询参数附加到当前 URL 的参数中：</p>\n<code-example>\n// from /view1?page=1 to/view2?page=1&amp;otherKey=2\nrouter.navigate(['/view2'], { queryParams: { otherKey: 2 },  queryParamsHandling: \"merge\"\n});\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rg23n2h513etlsk6jf9lwjde\"><code>queryParams</code> 对象中的参数之间发生键名冲突，则使用新值。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"preserveFragment\"></a>\n          <code class=\"\"><span class=\"member-name\">preserveFragment</span>?: boolean</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bsdf2l78r8nvnb9sfbkanogji\">在后续导航时保留 <code>#</code> 片段</p>\n          <code-example>\n// Preserve fragment from /results#top to /view#top\nrouter.navigate(['/view'], { preserveFragment: true });\n</code-example>\n\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/NavigationExtras\n - api/router/QueryParamsHandling\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkWithHref\n - guide/deprecations\n-->\n<!-- links from this doc:\n - /api\n - api/core/Component\n - api/router\n - api/router/ActivatedRoute\n - api/router/NavigationExtras\n - api/router/Params\n - api/router/QueryParamsHandling\n - api/router/Router\n - api/router/Router#createUrlTree\n - api/router/Router#navigate\n - api/router/UrlCreationOptions#fragment\n - api/router/UrlCreationOptions#instance-properties\n - api/router/UrlCreationOptions#preserveFragment\n - api/router/UrlCreationOptions#queryParams\n - api/router/UrlCreationOptions#queryParamsHandling\n - api/router/UrlCreationOptions#relativeTo\n - api/router/UrlCreationOptions#see-also\n - api/router/UrlCreationOptions#urlcreationoptions\n - api/router/UrlCreationOptions#子接口\n - guide/router\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/router/src/navigation_transition.ts#L75-L182\n-->"}