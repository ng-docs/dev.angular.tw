{"id":"api/core","title":"@angular/core","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/PACKAGE.md\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n<header class=\"api-header\">\n  <h1 id=\"angularcore\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dlbdahpjd7ceav05i7qp1s59\">@angular/core<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#angularcore\"><i class=\"material-icons\">link</i></a></h1>\n  <label class=\"api-type-label package\">package</label>\n  \n  \n  \n</header>\n\n  \n\n  <div class=\"api-body\"><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13mzhwq7xm2a06q7unc11cdza\">實現 Angular 的核心功能、低階服務和實用工具。</p>\n\n  <ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1kn1gj8gjlkjpay9rwalrqzsz\">為元件、檢視層次結構、變更檢測、渲染和事件處理定義類別基礎設施。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5r00hw1ov6a4eyd360ydw6s23\">定義為 Angular 構造提供元資料和上下文的裝飾器。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aaz4zqngnyudcyid25vjgooc7\">定義依賴注入（DI）、國際化（i18n）和各種測試和除錯設施的基礎設施。</p>\n</li>\n</ul>\n\n\n  \n\n  \n<h2 id=\"entry-points\">入口點<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#entry-points\"><i class=\"material-icons\">link</i></a></h2>\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"主要\">主要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#主要\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"primary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fkfm2umomg24u7zlbw0i7dqq\">主要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#primary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core#primary-entry-point-exports\">@angular/core</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13mzhwq7xm2a06q7unc11cdza\">實現 Angular 的核心功能、低階服務和實用工具。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"次要\">次要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#次要\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"secondary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qmb2o62wilek3owziq44q5ie\">次要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#secondary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/rxjs-interop\">@angular/core/rxjs-interop</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1v0x0rq2k5m92etsgnbh9uqli\">包含與在Angular的訊號驅動回應系統中使用RxJS函式庫相關的實用程式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/testing\">@angular/core/testing</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dskt1vvqrfjvu9qk9xjo40zfl\">為測試 Angular 核心功能提供基礎設施</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n\n\n<h2 id=\"primary-entry-point-exports\">主要入口點的匯出<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#primary-entry-point-exports\"><i class=\"material-icons\">link</i></a></h2>\n\n  \n  \n  \n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#ngmodules\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationModule\">ApplicationModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"do56amxom47taewbwp5fsbmq\">由 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 重新匯出，當你使用 CLI <code>new</code> 指令建立新應用時，它會自動包含在根 <code>AppModule</code>\n中。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"類別\">類別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#類別\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"classes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtpuzegyjmcbul5yz5jn1ham3\">類別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#classes\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationInitStatus\">ApplicationInitStatus</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1l22r6kx49f6ncsp6gcjrv57o\">反映正在執行的 <a href=\"api/core/APP_INITIALIZER\"><code>APP_INITIALIZER</code></a> 函式狀態的類別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationRef\">ApplicationRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7rscrgt3ut9qra3k2gfu9sjkh\">對頁面上執行的 Angular 應用程式的引用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ChangeDetectorRef\">ChangeDetectorRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccxhcf05bnm3isno2l815upyn\">Angular 各種檢視的基礎類別，提供變更檢測功能。\n變更檢測樹會收集要檢查的所有檢視。\n使用這些方法從樹中新增或移除檢視、初始化變更檢測並顯式地把這些檢視標記為<em>髒的</em>，意思是它們變了、需要重新渲染。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/Compiler\" class=\"deprecated-api-item\">Compiler</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> Ivy JIT mode doesn't require accessing this symbol.\nSee <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for\nadditional context.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eaa3ry2t4yjuspakhemj8qhn9\">本底層服務用於供 Angular 編譯器在執行期間建立 <a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a>，該工廠以後可用於建立和渲染元件實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/CompilerFactory\" class=\"deprecated-api-item\">CompilerFactory</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> Ivy JIT mode doesn't require accessing this symbol.\nSee <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for\nadditional context.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83dh98h8d63ozmsou6k37t0ml\">用於建立編譯器的工廠</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ComponentFactory\" class=\"deprecated-api-item\">ComponentFactory</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> Angular no longer requires Component factories. Please use other APIs where\nComponent class can be used directly.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80ind153viey4ctl1kfh2mnjj\">可用來動態建立元件的工廠的基底類別。<code>resolveComponentFactory()</code> 實例化給定型別的元件的工廠。使用生成的 <code>ComponentFactory.create()</code> 方法建立該類別型的元件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ComponentFactoryResolver\" class=\"deprecated-api-item\">ComponentFactoryResolver</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> Angular no longer requires Component factories. Please use other APIs where\nComponent class can be used directly.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt56w4i5m00n6jkhmcxeaihbk\">一個簡單的登錄檔，它將 <code>Components</code> 對映到生成的 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 類別，該類別可用於建立元件的實例。用於獲取給定元件類別型的工廠，然後使用工廠的 <code>create()</code> 方法建立該類別型的元件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ComponentRef\">ComponentRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7xq3pgtmtqi5og14kki8083g\">表示由 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 建立的元件。提供對元件實例和相關物件的訪問，並提供銷燬實例的方法。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DebugElement\">DebugElement</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DebugEventListener\">DebugEventListener</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DebugNode\">DebugNode</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/DefaultIterableDiffer\" class=\"deprecated-api-item\">DefaultIterableDiffer</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> v4.0.0 - Should not be part of public API.</p>\n\n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DestroyRef\">DestroyRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6copi1qbr7cvztclsihruksnq\"><code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> 允許你設定回呼以針對任何清理或銷燬行為執行。這種銷燬的範圍取決於注入 <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> 位置。如果將 <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> 注入到元件或指令中，則回呼會在該組件或指令被銷燬時運行。否則回呼會在相應的注入器被銷燬時運行。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ElementRef\">ElementRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ofvl0ucd7p1bzbm5rhowypdh\">對視圖中某個原生元素的套件裝器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EmbeddedViewRef\">EmbeddedViewRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezya5m49wcwkv7tlv9neqwd9j\">表示檢視容器中的 Angular\n<a href=\"guide/glossary#view\">檢視</a>。<a href=\"guide/glossary#view-tree\">嵌入檢視</a>可以從在範本中定義它的宿主元件之外的元件中引用，也可以由\n<code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> 進行獨立定義。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EnvironmentInjector\">EnvironmentInjector</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76p05btad5fl02dvoxcxn8n4w\">建立一個新的 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>，它是使用 <code><a href=\"api/core/InjectorType\" class=\"code-anchor\">InjectorType</a>&lt;any&gt;</code> 的 <code>defType</code> 設定的。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ErrorHandler\">ErrorHandler</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cu0mv3x4knr6mk0e0rv7nng77\">提供用於集中式異常處理的掛鉤。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EventEmitter\">EventEmitter</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4um5bnqbocn6y4xpep95sa1kv\">用在帶有 <code>@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a></code>\n指令的元件中，以同步或非同步方式發出自定義事件，並透過訂閱實例來為這些事件註冊處理器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/HostAttributeToken\">HostAttributeToken</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4kxeljllox86rwni65adnwlxd\">建立一個令牌，可用於注入主機節點的靜態屬性。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectionToken\">InjectionToken</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"tlt9lppt8ehyxan6ic3r7biq\">建立可用於 DI 提供者的令牌。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Injector\">Injector</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76v1zbotyzuytp0oauebdehwm\">具體的注入器實現此介面。注入器設定為使用\n<a href=\"guide/dependency-injection-providers\">提供者</a>將各種型別的依賴關聯到\n<a href=\"guide/dependency-injection-providers\">注入令牌</a>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableDiffers\">IterableDiffers</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c2kystubezv5pwwzmevydhcsl\">NgFor、NgClass 等使用的不同迭代策略的儲存庫。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueDiffers\">KeyValueDiffers</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cd1kfbzw9zp3hyakzu7sfy27\">NgClass、NgStyle 等使用的不同對映表差異策略的儲存庫。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ModuleWithComponentFactories\" class=\"deprecated-api-item\">ModuleWithComponentFactories</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> Ivy JIT mode doesn't require accessing this symbol.\nSee <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for\nadditional context.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4x1ere3xrlgqtyfshk5tcw4wj\">NgModuleFactory 和一些 ComponentFactory 的組合。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/NgModuleFactory\" class=\"deprecated-api-item\">NgModuleFactory</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> This class was mostly used as a part of ViewEngine-based JIT API and is no longer needed in Ivy\nJIT mode. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a>\nfor additional context. Angular provides APIs that accept NgModule classes directly (such as\n<a href=\"api/core/PlatformRef#bootstrapModule\">PlatformRef.bootstrapModule</a> and\n<a href=\"api/core/createNgModule\">createNgModule</a>), consider switching to those APIs instead of\nusing factory-based ones.</p>\n\n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgModuleRef\">NgModuleRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9dwbj6gcdsirszqhgwauxtj1c\"><code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 建立的 <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> 的實例。提供對 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 實例和相關物件的訪問。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgProbeToken\" class=\"deprecated-api-item\">NgProbeToken</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> </p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"866dj4c42c67b824y858jh4b0\">本令牌可以在 NgProbe 中註冊自己的第三方元件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgZone\">NgZone</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xfcxr50sz036hhsc9i26qrdq\">一種用於在 Angular Zone 內部或外部執行任務的可注入服務。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PlatformRef\">PlatformRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6k53d546no03vsr78xhw4jiy\">Angular 平台是 Angular 在網頁上的入口點。每個頁面只有一個平台。頁面上執行的每個 Angular 應用程式所共有的服務（比如反射）都在其範圍內繫結。當使用 <code>PlatformBrowser</code> 這樣的平台工廠建立平台時，將隱式初始化此頁面的平台；也可以透過呼叫 <code><a href=\"api/core/createPlatform\" class=\"code-anchor\">createPlatform</a>()</code> 函式來顯式初始化此頁面的平台。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Query\">Query</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9on3cmm0beepyj8oosr2iry7r\">查詢元資料的基底類別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/QueryList\">QueryList</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1su5ac26kswbbfp9z557jxoa3\">一個不可修改的條目清單，當應用狀態變化時，Angular 會保證它是最新的。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Renderer2\">Renderer2</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9z3045etspgaglog8t2vcvfmu\">擴充套件此基底類別以實現自定義渲染器。預設情況下，Angular 會把範本渲染成 DOM。\n你可以使用自定義渲染器來攔截渲染類別呼叫，或用於渲染一些非 DOM 的東西。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/RendererFactory2\">RendererFactory2</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"79extbns73wmnu277nrf51fza\">建立並初始化實現 <code><a href=\"api/core/Renderer2\" class=\"code-anchor\">Renderer2</a></code> 基底類別的自定義渲染器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Sanitizer\">Sanitizer</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"az9p5z7u6i0tcvtbvay3zl6p4\">檢視使用消毒器來對潛在的危險值進行無害化處理。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SimpleChange\">SimpleChange</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bzr70xn94e8uc524dg9ihw7j\">表示指令實例上單個屬性從先前值到新值的基本變更物件。在 <a href=\"api/core/SimpleChanges\"><code>SimpleChanges</code></a> 物件中作為值傳遞給 <code>ngOnChanges</code> 掛鉤。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TemplateRef\">TemplateRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"390t567mav8r5zcd87h64je0h\">表示一個內嵌範本，它可用於實例化內嵌的檢視。\n要想根據範本實例化內嵌的檢視，請使用 <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> 的 <code>createEmbeddedView()</code> 方法。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Testability\">Testability</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9tav3ytzyf2ocvi3lse6ewc94\">Testability 服務提供了可以從瀏覽器訪問的測試鉤子。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TestabilityRegistry\">TestabilityRegistry</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eaj7kbx4wik9vu6cq44ab09v7\"> 實例的全域註冊表，用於特定元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TransferState\">TransferState</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3puihfha0adnfbqhsqc6si3s3\">從伺服器端的應用程式傳到用戶端的應用程式的鍵值儲存。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Type\">Type</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6iyeypw73hgrpcpfpeoccrj09\">表示 Component 或其他物件的型別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Version\">Version</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"86ip7rf7mv65qroe7ya2sxxmc\">表示 Angular 的版本</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewContainerRef\">ViewContainerRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9ea663kxpgnqt6snt0wg3axr\">表示可以將一個或多個檢視附著到元件中的容器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewRef\">ViewRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"axjaudbo16wjj4xiw489fwlcs\">表示一個 Angular <a href=\"guide/glossary#view\" title=\"Definition\">檢視</a>。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"裝飾器\">裝飾器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#裝飾器\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"decorators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zznifpayi16ganluvq52nc4g\">裝飾器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#decorators\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Attribute\">Attribute</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"430xya7u6v8yd3bwoxprbzshx\">指令建構式函式的引數修飾器，用於指定宿主元素屬性，其值作為常數字串文字注入。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Component\">Component</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61m6fifd40kz3i6qngjurcd0j\">一個裝飾器，用於把某個類別標記為 Angular 元件，併為它設定一些元資料，以決定該組件在執行期間該如何處理、實例化和使用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ContentChild\">ContentChild</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uyp69594femajq5dhdzvjdty\">用於設定內容查詢的引數裝飾器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ContentChildren\">ContentChildren</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uyp69594femajq5dhdzvjdty\">用於設定內容查詢的引數裝飾器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Directive\">Directive</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2o9oj1s129ex3arbe0v6bp4s1\">將類別標記為 Angular 指令的裝飾器。你可以定義自己的指令，以將自定義行為附加到 DOM 中的元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Host\">Host</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3beeb54vz54f50h7gkw44v6y8\">類別建構式函式的檢視提供者引數上的引數修飾器，用於指示 DI 框架透過檢查子元素的注入器來解析檢視，並在到達當前元件的宿主元素時停止。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/HostBinding\">HostBinding</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"764o5limqsu2j8trigwu5vjs\">用於標記 DOM 屬性或元素類別、樣式或屬性為宿主繫結屬性，並提供設定元資料的裝飾器。Angular 在變更檢測期間會自動檢查主機繫結，如果繫結發生變化，則更新指令的主機元素。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/HostListener\">HostListener</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jwiiwcvk99qcng5hm98g8mtl\">一個裝飾器，用於宣告要監聽的 DOM 事件，並提供在該事件發生時要執行的處理器方法。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Inject\">Inject</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95im0klx0kufdhvahiheuud9a\">類別建構式函式中依賴項引數上的引數裝飾器，用於指定依賴項的自定義提供者。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Injectable\">Injectable</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"745c3nth7el81npwtpkukxaa6\">標記性元資料，表示一個類別可以由 <code><a href=\"api/core/Injector-0\" class=\"code-anchor\">Injector</a></code> 進行建立。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Input\">Input</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"euhtefrqv2hspjut1tqpzyyqi\">一個裝飾器，用來把某個類別欄位標記為輸入屬性，並提供設定元資料。\n該輸入屬性會繫結到範本中的某個 DOM 屬性。當變更檢測時，Angular 會自動使用這個 DOM 屬性的值來更新此資料屬性。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgModule\">NgModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9pfm0zwp0wq6ygqrmfnip4nul\">把一個類別標記為 NgModule，並提供設定元資料。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Optional\">Optional</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6f4wsimzjxev0qoansue2d8vu\">用於建構式函式引數的引數裝飾器，將引數標記為可選依賴項。如果找不到依賴項，則 DI 框架提供 null。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Output\">Output</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2wbnkhtmxmvt9y498euqtavz8\">一個裝飾器，用於把一個類別欄位標記為輸出屬性，並提供設定元資料。\n凡是繫結到輸出屬性上的 DOM 屬性，Angular 在變更檢測期間都會自動進行更新。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Pipe\">Pipe</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dqvuap20agh3gvkjnpowod3n\">本裝飾器用於將類別標記為通道並提供設定元資料。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Self\">Self</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ov4y39jtpzo9pttbpl4d6vjd\">將在建構式函式引數上使用引數裝飾器，該裝飾器告訴 DI 框架從本地注入器開始解析依賴項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SkipSelf\">SkipSelf</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"md12ah2tx0k2qh6uq33thumu\">將在建構式函式引數上使用的引數裝飾器，該引數指示 DI 框架從父注入器啟動依賴項解析。解析器在注入器層次結構中向上查詢，因此不會檢查本地注入器的提供者。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewChild\">ViewChild</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8kpd59enh4ftilvb1ryettnmi\">屬性裝飾器，用於設定一個檢視查詢。變更檢測器會在檢視的 DOM 中查詢能對應上該選擇器的第一個元素或指令。如果檢視的 DOM 發生了變化，出現了對應該選擇器的新的子節點，該屬性就會被更新。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewChildren\">ViewChildren</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81d07136tdyr9dxdjsjx08n2k\">用於設定檢視查詢的引數裝飾器。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"函式\">函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#函式\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"functions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt2uvbdl3r7k4tmkiulzt8lb8\">函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#functions\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/afterNextRender\">afterNextRender</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d5gdi44s9a2o3x2fc8k2fr0gw\">註冊回呼函式，在應用程式完成渲染時調用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/afterRender\">afterRender</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5m9az62bizc1zvfglfogg9f1q\">註冊一個回呼，每次應用程式完成渲染時都會呼叫。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/asNativeElements\">asNativeElements</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/assertInInjectionContext\">assertInInjectionContext</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eizimjdjku5l1ufqzy9jckfr0\">斷言當前呼叫堆疊位於一個\n<a href=\"guide/dependency-injection-context\">注入上下文</a>內，並且能訪問\n<code>inject</code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/assertNotInReactiveContext\">assertNotInReactiveContext</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10ljqw2p70b2p7qi2mb27cken\">斷言當前呼叫堆疊不在回應式上下文中。可用於阻止某些程式碼在回應式上下文中執行（請參見\n<a href=\"api/core/rxjs-interop/toSignal\"><code>toSignal</code></a>）。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/assertPlatform\">assertPlatform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8kf9vfeam91mwsvgcftok3iaw\">檢查當前是否存在以給定令牌為提供者的平台。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/booleanAttribute\">booleanAttribute</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1gm82scm36ndgxi9xdoauhyrg\">將值（通常是字串）轉換為布林值。旨在用作輸入的轉換函式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/computed\">computed</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59u8eqdltuedw5cdk8qr5dsc1\">建立一個計算 <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>，它從表示式中匯出反應值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/contentChildren\">contentChildren</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ebt6bulmagbrn415j4l6ov2n4\">進一步的訊息可在\n<a href=\"api/core/contentChildren#usage-notes\">使用說明...</a>中找到。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createComponent\">createComponent</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5fx69dblyx8pz8u0snyah5dfp\">根據提供的元件類別型和一組選項建立一個 <code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a></code> 實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createEnvironmentInjector\">createEnvironmentInjector</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4m8me8oqtval786r1cxguccp\">建立一個新的環境注入器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createNgModule\">createNgModule</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a23aixb14eepbo8c09uigz9bn\">根據提供的 NgModule 類別和父注入器回傳一個新的 NgModuleRef 實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createPlatform\">createPlatform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"axrmzj4ktz0l66m83h8x9gkxc\">建立一個平台。必須使用此函式在啟動時建立平台。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createPlatformFactory\">createPlatformFactory</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3f4s7tv2ty77h1lclu8ufcvr\">為平台建立工廠。可用於提供或覆蓋針對你的應用程式的執行時需求的 <code>Providers</code>，比如 <code><a href=\"api/core/PLATFORM_INITIALIZER\" class=\"code-anchor\">PLATFORM_INITIALIZER</a></code> 和 <code><a href=\"api/core/PLATFORM_ID\" class=\"code-anchor\">PLATFORM_ID</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/destroyPlatform\">destroyPlatform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"paa7z7yjmw6y1ovbl2n99hc9\">銷燬頁面上的當前 Angular 平台和所有 Angular 應用程式。銷燬在平台上註冊的所有模組和監聽器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/effect\">effect</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4i64004664yf4v3r17eelbgov\">為給定的反應函式建立一個全域 <code>Effect</code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/enableProdMode\">enableProdMode</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65z1rmp6s3qwi5mzptww8olli\">停用 Angular 的開發模式，該模式將關閉框架中的斷言和其他檢查。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/forwardRef\">forwardRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4onhm1wabvs8ihhhde8tzmz4\">允許引用尚未定義的引用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/getDebugNode\">getDebugNode</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/getModuleFactory\" class=\"deprecated-api-item\">getModuleFactory</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> Use <code><a href=\"api/core/getNgModuleById\" class=\"code-anchor\">getNgModuleById</a></code> instead.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e41bph9ywrnslvij9yla5eapr\">回傳具有給定 id 的 NgModuleFactory（如果存在並且已載入）。無法檢索未指定過 <code>id</code>\n的模組工廠。如果找不到模組，則丟擲該異常。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/getNgModuleById\">getNgModuleById</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"be2zrr9rilxwydjoiboubgaw3\">回傳具有給定 id（使用<a href=\"api/core/NgModule#id\">@NgModule.id 欄位</a>指定）的 NgModule\n類別（如果存在並且已載入）。無法檢索未指定 <code>id</code> 的 NgModules 類別。如果找不到 NgModule，則丟擲。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/getPlatform\">getPlatform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83hu4nndxrccfh8tbl0hsqo61\">回傳當前平台。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/importProvidersFrom\">importProvidersFrom</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"46tmfgwtls5kg9v4ewtz4o656\">從所有 NgModule 和獨立元件（包括可傳遞匯入的元件）收集提供程式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/inject\">inject</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"deb2zra5risoxh3wpimih71d1\">從當前活動的注入器中注入一個令牌。\n<code>inject</code>僅在\n<a href=\"/guide/dependency-injection-context\">注入上下文</a>中受支援。它可以在以下情況下使用：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sr8ilsd0ucu18or81h2h1ffs\">由 DI 系統實例化的類別的構造（透過 <code>constructor</code>），例如 <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> 或 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29172th10uuxu5ic4snjdofwf\">在此類別類別的欄位的初始化器中。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jkpszgeam34zsfe1887jmqlc\">在為 <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code> 的 <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> <code>useFactory</code> 的工廠函式中。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cjff316boi01659epye5taniq\">在為 <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> 指定的 <code>factory</code> 函式中。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aksh3aj2qf2fxyz47lks6x5yw\">在 DI 上下文中的函式呼叫堆疊幀中</li>\n</ul>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/isDevMode\">isDevMode</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cw4z3h1vo7zgofvyhgtq74g9u\">回傳 Angular 是否處於開發模式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/isSignal\">isSignal</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8bdzqurxzs78v6kpmd67rektx\">檢查給定 <code>value</code> 是否為反應 <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/isStandalone\">isStandalone</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5nrfi1vwhtot8ad4ajfhrc7yp\">檢查給定的元件、指令或通道是否被標記為獨立的。如果傳遞的不是元件、指令或通道類別，這將回傳 false 請參閱<a href=\"/guide/standalone-components\">本指南</a>以獲取更多訊息：</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/makeEnvironmentProviders\">makeEnvironmentProviders</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8nmt264xykblju8csp0zak7nf\">將一組\n<code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>包裝成\n<code><a href=\"api/core/EnvironmentProviders\" class=\"code-anchor\">EnvironmentProviders</a></code>，防止它們在元件注入器中被意外引用。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/makeStateKey\">makeStateKey</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"618lef86rb8ce1vx4e9usnxov\">建立一個 <code><a href=\"api/core/StateKey\" class=\"code-anchor\">StateKey</a>&lt;T&gt;</code>，可用於把 T 型別的值儲存在 <code><a href=\"api/core/TransferState\" class=\"code-anchor\">TransferState</a></code> 中。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/mergeApplicationConfig\">mergeApplicationConfig</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cm37xi43wsk3ua7tpkeb2wqap\">從左到右合併多個應用程式設定。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/numberAttribute\">numberAttribute</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"111db1ieiuk51fnypr09hk7kh\">將值（通常是字串）轉換為數字。旨在用作輸入的轉換函式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/provideZoneChangeDetection\">provideZoneChangeDetection</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ad3qj268kz3sxj0fuzsjmd5mz\">為使用 <code><a href=\"api/platform-browser/bootstrapApplication\" class=\"code-anchor\">bootstrapApplication</a></code> 引導的應用程式提供基於 <code><a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a></code> 的變更檢測。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/reflectComponentType\">reflectComponentType</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9hkbqiqdbn8usb9ii03nksyu2\">建立一個允許檢索元件元資料的物件。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/resolveForwardRef\">resolveForwardRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9x0uxvkpvs7wvy5gfj608jsfy\">從 forwardRef 惰性檢索引用值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/runInInjectionContext\">runInInjectionContext</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jmfq0twf9n9if0i0xpdc3u43\">在給定的\n<code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>的\n<em>上下文</em>中執行給定的函式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/setTestabilityGetter\">setTestabilityGetter</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2tac7zea4ladu7zhtjn4cmzik\">設定 Angular 測試框架使用的 <a href=\"api/core/GetTestability\"><code>GetTestability</code></a> 實現。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/signal\">signal</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amh3be9ivm6bkkml3opd8w1nh\">建立一個可以直接設定或更新的 <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/untracked\">untracked</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyxvo22yu8ixym7xfdri69rw8\">在非反應性（非跟蹤）上下文中執行任意函式。執行的函式可以選擇回傳一個值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/viewChildren\">viewChildren</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ctb3lps49vr0wpba0muv09cg\">初始化一個檢視子查詢。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"結構\">結構<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#結構\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"structures\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pvj0r4hennzfp5hvt5swfw10\">結構<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#structures\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AbstractType\">AbstractType</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ph2154hs6tzmjber0ju7vh02\">表示抽象類別 <code>T</code>，如果將其應用於具體類別，它將無法被實例化。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterContentChecked\">AfterContentChecked</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ch5uk3fx260bq4iatoue6enk8\">一個生命週期鉤子，它會在預設的變更檢測器對指令的所有內容完成了變更檢查之後呼叫。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterContentInit\">AfterContentInit</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2nnibpfc0c4cvtrrie7khjm0g\">一個生命週期鉤子，它會在 Angular 完全實例化了指令的所有內容之後呼叫。\n定義一個 <code>ngAfterContentInit()</code> 方法來處理額外的初始化任務。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterRenderOptions\">AfterRenderOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eux6luzajlrvxaw0kepaxvb6a\">傳遞給\n<code><a href=\"api/core/afterRender\" class=\"code-anchor\">afterRender</a></code>和\n<code><a href=\"api/core/afterNextRender\" class=\"code-anchor\">afterNextRender</a></code>的選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterRenderPhase\">AfterRenderPhase</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"715i3dvnekaltnanzo87fy8cc\">在哪個階段執行\n<code><a href=\"api/core/afterRender\" class=\"code-anchor\">afterRender</a></code>或\n<code><a href=\"api/core/afterNextRender\" class=\"code-anchor\">afterNextRender</a></code>回呼。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterRenderRef\">AfterRenderRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6e4y839r26imuhw111xepktsy\">渲染後執行的回呼函式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterViewChecked\">AfterViewChecked</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5gy58ozxgnl4qcxh2tlgv102\">一個生命週期鉤子，它會在預設的變更檢測器完成了對元件檢視的變更檢測之後呼叫。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterViewInit\">AfterViewInit</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5kkkm0uq2q87jhmqfzwjq8fqz\">一個生命週期鉤子，會在 Angular 完全初始化了元件的檢視後呼叫。\n定義一個 <code>ngAfterViewInit()</code> 方法來處理一些額外的初始化任務。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationConfig\">ApplicationConfig</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3nopw9pvfeznod5252frr6u56\">在引導操作期間透過 <code><a href=\"api/platform-browser/bootstrapApplication\" class=\"code-anchor\">bootstrapApplication</a></code> 呼叫可用的一組設定選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/BootstrapOptions\">BootstrapOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"culhhzk2nlc0zp78n1120o3nl\">為引導過程提供其他選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ChangeDetectionStrategy\">ChangeDetectionStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6zrxpy3z2jf6pdbvg4w1puizl\">預設變更檢測器用來檢測更改的策略。設定後，將在下次觸發變更檢測時生效。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ClassProvider\">ClassProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41coiwi2eun2hicwrop7qt0t4\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以便為令牌回傳 <code>useClass</code> 的實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ClassSansProvider\">ClassSansProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4t335gnd4bdbmuvlm9hy3g4uy\">設定 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以透過呼叫 <code>useClass</code> 函式回傳某個值。是 <code><a href=\"api/core/ClassProvider\" class=\"code-anchor\">ClassProvider</a></code> 裝飾器的基介面。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ComponentMirror\">ComponentMirror</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eudcpxii03x60zbhk7h3ucoaq\">一個介面，描述可以用 <code><a href=\"api/core/reflectComponentType\" class=\"code-anchor\">reflectComponentType</a></code> 函式檢索的元件元資料子集。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ConstructorProvider\">ConstructorProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7rhu7ry1ghmc2oe8ni1vp4bb4\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>，以回傳令牌的實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ConstructorSansProvider\">ConstructorSansProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7rhu7ry1ghmc2oe8ni1vp4bb4\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>，以回傳令牌的實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ContentChildFunction\">ContentChildFunction</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9rqefmpwsywetl5u12hzuizj1\"><code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code>函式的型別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CreateComputedOptions\">CreateComputedOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dauoa1uplglwz1h4o0ckn2ekh\">傳遞給 <code><a href=\"api/core/computed\" class=\"code-anchor\">computed</a></code> 建立函式的選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CreateEffectOptions\">CreateEffectOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"vuxobcjn4ayg83cgccbhclu5\">傳遞給 <code><a href=\"api/core/effect\" class=\"code-anchor\">effect</a></code> 函式的選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CreateSignalOptions\">CreateSignalOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4aeezg0pp8hyixljog0zggznk\">傳遞給 <code><a href=\"api/core/signal\" class=\"code-anchor\">signal</a></code> 建立函式的選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DoBootstrap\">DoBootstrap</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7oqcgsri0o4w7m40vp9ssyk06\">用於手動引導應用程式而不是在 @NgModule 註解中使用 \n<code>bootstrap</code> 陣列。只有當 \n<code>bootstrap</code> 陣列為空或未提供時才會呼叫此鉤子。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DoCheck\">DoCheck</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5u8kls5p2w1m05o910uuqove6\">一個生命週期鉤子，除了使用預設的變更檢查器執行檢查之外，還會為指令執行自定義的變更檢測函式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EffectRef\">EffectRef</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"esfb99l65pa4ykjvmkrf20ba\">全域反應效果，可以手動銷燬。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ExistingProvider\">ExistingProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1ephs05amt91bvy9kw8t34yw\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以回傳另一個 <code>useExisting</code> 令牌的值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ExistingSansProvider\">ExistingSansProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1ephs05amt91bvy9kw8t34yw\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以回傳另一個 <code>useExisting</code> 令牌的值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/FactoryProvider\">FactoryProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y8jvvz3lw4aq68zppugh9yz3\">把此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 設定為呼叫 <code>useFactory</code> 函式回傳一個值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/FactorySansProvider\">FactorySansProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y8jvvz3lw4aq68zppugh9yz3\">把此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 設定為呼叫 <code>useFactory</code> 函式回傳一個值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ForwardRefFn\">ForwardRefFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4aowxkzqrs717jzvtzafrocl\">傳入 \n<code><a href=\"api/core/forwardRef\" class=\"code-anchor\">forwardRef</a></code> 的函式必須實現的介面。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/GetTestability\">GetTestability</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xdpcuhex7hi93debojd8efh6\">配接器介面，用於檢索與特定上下文關聯 <code><a href=\"api/core/Testability\" class=\"code-anchor\">Testability</a></code></p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/InjectFlags\" class=\"deprecated-api-item\">InjectFlags</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> use an options object for <a href=\"api/core/inject\"><code>inject</code></a> instead.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6bxd3ilqhdpw3gchn1jbh0xdg\">DI 的注入標誌。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectOptions\">InjectOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2acvcv72upgzdqydox1k4oynf\">傳遞給\n<a href=\"api/core/inject\"><code>inject</code></a>的選項引數的型別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectableType\">InjectableType</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzy42rqsdbcvghvjyhljzkach\">具有 <code>InjectableDef</code> 靜態欄位的 <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code></p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectorType\">InjectorType</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bfs3cci353m27jwibyb4vps58\">具有 <code>InjectorDef</code> 靜態欄位的型別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputFunction\">InputFunction</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eu2lrc0sr5flncjoegq2seulg\"><code>input</code> 函式允許在指令和元件中宣告輸入。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputOptions\">InputOptions</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputSignal\">InputSignal</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dimqk7gujfg0yatrbgj62l0yl\"><code><a href=\"api/core/InputSignal\" class=\"code-anchor\">InputSignal</a></code> 表示指令/元件輸入的特殊 \n<code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputSignalWithTransform\">InputSignalWithTransform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2lm563jtgv2vpokuzolsschg2\"><code><a href=\"api/core/InputSignalWithTransform\" class=\"code-anchor\">InputSignalWithTransform</a></code> 表示帶有 \n<code>transform</code> 函式的指令/元件輸入的特殊 \n<code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableChangeRecord\">IterableChangeRecord</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3mp5793w6029d9hgyksytd0y\">代表條目變更訊息的記錄。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableChanges\">IterableChanges</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2aauwdbc7xl73blrxxhobl56j\">本物件描述自上次呼叫 <code><a href=\"api/core/IterableDiffer\" class=\"code-anchor\">IterableDiffer</a>#diff()</code> 以來 <code>Iterable</code> 集合中的變更。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableDiffer\">IterableDiffer</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o8e8z25geqiqowrt1xydglhx\">用來跟蹤一個迭代內的更改的策略。<a href=\"api/common/NgForOf\"><code>NgForOf</code></a> 使用它透過對 DOM 進行等效更改來回應此迭代內的更改。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableDifferFactory\">IterableDifferFactory</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bm1bk23uxje8rn02brdd36y3v\">提供 <a href=\"api/core/IterableDiffer\"><code>IterableDiffer</code></a> 的工廠。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueChangeRecord\">KeyValueChangeRecord</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3mp5793w6029d9hgyksytd0y\">代表條目變更訊息的記錄。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueChanges\">KeyValueChanges</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezl5pv1hctpa9cbouihcizqb3\">一個物件，描述自上次呼叫 <code><a href=\"api/core/KeyValueDiffer\" class=\"code-anchor\">KeyValueDiffer</a>#diff()</code> 以來的變化的 <code>Map</code> 或 <code>{[k:string]: string}</code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueDiffer\">KeyValueDiffer</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5wgl1kzclncdcv68iknhlyosd\">跟蹤物件隨時間變化的差異。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueDifferFactory\">KeyValueDifferFactory</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3mhw7oe1rfu7juva7pfiytpk3\">提供 <a href=\"api/core/KeyValueDiffer\"><code>KeyValueDiffer</code></a> 的工廠。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/MissingTranslationStrategy\">MissingTranslationStrategy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7x0hj8cx6b90qi7uozlrb4igs\">在系統啟動時使用此列舉作為 <code>bootstrapModule</code>\n的一個選項來定義策略，編譯器應該在缺少翻譯的情況下使用：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ef1157r0lpyaxindu4gg7jiz4\">Error：如果缺少翻譯，則丟擲該錯誤。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"970xvff699lgy3uu65ziyyuov\">Warning（預設）：在控制台和/或應用外殼中顯示警告。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5epfa7sdkbivw84adh3gintp2\">Ignore：什麼都不做。</li>\n</ul>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModelFunction\">ModelFunction</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adnn3pgei9ihwra7fzdftqol1\"><code><a href=\"api/core/model\" class=\"code-anchor\">model</a></code>宣告了一個可寫訊號，該訊號作為包含指令的輸入/輸出對暴露出來。輸入名稱可以從類別成員或\n<code>alias</code>選項中獲取。輸出名稱是透過獲取輸入名稱並附加\n<code>Change</code>來生成的。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModelOptions\">ModelOptions</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModelSignal\">ModelSignal</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ubunmqcujy1zngam2q3pyx8l\"><code><a href=\"api/core/ModelSignal\" class=\"code-anchor\">ModelSignal</a></code>表示指令/元件模型欄位的特殊\n<code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModuleWithProviders\">ModuleWithProviders</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dd79ik12roegdiry9b7rti6tz\">將 NgModule 與<a href=\"guide/glossary#provider\" title=\"定義\">provider</a>關聯的 NgModule\n的套件裝器。不推薦使用沒有泛型型別的用法。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgZoneOptions\">NgZoneOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e5bsp2ucm5b3x54cssgnmoss1\">用於設定事件並使用 <code><a href=\"api/core/provideZoneChangeDetection\" class=\"code-anchor\">provideZoneChangeDetection</a></code> 執行合併。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OnChanges\">OnChanges</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edysch67qel627oy9muwvzdw4\">一個生命週期鉤子，當指令的任何一個可繫結屬性發生變化時調用。\n定義一個 <code>ngOnChanges()</code> 方法來處理這些變更。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OnDestroy\">OnDestroy</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"chbs87bf9yngypcsirac8g3uu\">一個生命週期鉤子，它會在指令、通道或服務被銷燬時調用。\n用於在實例被銷燬時，執行一些自定義清理程式碼。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OnInit\">OnInit</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4u17lc7i0epod0vswcq3w4y9i\">一個生命週期鉤子，它會在 Angular 初始化完了該指令的所有資料繫結屬性之後呼叫。\n定義 <code>ngOnInit()</code> 方法可以處理所有附加的初始化任務。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PipeTransform\">PipeTransform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pwo5jab32ix026wq3f1yfa7x\">一個需要由通道實現的介面，用於執行轉換操作。\nAngular 會呼叫它的 <code>transform</code>\n方法，並把要繫結的值作為第一個引數傳入，其它引數會依次從第二個引數的位置開始傳入。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Predicate\">Predicate</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"icsfvft8zay7z6onccz1ppde\">根據引數值回傳布林值的函式，可能包括該值在陣列中位置的上下文訊息。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/RendererStyleFlags2\">RendererStyleFlags2</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9jpe62f5xdo2xs1o3kc2m9ha\">渲染器特有樣式修飾符的標誌。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/RendererType2\">RendererType2</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"93qdjw7mzj76k53iimq8fzeho\">供 <code><a href=\"api/core/RendererFactory2\" class=\"code-anchor\">RendererFactory2</a></code> 用於將自定義渲染資料和樣式與某個渲染器的實現相關聯。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SchemaMetadata\">SchemaMetadata</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"u7woffq8eqs3hsphvnm7r5h7\">與 NgModule 關聯的架構定義。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SecurityContext\">SecurityContext</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bosutq6yslmq2agdjdoihybep\">SecurityContext 標記了具有危險安全隱患的位置，比如，像 <code>innerHTML</code> 這樣的 DOM 屬性，如果處理不當，可能會導致跨站點指令碼（XSS）安全錯誤。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SimpleChanges\">SimpleChanges</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"beckuuyiwak71ttxa64ubjrc4\">用 <a href=\"api/core/SimpleChange\"><code>SimpleChange</code></a> 物件表示的變更的雜湊表，這些物件以宣告的屬性名稱儲存在指令或元件上，這些屬性屬於它們。這是傳遞給 <code>ngOnChanges</code> 鉤子的型別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StaticClassProvider\">StaticClassProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41coiwi2eun2hicwrop7qt0t4\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以便為令牌回傳 <code>useClass</code> 的實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StaticClassSansProvider\">StaticClassSansProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4jihbbnffpdslf5s7pqpvcs4s\">設定 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以回傳 <code>useClass</code> 的令牌實例。這是 <code><a href=\"api/core/StaticClassProvider\" class=\"code-anchor\">StaticClassProvider</a></code> 裝飾器的基介面。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TrackByFunction\">TrackByFunction</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9rq1jvajrbnln10bp9qdnl6un\">一個可選地傳入 <code><a href=\"api/common/NgForOf\" class=\"code-anchor\">NgForOf</a></code> 指令的函式，以自定義 <code><a href=\"api/common/NgForOf\" class=\"code-anchor\">NgForOf</a></code> 如何唯一標識迭代中的條目。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TypeDecorator\">TypeDecorator</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27tm8d5pkg7eq3k4grkjvs1f5\">由所有 Angular 型別裝飾器實現的介面，該介面允許將它們用作裝飾器以及 Angular 語法。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TypeProvider\">TypeProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dklki7sg7l02ou5emlph2xq98\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>，以將『型別』用作令牌時回傳 <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code> 的實例。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ValueProvider\">ValueProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbnlsv7eiisrsp9y20th87m0l\">設定此 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以回傳令牌的值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ValueSansProvider\">ValueSansProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajhgw4yzd3p7bv7aanlsgd8n9\">設定 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以回傳令牌的值。是 <code><a href=\"api/core/ValueProvider\" class=\"code-anchor\">ValueProvider</a></code> 裝飾器的基介面。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewChildFunction\">ViewChildFunction</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"39wclsoqvo9gsqsawvdgzxyzq\">viewChild函式的型別。viewChild函式建立一個單一的檢視查詢。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewEncapsulation\">ViewEncapsulation</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8k57rh7h6tm47h6y6mag9ndsb\">定義可用於 Component 的 <a href=\"api/core/Component\"><code>Component</code></a> 的範本和樣式封裝選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/WritableSignal\">WritableSignal</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20limygj3g7t8f1eo0hzwdw04\">一個 <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>，其值可以透過 setter 介面改變。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"元素\">元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#元素\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"elements\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a31fydlpmepalvfkmzudwjzrv\">自定義元素（Elements）<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#elements\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ng-container\">&lt;ng-container&gt;</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cxjxek7u8i1t6h74965vl6qt5\">一種特殊元素，可以在不向 DOM 新增新元素的情況下承載結構型指令。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ng-content\">&lt;ng-content&gt;</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53mo8k9kfmw0jbcnrdwn8jvpe\"><code><a href=\"api/core/ng-content\" class=\"code-anchor\">&lt;ng-content&gt;</a></code> 元素指定了在元件範本中投影內容的位置。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ng-template\">&lt;ng-template&gt;</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7egsio1p5za64suyh3gl4pfg\">Angular 的 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素定義了一個預設不渲染的範本。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n\n  \n  \n\n\n  \n  \n  <section class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"型別\">型別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#型別\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"types\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edj3fs52fiqyg9u6mdyxchcwv\">型別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#types\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ANIMATION_MODULE_TYPE\">ANIMATION_MODULE_TYPE</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9evbl2k2rdhokn3ashh1ybcjq\">一個表示已載入哪個動畫模組的\n<a href=\"api/core/InjectionToken\">DI 令牌</a>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/APP_BOOTSTRAP_LISTENER\">APP_BOOTSTRAP_LISTENER</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2iqaq6xngubzpa9vk888ixaw3\">一個 <a href=\"guide/glossary#di-token\" title=\"DI 令牌定義\">DI 令牌</a>，該令牌提供了一組針對每個要引導的元件呼叫的回呼。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/APP_ID\">APP_ID</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dk0o4489sqk3femzoz1yozuts\">代表字串 ID 的一個\n<a href=\"guide/glossary#di-token\" title=\"DI 令牌定義\">DI 令牌</a>，主要用於給應用屬性和 CSS 樣式新增字首，當使用\n<a href=\"api/core/ViewEncapsulation#Emulated\"><code>ViewEncapsulation#Emulated</code></a>時。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/APP_INITIALIZER\">APP_INITIALIZER</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2xbic5woghzopk2z3yv1mr4ml\">可用於提供一個或多個初始化功能的 <a href=\"guide/glossary#di-token\" title=\"DI 令牌定義\">DI 令牌</a>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/COMPILER_OPTIONS\">COMPILER_OPTIONS</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16daa5wura3cjnhg0zq61xaaq\">在平台注入器中提供 CompilerOptions 的令牌。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CSP_NONCE\">CSP_NONCE</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5kpt372x989pvwikek3i2do8c\">Token 用於設定 Angular 在插入行內樣式時應用的<a href=\"https://web.dev/strict-csp/\">內容安全策略</a>隨機數。如果未提供，Angular 將從應用程式根節點的 <code>ngCspNonce</code> 屬性中查詢它的值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CUSTOM_ELEMENTS_SCHEMA\">CUSTOM_ELEMENTS_SCHEMA</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"n6a1f5n53fz73evbzdnornuh\">定義一個架構，該架構允許 NgModule 包含以下內容：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2o4090zgtmy39z05rv7m44b7c\">使用（<code>-</code>）命名法的非 Angular 元素。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84lfpleu4pg8az7vto5o2o3r1\">以破折號（<code>-</code>）命名的元素屬性。破折號是自定義元素的命名約定。</li>\n</ul>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CompilerOptions\">CompilerOptions</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6nmglbnptqwsm0fn8s2pxlw5h\">建立編譯器的選項。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DEFAULT_CURRENCY_CODE\">DEFAULT_CURRENCY_CODE</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50puljuem51xnwu5ceh5yojok\">如果沒有傳遞任何貨幣程式碼，請提供此令牌來設定你的應用程式用於 CurrencyPipe 的預設貨幣程式碼。僅由\nCurrencyPipe 使用，與語言環境的貨幣無關。如果未設定，則預設為 USD。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ENVIRONMENT_INITIALIZER\">ENVIRONMENT_INITIALIZER</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ztqvzxzvc7y8oewzyv68u5mj\">初始化函式的多提供者令牌，將在建立環境注入器時運行。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EffectCleanupFn\">EffectCleanupFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4h9infb7mdwi13i1s0j5w8ljo\">一個效果可以選擇註冊一個清理函式。如果已註冊，則在下一次效果執行之前執行清理。清理功能可以『取消』之前效果執行可能已經開始的任何工作。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EffectCleanupRegisterFn\">EffectCleanupRegisterFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4hm7azf7o1ac9kl6eo3w77o0p\">傳遞給效果函式的回呼，使註冊清理邏輯成為可能。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EnvironmentProviders\">EnvironmentProviders</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3lawu69iold3j0if3djxs73b\">封裝的 <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code> 僅在建立 <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code> 期間被接受（例如在 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 中）。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/INJECTOR\">INJECTOR</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ewxuyl9u0jxhexiy18vijhwe0\">一個 InjectionToken，用於獲取當前 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 的 <code>createInjector()</code> 式的注入器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ImportProvidersSource\">ImportProvidersSource</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f0rasvuezymokmnsxn0wxfvpl\"><code><a href=\"api/core/importProvidersFrom\" class=\"code-anchor\">importProvidersFrom</a></code> 函式的提供程式來源。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ImportedNgModuleProviders\" class=\"deprecated-api-item\">ImportedNgModuleProviders</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> replaced by <code><a href=\"api/core/EnvironmentProviders\" class=\"code-anchor\">EnvironmentProviders</a></code></p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jtvop1858u57d8op6s4b41y0\">透過 <code><a href=\"api/core/importProvidersFrom\" class=\"code-anchor\">importProvidersFrom</a></code> 函式從 NgModules 匯入的提供程式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectableProvider\">InjectableProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"yj4v9za95ppmo1zvaemfsc5p\"><code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> 裝飾器中使用的可注入物件提供者。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputOptionsWithTransform\">InputOptionsWithTransform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4fqra9s1lmiyid9ojk5xw6pg3\">包含必須的轉換選項的輸入訊號。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputOptionsWithoutTransform\">InputOptionsWithoutTransform</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1eypmdvvcnhuilig0ralcauzs\">不包含轉換選項的輸入訊號。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/LOCALE_ID\">LOCALE_ID</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"auzl4vqmry3ukjru69vo6hvyf\">提供此令牌以設定應用程式的語言環境。它透過 i18n 通道（DatePipe、I18nPluralPipe、CurrencyPipe、DecimalPipe 和 PercentPipe）和 ICU 表示式用於 i18n 提取。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NO_ERRORS_SCHEMA\">NO_ERRORS_SCHEMA</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bz44go68qv2r2ihtwrg7r83l3\">定義一個架構，該架構允許任何元素上的任何屬性。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgIterable\">NgIterable</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"837x7lgq0td8ragup9uw1dyg2\">描述受支援的可迭代型別的型別。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PACKAGE_ROOT_URL\" class=\"deprecated-api-item\">PACKAGE_ROOT_URL</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> </p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epglpaccr93my661n6nh71zos\">一個 <a href=\"guide/glossary#di-token\" title=\"DI 令牌定義\">DI 令牌</a>，指示應用程式的根目錄</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PLATFORM_ID\">PLATFORM_ID</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7lfs0g32yt4dlz7he7myayd6f\">標識不透明平台 ID 的令牌。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PLATFORM_INITIALIZER\">PLATFORM_INITIALIZER</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kb1buwbzl58bnwk1jyq1rqve\">平台初始化時執行的函式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Provider\">Provider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dazmimqy3lwiq1uwculnqq5e9\">描述應該如何設定 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ProviderToken\">ProviderToken</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8aakgvcjgi6sesr8ryxv50zus\">可用於從注入器或透過查詢檢索實例的標記。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Signal\">Signal</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3v8n3wcfncfql2zbsmatg5pz\">通知消費者任何更改的反應值。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StateKey\">StateKey</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"186a6mwa7luvm6reek0gxdclr\">與 <code><a href=\"api/core/TransferState\" class=\"code-anchor\">TransferState</a></code> 一起使用的型別安全的鍵名。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StaticProvider\">StaticProvider</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ra58nhmx3otalzgcmgqmrbcp\">描述如何將 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>\n設定為靜態的（即不需要反射）。靜態提供者為各種型別的依賴項提供令牌給注入器。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TRANSLATIONS\">TRANSLATIONS</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5je4crjubavy1rzvv2w0272n6\">當你想用另一種語言翻譯應用程式時，可以在引導程式中使用此令牌來提供翻譯檔案的內容（<code>xtb</code>、<code>xlf</code>\n或 <code>xlf2</code>）</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TRANSLATIONS_FORMAT\">TRANSLATIONS_FORMAT</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekuhs34kykmn6b80zeqq7hus7\">在引導程式中提供此令牌以設定 <a href=\"api/core/TRANSLATIONS\"><code>TRANSLATIONS</code></a> 的格式：<code>xtb</code>、<code>xlf</code> 或 <code>xlf2</code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ValueEqualityFn\">ValueEqualityFn</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41lp5byq1rqn21npvl53pclda\">可以確定兩個值是否相等的比較函式。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/contentChild\">contentChild</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jz55j8ty1sbie25j8uuyvozb\">初始化一個內容子查詢。考慮使用\n<code>contentChild.required</code>來查詢應始終對應的內容。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/createNgModuleRef\" class=\"deprecated-api-item\">createNgModuleRef</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> Use <code><a href=\"api/core/createNgModule\" class=\"code-anchor\">createNgModule</a></code> instead.</p>\n\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ntw9rmh6pq42ucyshb3terh1\">向後相容的 <code><a href=\"api/core/createNgModule\" class=\"code-anchor\">createNgModule</a></code> 函式別名。請避免直接使用它，而改用 <code><a href=\"api/core/createNgModule\" class=\"code-anchor\">createNgModule</a></code>。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/defineInjectable\" class=\"deprecated-api-item\">defineInjectable</a></code></td>\n        <td>\n          <p><strong>已棄用:</strong> in v8, delete after v10. This API should be used only by generated code, and that\ncode should now use ɵɵdefineInjectable instead.</p>\n\n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/input\">input</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eu2lrc0sr5flncjoegq2seulg\"><code>input</code> 函式允許在指令和元件中宣告輸入。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/model\">model</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adnn3pgei9ihwra7fzdftqol1\"><code><a href=\"api/core/model\" class=\"code-anchor\">model</a></code>宣告了一個可寫訊號，該訊號作為包含指令的輸入/輸出對暴露出來。輸入名稱可以從類別成員或\n<code>alias</code>選項中獲取。輸出名稱是透過獲取輸入名稱並附加\n<code>Change</code>來生成的。</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/platformCore\">platformCore</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hjlnskl6exgkf55dsjwi7wbx\">任何其他平台都必須包含此平台</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/viewChild\">viewChild</a></code></td>\n        <td>\n          \n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4ov9d2bn3izhvs7legrisvxb\">初始化一個檢視子查詢。</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/core/ANIMATION_MODULE_TYPE\n - api/core/APP_BOOTSTRAP_LISTENER\n - api/core/APP_ID\n - api/core/APP_INITIALIZER\n - api/core/AbstractType\n - api/core/AfterContentChecked\n - api/core/AfterContentInit\n - api/core/AfterRenderOptions\n - api/core/AfterRenderPhase\n - api/core/AfterRenderRef\n - api/core/AfterViewChecked\n - api/core/AfterViewInit\n - api/core/ApplicationConfig\n - api/core/ApplicationInitStatus\n - api/core/ApplicationModule\n - api/core/ApplicationRef\n - api/core/Attribute\n - api/core/BootstrapOptions\n - api/core/COMPILER_OPTIONS\n - api/core/CSP_NONCE\n - api/core/CUSTOM_ELEMENTS_SCHEMA\n - api/core/ChangeDetectionStrategy\n - api/core/ChangeDetectorRef\n - api/core/ClassProvider\n - api/core/ClassSansProvider\n - api/core/Compiler\n - api/core/CompilerFactory\n - api/core/CompilerOptions\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver\n - api/core/ComponentMirror\n - api/core/ComponentRef\n - api/core/ConstructorProvider\n - api/core/ConstructorSansProvider\n - api/core/ContentChild\n - api/core/ContentChildFunction\n - api/core/ContentChildren\n - api/core/CreateComputedOptions\n - api/core/CreateEffectOptions\n - api/core/CreateSignalOptions\n - api/core/DEFAULT_CURRENCY_CODE\n - api/core/DebugElement\n - api/core/DebugEventListener\n - api/core/DebugNode\n - api/core/DefaultIterableDiffer\n - api/core/DestroyRef\n - api/core/Directive\n - api/core/DoBootstrap\n - api/core/DoCheck\n - api/core/ENVIRONMENT_INITIALIZER\n - api/core/EffectCleanupFn\n - api/core/EffectCleanupRegisterFn\n - api/core/EffectRef\n - api/core/ElementRef\n - api/core/EmbeddedViewRef\n - api/core/EnvironmentInjector\n - api/core/EnvironmentProviders\n - api/core/ErrorHandler\n - api/core/EventEmitter\n - api/core/ExistingProvider\n - api/core/ExistingSansProvider\n - api/core/FactoryProvider\n - api/core/FactorySansProvider\n - api/core/ForwardRefFn\n - api/core/GetTestability\n - api/core/Host\n - api/core/HostAttributeToken\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/INJECTOR\n - api/core/ImportProvidersSource\n - api/core/ImportedNgModuleProviders\n - api/core/Inject\n - api/core/InjectFlags\n - api/core/InjectOptions\n - api/core/Injectable\n - api/core/InjectableProvider\n - api/core/InjectableType\n - api/core/InjectionToken\n - api/core/Injector\n - api/core/InjectorType\n - api/core/Input\n - api/core/InputFunction\n - api/core/InputOptions\n - api/core/InputOptionsWithTransform\n - api/core/InputOptionsWithoutTransform\n - api/core/InputSignal\n - api/core/InputSignalWithTransform\n - api/core/IterableChangeRecord\n - api/core/IterableChanges\n - api/core/IterableDiffer\n - api/core/IterableDifferFactory\n - api/core/IterableDiffers\n - api/core/KeyValueChangeRecord\n - api/core/KeyValueChanges\n - api/core/KeyValueDiffer\n - api/core/KeyValueDifferFactory\n - api/core/KeyValueDiffers\n - api/core/LOCALE_ID\n - api/core/MissingTranslationStrategy\n - api/core/ModelFunction\n - api/core/ModelOptions\n - api/core/ModelSignal\n - api/core/ModuleWithComponentFactories\n - api/core/ModuleWithProviders\n - api/core/NO_ERRORS_SCHEMA\n - api/core/NgIterable\n - api/core/NgModule\n - api/core/NgModuleFactory\n - api/core/NgModuleRef\n - api/core/NgProbeToken\n - api/core/NgZone\n - api/core/NgZoneOptions\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/Optional\n - api/core/Output\n - api/core/PACKAGE_ROOT_URL\n - api/core/PLATFORM_ID\n - api/core/PLATFORM_INITIALIZER\n - api/core/Pipe\n - api/core/PipeTransform\n - api/core/PlatformRef\n - api/core/Predicate\n - api/core/Provider\n - api/core/ProviderToken\n - api/core/Query\n - api/core/QueryList\n - api/core/Renderer2\n - api/core/RendererFactory2\n - api/core/RendererStyleFlags2\n - api/core/RendererType2\n - api/core/Sanitizer\n - api/core/SchemaMetadata\n - api/core/SecurityContext\n - api/core/Self\n - api/core/Signal\n - api/core/SimpleChange\n - api/core/SimpleChanges\n - api/core/SkipSelf\n - api/core/StateKey\n - api/core/StaticClassProvider\n - api/core/StaticClassSansProvider\n - api/core/StaticProvider\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - api/core/TemplateRef\n - api/core/Testability\n - api/core/TestabilityRegistry\n - api/core/TrackByFunction\n - api/core/TransferState\n - api/core/Type\n - api/core/TypeDecorator\n - api/core/TypeProvider\n - api/core/ValueEqualityFn\n - api/core/ValueProvider\n - api/core/ValueSansProvider\n - api/core/Version\n - api/core/ViewChild\n - api/core/ViewChildFunction\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/ViewEncapsulation\n - api/core/ViewRef\n - api/core/WritableSignal\n - api/core/afterNextRender\n - api/core/afterRender\n - api/core/asNativeElements\n - api/core/assertInInjectionContext\n - api/core/assertNotInReactiveContext\n - api/core/assertPlatform\n - api/core/booleanAttribute\n - api/core/computed\n - api/core/contentChild\n - api/core/contentChildren\n - api/core/createComponent\n - api/core/createEnvironmentInjector\n - api/core/createNgModule\n - api/core/createNgModuleRef\n - api/core/createPlatform\n - api/core/createPlatformFactory\n - api/core/defer\n - api/core/defineInjectable\n - api/core/destroyPlatform\n - api/core/effect\n - api/core/enableProdMode\n - api/core/for\n - api/core/forwardRef\n - api/core/getDebugNode\n - api/core/getModuleFactory\n - api/core/getNgModuleById\n - api/core/getPlatform\n - api/core/if\n - api/core/importProvidersFrom\n - api/core/inject\n - api/core/input\n - api/core/isDevMode\n - api/core/isSignal\n - api/core/isStandalone\n - api/core/makeEnvironmentProviders\n - api/core/makeStateKey\n - api/core/mergeApplicationConfig\n - api/core/model\n - api/core/ng-container\n - api/core/ng-content\n - api/core/ng-template\n - api/core/numberAttribute\n - api/core/platformCore\n - api/core/provideZoneChangeDetection\n - api/core/reflectComponentType\n - api/core/resolveForwardRef\n - api/core/runInInjectionContext\n - api/core/rxjs-interop\n - api/core/rxjs-interop/ToObservableOptions\n - api/core/rxjs-interop/ToSignalOptions\n - api/core/rxjs-interop/takeUntilDestroyed\n - api/core/rxjs-interop/toObservable\n - api/core/rxjs-interop/toSignal\n - api/core/setTestabilityGetter\n - api/core/signal\n - api/core/switch\n - api/core/testing\n - api/core/testing/ComponentFixture\n - api/core/testing/ComponentFixtureAutoDetect\n - api/core/testing/ComponentFixtureNoNgZone\n - api/core/testing/DeferBlockBehavior\n - api/core/testing/DeferBlockFixture\n - api/core/testing/DeferBlockState\n - api/core/testing/InjectSetupWrapper\n - api/core/testing/MetadataOverride\n - api/core/testing/ModuleTeardownOptions\n - api/core/testing/TestBed\n - api/core/testing/TestBedStatic\n - api/core/testing/TestComponentRenderer\n - api/core/testing/TestEnvironmentOptions\n - api/core/testing/TestModuleMetadata\n - api/core/testing/async\n - api/core/testing/discardPeriodicTasks\n - api/core/testing/fakeAsync\n - api/core/testing/flush\n - api/core/testing/flushMicrotasks\n - api/core/testing/getTestBed\n - api/core/testing/inject\n - api/core/testing/resetFakeAsyncZone\n - api/core/testing/tick\n - api/core/testing/waitForAsync\n - api/core/testing/withModule\n - api/core/untracked\n - api/core/viewChild\n - api/core/viewChildren\n - guide/aot-compiler\n - guide/npm-packages\n-->\n<!-- links from this doc:\n - /api\n - /guide/dependency-injection-context\n - /guide/standalone-components\n - api/common/NgForOf\n - api/core#\n - api/core#angularcore\n - api/core#classes\n - api/core#decorators\n - api/core#elements\n - api/core#entry-points\n - api/core#functions\n - api/core#ngmodules\n - api/core#primary\n - api/core#primary-entry-point-exports\n - api/core#secondary\n - api/core#structures\n - api/core#types\n - api/core#主要\n - api/core#元素\n - api/core#函式\n - api/core#次要\n - api/core#類別\n - api/core#型別\n - api/core#結構\n - api/core#裝飾器\n - api/core/ANIMATION_MODULE_TYPE\n - api/core/APP_BOOTSTRAP_LISTENER\n - api/core/APP_ID\n - api/core/APP_INITIALIZER\n - api/core/AbstractType\n - api/core/AfterContentChecked\n - api/core/AfterContentInit\n - api/core/AfterRenderOptions\n - api/core/AfterRenderPhase\n - api/core/AfterRenderRef\n - api/core/AfterViewChecked\n - api/core/AfterViewInit\n - api/core/ApplicationConfig\n - api/core/ApplicationInitStatus\n - api/core/ApplicationModule\n - api/core/ApplicationRef\n - api/core/Attribute\n - api/core/BootstrapOptions\n - api/core/COMPILER_OPTIONS\n - api/core/CSP_NONCE\n - api/core/CUSTOM_ELEMENTS_SCHEMA\n - api/core/ChangeDetectionStrategy\n - api/core/ChangeDetectorRef\n - api/core/ClassProvider\n - api/core/ClassSansProvider\n - api/core/Compiler\n - api/core/CompilerFactory\n - api/core/CompilerOptions\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver\n - api/core/ComponentMirror\n - api/core/ComponentRef\n - api/core/ConstructorProvider\n - api/core/ConstructorSansProvider\n - api/core/ContentChild\n - api/core/ContentChildFunction\n - api/core/ContentChildren\n - api/core/CreateComputedOptions\n - api/core/CreateEffectOptions\n - api/core/CreateSignalOptions\n - api/core/DEFAULT_CURRENCY_CODE\n - api/core/DebugElement\n - api/core/DebugEventListener\n - api/core/DebugNode\n - api/core/DefaultIterableDiffer\n - api/core/DestroyRef\n - api/core/Directive\n - api/core/DoBootstrap\n - api/core/DoCheck\n - api/core/ENVIRONMENT_INITIALIZER\n - api/core/EffectCleanupFn\n - api/core/EffectCleanupRegisterFn\n - api/core/EffectRef\n - api/core/ElementRef\n - api/core/EmbeddedViewRef\n - api/core/EnvironmentInjector\n - api/core/EnvironmentProviders\n - api/core/ErrorHandler\n - api/core/EventEmitter\n - api/core/ExistingProvider\n - api/core/ExistingSansProvider\n - api/core/FactoryProvider\n - api/core/FactorySansProvider\n - api/core/ForwardRefFn\n - api/core/GetTestability\n - api/core/Host\n - api/core/HostAttributeToken\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/INJECTOR\n - api/core/ImportProvidersSource\n - api/core/ImportedNgModuleProviders\n - api/core/Inject\n - api/core/InjectFlags\n - api/core/InjectOptions\n - api/core/Injectable\n - api/core/InjectableProvider\n - api/core/InjectableType\n - api/core/InjectionToken\n - api/core/Injector\n - api/core/InjectorType\n - api/core/Input\n - api/core/InputFunction\n - api/core/InputOptions\n - api/core/InputOptionsWithTransform\n - api/core/InputOptionsWithoutTransform\n - api/core/InputSignal\n - api/core/InputSignalWithTransform\n - api/core/IterableChangeRecord\n - api/core/IterableChanges\n - api/core/IterableDiffer\n - api/core/IterableDifferFactory\n - api/core/IterableDiffers\n - api/core/KeyValueChangeRecord\n - api/core/KeyValueChanges\n - api/core/KeyValueDiffer\n - api/core/KeyValueDifferFactory\n - api/core/KeyValueDiffers\n - api/core/LOCALE_ID\n - api/core/MissingTranslationStrategy\n - api/core/ModelFunction\n - api/core/ModelOptions\n - api/core/ModelSignal\n - api/core/ModuleWithComponentFactories\n - api/core/ModuleWithProviders\n - api/core/NO_ERRORS_SCHEMA\n - api/core/NgIterable\n - api/core/NgModule\n - api/core/NgModule#id\n - api/core/NgModuleFactory\n - api/core/NgModuleRef\n - api/core/NgProbeToken\n - api/core/NgZone\n - api/core/NgZoneOptions\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/Optional\n - api/core/Output\n - api/core/PACKAGE_ROOT_URL\n - api/core/PLATFORM_ID\n - api/core/PLATFORM_INITIALIZER\n - api/core/Pipe\n - api/core/PipeTransform\n - api/core/PlatformRef\n - api/core/PlatformRef#bootstrapModule\n - api/core/Predicate\n - api/core/Provider\n - api/core/ProviderToken\n - api/core/Query\n - api/core/QueryList\n - api/core/Renderer2\n - api/core/RendererFactory2\n - api/core/RendererStyleFlags2\n - api/core/RendererType2\n - api/core/Sanitizer\n - api/core/SchemaMetadata\n - api/core/SecurityContext\n - api/core/Self\n - api/core/Signal\n - api/core/SimpleChange\n - api/core/SimpleChanges\n - api/core/SkipSelf\n - api/core/StateKey\n - api/core/StaticClassProvider\n - api/core/StaticClassSansProvider\n - api/core/StaticProvider\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - api/core/TemplateRef\n - api/core/Testability\n - api/core/TestabilityRegistry\n - api/core/TrackByFunction\n - api/core/TransferState\n - api/core/Type\n - api/core/TypeDecorator\n - api/core/TypeProvider\n - api/core/ValueEqualityFn\n - api/core/ValueProvider\n - api/core/ValueSansProvider\n - api/core/Version\n - api/core/ViewChild\n - api/core/ViewChildFunction\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/ViewEncapsulation\n - api/core/ViewEncapsulation#Emulated\n - api/core/ViewRef\n - api/core/WritableSignal\n - api/core/afterNextRender\n - api/core/afterRender\n - api/core/asNativeElements\n - api/core/assertInInjectionContext\n - api/core/assertNotInReactiveContext\n - api/core/assertPlatform\n - api/core/booleanAttribute\n - api/core/computed\n - api/core/contentChild\n - api/core/contentChildren\n - api/core/createComponent\n - api/core/createEnvironmentInjector\n - api/core/createNgModule\n - api/core/createNgModuleRef\n - api/core/createPlatform\n - api/core/createPlatformFactory\n - api/core/defineInjectable\n - api/core/destroyPlatform\n - api/core/effect\n - api/core/enableProdMode\n - api/core/forwardRef\n - api/core/getDebugNode\n - api/core/getModuleFactory\n - api/core/getNgModuleById\n - api/core/getPlatform\n - api/core/importProvidersFrom\n - api/core/inject\n - api/core/input\n - api/core/isDevMode\n - api/core/isSignal\n - api/core/isStandalone\n - api/core/makeEnvironmentProviders\n - api/core/makeStateKey\n - api/core/mergeApplicationConfig\n - api/core/model\n - api/core/ng-container\n - api/core/ng-content\n - api/core/ng-template\n - api/core/numberAttribute\n - api/core/platformCore\n - api/core/provideZoneChangeDetection\n - api/core/reflectComponentType\n - api/core/resolveForwardRef\n - api/core/runInInjectionContext\n - api/core/rxjs-interop\n - api/core/rxjs-interop/toSignal\n - api/core/setTestabilityGetter\n - api/core/signal\n - api/core/testing\n - api/core/untracked\n - api/core/viewChild\n - api/core/viewChildren\n - api/platform-browser/BrowserModule\n - api/platform-browser/bootstrapApplication\n - guide/dependency-injection-context\n - guide/dependency-injection-providers\n - guide/deprecations#jit-api-changes\n - guide/glossary#di-token\n - guide/glossary#provider\n - guide/glossary#view\n - guide/glossary#view-hierarchy\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/core/PACKAGE.md\n - https://web.dev/strict-csp/\n-->"}