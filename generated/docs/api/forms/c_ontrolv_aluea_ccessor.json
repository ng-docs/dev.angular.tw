{"id":"api/forms/ControlValueAccessor","title":"ControlValueAccessor","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/forms/ControlValueAccessor\", \"name\": \"ControlValueAccessor\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L10-L132\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"controlvalueaccessor\">ControlValueAccessor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#controlvalueaccessor\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47j1w3p6obpx319avjyb664fx\">定義一個介面，該介面充當 Angular 表單 API 和 DOM 中的原生元素之間的橋樑。</p>\n\n    <p><a href=\"api/forms/ControlValueAccessor#description\">檢視更多...</a></p>\n  </section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a> {<br><a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#writeValue\"><span class=\"member-name\">writeValue</span>(obj: any): void</a><br><a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnChange\"><span class=\"member-name\">registerOnChange</span>(fn: any): void</a><br><a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnTouched\"><span class=\"member-name\">registerOnTouched</span>(fn: any): void</a><br><a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#setDisabledState\"><span class=\"member-name\">setDisabledState</span>(isDisabled: boolean)?: void</a>\n}\n</code-example>\n\n\n  <div class=\"descendants class\">\n    <h2 id=\"實現類別\">實現類別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#實現類別\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/forms/CheckboxControlValueAccessor\" class=\"code-anchor\">CheckboxControlValueAccessor</a></code>\n    \n  </li>\n  <li>\n    <code><a href=\"api/forms/DefaultValueAccessor\" class=\"code-anchor\">DefaultValueAccessor</a></code>\n    \n  </li>\n  <li>\n    <code><a href=\"api/forms/NumberValueAccessor\" class=\"code-anchor\">NumberValueAccessor</a></code>\n    \n  </li>\n  <li>\n    <code><a href=\"api/forms/RadioControlValueAccessor\" class=\"code-anchor\">RadioControlValueAccessor</a></code>\n    \n  </li>\n  <li>\n    <code><a href=\"api/forms/RangeValueAccessor\" class=\"code-anchor\">RangeValueAccessor</a></code>\n    \n  </li>\n  <li>\n    <code><a href=\"api/forms/SelectControlValueAccessor\" class=\"code-anchor\">SelectControlValueAccessor</a></code>\n    \n  </li>\n  <li>\n    <code><a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">SelectMultipleControlValueAccessor</a></code>\n    \n  </li>\n</ul>\n  </div>\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><a href=\"api/forms/DefaultValueAccessor\"><code>DefaultValueAccessor</code></a></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eswrk5qknojqnqhvfg1sxgx4t\">實現此介面以建立與 Angular 表單整合的自定義表單控制元件指令。</p>\n</section>\n  \n  \n<section class=\"instance-methods\">\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"writeValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"writevalue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xk3qk7ja4hm7m51nf07xprsw\">writeValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#writevalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L24-L44\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"755nioao7i2nu763wg9pl36vd\">將新值寫入元素。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">writeValue</span>(obj: any): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ctbi0a37g18mv6qcymaedix8m\"><a id=\"\"></a>\n        <code>obj</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"am2dhd4ennyarrutzvs098n1w\">元素的新值</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64f36clkna1f1j1wx0b0oy06w\">當請求從模型到檢視的程式設計更改時，表單 API 會呼叫此方法以寫入檢視。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"writeValue-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#writeValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"write-a-value-to-the-element\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bnch3i20yhfxwc2i7efr3i9df\">向元素寫入值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#write-a-value-to-the-element\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"25r0r9fdo0ilr97o6sqfw76er\">以下範例將一個值寫入原生 DOM 元素。</p>\n<code-example language=\"ts\">\nwriteValue(value: any): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"registerOnChange\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"registeronchange\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24ixn4rjgcvl500z3e5w7x5nr\">registerOnChange()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registeronchange\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L45-L79\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pdrj98fv4d40aqq2se4828yc\">註冊一個回呼函式，該控制元件的值在 UI 中更改時將呼叫該回調函式。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerOnChange</span>(fn: any): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"140pqzq6lw69r4uzam5rr6jr4\"><a id=\"\"></a>\n        <code>fn</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4gfrxesnpzqmxepty369m0gx\">要註冊的回呼函式</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"17trhzi086jdkxzyxihfwx3tz\">當值從檢視傳播到模型時，表單 API 會在初始化時調用此方法以更新表單模型。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fkys7j3qlffvgts3ysgvseep\">在你自己的值訪問器中實現 <code>registerOnChange</code>\n方法時，請儲存給定的函式，以便你的類別在適當的時機呼叫它。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"registerOnChange-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registerOnChange-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"store-the-change-function\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oy7obx4ib811kq66fo15fhs6\">儲存變更函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#store-the-change-function\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4k3ne5ebjf2ubikp8fi2gfk2e\">以下範例將所提供的函式儲存為內部方法。</p>\n<code-example language=\"ts\">\nregisterOnChange(fn: (_: any) =&gt; void): void {\n  this._onChange = fn;\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bd9cmxmtzoq9gk4tom3x6f3dk\">當用戶介面中的值更改時，請調用已註冊的函式以允許表單 API 自行更新：</p>\n<code-example language=\"ts\">\nhost: {\n   '(change)': '_onChange($event.target.value)'\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"registerOnTouched\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"registerontouched\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5sk7vl173tfdo40248b5n1lg4\">registerOnTouched()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registerontouched\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L80-L112\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyscuflosyfpij9fvefuhtlj7\">註冊一個在初始化時由表單 API 呼叫的回呼函式，以在失焦時更新表單模型。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerOnTouched</span>(fn: any): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"140pqzq6lw69r4uzam5rr6jr4\"><a id=\"\"></a>\n        <code>fn</code></td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4gfrxesnpzqmxepty369m0gx\">要註冊的回呼函式</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"72xrmkeuxg07qm0olw8v6fwks\">在你自己的值訪問器中實現 <code>registerOnTouched</code>\n，請儲存給定函式，以便你的類別在應將控制元件視為失焦或『已接觸過』時調用它。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"registerOnTouched-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registerOnTouched-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"store-the-callback-function\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ueuseyn8fnbdpaiwat25tgwt\">儲存回呼函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#store-the-callback-function\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4k3ne5ebjf2ubikp8fi2gfk2e\">以下範例將所提供的函式儲存為內部方法。</p>\n<code-example language=\"ts\">\nregisterOnTouched(fn: any): void {\n  this._onTouched = fn;\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4l9o1fqonskga0hr3bh2j1j4t\">在 blur（或等效事件）時，你的類別應呼叫已註冊的函式以允許表單 API 自行更新：</p>\n<code-example language=\"ts\">\nhost: {\n   '(blur)': '_onTouched()'\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setDisabledState\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setdisabledstate\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9trr36gjgajtrqi64wqw3oc67\">setDisabledState()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#setdisabledstate\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L113-L131\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxvvlu5cnk5fv6fel3c2e2gv7\">當控制元件狀態更改為 『DISABLED』 或從 『DISABLED』 更改時，表單 API\n要呼叫的函式。根據其狀態，它會啟用或停用適當的 DOM 元素。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setDisabledState</span>(isDisabled: boolean)?: void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">引數</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"byadli8qjbpmcmprjkqtjrsa6\"><a id=\"\"></a>\n        <code>isDisabled</code></td>\n      <td class=\"param-type\"><code>boolean</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4so1vo943ior3g267qpzo88vz\">要在元素上設定的停用狀態</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">回傳值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"setDisabledState-usage-notes\">使用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#setDisabledState-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7sumbhurpc8wuv48y0scfq12w\">以下是將 disabled 屬性寫入原生 DOM 元素的範例：</p>\n<code-example language=\"ts\">\nsetDisabledState(isDisabled: boolean): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/CheckboxControlValueAccessor\n - api/forms/DefaultValueAccessor\n - api/forms/FormsModule\n - api/forms/NG_VALUE_ACCESSOR\n - api/forms/NgControl\n - api/forms/NumberValueAccessor\n - api/forms/RadioControlValueAccessor\n - api/forms/RangeValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/upgrade/UpgradeAdapter\n - guide/built-in-directives\n - guide/forms-overview\n - guide/update-to-version-15\n-->\n<!-- links from this doc:\n - /api\n - api/forms\n - api/forms/CheckboxControlValueAccessor\n - api/forms/ControlValueAccessor#controlvalueaccessor\n - api/forms/ControlValueAccessor#description\n - api/forms/ControlValueAccessor#instance-methods\n - api/forms/ControlValueAccessor#registerOnChange\n - api/forms/ControlValueAccessor#registerOnChange-usage-notes\n - api/forms/ControlValueAccessor#registerOnTouched\n - api/forms/ControlValueAccessor#registerOnTouched-usage-notes\n - api/forms/ControlValueAccessor#registeronchange\n - api/forms/ControlValueAccessor#registerontouched\n - api/forms/ControlValueAccessor#see-also\n - api/forms/ControlValueAccessor#setDisabledState\n - api/forms/ControlValueAccessor#setDisabledState-usage-notes\n - api/forms/ControlValueAccessor#setdisabledstate\n - api/forms/ControlValueAccessor#store-the-callback-function\n - api/forms/ControlValueAccessor#store-the-change-function\n - api/forms/ControlValueAccessor#write-a-value-to-the-element\n - api/forms/ControlValueAccessor#writeValue\n - api/forms/ControlValueAccessor#writeValue-usage-notes\n - api/forms/ControlValueAccessor#writevalue\n - api/forms/ControlValueAccessor#實現類別\n - api/forms/DefaultValueAccessor\n - api/forms/NumberValueAccessor\n - api/forms/RadioControlValueAccessor\n - api/forms/RangeValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L10-L132\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L113-L131\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L24-L44\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L45-L79\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/directives/control_value_accessor.ts#L80-L112\n-->"}