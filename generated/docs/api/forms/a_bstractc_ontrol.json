{"id":"api/forms/AbstractControl","title":"AbstractControl","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/forms/AbstractControl\", \"name\": \"AbstractControl\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L328-L1404\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"abstractcontrol\">AbstractControl<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#abstractcontrol\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aeje1i7xwz0pt88k72gdyk61e\">这是 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 和 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的基类。</p>\n\n    <p><a href=\"api/forms/AbstractControl#description\">查看更多...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nabstract class <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;TValue = any, TRawValue extends TValue = TValue&gt; {\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#constructor()\"><span class=\"member-name\">constructor</span>(validators: ValidatorFn | ValidatorFn[], asyncValidators: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\"><span class=\"member-name\">value</span>: TValue</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\"><span class=\"member-name\">validator</span>: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\"><span class=\"member-name\">asyncValidator</span>: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\"><span class=\"member-name\">parent</span>: FormGroup | FormArray | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\"><span class=\"member-name\">status</span>: FormControlStatus</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\"><span class=\"member-name\">valid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\"><span class=\"member-name\">invalid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\"><span class=\"member-name\">pending</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\"><span class=\"member-name\">disabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\"><span class=\"member-name\">enabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\"><span class=\"member-name\">errors</span>: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\"><span class=\"member-name\">pristine</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\"><span class=\"member-name\">dirty</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\"><span class=\"member-name\">touched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\"><span class=\"member-name\">untouched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\"><span class=\"member-name\">valueChanges</span>: Observable&lt;TValue&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\"><span class=\"member-name\">statusChanges</span>: Observable&lt;FormControlStatus&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\"><span class=\"member-name\">updateOn</span>: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\"><span class=\"member-name\">root</span>: AbstractControl</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\"><span class=\"member-name\">setValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\"><span class=\"member-name\">setAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#addValidators\"><span class=\"member-name\">addValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#addAsyncValidators\"><span class=\"member-name\">addAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeValidators\"><span class=\"member-name\">removeValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeAsyncValidators\"><span class=\"member-name\">removeAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasValidator\"><span class=\"member-name\">hasValidator</span>(validator: ValidatorFn): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasAsyncValidator\"><span class=\"member-name\">hasAsyncValidator</span>(validator: AsyncValidatorFn): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\"><span class=\"member-name\">clearValidators</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\"><span class=\"member-name\">clearAsyncValidators</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\"><span class=\"member-name\">markAsTouched</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAllAsTouched\"><span class=\"member-name\">markAllAsTouched</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\"><span class=\"member-name\">markAsUntouched</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\"><span class=\"member-name\">markAsDirty</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\"><span class=\"member-name\">markAsPristine</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\"><span class=\"member-name\">markAsPending</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\"><span class=\"member-name\">disable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\"><span class=\"member-name\">enable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\"><span class=\"member-name\">setParent</span>(parent: FormGroup&lt;any&gt; | FormArray&lt;any&gt;): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">abstract <span class=\"member-name\">setValue</span>(value: TRawValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">abstract <span class=\"member-name\">patchValue</span>(value: TValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">abstract <span class=\"member-name\">reset</span>(value?: TValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#getRawValue\"><span class=\"member-name\">getRawValue</span>(): any</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\"><span class=\"member-name\">updateValueAndValidity</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\"><span class=\"member-name\">setErrors</span>(errors: ValidationErrors, opts: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&lt;P extends string | ((string | number)[])&gt;(path: P): AbstractControl&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&lt;P extends string | (readonly (string | number)[])&gt;(path: P): AbstractControl&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&lt;P extends string | Array&lt;string | number&gt;&gt;(path: P): AbstractControl&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\"><span class=\"member-name\">getError</span>(errorCode: string, path?: string | (string | number)[]): any</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\"><span class=\"member-name\">hasError</span>(errorCode: string, path?: string | (string | number)[]): boolean</a>\n}\n</code-example>\n\n  <div class=\"descendants class\">\n    <h2 id=\"子类\">子类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#子类\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>\n    \n  </li>\n  <li>\n    <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>\n    \n<ul>\n  <li>\n    <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>\n    \n  </li>\n</ul>\n  </li>\n</ul>\n  </div>\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3wzo11uv1p81ymzney3v3s1yg\"><a href=\"/guide/forms\">表单</a></p></li>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bp4gmwca7y9kmqzffev30h35v\"><a href=\"/guide/reactive-forms\">响应式表单</a></p></li>\n    <li><p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8kjry2nya8tny6nmsdhzjrw05\"><a href=\"/guide/dynamic-form\">动态表单</a></p></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1z6p56enss8ynmyifasjy8icr\">它提供了一些所有控件和控件组共有的行为，比如运行验证器、计算状态和重置状态。\n它还定义了一些所有子类共享的属性，如 <code>value</code>、<code>valid</code> 和 <code>dirty</code>。不允许直接实例化它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9gmcsogi5uf5zaulsm6pfpdve\">第一个类型参数 TValue 表示控件的值类型 ( <code>control.value</code> )。可选的类型参数 TRawValue\n表示原始值类型 ( <code>control.getRawValue()</code> )。</p>\n</section>\n  \n<h2 id=\"constructor\">构造函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#constructor\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7e7lezfggb7dmq6rzv7uq04ak\">初始化这个 AbstractControl 实例。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">constructor</span>(validators: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[], asyncValidators: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[])</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adwobxp3mn2ye6e6kp9u6ctdw\"><a id=\"\"></a>\n        <code>validators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mmaj7e06g6m0skcu0d8kkj75\">用于决定该控件有效性的同步函数。</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6i4633ysdljd4wzideu8albqe\"><a id=\"\"></a>\n        <code>asyncValidators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2mb3am0gukq8wzpmr1by6m1z4\">用于异步确定此控件有效性的函数或函数数组。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"value\"></a>\n          <code class=\"\"><span class=\"member-name\">value</span>: TValue</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l2faqse8ab1e0kb38gukz9jg\">控件的当前值。</p>\n          <ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8zkzcb09tg1chd175f2tflp3\">对于 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>，它是当前值。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7flq8z6s7y3j528xr8o8tc0ee\">  对于启用状态的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>，它是由组中的每个已启用的成员控件的名称和值组成的对象。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dacjsxlpoj601v9bt2j63pr3p\">  对于禁用状态的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>，它是由组中的所有成员控件的名称和值组成的对象。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c78tigiq6cus4g86x2x464hc7\">对于 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>，它是有所有已启用的控件的值组成的数组。</li>\n</ul>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"validator\"></a>\n          <code class=\"\"><span class=\"member-name\">validator</span>: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | null</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bp1shya2kdq9qqun7v3j4hzg8\">返回用于同步确定此控件的有效性的函数。如果添加了多个验证器，这将是一个组合函数。有关其他信息，请参阅\n<code><a href=\"api/forms/Validators#compose\" class=\"code-anchor\">Validators.compose()</a></code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"asyncValidator\"></a>\n          <code class=\"\"><span class=\"member-name\">asyncValidator</span>: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | null</code>\n        </td>\n        <td>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6493wzdxoge3rxn7peko5c0n8\">返回用于异步确定此控件的有效性的函数。如果添加了多个验证器，这将是一个组合函数。有关其他信息，请参阅\n<code><a href=\"api/forms/Validators#compose\" class=\"code-anchor\">Validators.compose()</a></code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"parent\"></a>\n          <code class=\"\"><span class=\"member-name\">parent</span>: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a> | <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a> | null</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"csk7n5qnmlvg3b5zlef1zz0cr\">父控件。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"status\"></a>\n          <code class=\"\"><span class=\"member-name\">status</span>: <a href=\"api/forms/FormControlStatus\" class=\"code-anchor\">FormControlStatus</a></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5wbfbhk30qf3pxidhqp1ezo0y\">控件的验证状态。</p>\n          \n          <p>参见：</p>\n          <ul>\n            <li><a href=\"api/forms/FormControlStatus\"><code>FormControlStatus</code></a>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29v3mue1lbnmv4cyhysgnxjri\">这些状态值是互斥的，因此一个控件不可能同时处于有效状态和无效状态或无效状态和禁用状态。</p>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"valid\"></a>\n          <code class=\"\"><span class=\"member-name\">valid</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4f4npf28nlu9ds1hxk9lhs7ip\">当控件的 <code>status</code> 为 <code>VALID</code> 时，它就是 <code>valid</code> 的。</p>\n          \n          <p>参见：</p>\n          <ul>\n            <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"invalid\"></a>\n          <code class=\"\"><span class=\"member-name\">invalid</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mi3i17ow5cvo1zthc2ajy3yn\">当控件的 <code>status</code> 为 <code>INVALID</code> 时，它就是 <code>invalid</code> 的。</p>\n          \n          <p>参见：</p>\n          <ul>\n            <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"pending\"></a>\n          <code class=\"\"><span class=\"member-name\">pending</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d9z55gy7p892rlltpkf4yuw73\">当控件的 <code>status</code> 为 <code>PENDING</code> 时，它就是 <code>pending</code> 的。</p>\n          \n          <p>参见：</p>\n          <ul>\n            <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"disabled\"></a>\n          <code class=\"\"><span class=\"member-name\">disabled</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nm1kxq5tzhea6ya7nf0k0t5i\">当控件的 <code>status</code> 为 <code>DISABLED</code> 时，它就是 <code>disabled</code>。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92ib9ig6y6rjoslndkt83cuhz\">参见:</p>\n\n          <p>参见：</p>\n          <ul>\n            <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"enabled\"></a>\n          <code class=\"\"><span class=\"member-name\">enabled</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f462bm3u2e4cjshkodrdb8bwa\">如果控件的 <code>status</code> 不是 <code>DISABLED</code> 时，它就是 <code>enabled</code>。</p>\n          \n          <p>参见：</p>\n          <ul>\n            <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"errors\"></a>\n          <code class=\"\"><span class=\"member-name\">errors</span>: <a href=\"api/forms/ValidationErrors\" class=\"code-anchor\">ValidationErrors</a> | null</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtl4h4okpckthy33ua6o1kv4l\">一个对象，包含由失败的验证所生成的那些错误，如果没出错则为 null。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"pristine\"></a>\n          <code class=\"\"><span class=\"member-name\">pristine</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9e33nbvtvrqcvufluisohw949\">如果用户尚未修改 UI 中的值，则该控件是 <code>pristine</code>（原始状态）的。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"dirty\"></a>\n          <code class=\"\"><span class=\"member-name\">dirty</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7voy5kjkv5blo9xlbm4fddpv1\">如果用户修改过 UI 中的值，则控件是 <code>dirty</code>（脏） 的。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"touched\"></a>\n          <code class=\"\"><span class=\"member-name\">touched</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bdkwc4cx3juaicj5elayhwz9i\">如果控件被标记为 <code>touched</code>（碰过） 则为 <code>true</code>。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"773suu76fb1nexhtr14xb81no\">一旦用户在控件上触发了 <code>blur</code> 事件，则会将其标记为 <code>touched</code>。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"untouched\"></a>\n          <code class=\"\"><span class=\"member-name\">untouched</span>: boolean</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4qybv8kj40l4o6xmy3wqueppg\">如果该控件尚未标记为 <code>touched</code>，则为 <code>true</code>。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4b8isyyvgrtcmhrqbv0ttp0cs\">如果用户尚未在控件上触发过 <code>blur</code> 事件，则该控件为 <code>untouched</code>。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"valueChanges\"></a>\n          <code class=\"\"><span class=\"member-name\">valueChanges</span>: Observable&lt;TValue&gt;</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1z0b0o3w20qtt9yxm1bcyq473\">一个多播 Observable（可观察对象），每当控件的值发生变化时，它就会发出一个事件 —— 无论是通过 UI 还是通过程序。每当你调用 <code>enable()</code> 或 <code>disable()</code>，但没有传入 <code>{emitEvent: false}</code> 参数时，它也同样会发出一个事件。</p>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"esybtrsk6nf8qp8ywlqmnxowe\"><strong>注意</strong>：发射发生在更新此控件的值之后。父控件的值（例如，如果此 FormControl 是 FormGroup 的一部分）稍后更新，因此从该事件的回调中访问父控件的值（使用 <code>value</code> 属性）可能会导致获得一个值尚未更新。改为订阅父控件的 <code>valueChanges</code> 事件。</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"statusChanges\"></a>\n          <code class=\"\"><span class=\"member-name\">statusChanges</span>: Observable&lt;<a href=\"api/forms/FormControlStatus\" class=\"code-anchor\">FormControlStatus</a>&gt;</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24eyw1kacq6pw8ssfl6h7o05z\">一个多播 Observable（可观察对象），每当控件的验证 <code>status</code> 被重新计算时，就会发出一个事件。</p>\n          \n          <p>参见：</p>\n          <ul>\n            <li><a href=\"api/forms/FormControlStatus\"><code>FormControlStatus</code></a>\n</li>\n            <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n          </ul>\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"updateOn\"></a>\n          <code class=\"\"><span class=\"member-name\">updateOn</span>: FormHooks</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4obb3lb785q2lvy6duqomp7gl\">报告这个 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 的更新策略（表示控件用来更新自身状态的事件）。\n可能的值有 <code>'change'</code> | <code>'blur'</code> | <code>'submit'</code>，默认值是 <code>'change'</code>。</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"root\"></a>\n          <code class=\"\"><span class=\"member-name\">root</span>: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"455f45kua415xmvgqse91fw3v\">获取该控件的顶级祖先。</p>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"setValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setvalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ssn0sdlorgtgfocqw8qyorma\">setValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#setvalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L617-L630\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"esyslbtgds7tglwyamuz0plw\">设置此控件上处于活动状态的同步验证器。调用此方法会覆盖任何现有的同步验证器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setValidators</span>(validators: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adwobxp3mn2ye6e6kp9u6ctdw\"><a id=\"\"></a>\n        <code>validators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"asz8iqfwavivhffhci8hjyn4w\">如果你想添加新的验证器而不影响现有的验证器，请考虑改用 <code>addValidators()</code> 方法。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setAsyncValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setasyncvalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8i9kht0z2um1iegkzasd0aigg\">setAsyncValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#setasyncvalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L631-L644\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"brsly1utthxoz25sit6luipn1\">设置此控件上处于活动状态的异步验证器。调用此方法会覆盖任何现有的异步验证器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setAsyncValidators</span>(validators: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adwobxp3mn2ye6e6kp9u6ctdw\"><a id=\"\"></a>\n        <code>validators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ee2hb6jq5kmuy7bx2lwjnvhyz\">如果你想添加新的验证器而不影响现有的验证器，请考虑改用 <code>addAsyncValidators()</code> 方法。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"addValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"addvalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a5ikp5ep8it1159ubuzhzbvzo\">addValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#addvalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L645-L660\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50w5134rv5rgql2t3gpcbczae\">向此控件添加一个或多个同步验证器，而不影响其他验证器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">addValidators</span>(validators: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adwobxp3mn2ye6e6kp9u6ctdw\"><a id=\"\"></a>\n        <code>validators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5rqsookh9zyp1ylse8r210lmd\">要添加到此控件的新验证器函数。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c17qtmziv269jri006rxcmilc\">添加已存在的验证器将没有任何效果。如果验证 <code>validators</code>\n数组中存在重复的验证器函数，则只有第一个实例会添加到表单控件。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"addAsyncValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"addasyncvalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rkgjni7g39jekisog48jqui3\">addAsyncValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#addasyncvalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L661-L675\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2iecl5v4b5d4pewrso225ld1n\">向此控件添加一个或多个异步验证器，而不影响其他验证器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">addAsyncValidators</span>(validators: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adwobxp3mn2ye6e6kp9u6ctdw\"><a id=\"\"></a>\n        <code>validators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6wzlpx61s2bav0uqfztp9dyxo\">要添加到此控件的新的异步验证器函数。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d1snmsn4cjulw6vs07jqbqwli\">添加已存在的验证器将没有任何效果。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"removeValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"removevalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bjld5xi9uxkjde4ysqe7a9w2c\">removeValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#removevalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L676-L708\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elbp7zr2qldv8by0x70wu7rml\">从此控件中删除同步验证器，而不影响其他验证器。验证器会按函数引用进行比较；你必须传递对与最初设置的验证器函数完全相同的验证器函数的引用。如果找不到提供的验证器，则将其忽略。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeValidators</span>(validators: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adwobxp3mn2ye6e6kp9u6ctdw\"><a id=\"\"></a>\n        <code>validators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eidf5ml4etbavcc8vt6y0b4x6\">要删除的验证器。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"removeValidators-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#removeValidators-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"reference-to-a-validatorfn\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"67n08dr3niyuaa96zyyw0ksd5\">引用 ValidatorFn<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#reference-to-a-validatorfn\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\n// Reference to the <a href=\"api/forms/RequiredValidator\" class=\"code-anchor\">RequiredValidator</a>\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&lt;string | null&gt;('', Validators.required);\nctrl.removeValidators(Validators.required);\n\n// Reference to anonymous function inside <a href=\"api/forms/MinValidator\" class=\"code-anchor\">MinValidator</a>\nconst minValidator = Validators.min(3);\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&lt;string | null&gt;('', minValidator);\nexpect(ctrl.hasValidator(minValidator)).toEqual(true)\nexpect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n\nctrl.removeValidators(minValidator);\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"removeAsyncValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"removeasyncvalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47fgein3u6zvtz10efmf8igpm\">removeAsyncValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#removeasyncvalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L709-L723\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"303cy0nmurv1b8rmj2qjjxvce\">从此控件中删除异步验证器，而不影响其他验证器。验证器会按函数引用进行比较；你必须传递对与最初设置的验证器函数完全相同的验证器函数的引用。如果找不到提供的验证器，则将其忽略。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeAsyncValidators</span>(validators: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adwobxp3mn2ye6e6kp9u6ctdw\"><a id=\"\"></a>\n        <code>validators</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5z5ili21ocvnk3g3buz3uisb\">要删除的异步验证器或验证器。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"hasValidator\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"hasvalidator\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4vlg5y1ra2ibs9vsm1v5j4zf1\">hasValidator()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#hasvalidator\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L724-L750\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"85wuvga86ylcbrwkqrm4czxq6\">检查此控件上是否存在同步验证器函数。提供的验证器必须是对所提供的完全相同函数的引用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">hasValidator</span>(validator: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>): boolean</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"q309kmrdk6i1rtqb6dld4bhf\"><a id=\"\"></a>\n        <code>validator</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a></code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1nekmyiqsvm6zpnstwq6ta05l\">要检查是否存在的验证器。通过函数引用进行比较。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65f5motj4qzh9qvpgcwhco9k\">是否在此控件上找到提供的验证器。</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"hasValidator-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#hasValidator-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"reference-to-a-validatorfn-1\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"67n08dr3niyuaa96zyyw0ksd5\">引用 ValidatorFn<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#reference-to-a-validatorfn-1\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\n// Reference to the <a href=\"api/forms/RequiredValidator\" class=\"code-anchor\">RequiredValidator</a>\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&lt;number | null&gt;(0, Validators.required);\nexpect(ctrl.hasValidator(Validators.required)).toEqual(true)\n\n// Reference to anonymous function inside <a href=\"api/forms/MinValidator\" class=\"code-anchor\">MinValidator</a>\nconst minValidator = Validators.min(3);\nconst ctrl = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&lt;number | null&gt;(0, minValidator);\nexpect(ctrl.hasValidator(minValidator)).toEqual(true)\nexpect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"hasAsyncValidator\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"hasasyncvalidator\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ntf7uszhnztgvma3slrrkm6e\">hasAsyncValidator()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#hasasyncvalidator\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L751-L762\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a5fjqjtzjhtybp88gm0fji5zz\">检查此控件上是否存在异步验证器函数。提供的验证器必须是对所提供的完全相同函数的引用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">hasAsyncValidator</span>(validator: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>): boolean</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"q309kmrdk6i1rtqb6dld4bhf\"><a id=\"\"></a>\n        <code>validator</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a></code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8n3kf9fixwvztidbocvyiwhez\">要检查是否存在的异步验证器。通过函数引用进行比较。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lh3w72bwtkgcaxricsgig6n6\">是否在此控件上找到提供的异步验证器。</p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"clearValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"clearvalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97e1goq1kafnn3h02f99fjhnv\">clearValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#clearvalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L763-L773\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"348z0r50d1g23e9rw3pay979e\">清空同步验证器列表。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">clearValidators</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"clearAsyncValidators\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"clearasyncvalidators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6z9cvvhybl5otefy99sumgdaq\">clearAsyncValidators()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#clearasyncvalidators\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L774-L784\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43qcmbhvqmgamli6xfb4w8cn6\">清空异步验证器列表。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">clearAsyncValidators</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvh6nx1wn1zdipn2k6yff55qm\">在运行时添加或删除验证器时，必须调用 <code>updateValueAndValidity()</code> 才能使新验证生效。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"markAsTouched\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"markastouched\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6mtdx7u56qi67ygndk95djlkb\">markAsTouched()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#markastouched\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L785-L805\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6t8oipib4z8qoaalb06ekw0qz\">将控件标记为已 <code>touched</code>。focus 和 blur 事件不会改变该值，从而让控件变为已触摸状态。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#markAsUntouched\"><code>markAsUntouched</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsDirty\"><code>markAsDirty</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsPristine\"><code>markAsPristine</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">markAsTouched</span>(opts: { onlySelf?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4oltn589mjefep32c0vxjbbs6\"> 在应用完此标记后，该配置项会决定控件如何传播变更及发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zqxq9tyelqbao242n4zlq8cr\">  <code>onlySelf</code>：如果为 <code>true</code> 则只标记当前控件。如果为 <code>false</code> 或不提供，则标记它所有的直系祖先。默认为 <code>false</code>。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"markAllAsTouched\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"markallastouched\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2b6rwb6x3qljygyk0bqk3koue\">markAllAsTouched()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#markallastouched\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L806-L815\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfe02zy3kqfx3ji9dasgkmxps\">将控件及其所有后代控件标记为已 <code>touched</code> 。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#markAsTouched\"><code>markAsTouched</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">markAllAsTouched</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"markAsUntouched\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"markasuntouched\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"42or1lvxlaj1ul95zise320uq\">markAsUntouched()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#markasuntouched\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L816-L843\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8err5y4legauwynv5tto24hmh\">把该控件标记为 <code>untouched</code>。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#markAsTouched\"><code>markAsTouched</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsDirty\"><code>markAsDirty</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsPristine\"><code>markAsPristine</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">markAsUntouched</span>(opts: { onlySelf?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hfjfw6dg1z7ww6rg4l5mw681\">在应用完此标记后，该配置项会决定控件如何传播变更及发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zqxq9tyelqbao242n4zlq8cr\">  <code>onlySelf</code>：如果为 <code>true</code> 则只标记当前控件。如果为 <code>false</code> 或不提供，则标记它所有的直系祖先。默认为 <code>false</code>。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1glqm0tikws346um153rncxs7\">如果该控件有任何子控件，还会把所有子控件标记为 <code>untouched</code>，并重新计算所有父控件的 <code>touched</code> 状态。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"markAsDirty\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"markasdirty\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qaylzxd5yt96uji2y88zf6mf\">markAsDirty()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#markasdirty\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L844-L864\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ab6wyrs5wdulprxnhx1t8bxz\">把控件标记为 <code>dirty</code>。当控件通过 UI 修改过时控件会变成 <code>dirty</code> 的；与 <code>markAsTouched</code> 相对。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#markAsTouched\"><code>markAsTouched</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsUntouched\"><code>markAsUntouched</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsPristine\"><code>markAsPristine</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">markAsDirty</span>(opts: { onlySelf?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4oltn589mjefep32c0vxjbbs6\"> 在应用完此标记后，该配置项会决定控件如何传播变更及发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zqxq9tyelqbao242n4zlq8cr\">  <code>onlySelf</code>：如果为 <code>true</code> 则只标记当前控件。如果为 <code>false</code> 或不提供，则标记它所有的直系祖先。默认为 <code>false</code>。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"markAsPristine\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"markaspristine\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6kyaz3nirbudrsj0j6m9gwnia\">markAsPristine()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#markaspristine\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L865-L893\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6s2avh8sau3fwk9ptnlcoxrw3\">把该控件标记为 <code>pristine</code>（原始状态）。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#markAsTouched\"><code>markAsTouched</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsUntouched\"><code>markAsUntouched</code></a>\n</li>\n          <li><a href=\"api/forms/AbstractControl#markAsDirty\"><code>markAsDirty</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">markAsPristine</span>(opts: { onlySelf?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8dojo27fb68ivejxajnm2jprn\">在应用完此标记后，该配置项会决定控件如何传播更改以及发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zqxq9tyelqbao242n4zlq8cr\">  <code>onlySelf</code>：如果为 <code>true</code> 则只标记当前控件。如果为 <code>false</code> 或不提供，则标记它所有的直系祖先。默认为 <code>false</code>。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65sv1pyj9xn3c5go8hhouanwy\">如果该控件有任何子控件，则把所有子控件标记为 <code>pristine</code>，并重新计算所有父控件的 <code>pristine</code> 状态。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"markAsPending\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"markaspending\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"39i12cak11yhyqnhtmthldk7p\">markAsPending()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#markaspending\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L894-L921\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b24wly4ltwyq3n49zkkiz04cu\">把该控件标记为 <code>pending</code>（待定）的。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">markAsPending</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"35q8f48j7clo44gcf09zu1k1b\">在应用完此标记后，该配置项会决定控件如何传播变更以及发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zqxq9tyelqbao242n4zlq8cr\">  <code>onlySelf</code>：如果为 <code>true</code> 则只标记当前控件。如果为 <code>false</code> 或不提供，则标记它所有的直系祖先。默认为 <code>false</code>。\n</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dyhzd2h0debb8p2jkk8glbfh9\">  <code>emitEvent</code>：如果为 <code>true</code> 或未提供（默认值），则 <code>statusChanges</code>（Observable）会发出一个事件，传入控件的最近状态，并把控件标记为 <code>pending</code> 状态。\n如果为 <code>false</code>，则不会发出事件。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d8r3e237nip2r7e7m8sppkweu\">当控件正在执行异步验证时，该控件是 <code>pending</code> 的。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"disable\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"disable\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89jklza2ugkho4p5oek4mkm9g\">disable()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#disable\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L922-L959\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eu9z3lochvh4xx0a12asdvd0o\">禁用此控件。这意味着该控件在表单验证检查时会被豁免，并且从其父控件的聚合值中排除它的值。它的状态是 <code>DISABLED</code>。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">disable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dasr4jq60sy2kg9uuj02go2gd\">在该控件被禁用之后，该配置项决定如何传播更改以及发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zqxq9tyelqbao242n4zlq8cr\">  <code>onlySelf</code>：如果为 <code>true</code> 则只标记当前控件。如果为 <code>false</code> 或不提供，则标记它所有的直系祖先。默认为 <code>false</code>。\n</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"485j9brvhy002qidneyu3s7ph\">  <code>emitEvent</code>：如果为 <code>true</code> 或没有提供（默认），则当控件被禁用时，<code>statusChanges</code> 和 <code>valueChanges</code> 这两个 Observable 都会发出最近的状态和值。\n如果为 <code>false</code>，则不会发出事件。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7u89pn0ben3c3exrdbavr6q67\">如果该控件有子控件，则所有子控件也会被禁用。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"enable\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"enable\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eiaf6grbqgaw1p3myg2z0lit9\">enable()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#enable\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L960-L992\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c426br3zom9ncy19ooa8wu5sq\">启用该控件。这意味着该控件包含在有效性检查中，并会出现在其父控件的聚合值中。它的状态会根据它的值和验证器而重新计算。</p>\n\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajvz2kusfoda7eq5p74uu34f3\">另请参阅:</p>\n        <ul>\n          <li><a href=\"api/forms/AbstractControl#status\"><code>status</code></a>\n</li>\n        </ul>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">enable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4h24520lj507s4xosm6ux6cxt\">当标记为 <code>untouched</code> 时，该配置项会决定该控件如何传播变更以及发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zqxq9tyelqbao242n4zlq8cr\">  <code>onlySelf</code>：如果为 <code>true</code> 则只标记当前控件。如果为 <code>false</code> 或不提供，则标记它所有的直系祖先。默认为 <code>false</code>。\n</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69jjxy2zbju7m44bhzkd4i9j8\">    <code>emitEvent</code>：如果为 <code>true</code> 或没有提供（默认），则当控件被启用时，<code>statusChanges</code> 和 <code>valueChanges</code> 这两个 Observable 都会发出最近的状态和值。\n如果为 <code>false</code>，则不会发出事件。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"48y7jg7b6sfnq60x4ry11hxsp\">默认情况下，如果该控件具有子控件，则所有子控件都会被启用。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setParent\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setparent\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9kjeru57s3fqfik35tjj2490h\">setParent()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#setparent\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1004-L1012\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8izjuw89bjq5wuibwv5giymde\">设置该控件的父控件</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setParent</span>(parent: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&lt;any&gt; | <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>&lt;any&gt;): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eloizkoityrs22mcy1irasmo9\"><a id=\"\"></a>\n        <code>parent</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&lt;any&gt; | <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>&lt;any&gt;</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cr006bubwwg3oikcva0ich1pk\">新的父级。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setvalue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ty8lunjmr2xez16pv04u3h2t\">setValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#setvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1013-L1017\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5n7rpdtjjczp9vj37ezyliby3\">设置该控件的值。这是一个抽象方法（由子类实现）。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">setValue</span>(value: TRawValue, options?: Object): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y18uxg2a2xx1qj04ok4glp0s\"><a id=\"\"></a>\n        <code>value</code></td>\n      <td class=\"param-type\"><code>TRawValue</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>Object</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"patchValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"patchvalue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66mitfnn88dcn54hm7fh2rktc\">patchValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#patchvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1018-L1022\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cdjticj6rdeco6nvpiv94skvt\">修补（patch）该控件的值。这是一个抽象方法（由子类实现）。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">patchValue</span>(value: TValue, options?: Object): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y18uxg2a2xx1qj04ok4glp0s\"><a id=\"\"></a>\n        <code>value</code></td>\n      <td class=\"param-type\"><code>TValue</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>Object</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"reset\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"reset\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1aoxcsunfmeve0o572gyzc2jp\">reset()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#reset\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1023-L1027\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4h4pfdckxdijzvsvnhwpxll8l\">重置控件。这是一个抽象方法（由子类实现）。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">reset</span>(value?: TValue, options?: Object): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y18uxg2a2xx1qj04ok4glp0s\"><a id=\"\"></a>\n        <code>value</code></td>\n      <td class=\"param-type\"><code>TValue</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>Object</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"getRawValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"getrawvalue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62te9ap4djgfxpo2tbtfbemzx\">getRawValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#getrawvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1028-L1035\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3dgd8l1ogyxk18l6m7gy6odg6\">此控件的原始值。对于大多数控件实现，原始值将包括禁用的子项。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">getRawValue</span>(): any</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>any</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"updateValueAndValidity\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"updatevalueandvalidity\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"76qmyfofzjis588bvm4ea7bb9\">updateValueAndValidity()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#updatevalueandvalidity\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1036-L1073\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4bx9lr037jeps3p2q816ixdpu\">重新计算控件的值和校验状态。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">updateValueAndValidity</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cer0538coi8qxxxlaownw1k8a\">当更新和进行有效性检查之后，该配置项会决定控件如何传播变更并发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ae8sewpb9vdo0nasc1vzz4cag\">  <code>onlySelf</code>：如果为 <code>true</code>，则只标记当前控件。如果为 <code>false</code> 或没有提供，则标记所有直系祖先。默认为 <code>false</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elrxpcdtiqof7c3xpijrs55i8\">  <code>emitEvent</code>：如果为 <code>true</code> 或没有提供（默认），则当控件被启用时，<code>statusChanges</code> 和 <code>valueChanges</code> 这两个 Observable 都会发出最近的状态和值。\n如果为 <code>false</code>，则不会发出事件。\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dzmqm88ikfre31u4u7unb0kn\">默认情况下，它还会更新其直系祖先的值和有效性状态。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setErrors\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"seterrors\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hfs4gp64gg1w3ucmdqk24pj9\">setErrors()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#seterrors\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1110-L1142\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"y9y42r7q420gt49pjygdo7s6\">在手动（而不是自动）运行校验之后，设置表单控件上的错误信息。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setErrors</span>(errors: <a href=\"api/forms/ValidationErrors\" class=\"code-anchor\">ValidationErrors</a>, opts: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cg34w0gone7bz8lwtv5876nsj\"><a id=\"\"></a>\n        <code>errors</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidationErrors\" class=\"code-anchor\">ValidationErrors</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3y3in4j1g1tyyyhb4md7w20md\"><a id=\"\"></a>\n        <code>opts</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"86vwl0tx9jp1rzn55aeg7l68v\">确定控件如何在设置控件错误后传播更改和发出事件的配置选项。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"au3wn1gija67gea2iuf7h014o\"><code>emitEvent</code>：当 true 或未提供（默认）时，<code>statusChanges</code> observable 在设置错误后发出一个事件。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6yzm7d91lp961b65qq5gqx0g\">调用 <code>setErrors</code> 还会更新父控件的有效性状态。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"setErrors-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#setErrors-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"manually-set-the-errors-for-a-control\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44cq2ejdaoxc7j6j334bkrlrw\">手动设置控件上的错误信息。<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#manually-set-the-errors-for-a-control\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst login = new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('someLogin');\nlogin.setErrors({\n  notUnique: true\n});\n\nexpect(login.valid).toEqual(false);\nexpect(login.errors).toEqual({ notUnique: true });\n\nlogin.setValue('someOtherLogin');\n\nexpect(login.valid).toEqual(true);\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"get\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"get\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6p3z6rwl3g1qyz7uu6cmg29dd\">get()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#get\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1160-L1199\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cpihbxwertxxykqcdkemcsfuj\">根据指定的控件名称或路径获取子控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;P extends string | (readonly (string | number)[])&gt;(path: P): <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4fef9xqihn2dihdoliakd5ax6\"><a id=\"\"></a>\n        <code>path</code></td>\n      <td class=\"param-type\"><code>P</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&lt;P extends string | Array&lt;string | number&gt;&gt;(path: P): <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4fef9xqihn2dihdoliakd5ax6\"><a id=\"\"></a>\n        <code>path</code></td>\n      <td class=\"param-type\"><code>P</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</code></p>\n\n  <div class=\"description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uckjn9ir8y8rck9zj09hf69v\"><code>get</code> 的此签名支持非常量（可变）数组。推断的类型信息将没有那么健壮，因此如果可能，更喜欢传递\n<code>readonly</code> 数组。</p>\n  </div>\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"87x54co1ocjbxwrykcvkh63nx\">get 的此签名支持字符串和 <code>const</code> 数组（<code>.get(['foo', 'bar'] as const)</code>）。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"get-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#get-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"retrieve-a-nested-control\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xstd7g3ynvnsgjuyhfc5nn5c\">获取嵌套的控件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#retrieve-a-nested-control\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7sw13ysg44bks3q2xi39uezgk\">比如，要获取子控件组 <code>person</code> 中的 <code>name</code> 控件：</p>\n<ul>\n<li><code>this.form.get('person.name');</code></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpwd7g2rk0bpt9r6xhylhfhqu\">-或-</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8b9uqng8yzx11djuos3o9znoj\"><code>this.form.get(['person', 'name'] as const);</code> // <code>as const</code> 给出了改进的类型</li>\n</ul>\n<h5 id=\"retrieve-a-control-in-a-formarray\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3tk8ffdc45pkyn8xlqglrxrma\">检索 FormArray 中的控件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#retrieve-a-control-in-a-formarray\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8cxm4cvqz2w6g02e3k6mh0ojb\">访问 FormArray 中的元素时，可以用元素索引。例如，要从 <code>items</code> 数组中的第一个元素获取 <code>price</code>\n控制，你可以用：</p>\n<ul>\n<li><code>this.form.get('items.0.price');</code></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpwd7g2rk0bpt9r6xhylhfhqu\">-或-</p>\n<ul>\n<li><code>this.form.get(['items', 0, 'price']);</code></li>\n</ul>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"getError\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"geterror\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a92rpumfkwki55wvt9iot0dea\">getError()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#geterror\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1200-L1231\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8kkvd04abe4d883ys3gwjmb5v\">报告给定路径下的控件的错误数据。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">getError</span>(errorCode: string, path?: string | (string | number)[]): any</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3kmuaw023r9bn1i25n1j0zcw2\"><a id=\"\"></a>\n        <code>errorCode</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e4rc9z45jwp30w5hikwkirsux\">要检查的错误代码</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4fef9xqihn2dihdoliakd5ax6\"><a id=\"\"></a>\n        <code>path</code></td>\n      <td class=\"param-type\"><code>string | (string | number)[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3pq07wbotke2spdtdtmnrtble\">控件名称列表，用于指定如何从当前控件移至要查询错误的控件。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xowflb5ddxccsz2k0n9b5y00\">该特定错误的错误数据。如果控件或错误不存在，则返回 null。</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"getError-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#getError-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4x5f9bj84nzunrigyiqnivu29\">比如，对于以下 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>：</p>\n<code-example>\nform = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  address: new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({ street: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>() })\n});\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"acphw6thjez8bbbe41npzw15z\">调用此方法有两种形式：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z3pfvfskm1b6t1bh7xyk07uc\">调用此方法有两种形式：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xb4rded1143ie0l1i2yay79f\">控件名称的字符串数组，如 <code>['address', 'street']</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"i9tgdkqz52h26nhj9xle7045\">以一个字符串表示的句号分隔的控件名称列表，如 <code>'address.street'</code></li>\n</ol>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"hasError\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"haserror\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cw5bgjyn4oo2ifyml680iwkv3\">hasError()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#haserror\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1232-L1265\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5vbnd8e5mo5gtoapr2zaeixd3\">报告给定路径下的控件是否具有指定的错误。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">hasError</span>(errorCode: string, path?: string | (string | number)[]): boolean</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3kmuaw023r9bn1i25n1j0zcw2\"><a id=\"\"></a>\n        <code>errorCode</code></td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e4rc9z45jwp30w5hikwkirsux\">要检查的错误代码</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4fef9xqihn2dihdoliakd5ax6\"><a id=\"\"></a>\n        <code>path</code></td>\n      <td class=\"param-type\"><code>string | (string | number)[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3pq07wbotke2spdtdtmnrtble\">控件名称列表，用于指定如何从当前控件移至要查询错误的控件。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5aa2knupbxor2t3bzc6qvkuuj\">如果控件不存在，则返回 false。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11uovc9x40yxrlbc9b9yovtbs\">如果控件不存在，则返回 false。</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"hasError-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/AbstractControl#hasError-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4x5f9bj84nzunrigyiqnivu29\">比如，对于以下 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>：</p>\n<code-example>\nform = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  address: new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({ street: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>() })\n});\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"acphw6thjez8bbbe41npzw15z\">调用此方法有两种形式：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z3pfvfskm1b6t1bh7xyk07uc\">调用此方法有两种形式：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xb4rded1143ie0l1i2yay79f\">控件名称的字符串数组，如 <code>['address', 'street']</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"i9tgdkqz52h26nhj9xle7045\">以一个字符串表示的句号分隔的控件名称列表，如 <code>'address.street'</code></li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dhqvv1nzimbioad3cb02hetmy\">如果没有给出路径，则此方法检查当前控件上的错误。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControlDirective\n - api/forms/AbstractControlOptions\n - api/forms/AsyncValidator\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormRecord\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/NgForm\n - api/forms/Validator\n - api/forms/ValidatorFn\n - api/forms/Validators\n - api/forms/isFormRecord\n - errors/NG01101\n - guide/form-validation\n - guide/reactive-forms\n - guide/update-to-version-14\n-->\n<!-- links from this doc:\n - /api\n - /guide/dynamic-form\n - /guide/forms\n - /guide/reactive-forms\n - api/forms\n - api/forms/AbstractControl#abstractcontrol\n - api/forms/AbstractControl#addAsyncValidators\n - api/forms/AbstractControl#addValidators\n - api/forms/AbstractControl#addasyncvalidators\n - api/forms/AbstractControl#addvalidators\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#clearasyncvalidators\n - api/forms/AbstractControl#clearvalidators\n - api/forms/AbstractControl#constructor\n - api/forms/AbstractControl#constructor()\n - api/forms/AbstractControl#description\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#get-usage-notes\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#getError-usage-notes\n - api/forms/AbstractControl#getRawValue\n - api/forms/AbstractControl#geterror\n - api/forms/AbstractControl#getrawvalue\n - api/forms/AbstractControl#hasAsyncValidator\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#hasError-usage-notes\n - api/forms/AbstractControl#hasValidator\n - api/forms/AbstractControl#hasValidator-usage-notes\n - api/forms/AbstractControl#hasasyncvalidator\n - api/forms/AbstractControl#haserror\n - api/forms/AbstractControl#hasvalidator\n - api/forms/AbstractControl#instance-methods\n - api/forms/AbstractControl#instance-properties\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#manually-set-the-errors-for-a-control\n - api/forms/AbstractControl#markAllAsTouched\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#markallastouched\n - api/forms/AbstractControl#markasdirty\n - api/forms/AbstractControl#markaspending\n - api/forms/AbstractControl#markaspristine\n - api/forms/AbstractControl#markastouched\n - api/forms/AbstractControl#markasuntouched\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#patchvalue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#reference-to-a-validatorfn\n - api/forms/AbstractControl#reference-to-a-validatorfn-1\n - api/forms/AbstractControl#removeAsyncValidators\n - api/forms/AbstractControl#removeValidators\n - api/forms/AbstractControl#removeValidators-usage-notes\n - api/forms/AbstractControl#removeasyncvalidators\n - api/forms/AbstractControl#removevalidators\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#retrieve-a-control-in-a-formarray\n - api/forms/AbstractControl#retrieve-a-nested-control\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#see-also\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setErrors-usage-notes\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#setasyncvalidators\n - api/forms/AbstractControl#seterrors\n - api/forms/AbstractControl#setparent\n - api/forms/AbstractControl#setvalidators\n - api/forms/AbstractControl#setvalue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#updatevalueandvalidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AbstractControl#子类\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormControl\n - api/forms/FormControlStatus\n - api/forms/FormGroup\n - api/forms/FormRecord\n - api/forms/MinValidator\n - api/forms/RequiredValidator\n - api/forms/ValidationErrors\n - api/forms/ValidatorFn\n - api/forms/Validators#compose\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1004-L1012\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1013-L1017\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1018-L1022\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1023-L1027\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1028-L1035\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1036-L1073\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1110-L1142\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1160-L1199\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1200-L1231\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L1232-L1265\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L328-L1404\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L617-L630\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L631-L644\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L645-L660\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L661-L675\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L676-L708\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L709-L723\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L724-L750\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L751-L762\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L763-L773\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L774-L784\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L785-L805\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L806-L815\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L816-L843\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L844-L864\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L865-L893\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L894-L921\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L922-L959\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/abstract_model.ts#L960-L992\n-->"}