{"id":"api/forms/FormArray","title":"FormArray","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/forms/FormArray\", \"name\": \"FormArray\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L33-L513\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"formarray\">FormArray<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#formarray\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"此类不可派生。\">\n      <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/docs/PUBLIC_API.md#final-classes\">最终类</a>\n    </label>\n  </header>\n  \n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6efsai0sn7inhmszmg3iz9yav\">跟踪 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 或 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 实例的数组的值和有效状态。</p>\n\n    <p><a href=\"api/forms/FormArray#description\">查看更多...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>&lt;TControl extends <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;any&gt; = any&gt; extends <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;ɵTypedOrUntyped&lt;TControl, ɵFormArrayValue&lt;TControl&gt;, any&gt;, ɵTypedOrUntyped&lt;TControl, ɵFormArrayRawValue&lt;TControl&gt;, any&gt;&gt; {\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#constructor()\"><span class=\"member-name\">constructor</span>(controls: TControl[], validatorOrOpts?: ValidatorFn | AbstractControlOptions | ValidatorFn[], asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#controls\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&lt;TControl, Array&lt;TControl&gt;, Array&lt;AbstractControl&lt;any&gt;&gt;&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#length\"><span class=\"member-name\">length</span>: number</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#at\"><span class=\"member-name\">at</span>(index: number): ɵTypedOrUntyped&lt;TControl, TControl, AbstractControl&lt;any&gt;&gt;</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#push\"><span class=\"member-name\">push</span>(control: TControl, options: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#insert\"><span class=\"member-name\">insert</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#removeAt\"><span class=\"member-name\">removeAt</span>(index: number, options: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#setControl\"><span class=\"member-name\">setControl</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#setValue\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&lt;TControl, any[], ɵRawValue&lt;TControl&gt;[]&gt;, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#patchValue\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&lt;TControl, any[], ɵValue&lt;TControl&gt;[]&gt;, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#reset\"><span class=\"member-name\">reset</span>(value: ɵIsAny&lt;TControl, any, ɵIsAny&lt;TControl, any[], ɵValue&lt;TControl&gt;[]&gt;&gt; = [], options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#getRawValue\"><span class=\"member-name\">getRawValue</span>(): ɵFormArrayRawValue&lt;TControl&gt;</a><br><a class=\"code-anchor\" href=\"api/forms/FormArray#clear\"><span class=\"member-name\">clear</span>(options: { emitEvent?: boolean; } = {}): void</a>\n\n// 继承自 <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">forms/AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#constructor()\"><span class=\"member-name\">constructor</span>(validators: ValidatorFn | ValidatorFn[], asyncValidators: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\"><span class=\"member-name\">value</span>: TValue</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\"><span class=\"member-name\">validator</span>: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\"><span class=\"member-name\">asyncValidator</span>: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\"><span class=\"member-name\">parent</span>: FormGroup | FormArray | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\"><span class=\"member-name\">status</span>: FormControlStatus</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\"><span class=\"member-name\">valid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\"><span class=\"member-name\">invalid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\"><span class=\"member-name\">pending</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\"><span class=\"member-name\">disabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\"><span class=\"member-name\">enabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\"><span class=\"member-name\">errors</span>: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\"><span class=\"member-name\">pristine</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\"><span class=\"member-name\">dirty</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\"><span class=\"member-name\">touched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\"><span class=\"member-name\">untouched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\"><span class=\"member-name\">valueChanges</span>: Observable&lt;TValue&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\"><span class=\"member-name\">statusChanges</span>: Observable&lt;FormControlStatus&gt;</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\"><span class=\"member-name\">updateOn</span>: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\"><span class=\"member-name\">root</span>: AbstractControl</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\"><span class=\"member-name\">setValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\"><span class=\"member-name\">setAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#addValidators\"><span class=\"member-name\">addValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#addAsyncValidators\"><span class=\"member-name\">addAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeValidators\"><span class=\"member-name\">removeValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeAsyncValidators\"><span class=\"member-name\">removeAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasValidator\"><span class=\"member-name\">hasValidator</span>(validator: ValidatorFn): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasAsyncValidator\"><span class=\"member-name\">hasAsyncValidator</span>(validator: AsyncValidatorFn): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\"><span class=\"member-name\">clearValidators</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\"><span class=\"member-name\">clearAsyncValidators</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\"><span class=\"member-name\">markAsTouched</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAllAsTouched\"><span class=\"member-name\">markAllAsTouched</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\"><span class=\"member-name\">markAsUntouched</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\"><span class=\"member-name\">markAsDirty</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\"><span class=\"member-name\">markAsPristine</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\"><span class=\"member-name\">markAsPending</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\"><span class=\"member-name\">disable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\"><span class=\"member-name\">enable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\"><span class=\"member-name\">setParent</span>(parent: FormGroup&lt;any&gt; | FormArray&lt;any&gt;): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">abstract <span class=\"member-name\">setValue</span>(value: TRawValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">abstract <span class=\"member-name\">patchValue</span>(value: TValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">abstract <span class=\"member-name\">reset</span>(value?: TValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#getRawValue\"><span class=\"member-name\">getRawValue</span>(): any</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\"><span class=\"member-name\">updateValueAndValidity</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\"><span class=\"member-name\">setErrors</span>(errors: ValidationErrors, opts: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&lt;P extends string | ((string | number)[])&gt;(path: P): AbstractControl&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&lt;P extends string | (readonly (string | number)[])&gt;(path: P): AbstractControl&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&lt;P extends string | Array&lt;string | number&gt;&gt;(path: P): AbstractControl&lt;ɵGetProperty&lt;TRawValue, P&gt;&gt; | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\"><span class=\"member-name\">getError</span>(errorCode: string, path?: string | (string | number)[]): any</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\"><span class=\"member-name\">hasError</span>(errorCode: string, path?: string | (string | number)[]): boolean</a>\n}\n</code-example>\n\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ouj3hg5r6bnn51zb419pm9y6\"><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 每个子 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>\n的值聚合到一个数组中。它通过减少其子项的状态值来计算其状态。例如，如果 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>\n中的控件之一无效，则整个数组将变得无效。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epa3k5ujz5juujgjj9uemqf2b\"><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 接受一个通用参数，即内部控件的类型。如果需要异构数组，请使用 <a href=\"api/forms/UntypedFormArray\"><code>UntypedFormArray</code></a>\n。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7o0gbfnjclgoisi03zcwfht6\"><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 是用于在 Angular 中定义表单的四个基本构建块之一，与 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 和\n<code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>。</p>\n  <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekixay6x505c5o9swz90kernd\">进一步的信息可在\n<a href=\"api/forms/FormArray#usage-notes\">使用说明...</a>中找到。</p>\n</section>\n  \n<h2 id=\"constructor\">构造函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#constructor\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21qaqrxh2metfuf7h121eiuh\">创建一个新的 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 实例。</p>\n\n        <p class=\"final-message\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"611afc3nno4pmmn7gfh92euym\">此类为“final”，不应进行扩展。请查看\n<a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/docs/PUBLIC_API.md#final-classes\">公共 API 注释</a>。</p>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">constructor</span>(controls: TControl[], validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[], asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[])</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bfl1y3x09ev1lyk4kbzdpkw5x\"><a id=\"\"></a>\n        <code>controls</code></td>\n      <td class=\"param-type\"><code>TControl[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aepe47iwhs6ia5mh07ztxijiz\">子控件的数组。每个子控件都会被赋予一个注册它的索引。</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"71ju07pt77i5dk3uni9ohokdx\"><a id=\"\"></a>\n        <code>validatorOrOpts</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ferutvoa5firyrrvngmh09rh\">可选值。默认值为 <code>undefined</code>。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1mah6opa0qptabh3cwz8mzvc3\"><a id=\"\"></a>\n        <code>asyncValidator</code></td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4meztcz8aynhr7yb148sr56fp\">可选值。默认值为 <code>undefined</code>。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<section class=\"instance-properties\">\n  <a id=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"controls\"></a>\n          <code class=\"\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&lt;TControl, Array&lt;TControl&gt;, Array&lt;<a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;any&gt;&gt;&gt;</code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"length\"></a>\n          <code class=\"\"><span class=\"member-name\">length</span>: number</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ma884urp9945f4d6vu7nnciz\">控件数组的长度。</p>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"at\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"at\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2zngo4vowruuzb9apz24m3tov\">at()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#at\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L137-L147\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"esqhff4e26macg14kbnez86vc\">获取数组中给定 <code>index</code> 处的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">at</span>(index: number): ɵTypedOrUntyped&lt;TControl, TControl, <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;any&gt;&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89ulzine5tlhstydv1wkinb7g\"><a id=\"\"></a>\n        <code>index</code></td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a585czhs8c7wg20qngafqco0h\">要检索控件的数组中的索引。如果 <code>index</code> 为负数，它将从后面回绕，如果 index 为大大负数（小于\n<code>-length</code>），则结果是未定义的。此行为与 <code>Array.at(index)</code> 相同。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>ɵTypedOrUntyped&lt;TControl, TControl, <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&lt;any&gt;&gt;</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"push\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"push\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cgspi4qr0da06rultunsvnhu0\">push()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#push\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L148-L164\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"57tjtekoiuo0rvyzyrfidn76s\">在数组的末尾插入一个新的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">push</span>(control: TControl, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96j43ie9c8s2bdcichcwyw0vj\"><a id=\"\"></a>\n        <code>control</code></td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvhurzfvj4yg8ldmqjp6ioxrl\">要插入的表单控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6jpgia313vo0aae4bl1oaql2a\">指定此 FormArray 实例是否应在添加新控件后发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvx5zwaxwqc2dyxgekd4ao540\"><code>emitEvent</code>：当 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象在插入控件时会发出具有最新状态和值的事件。当 false 时，不会发出事件。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"insert\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"insert\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvoksn8ivopofbn52yfxx92lk\">insert()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#insert\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L165-L184\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"v0cwm5oe6a1xhk9078ps6815\">在数组中的给定 <code>index</code> 处插入新的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">insert</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89ulzine5tlhstydv1wkinb7g\"><a id=\"\"></a>\n        <code>index</code></td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"46qkjb3rzv1k22obazg5e84yx\">要插入控件的数组中的索引。如果 <code>index</code> 为负数，则从后面环绕。如果 <code>index</code> 为很大的负数（小于\n<code>-length</code>），则添加到数组。此行为与 <code>Array.splice(index, 0, control)</code> 相同。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96j43ie9c8s2bdcichcwyw0vj\"><a id=\"\"></a>\n        <code>control</code></td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvhurzfvj4yg8ldmqjp6ioxrl\">要插入的表单控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fq86rl2bp51lmyd7bqmktv5y\">指定此 FormArray 实例是否应在插入新控件后发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dvx5zwaxwqc2dyxgekd4ao540\"><code>emitEvent</code>：当 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象在插入控件时会发出具有最新状态和值的事件。当 false 时，不会发出事件。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"removeAt\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"removeat\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"12nax9mwv9bde5p4jkatmcq1u\">removeAt()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#removeat\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L185-L207\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uvbd80lt73murzynu0u9vg4w\">删除数组中给定 <code>index</code> 处的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeAt</span>(index: number, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89ulzine5tlhstydv1wkinb7g\"><a id=\"\"></a>\n        <code>index</code></td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pd700k31cdvqrj6e37a8duq0\">要删除控件的数组中的索引。如果 <code>index</code> 为负数，则从后面环绕。如果 <code>index</code> 为大大负数（小于\n<code>-length</code>），则删除第一个元素。此行为与 <code>Array.splice(index, 1)</code> 相同。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3crcmp0iwcm42034ro4bctmh\">指定此 FormArray 实例是否应在删除控件后发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5qdun3ciwl7wwno1vh8z9oyq2\"><code>emitEvent</code>：当为 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在删除控件时发出具有最新状态和值的事件。当 false 时，不会发出事件。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setControl\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setcontrol\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d1d3p7jwi6hyd2l7egq0wp4mf\">setControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#setcontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L208-L238\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5suyog202qmnla2ngpx4m1ru5\">替换现有的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setControl</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89ulzine5tlhstydv1wkinb7g\"><a id=\"\"></a>\n        <code>index</code></td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8kqydc29o62hnkqh9yje9hs5f\">要替换控件的数组中的索引。如果 <code>index</code> 为负数，则从后面环绕。如果 <code>index</code> 为很大的负数（小于\n<code>-length</code>），则替换第一个元素。此行为与 <code>Array.splice(index, 1, control)</code> 相同。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96j43ie9c8s2bdcichcwyw0vj\"><a id=\"\"></a>\n        <code>control</code></td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3sqtx2hmt8zqsvkjjdba10dvn\">替换现有控件的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9h3tm3r7fvpt72qp5hpuafoyv\">指定在将现有控件替换为新控件后此 FormArray 实例是否应发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7e37ycse4z0ctxj4h3yb8t9iq\"><code>emitEvent</code>：当为 true 或不提供（默认）时，当控件被替换为新控件时，<code>statusChanges</code> 和\n<code>valueChanges</code> 可观察对象都会发出具有最新状态和值的事件。当 false 时，不会发出事件。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setvalue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ty8lunjmr2xez16pv04u3h2t\">setValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#setvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L246-L292\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6hnf47n60xzibgbt7osxdmjhc\">设置 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的值。它接受与控件结构匹配的数组。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&lt;TControl, any[], ɵRawValue&lt;TControl&gt;[]&gt;, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y18uxg2a2xx1qj04ok4glp0s\"><a id=\"\"></a>\n        <code>value</code></td>\n      <td class=\"param-type\"><code>ɵIsAny&lt;TControl, any[], ɵRawValue&lt;TControl&gt;[]&gt;</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2i4wmr4gk4fr3rxliew8qpi7t\">控件的值数组</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8i8ba7c05hxvkwnp6j3wlmzrc\">配置用于确定控件如何传播更改并在值更改后发出事件的选项</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dihjnewhv6s9p33lq0rvey00i\"><code>onlySelf</code>：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"368mewy1pdo4zl3722gh0tj1t\"><code>emitEvent</code>：当为true或未提供（默认值）时，控件值更新时\n<code>statusChanges</code>和\n<code>valueChanges</code>可观察对象都会发出事件，其中包含最新的状态和值。当为false时，不会发出任何事件。配置选项传递给\n<a href=\"api/forms/AbstractControl#updateValueAndValidity\"><code>AbstractControl#updateValueAndValidity</code></a>方法。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4crda9jp1fexpsxncokln79e5\">此方法会执行严格检查，如果你尝试设置不存在的控件的值或者排除控件的值，则会抛出错误。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"setValue-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#setValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"set-the-values-for-the-controls-in-the-form-array\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dxwg4srf0g38xmo8aikqcdjj\">在表单数组中设置控件的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#set-the-values-for-the-controls-in-the-form-array\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\nconsole.log(arr.value);   // [null, null]\n\narr.setValue(['Nancy', 'Drew']);\nconsole.log(arr.value);   // ['Nancy', 'Drew']\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"patchValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"patchvalue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66mitfnn88dcn54hm7fh2rktc\">patchValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#patchvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L293-L342\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6eshldfbpv4q3se4jf6imn2op\">修补 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的值。它接受与控件结构匹配的数组，并尽力将值与组中的正确控件匹配。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&lt;TControl, any[], ɵValue&lt;TControl&gt;[]&gt;, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y18uxg2a2xx1qj04ok4glp0s\"><a id=\"\"></a>\n        <code>value</code></td>\n      <td class=\"param-type\"><code>ɵIsAny&lt;TControl, any[], ɵValue&lt;TControl&gt;[]&gt;</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"en51ibigbb2xlb14ar367pglk\">控件的最新值数组</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8i8ba7c05hxvkwnp6j3wlmzrc\">配置用于确定控件如何传播更改并在值更改后发出事件的选项</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dihjnewhv6s9p33lq0rvey00i\"><code>onlySelf</code>：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cxnanpi8ipr06swsojc2ibqut\"><code>emitEvent</code>：当为true或未提供（默认值）时，控件值更新时\n<code>statusChanges</code>和\n<code>valueChanges</code>可观察对象都会发出事件，其中包含最新的状态和值。当为false时，不会发出任何事件。配置选项传递给\n<a href=\"api/forms/AbstractControl#updateValueAndValidity\"><code>AbstractControl#updateValueAndValidity</code></a>方法。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cgkoplrckr16j3729c621jki\">它接受数组的超集和子集，而不会抛出错误。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"patchValue-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#patchValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"patch-the-values-for-controls-in-a-form-array\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8vzx2souu423spttm3yhuxlho\">修补表单数组中控件的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#patch-the-values-for-controls-in-a-form-array\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\nconsole.log(arr.value);   // [null, null]\n\narr.patchValue(['Nancy']);\nconsole.log(arr.value);   // ['Nancy', null]\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"reset\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"reset\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1aoxcsunfmeve0o572gyzc2jp\">reset()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L343-L400\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8xedl912v25csl9jkv49ny65y\">重置 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>，并把所有后代标记为 <code>pristine</code> 和 <code>untouched</code>，并将所有后代的值映射为 null\n或 null。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">reset</span>(value: ɵIsAny&lt;TControl, any, ɵIsAny&lt;TControl, any[], ɵValue&lt;TControl&gt;[]&gt;&gt; = [], options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y18uxg2a2xx1qj04ok4glp0s\"><a id=\"\"></a>\n        <code>value</code></td>\n      <td class=\"param-type\"><code>ɵIsAny&lt;TControl, any, ɵIsAny&lt;TControl, any[], ɵValue&lt;TControl&gt;[]&gt;&gt;</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2i4wmr4gk4fr3rxliew8qpi7t\">控件的值数组</p>\n\n        <p>可选值。默认值为 <code>[]</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8i8ba7c05hxvkwnp6j3wlmzrc\">配置用于确定控件如何传播更改并在值更改后发出事件的选项</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dihjnewhv6s9p33lq0rvey00i\"><code>onlySelf</code>：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2aykwetyfp69bp5gzck60r3me\"><code>emitEvent</code>：当为true或未提供（默认值）时，控件重置时\n<code>statusChanges</code>和\n<code>valueChanges</code>可观察对象都会发出事件，其中包含最新的状态和值。当为false时，不会发出任何事件。配置选项传递给\n<a href=\"api/forms/AbstractControl#updateValueAndValidity\"><code>AbstractControl#updateValueAndValidity</code></a>方法。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11ewukwrec4oxiwelyo098z1o\">你通过传入与控件结构匹配的状态数组来重置为特定的表单状态。状态是独立值或具有值和禁用状态的表单状态对象。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"reset-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"reset-the-values-in-a-form-array\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"244ozlo2ni1cz7j1x0hqz4ry5\">重置表单数组中的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset-the-values-in-a-form-array\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\narr.reset(['name', 'last name']);\n\nconsole.log(arr.value);  // ['name', 'last name']\n</code-example>\n<h5 id=\"reset-the-values-in-a-form-array-and-the-disabled-status-for-the-first-control\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55t4byx4sebgbfjt8aeu2e9lt\">重置表单数组中的值和第一个控件的禁用状态<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset-the-values-in-a-form-array-and-the-disabled-status-for-the-first-control\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\narr.reset([\n  {value: 'name', disabled: true},\n  'last'\n]);\n\nconsole.log(arr.value);  // ['last']\nconsole.log(arr.at(0).status);  // 'DISABLED'\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"getRawValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"getrawvalue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62te9ap4djgfxpo2tbtfbemzx\">getRawValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#getrawvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L401-L409\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyey38bptuwcuu2tp4pl27hy1\">数组的聚合值，包括任何禁用的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">getRawValue</span>(): ɵFormArrayRawValue&lt;TControl&gt;</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>ɵFormArrayRawValue&lt;TControl&gt;</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ufsc6i9emi14z4rvsigcj63m\">无论禁用状态如何，都会报告所有值。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"clear\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"clear\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"37a14ip276jih7r8o0bntvzj6\">clear()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#clear\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L410-L452\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o2qias5kmxs8v07ij2ojeyrb\">删除 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 中的所有控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">clear</span>(options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bctpqv6pe3qufag0kdnkhac2q\"><a id=\"\"></a>\n        <code>options</code></td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzw7v2c4qaah15aj5mur15ae4\">指定此 FormArray 实例是否应在删除所有控件后发出事件。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3giq546k6sdvflyeerljw1uhq\"><code>emitEvent</code>：当为 true 或未提供（默认）时，当删除此 FormArray 实例中的所有控件时，\n<code>statusChanges</code> 和 <code>valueChanges</code> 可观察对象都会发出具有最新状态和值的事件。当 false\n时，不会发出事件。</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"clear-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#clear-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"remove-all-elements-from-a-formarray\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9a3goiazl8axqb8dhjop8vv4p\">从 FormArray 中删除所有元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#remove-all-elements-from-a-formarray\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\nconsole.log(arr.length);  // 2\n\narr.clear();\nconsole.log(arr.length);  // 0\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"79habe1b2m4874l6aya5i9fpt\">这是一种比一个一个删除所有元素更简单、更高效的替代方案：</p>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\n\nwhile (arr.length) {\n   arr.removeAt(0);\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"create-an-array-of-form-controls\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6epaxyn3u5eyyxgjq4p4ohav\">创建一个表单控件数组<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#create-an-array-of-form-controls\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy', Validators.minLength(2)),\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew'),\n]);\n\nconsole.log(arr.value);   // ['Nancy', 'Drew']\nconsole.log(arr.status);  // 'VALID'\n</code-example>\n<h3 id=\"create-a-form-array-with-array-level-validators\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13liwyhw366ecj2sm3fnkywd8\">创建带有数组级验证器的表单数组<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#create-a-form-array-with-array-level-validators\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bx9ruww6k2z20w4zz33ujzejg\">你包括数组级验证器和异步验证器。当你要执行考虑多个子控件的值的验证时，它们会派上用场。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5twaj0ntkzwrang8ksg2xszlm\">这两种类型的验证器分别作为第二个和第三个 arg 单独传入，或作为 options 对象的一部分一起传入。</p>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy'),\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew')\n], {validators: myValidator, asyncValidators: myAsyncValidator});\n</code-example>\n<h3 id=\"set-the-updateon-property-for-all-controls-in-a-form-array\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d7n9r74tcho48ueihyf94rzzj\">为表单数组中的所有控件设置 updateOn 属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#set-the-updateon-property-for-all-controls-in-a-form-array\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83f37gsnkrb2u6l6zujqbhgqi\">options 对象用于为每个子控件的 <code>updateOn</code> 属性设置默认值。如果你在数组级别将 <code>updateOn</code> 设置为\n<code>'blur'</code>，则所有子控件默认为 'blur'，除非子项显式指定不同的 <code>updateOn</code> 值。</p>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n], {updateOn: 'blur'});\n</code-example>\n<h3 id=\"adding-or-removing-controls-from-a-form-array\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a0cxwnwnklu9hou0t9rf0jn0h\">在表单数组中添加或删除控件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#adding-or-removing-controls-from-a-form-array\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e97hynqnjn0gt695hl4mhfvnx\">要更改数组中的控件，请使用 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 本身中的 <code>push</code>、<code>insert</code>、<code>removeAt</code> 或 <code>clear</code>\n方法。这些方法可确保在表单的层次结构中正确跟踪控件。不要修改用于直接实例化 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的\n<code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 数组，因为这会导致奇怪和意外的行为，例如破损的变更检测。</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlName\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NonNullableFormBuilder\n - api/forms/RadioControlValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/UntypedFormArray\n - api/forms/isFormArray\n - guide/dynamic-form\n - guide/forms-overview\n - guide/glossary\n - guide/reactive-forms\n - guide/typed-forms\n - guide/update-to-version-14\n-->\n<!-- links from this doc:\n - /api\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControl#addAsyncValidators\n - api/forms/AbstractControl#addValidators\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#constructor()\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#getRawValue\n - api/forms/AbstractControl#hasAsyncValidator\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#hasValidator\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#markAllAsTouched\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#removeAsyncValidators\n - api/forms/AbstractControl#removeValidators\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AbstractControlOptions\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray#adding-or-removing-controls-from-a-form-array\n - api/forms/FormArray#at\n - api/forms/FormArray#clear\n - api/forms/FormArray#clear-usage-notes\n - api/forms/FormArray#constructor\n - api/forms/FormArray#constructor()\n - api/forms/FormArray#controls\n - api/forms/FormArray#create-a-form-array-with-array-level-validators\n - api/forms/FormArray#create-an-array-of-form-controls\n - api/forms/FormArray#description\n - api/forms/FormArray#formarray\n - api/forms/FormArray#getRawValue\n - api/forms/FormArray#getrawvalue\n - api/forms/FormArray#insert\n - api/forms/FormArray#instance-methods\n - api/forms/FormArray#instance-properties\n - api/forms/FormArray#length\n - api/forms/FormArray#patch-the-values-for-controls-in-a-form-array\n - api/forms/FormArray#patchValue\n - api/forms/FormArray#patchValue-usage-notes\n - api/forms/FormArray#patchvalue\n - api/forms/FormArray#push\n - api/forms/FormArray#remove-all-elements-from-a-formarray\n - api/forms/FormArray#removeAt\n - api/forms/FormArray#removeat\n - api/forms/FormArray#reset\n - api/forms/FormArray#reset-the-values-in-a-form-array\n - api/forms/FormArray#reset-the-values-in-a-form-array-and-the-disabled-status-for-the-first-control\n - api/forms/FormArray#reset-usage-notes\n - api/forms/FormArray#set-the-updateon-property-for-all-controls-in-a-form-array\n - api/forms/FormArray#set-the-values-for-the-controls-in-the-form-array\n - api/forms/FormArray#setControl\n - api/forms/FormArray#setValue\n - api/forms/FormArray#setValue-usage-notes\n - api/forms/FormArray#setcontrol\n - api/forms/FormArray#setvalue\n - api/forms/FormArray#usage-notes\n - api/forms/FormControl\n - api/forms/FormGroup\n - api/forms/FormRecord\n - api/forms/UntypedFormArray\n - api/forms/ValidatorFn\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/docs/PUBLIC_API.md#final-classes\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L137-L147\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L148-L164\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L165-L184\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L185-L207\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L208-L238\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L246-L292\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L293-L342\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L33-L513\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L343-L400\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L401-L409\n - https://github.com/ng-docs/angular-cn/tree/17.3.0-next.1/packages/forms/src/model/form_array.ts#L410-L452\n-->"}