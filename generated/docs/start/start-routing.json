{"id":"start/start-routing","title":"新增導向","contents":"<div class=\"content\">\n  <h1 id=\"adding-navigation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1kktfrt5jzda5s5hdg0vh5ecq\">新增導向<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#adding-navigation\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dabjjk2youhe3xo6p5m2vdi4m\">本指南基於入門教學課程的第一步：<a href=\"start\" title=\"開始使用基本的 Angular 應用\">基本 Angular 應用入門</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8vrat9fuxlczpqz6s62p41m5w\">在此階段，本線上商店應用會擁有基本的產品目錄。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2mq781xefrrfl8jdwynk0de2b\">在以下各節中，你將嚮應用新增以下功能：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1drh6opm4geirwfaqf2454cx1\">在地址欄中鍵入 URL 以導向到相應的產品頁面</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bgfdc76ollre8x2jlmsg2j7ak\">單擊頁面上的連結以在單頁應用中導向</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"uk46yvybun54s10n9wna4c5p\">單擊瀏覽器的後退和前進按鈕以直觀地在瀏覽器的歷史記錄中瀏覽</li>\n</ul>\n<p><a id=\"define-routes\"></a></p>\n<h2 id=\"associate-a-url-path-with-a-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5262gs5ncsaekr4cbn5wj3y23\">關聯 URL 路徑與元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#associate-a-url-path-with-a-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32fh6n5y67cazrql6n4bm6k8q\">本應用已經用 Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 導向到了 <code>ProductListComponent</code>。本節將介紹如何定義顯示單個產品詳情的路由。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8bmna7tsmcsb95wl1j3qy7yfw\">生成用於展示產品詳情的新元件。在終端視窗執行如下指令來生成一個新的 <code>product-details</code> 元件：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component product-details\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8jccrzuw8pwbbstdrl89itg1\">在 <code>app.module.ts</code> 中，新增產品詳情的路由，其 <code>path</code> 為 <code>products/:productId</code>，其 <code>component</code> 為 <code>ProductDetailsComponent</code>。</p>\n<code-example header=\"src/app/app.module.ts\" path=\"getting-started/src/app/app.module.ts\" region=\"product-details-route\">\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n    <a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a>,\n    RouterModule.forRoot([\n      { path: '', component: ProductListComponent },\n      { path: 'products/:productId', component: ProductDetailsComponent },\n    ])\n  ],\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    ProductListComponent,\n    ProductAlertsComponent,\n    ProductDetailsComponent,\n  ],\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2uqgc83hcta37uuatqrygbf0\">開啟 <code>product-list.component.html</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ag708fkfbtt25y49t9ev0ztjz\">修改產品名稱上的連結，使其包括以 <code>product.id</code> 為引數的 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.html\" region=\"router-link\">\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a\n      [title]=\"product.name + ' details'\"\n      [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/products', product.id]\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n  &lt;!-- . . . --&gt;\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lm4jy1wgynislrznh6deuqqk\"><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 指令可幫助你自定義 a 元素。在這裡，路由或 URL 中包含一個固定的區段 <code>/products</code>。最後一段則是變數，插入當前產品的 <code>id</code>。比如，<code>id</code> 為 1 的產品的 URL 是 <code>https://getting-started-myfork.stackblitz.io/products/1</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3fhzadmj5957ru7w0b6g4b7h\">透過單擊產品名稱，驗證路由器是否如預期般工作。應用中應該顯示 <code>ProductDetailsComponent</code> 元件，其顯示的內容為 『product-details works!』。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d223i9tul620s50okuiq3ma7w\">請注意，預覽視窗中的 URL 發生了變化。最後一個部分是 <code>products/#</code>，其中 <code>#</code> 表示你單擊的路由的編號。</p>\n<div class=\"lightbox\">\n<img alt=\"Product details view with updated URL\" src=\"generated/images/guide/start/product-details-works.png\" width=\"259\" height=\"162\">\n</div>\n</li>\n</ol>\n<h2 id=\"view-product-details\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2mwktj6ynzjm740md1mt5ves5\">檢視產品詳情<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#view-product-details\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"crken51qwckax0qpqt4903nqr\"><code>ProductDetailsComponent</code> 會處理每個產品的顯示工作。Angular 路由器會根據瀏覽器的 URL 和<a href=\"start/start-routing#define-routes\">你定義的路徑</a>來顯示元件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dyonwy9ktwg24t4ddvbn3173m\">在本節中，你將使用 Angular 路由器來組合 <code>products</code> 資料和路由訊息以顯示每個產品的特定詳情。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45gns7hv6r306p509sm4q82qy\">在 \n<code>product-details.component.ts</code> 中，從 \n<code>@angular/router</code> 匯入 \n<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，從 \n<code>@angular/core</code> 匯入 \n<code><a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a></code>，以及從 \n<code>../products</code> 匯入 \n<code>products</code> 陣列。</p>\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> } from '@angular/core';\nimport { <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> } from '@angular/router';\n\nimport { Product, products } from '../products';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alt2egf9rerjkydasbzppzu7d\">定義 \n<code>product</code> 屬性。 \n<code>implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a></code> 宣告表示該類別實現了 \n<code><a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a></code> 介面，要求在建立元件時實現 \n<code>ngOnInit</code> 方法以進行初始化任務。</p>\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"product-prop\">\nexport class ProductDetailsComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n\n  product: Product | undefined;\n  /* ... */\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7zi22dksx5h2kxn2qbkj3belw\">透過把 <code>private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 新增為建構式函式括號內的引數，來把 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 注入到 <code>constructor()</code> 中。</p>\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"props-methods\">\nexport class ProductDetailsComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n\n  product: Product | undefined;\n\n  constructor(private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>) { }\n\n}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dnn759ko0ls5smcap5hae0vxa\">Angular 路由器載入的每個元件都有自己專屬的 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>。<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 中包含有關路由和路由引數的訊息。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2tnkjyqyd7g48fdi494kwjc38\">透過注入 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，你可以設定此元件以使用服務。<a href=\"start/start-data\" title=\"嘗試一下：管理資料\">管理資料</a>那一步將更詳細地介紹服務。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20s8sw9vpf8dgev8izlhhlqs1\">在 <code>ngOnInit()</code> 方法中，從路由引數中提取 <code>productId</code>，並在 <code>products</code> 陣列中找到相應的產品。</p>\n<code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"get-product\">\nngOnInit() {\n  // First get the product id from the current route.\n  const routeParams = this.route.snapshot.paramMap;\n  const productIdFromRoute = Number(routeParams.get('productId'));\n\n  // Find the product that correspond with the id provided in route.\n  this.product = products.find(product =&gt; product.id === productIdFromRoute);\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8xlgoulyrzdkd5t4rjhvems4s\">路由引數與你在此路由中定義的路徑變數相對應。要訪問路由引數，我們使用 <code>route.snapshot</code>，它是一個 <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code>，其中包含有關該特定時刻的活動路由訊息。與此路由對應的 URL 提供了 <code>productId</code>。Angular 會使用 <code>productId</code> 來顯示每個唯一產品的詳情。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"av2hjanm75xprltgvd22hdxzt\">更新 <code>ProductDetailsComponent</code> 的範本以顯示帶有 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 的產品詳情。如果產品存在，則此 <code>&lt;div&gt;</code> 會顯示名稱、價格和說明。</p>\n<code-example header=\"src/app/product-details/product-details.component.html\" path=\"getting-started/src/app/product-details/product-details.component.html\" region=\"details\">\n&lt;h2&gt;Product Details&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product\"&gt;\n  &lt;h3&gt;{{ product.name }}&lt;/h3&gt;\n  &lt;h4&gt;{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&lt;/h4&gt;\n  &lt;p&gt;{{ product.description }}&lt;/p&gt;\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ixvx9fcega0wm7fl97h5mu5g\">該行 \n<code>&lt;h4&gt;{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&lt;/h4&gt;</code> 使用 \n<code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code> 通道將 \n<code>product.price</code> 從數字轉換為貨幣字串。通道是一種在 HTML 範本中轉換資料的方式。有關 Angular 通道的更多訊息，請參閱 \n<a href=\"guide/pipes-overview\" title=\"Pipes\">Pipes</a>。</p>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cu9y7wh0gl513zupsks51wp90\">當用戶單擊產品清單中的名稱時，路由器會將其導向到產品的不同 URL，顯示此 <code>ProductDetailsComponent</code>，並展示產品詳情。</p>\n<div class=\"lightbox\">\n<img alt=\"Product details page with updated URL and full details displayed\" src=\"generated/images/guide/start/product-details-routed.png\" width=\"259\" height=\"225\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e45a1sgo1aswtqtnbhc7p568r\">有關 Angular 路由器的更多訊息，請參見<a href=\"guide/router\" title=\"路由與導向指南\">路由與導向</a>。</p>\n<h2 id=\"whats-next\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"407r2fj2mi5kvg7imj9zdcpe\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cul7vyx1kt4kqfqwcmkl1dv2\">你已經設定好了應用，以便檢視產品詳情，每個產品詳情都有一個不同的 URL。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"em5sq6gmzs0lhksugv1y9r2kz\">繼續探索 Angular：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4of8yu53kwr00n17jacn7w1kk\">繼續<a href=\"start/start-data\" title=\"嘗試一下：管理資料\">管理資料</a>以新增購物車功能、管理購物車資料並檢索外部資料以獲取運費。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3x3bv3np5zu0mfdfp0z6qv8fx\">跳至<a href=\"start/start-deployment\" title=\"試試看：部署\">部署</a>以將你的應用部署到 Firebase 或轉為本地開發。</li>\n</ul>\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/localizing-angular\n - start\n - start/start-data\n-->\n<!-- links from this doc:\n - api/common/CurrencyPipe\n - api/common/NgFor\n - api/common/NgIf\n - api/core/Component\n - api/core/NgModule\n - api/core/OnInit\n - api/forms/ReactiveFormsModule\n - api/platform-browser/BrowserModule\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/Router\n - api/router/RouterLink\n - guide/pipes-overview\n - guide/router\n - start\n - start/start-data\n - start/start-deployment\n - start/start-routing#adding-navigation\n - start/start-routing#associate-a-url-path-with-a-component\n - start/start-routing#define-routes\n - start/start-routing#view-product-details\n - start/start-routing#whats-next\n-->"}