{"id":"start/start-forms","title":"使用表单进行用户输入","contents":"<div class=\"content\">\n  <h1 id=\"using-forms-for-user-input\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ccxqfzain8j51z1m8cw3lii3\">使用表单进行用户输入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#using-forms-for-user-input\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8h6aob1ay3naqdz7vomb1g09j\">本指南基于“入门教程”<a href=\"start\" title=\"开始使用基本的 Angular 应用\">基本 Angular 应用</a>中的第三步<a href=\"start/start-data\" title=\"尝试一下：管理数据\">“管理数据”</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5f20e2rdi8ofg6jfq5k2dw4c3\">本节将引导你添加基于表单的结账功能，以收集用户信息作为结账信息的一部分。</p>\n<h2 id=\"define-the-checkout-form-model\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5v7uc1hn2jp9uuwle1fge6ulx\">定义结帐表单模型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#define-the-checkout-form-model\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqw83oiru7id9m0uaqusc49hl\">此步骤说明如何在组件类中建立结帐表单模型。表单模型决定表单的状态。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6fqvuguexctxcbuos9q481d5f\">打开 <code>cart.component.ts</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"56x7pw3hgdc6qqglu6ncbdnnv\">从 <code>@angular/forms</code> 包导入 <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code>。此服务提供了用来生成控件的便捷方法。</p>\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a> } from '@angular/forms';\n\nimport { CartService } from '../cart.service';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bsee7z5zbtf0mr2kk5ur6s1n6\">在 <code>CartComponent</code> 的 <code>constructor()</code> 中注入 <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> 服务。该服务是你已经导入过的 <code><a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a></code> 模块的一部分。</p>\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\" region=\"inject-form-builder\">\nexport class CartComponent {\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>,\n  ) {}\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ibwq42ekpyk48t2hng8b744v\">要收集用户的姓名和地址，请使用 <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> 的 <code>group()</code> 方法来把 <code>checkoutForm</code> 属性设置为一个包含 <code>name</code> 和 <code>address</code> 字段的表单模型。</p>\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\" region=\"checkout-form-group\">\nexport class CartComponent {\n\n  items = this.cartService.getItems();\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>,\n  ) {}\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5wtgtrlevx166uj5wfnav0im5\">定义一个 <code>onSubmit()</code> 方法来处理表单。该方法允许用户提交其姓名和地址。此外，此方法会使用 <code>CartService</code> 的 <code>clearCart()</code> 方法重置表单并清除购物车。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4989wjkzet8vp6s5517xj4ah4\">整个购物车组件类如下：</p>\n<code-example header=\"src/app/cart/cart.component.ts\" path=\"getting-started/src/app/cart/cart.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a> } from '@angular/forms';\n\nimport { CartService } from '../cart.service';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n\n  items = this.cartService.getItems();\n\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>,\n  ) {}\n\n  onSubmit(): void {\n    // Process checkout data here\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n}\n\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"create-the-checkout-form\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ebq1lzl0f7yasvfl3qoh142oz\">创建结帐表单<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#create-the-checkout-form\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"150tnrne6hry3e4xxjif1s5mh\">使用以下步骤在“购物车”视图的底部添加一个结帐表单。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7pj8qyujldz3e4cp37gchydh5\">在 <code>cart.component.html</code> 的底部，添加一个 HTML <code>&lt;form&gt;</code> 元素和一个 <strong>Purchase</strong> 按钮。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9w3gi8koltdt1jq00y4yhoidz\">使用 <code>formGroup</code> 属性绑定将 <code>checkoutForm</code> 绑定到 HTML 中的 <code>&lt;form&gt;</code> 标签。</p>\n<code-example header=\"src/app/cart/cart.component.html\" path=\"getting-started/src/app/cart/cart.component.3.html\" region=\"checkout-form\">\n&lt;form [formGroup]=\"checkoutForm\"&gt;\n\n  &lt;button class=\"button\" type=\"submit\"&gt;Purchase&lt;/button&gt;\n\n&lt;/form&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9iz36eer5rqbzac2ddtuvajoc\">在 <code>form</code> 标签上，使用 <code>ngSubmit</code> 事件绑定来侦听表单提交，并以 <code>checkoutForm</code> 的值为参数调用 <code>onSubmit()</code> 方法。</p>\n<code-example header=\"src/app/cart/cart.component.html (cart component template detail)\" path=\"getting-started/src/app/cart/cart.component.html\" region=\"checkout-form-1\">\n&lt;form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\"&gt;\n&lt;/form&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"25kv8vrx6ft83eqb7qpc0x85e\">添加 <code>name</code> 和 <code>address</code> 的 <code>&lt;input&gt;</code> 字段，每个字段都有一个 <code><a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a></code> 属性，该属性绑定到 <code>checkoutForm</code> 表单控件，以将 <code>name</code> 和 <code>address</code> 绑定到其 <code>&lt;input&gt;</code> 字段。完整的组件如下：</p>\n<code-example header=\"src/app/cart/cart.component.html\" path=\"getting-started/src/app/cart/cart.component.html\" region=\"checkout-form-2\">\n&lt;h3&gt;Cart&lt;/h3&gt;\n\n&lt;p&gt;\n  &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/shipping\"&gt;Shipping Prices&lt;/a&gt;\n&lt;/p&gt;\n\n&lt;div class=\"cart-item\" *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let item of items\"&gt;\n  &lt;span&gt;{{ item.name }} &lt;/span&gt;\n  &lt;span&gt;{{ item.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\"&gt;\n\n  &lt;div&gt;\n    &lt;label for=\"name\"&gt;\n      Name\n    &lt;/label&gt;\n    &lt;input id=\"name\" type=\"text\" <a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>=\"name\"&gt;\n  &lt;/div&gt;\n\n  &lt;div&gt;\n    &lt;label for=\"address\"&gt;\n      Address\n    &lt;/label&gt;\n    &lt;input id=\"address\" type=\"text\" <a href=\"api/forms/FormControlName\" class=\"code-anchor\">formControlName</a>=\"address\"&gt;\n  &lt;/div&gt;\n\n  &lt;button class=\"button\" type=\"submit\"&gt;Purchase&lt;/button&gt;\n\n&lt;/form&gt;\n\n\n</code-example>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ncwhzp0t89k2w9v4je3z2nph\">将少量物品放入购物车后，用户可以查看他们的物品，输入他们的姓名和地址，然后提交购买的商品。</p>\n<div class=\"lightbox\">\n  <img alt=\"Cart view with checkout form\" src=\"generated/images/guide/start/cart-with-items-and-form.png\" width=\"261\" height=\"395\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rp0xgalnghe23r2o4690y39f\">要确认提交，请打开控制台以查看包含你所提交的名称和地址的对象。</p>\n<h2 id=\"whats-next\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"407r2fj2mi5kvg7imj9zdcpe\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-forms#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adoiw7f9is33ktvwi516d95lv\">你现在有了一个具备产品目录、购物车和结帐功能的完整在线商店应用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5rzkypk9hibgd0oh9sockqzjo\"><a href=\"start/start-deployment\" title=\"试试看：部署\">继续前往“部署”部分</a>，以进行本地开发，或将此应用部署到 Firebase 或你自己的服务器。</p>\n\n  <div class=\"reviewed\">最后复查时间：Wed Sep 15 2021</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/localizing-angular\n - start/start-data\n-->\n<!-- links from this doc:\n - api/common/CurrencyPipe\n - api/common/NgFor\n - api/core/Component\n - api/forms/FormBuilder\n - api/forms/FormControlName\n - api/forms/ReactiveFormsModule\n - api/router/RouterLink\n - start\n - start/start-data\n - start/start-deployment\n - start/start-forms#create-the-checkout-form\n - start/start-forms#define-the-checkout-form-model\n - start/start-forms#using-forms-for-user-input\n - start/start-forms#whats-next\n-->"}