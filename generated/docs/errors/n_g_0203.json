{"id":"errors/NG0203","title":"NG0203: `inject()` 必須從注入上下文中呼叫，比如建構式函式、工廠函式、欄位初始化程式，或者與 `runInInjectionContext` 一起使用的函式。","contents":"<div class=\"content\">\n\n  <h1 id=\"ng0203-inject-must-be-called-from-an-injection-context-such-as-a-constructor-a-factory-function-a-field-initializer-or-a-function-used-with-runininjectioncontext\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l6v2fwg67etzya1koyewc8ni\">NG0203: `inject()` 必須從注入上下文中呼叫，比如建構式函式、工廠函式、欄位初始化程式，或者與 `runInInjectionContext` 一起使用的函式。<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0203#ng0203-inject-must-be-called-from-an-injection-context-such-as-a-constructor-a-factory-function-a-field-initializer-or-a-function-used-with-runininjectioncontext\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  \n\n  <div class=\"error-description\">\n    <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0203#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5c9yrf0f3gklhzvafdruvrdu9\">當您嘗試在允許的注入上下文之外使用 \n<a href=\"api/core/inject\"><code>inject</code></a> 函式時，會看到此錯誤。注入上下文在類建立和初始化期間可用。它也適用於使用 \n<code><a href=\"api/core/runInInjectionContext\" class=\"code-anchor\">runInInjectionContext</a></code> 的函式。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"by6a13yi22q6k4deqt2y50qvf\">在實踐中，建構式函式、建構式函式引數和欄位初始化器中允許進行 <code>inject()</code> 呼叫：</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({providedIn: 'root'})\nexport class Car {\n  radio: Radio|undefined;\n\n  // OK: field initializer\n  spareTyre = inject(Tyre);\n  \n  constructor() {\n    // OK: constructor body\n    this.radio = inject(Radio);\n  }\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cd39muwt2cnai3lrw26l1jw9\">從提供者的工廠中呼叫 \n<a href=\"api/core/inject\"><code>inject</code></a> 也是合法的：</p>\n<code-example language=\"typescript\">\nproviders: [\n  {provide: Car, useFactory: () =&gt; {\n    // OK: a class factory\n    const engine = inject(Engine);\n    return new Car(engine);\n  }}\n]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b39hran17wzc9nl1q0wukuxqq\">在類建立或 \n<code><a href=\"api/core/runInInjectionContext\" class=\"code-anchor\">runInInjectionContext</a></code> 之外呼叫 \n<a href=\"api/core/inject\"><code>inject</code></a> 函式將導致錯誤。特別是，在建立類別實例後，在方法中（包括生命週期鉤子）禁止呼叫 \n<code>inject()</code>：</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({ ... })\nexport class CarComponent {\n  ngOnInit() {\n    // ERROR: too late, the component instance was already created\n    const engine = inject(Engine);\n    engine.start();\n  }\n}\n</code-example>\n\n  </div>\n\n\n  \n  <br>\n\n  <div class=\"debugging\">\n    <h2 id=\"debugging-the-error\">如何排除本錯誤<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0203#debugging-the-error\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbcbfcbh5qq3mut4m29agv4la\">從錯誤堆疊跟蹤中向後找，以識別出不允許的 <code>inject()</code> 呼叫所在的位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9psd08f917851urt3ntxgjnop\">要修復錯誤，請將 \n<a href=\"api/core/inject\"><code>inject</code></a> 呼叫移到允許的位置（通常是類建構式函式或欄位初始化程式）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"doferno27o6vt1y2yj7yp6ofx\"><strong>注意：</strong>如果在測試上下文中執行，則 \n<code>TestBed.runInInjectionContext</code> 將使 \n<code>inject()</code> 可以成功。</p>\n<code-example language=\"typescript\">\nTestBed.runInInjectionContext(() =&gt; {\n   // ...\n});\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n  \n</div>\n\n<!-- links to this doc:\n - errors\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/Injectable\n - api/core/inject\n - api/core/runInInjectionContext\n - errors/NG0203#debugging-the-error\n - errors/NG0203#description\n - errors/NG0203#ng0203-inject-must-be-called-from-an-injection-context-such-as-a-constructor-a-factory-function-a-field-initializer-or-a-function-used-with-runininjectioncontext\n - guide/dependency-injection-context\n-->"}