{"id":"errors/NG0912","title":"NG0912: 檢測到元件ID生成衝突。","contents":"<div class=\"content\">\n\n  <h1 id=\"ng0912-component-id-generation-collision-detected\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5x4poyic9bt01v1aw65i1ns5m\">NG0912: 檢測到元件ID生成衝突。<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0912#ng0912-component-id-generation-collision-detected\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  \n\n  <div class=\"error-description\">\n    <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0912#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6ia6kyxbbkk9dsztyhh55gm6\">在建立元件時，Angular 會為每個元件生成一個唯一的元件 ID。這是根據 Angular 元件的元資料生成的，包括但不限於：選擇器、宿主繫結的數量、類別屬性名稱、檢視和內容查詢。當兩個元件元資料相同時（通常會共享相同的選擇器），將發生 ID 生成衝突。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"am4noxyja3ucy2mzp5c2k0sor\">元件 ID 會在 Angular 內部使用：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"p2hhsl3hh52euuqs6ltjyzsm\">用於在樣式封裝時生成 DOM 節點的額外註解</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7m71ighujxc17iegibgv6mbap\">在 \n<a href=\"guide/hydration\">水合</a> 過程中，用於在 \n<a href=\"guide/ssr\">伺服器端渲染</a> 後恢復應用程式狀態。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"mpkjgeuvrm0muvqfkkjx04mt\">為避免可能由元件 ID 衝突引起的問題，建議按如下方式解決這些問題。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amnamla6hyxmvr1w6qlbtxncz\"><strong>元件 ID 衝突範例</strong></p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component',\n  template: 'complex-template',\n})\nclass SomeComponent {}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component',\n  template: 'empty-template',\n})\nclass SomeMockedComponent {}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ezmhmlpm6cgnq5ttaqthsncp\">如果定義這樣兩個元件將引發 ID 生成衝突，並且在開發過程中將顯示警告。</p>\n\n  </div>\n\n\n  \n  <br>\n\n  <div class=\"debugging\">\n    <h2 id=\"debugging-the-error\">如何排除本錯誤<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0912#debugging-the-error\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"207fz22uthqig82fqplpjje5o\">警告訊息套件括 ID 衝突的兩個元件的類別名稱。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ylk8dny09fq1hkttibgcxdcr\">可以使用以下解決方案之一解決該問題：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amdsyao1wr7ymlcuhiw19030i\">更改兩個元件之一的選擇器。例如，透過使用像 <code>:not()</code> 這樣沒有效果的偽選擇器和不同的標籤名稱。</li>\n</ol>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component:not(p)',\n  template: 'empty-template',\n})\nclass SomeMockedComponent {}\n</code-example>\n<ol start=\"2\">\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8v99msff7mzuf65wjh1wddp9\">向兩個元件之一新增額外的宿主屬性。</li>\n</ol>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component',\n  template: 'complex-template',\n  host: {'some-binding': 'some-value'},\n})\nclass SomeComponent {}\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n  \n</div>\n\n<!-- links to this doc:\n - errors\n-->\n<!-- links from this doc:\n - api/core/Component\n - errors/NG0912#debugging-the-error\n - errors/NG0912#description\n - errors/NG0912#ng0912-component-id-generation-collision-detected\n - guide/hydration\n - guide/ssr\n-->"}