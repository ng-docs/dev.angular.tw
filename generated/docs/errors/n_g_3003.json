{"id":"errors/NG3003","title":"NG3003: 需要建立匯入迴圈才能編譯此元件。","contents":"<div class=\"content\">\n\n  <h1 id=\"ng3003-import-cycles-would-need-to-be-created-to-compile-this-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"537s46v25g28h2h8uxx7a216w\">NG3003: 需要建立匯入迴圈才能編譯此元件。<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG3003#ng3003-import-cycles-would-need-to-be-created-to-compile-this-component\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  \n\n  <div class=\"error-description\">\n    <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG3003#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cqjm7mtophvgytjp92eloydif\">該組件引用的元件、指令或通道將要求編譯器新增某個匯入，而這將導致迴圈匯入。比如，考慮一個場景，其中 <code>ParentComponent</code> 在其樣板中引用了 <code>ChildComponent</code></p>\n<code-example header=\"parent.component.ts\" path=\"errors/cyclic-imports/parent.component.ts\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-parent',\n  template: '&lt;app-child&gt;&lt;/app-child&gt;',\n})\nexport class ParentComponent {}\n\n\n</code-example>\n<code-example header=\"child.component.ts\" path=\"errors/cyclic-imports/child.component.ts\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\nimport {ParentComponent} from './parent.component';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-child',\n  template: 'The child!',\n})\nexport class ChildComponent {\n  constructor(private parent: ParentComponent) {}\n}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqtauo867m5lmhdblayyqc4d6\">由於 <code>ChildComponent</code> 在其建構式函式中引用了 <code>ParentComponent</code>，因此已經有一個從 <code>child.component.ts</code> 到 <code>parent.component.ts</code> 的匯入。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aa3960xabyrirsiqo9lernkrp\"><strong>注意</strong>：<br>\n父元件的樣板中包含 <code>&lt;child&gt;&lt;/child&gt;</code>。因此，該樣板的生成後代碼必須包含對 <code>ChildComponent</code> 類別的引用。而為了進行此引用，編譯器必須將來自 <code>parent.component.ts</code> 的匯入新增到 <code>child.component.ts</code> 中，這將導致迴圈匯入：</p>\n<code-example format=\"none\" language=\"none\">\n\nparent.component.ts -&gt; child.component.ts -&gt; parent.component.ts\n\n</code-example>\n</div>\n<h3 id=\"remote-scoping\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dx2efdwnb1rvq2njx28mmnub\">遠端作用域<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG3003#remote-scoping\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7p8n77iwlbxahxj17yxl7p7ks\">如果您正在使用 NgModule，請避免新增導致迴圈依賴的匯入，附加程式碼將新增到宣告連線依賴項的元件的 \n<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 類別中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"deyhmqspwz1wu19lgenfn3rbz\">這被稱為『遠端作用域』。</p>\n<h3 id=\"libraries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"accdlvrx8gygmhhoivg70rme2\">函式庫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG3003#libraries\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"g7p2sze6n5d3sv1d586zp5z5\">不幸的是，『遠端作用域』程式碼有副作用，它會阻止搖樹最佳化，並且不能在庫中使用。因此，當使用 <code>\"compilationMode\": \"partial\"</code> 設定來建立庫時，任何需要迴圈匯入的元件都將引發此 <code>NG3003</code> 編譯器錯誤。</p>\n\n  </div>\n\n\n  \n  <br>\n\n  <div class=\"debugging\">\n    <h2 id=\"debugging-the-error\">如何排除本錯誤<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG3003#debugging-the-error\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uwy3f6cq6691h5wyg3al8nmt\">這種迴圈會顯示為錯誤訊息的一部分。比如：</p>\n<code-example hidecopy=\"true\">\n\nThe component ChildComponent is used in the template but importing it would create a cycle:\n/parent.component.ts -&gt; /child.component.ts -&gt; /parent.component.ts\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cp2njk23obr2001ojs7uc7cir\">使用它來確定所引用的元件、通道或指令是如何反向依賴要編譯的元件的。以下是一些解決問題的方法：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24gyezjz3nczwrfcj1p3fkmha\">嘗試重新安排你的依賴關係，以避免迴圈。比如，使用儲存在獨立檔案中的中間介面，可以將該檔案匯入兩個相關檔案中而不會導致迴圈匯入。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"afx6bdimqwvf7rph7550frufn\">把相互引用的類移入同一個檔案中，以避免它們相互匯入。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"u8ibzqmewd92tvewcw4a4ffa\">將相互引用的類移到同一檔案中，以避免它們之間的任何匯入。</li>\n</ul>\n\n  </div>\n  \n</div>\n\n<!-- links to this doc:\n - errors\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/NgModule\n - errors/NG3003#debugging-the-error\n - errors/NG3003#description\n - errors/NG3003#libraries\n - errors/NG3003#ng3003-import-cycles-would-need-to-be-created-to-compile-this-component\n - errors/NG3003#remote-scoping\n-->"}