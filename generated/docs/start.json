{"id":"start","title":"Angular 入門","contents":"<div class=\"content\">\n  <h1 id=\"getting-started-with-angular\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53e2u4loku1tispahkm932qvl\">Angular 入門<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#getting-started-with-angular\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1m57i9vhckvmig6y9idyjf4jf\">Angular 歡迎你！</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"clfxdenwjtye6ivv8g3dgt75p\">本教程將透過建立一個電子商務網站，向你介紹 Angular 的基本知識。該網站具有商品名錄、購物車和結賬表單。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ajznsl3twg4o4ujjxoatmze3\">為了幫助你更好地起步，本教程提供了一個已完成的應用，你可以在 <a href=\"https://stackblitz.com\">Stackblitz</a> 上試驗及互動，而不用<a href=\"guide/setup-local\" title=\"Setup guide\">建立本地開發環境</a>。StackBlitz 是一個基於瀏覽器的開發環境，你可以在其中使用各種技術來建立、儲存和共享專案。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dp7zq0zy2yzg1t3x1wcavpmlc\">為了充分利用本教程，你應該已經對以下內容有基本的瞭解。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"as6hd3zpr56z6wgf3ux433i32\"><a href=\"https://developer.mozilla.org/docs/Learn/HTML\" title=\"學習 HTML：指南和教程\">HTML</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5mudc13me97bc08myddsm5t5z\"><a href=\"https://developer.mozilla.org/docs/Web/JavaScript\" title=\"JavaScript\">JavaScript</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3b1dadw3096r30pgmpthseb03\"><a href=\"https://www.typescriptlang.org/\" title=\"TypeScript 語言\">TypeScript</a></li>\n</ul>\n<p><a id=\"components\"></a></p>\n<h2 id=\"take-a-tour-of-the-example-application\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"75hhqxdhse279zrl3k9oxl5oi\">瀏覽範例應用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#take-a-tour-of-the-example-application\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6ix19tpe28ec5348vmoqf7fd\">你可以用元件建立 Angular 應用。元件定義了 UI 中的職責範圍，讓你可以複用某些 UI 功能集。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"23xzddxu7vs86gx2s3qmwm9ay\">一個元件由三部分組成：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fiovp45e6v0zb8c9gqk3jdwa\">元件部分</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5cpwxaikwcm0ypacd7x5thp6r\">一個元件類別</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7zwthnotd6od5n1i8r0bk3vkm\">處理資料和功能</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fap404wd1th6tgei399865iq\">一個 HTML 樣板</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8plqo7kd6ns4qw2evk0ipil33\">確定使用者介面</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"k3i4yyngb0qkrsyk27cmv3mu\">元件特定的樣式</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3wlzda49u8lp43zu5xpe6xihl\">定義外觀和感覺</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mmyf6mr3fghwqx6sqhgqkk2m\">本指南示範了如何使用下列元件建立應用：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c7vzzlnsersqq3lvejga81lr\">元件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>&lt;app-root&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fq1qy46d590smwc15jccj99j\">第一個載入的元件，也是其他元件的容器</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&lt;app-top-bar&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3t3dw0db49exnt9f1c2i0icyf\">商店名稱和結賬按鈕</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&lt;app-product-list&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9hz36v5voxg18ifa2kfky6loo\">產品清單</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&lt;app-product-alerts&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c6s891442s72sneazkrvy526n\">包含應用程式警報的元件</td>\n</tr>\n</tbody>\n</table>\n<div class=\"lightbox\">\n<img alt=\"Online store with three components\" src=\"generated/images/guide/start/app-components.png\" width=\"324\" height=\"527\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6xcg029upob51ad6i4o4ixsp9\">有關元件的更多訊息，請參見<a href=\"guide/architecture-components\" title=\"元件和樣板簡介\">元件簡介</a>。</p>\n<p><a id=\"new-project\"></a></p>\n<h2 id=\"create-the-sample-project\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b9h7fygood3230bhgu6rmtjxl\">建立範例專案<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#create-the-sample-project\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7cyzqq4d1pxmky23vay0t7irh\">要建立範例專案，請<live-example name=\"getting-started-v0\" nodownload=\"\">在 StackBlitz 中生成一個預置的範例專案</live-example>。要儲存你的工作，請執行以下操作：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"duh4npuujdyfo25r43jk7o5wi\">登入到 StackBlitz。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ardpukj2nqgmq27tjzdbjf08\">對你生成的專案進行分支。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zlaeb6bao0ucbquv3h6ld8fl\">定時儲存。</li>\n</ol>\n<div class=\"lightbox\">\n<img alt=\"Fork the project\" src=\"generated/images/guide/start/fork-the-project.png\" width=\"200\" height=\"118\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7pf6if3kcumm78zcvvq0kyhz\">在 StackBlitz 中，右側的預覽窗格會顯示範例應用的啟動狀態。此預覽有兩個區域：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4o4qphf3kqg1esfg84g8efhdn\">帶有商店名稱（<code>My Store</code>）和結賬按鈕的頂部欄</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3w2ltktauae3fqyfjf3cm467\">產品清單（<code>Products</code>）及其標題</li>\n</ul>\n<div class=\"lightbox\">\n<img alt=\"Starter online store application\" src=\"generated/images/guide/start/new-app-all.gif\" width=\"600\" height=\"219\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aw7tdk3w5b7nspp9b08idpg47\">左側的專案區顯示了構成本應用的源檔案，包括基礎結構和設定檔案。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2pucux6zcevpjzxhbvixlfot\">當你生成本教程隨附的 StackBlitz 範例應用時，StackBlitz 會為你建立啟動程式檔案和模擬資料。本教程中用到的檔案位於 <code>src</code> 資料夾中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dnhvywk2q1eszbt03757uw1uz\">有關如何使用 StackBlitz 的更多訊息，請參見 <a href=\"https://developer.stackblitz.com/docs/platform\">StackBlitz 的文件</a>。</p>\n<p><a id=\"product-list\"></a></p>\n<h2 id=\"create-the-product-list\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3iy8k9xqv780os2di9s7eq4ga\">建立產品清單<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#create-the-product-list\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2a1a28c1wirsi9f2acyaswp9h\">在本節中，你將修改應用以顯示產品清單。你會用到來自 <code>products.ts</code> 檔案的預定義產品資料，和一些來自 <code>product-list.component.ts</code> 檔案的方法。本節將指導你完成編輯 HTML（也稱為樣板）的過程。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eaqfajdnhtao96wz2wwofu0ji\">在 <code>product-list</code> 資料夾中，開啟樣板檔案 <code>product-list.component.html</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7r4qq6p4a2hn87le6v2c1hy1k\">在 <code>&lt;div&gt;</code> 上新增一個結構型指令 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>，如下所示。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.2.html\" region=\"ngfor\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wnamtlohg0wdiuxfi0h9wsa4\">使用 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>，會把這個 <code>&lt;div&gt;</code> 針對清單中的每個產品進行複寫。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bcgveam2pvdri4quvk5wdggrl\">結構型指令會通過新增、刪除和操作元素來調整或重塑 DOM 結構。有關結構型指令的更多訊息，請參見<a href=\"guide/structural-directives\">結構型指令</a>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bt3l50evg1llwgrwiqmi8iy25\">在此 <code>&lt;div&gt;</code> 中，新增 <code>&lt;h3&gt;</code> 和 <code>{{ product.name }}</code>。<code>{{ product.name }}</code> 語句是 Angular 內嵌語法的範例。內嵌 <code>{{ }}</code> 可以讓你把屬性值渲染為文字。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.2.html\" region=\"interpolation\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n      {{ product.name }}\n  &lt;/h3&gt;\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6f6fntooozwdypap6rcy9vvlm\">預覽窗格將會更新，以顯示清單中每個商品的名稱。</p>\n<div class=\"lightbox\">\n<img alt=\"Product names added to list\" src=\"generated/images/guide/start/template-syntax-product-names.png\" width=\"259\" height=\"271\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9lae9ug44l2e3c84ssqxs5958\">為了讓每個商品名稱都能連結到商品詳情，請圍繞 <code>{{ product.name }}</code> 新增一個 <code>&lt;a&gt;</code> 元素。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7an2sbhunqj6lhk38mam0780y\">使用 <code>[ ]</code> 語法將標題設定為此產品的名稱，如下所示：</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.2.html\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a [title]=\"product.name + ' details'\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"26eryuity2t97wzatyx4gr290\">在預覽窗格中，將滑鼠懸停在產品名稱上，可以檢視所繫結的 name 屬性值，該值是產品名加上單詞 『details』。透過屬性繫結 <code>[ ]</code> 可以在樣板表示式中使用屬性值。</p>\n<div class=\"lightbox\">\n<img alt=\"Product name anchor text is product name property\" src=\"generated/images/guide/start/template-syntax-product-anchor.png\" width=\"259\" height=\"271\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3n4yqn1v884z5jz7voddid5i\">新增產品說明。在 <code>&lt;p&gt;</code> 元素上使用 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 指令，以便 Angular 只讓當前產品有描述 <code>&lt;p&gt;</code>。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.3.html\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a [title]=\"product.name + ' details'\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n  &lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product.description\"&gt;\n    Description: {{ product.description }}\n  &lt;/p&gt;\n\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7b0sum1lbijqg9fo8buq43uay\">應用程式現在顯示清單中每個產品的名稱和描述。 請注意，最終產品沒有描述段落。 Angular 不會建立 \n<code>&lt;p&gt;</code> 元素，因為產品的描述屬性為空。</p>\n<div class=\"lightbox\">\n<img alt=\"Product descriptions added to list\" src=\"generated/images/guide/start/template-syntax-product-description.png\" width=\"259\" height=\"289\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6efxrv37g7to7sne5l6ufz436\">新增一個按鈕，以便使用者可以共享產品。將按鈕的 <code>click</code> 事件繫結到 <code>product-list.component.ts</code> 中的 <code>share()</code> 方法。事件繫結要在此事件用一組圓括號 <code>( )</code> 括起來，就比如 <code>&lt;button&gt;</code> 元素上的 <code>(click)</code>。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.4.html\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a [title]=\"product.name + ' details'\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n  &lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product.description\"&gt;\n    Description: {{ product.description }}\n  &lt;/p&gt;\n\n  &lt;button type=\"button\" (click)=\"share()\"&gt;\n    Share\n  &lt;/button&gt;\n\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6lptplqm7vp4e2itr6ncvkgc\">每個產品現在都有一個 『<strong>Share</strong>』 按鈕。</p>\n<div class=\"lightbox\">\n<img alt=\"Share button added for each product\" src=\"generated/images/guide/start/template-syntax-product-share-button.png\" width=\"259\" height=\"376\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"auxqahd4c6ni8c8ii75i3b3qo\">單擊 『<strong>Share</strong>』 按鈕將觸發一條通知，指出 『The product has been shared!』。</p>\n<div class=\"lightbox\">\n<img alt=\"Alert box indicating product has been shared\" src=\"generated/images/guide/start/template-syntax-product-share-alert.png\" width=\"330\" height=\"104\">\n</div>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96tr35z0ss28r4xw1l23c9298\">在編輯樣板時，你已經瞭解了 Angular 樣板的一些最常用的功能。更多訊息，請參閱<a href=\"guide/architecture-components#template-syntax\" title=\"樣板語法\">元件和樣板簡介</a>。</p>\n<p><a id=\"passing-data-in\"></a></p>\n<h2 id=\"pass-data-to-a-child-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7dw7zzuagcir1jks9oybqrdud\">將資料傳遞給子元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#pass-data-to-a-child-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4rajeri6dksdazuski5ukrt4\">目前，產品清單中顯示了每個產品的名稱和描述。<code>ProductListComponent</code> 還定義了一個 <code>products</code> 屬性，包含從 <code>products.ts</code> 的 <code>products</code> 陣列匯入的各個產品的資料。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"an4b75b6l5zt4817psa78nzg4\">下一步是建立一個新的警報功能，該功能將使用\n<code>ProductListComponent</code>中的產品資料。 警報應檢查產品的價格。如果發現價格大於 700 美元，則應顯示『通知我』按鈕。使用者單擊該按鈕後，應該能夠註冊通知，通知他們產品何時打折。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8toek29oqoczvz5pgux9j8u8s\">本節將引導你建立一個子元件 <code>ProductAlertsComponent</code>，該子元件可以從其父元件 <code>ProductListComponent</code> 接收資料。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5kfu2r31f40zskoqzhpui4vr9\">點選當前終端上方的加號，新建一個終端，執行指令生成元件。</p>\n<div class=\"lightbox\">\n<img alt=\"StackBlitz command to generate component\" src=\"generated/images/guide/start/create-new-terminal.png\" width=\"620\" height=\"204\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a0ti8be2mqvbzfjxu3rpxznng\">在新終端中，透過執行以下指令生成一個名為 <code>product-alerts</code> 的新元件：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component product-alerts\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ait4a1kwqpjnnl3x8dhxx5ify\">該產生器會為元件的三個部分建立初始檔案：</p>\n<ul>\n<li><code>product-alerts.component.ts</code></li>\n<li><code>product-alerts.component.html</code></li>\n<li><code>product-alerts.component.css</code></li>\n</ul>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cwmr1gabcdix2m3ogucjvkmxn\">開啟 <code>product-alerts.component.ts</code>。<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 裝飾器會指出它後面的類是元件。<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 還會提供有關元件的元資料，包括其選擇器、樣板和樣式。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.ts\" region=\"as-generated\">\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css']\n})\nexport class ProductAlertsComponent {\n\n\n}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6jvb065ax7vvakkhdt8dht6f9\"><code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 中的主要功能如下：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cl67jlkkfdkkhq78ira4e943f\"><code>selector</code>（<code>app-product-alerts</code>）用於標識元件。按照慣例，Angular 元件選擇器以前綴 <code>app-</code> 開頭，後跟元件名稱。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aa5eie714yowuf11jk1rqnhdn\">樣板和樣式檔案名引用了元件的 HTML 和 CSS。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3zf48nixuikj7vvv6z5o8jnel\">這個 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 定義還匯出了類 <code>ProductAlertsComponent</code>，該類別會處理元件的功能。</p>\n</li>\n</ul>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3yijd230mqf9qao28y8zmz9m\">要將 <code>ProductAlertsComponent</code> 設定為接收產品資料，請首先從 <code>@angular/core</code> 中匯入符號 <code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code>。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a> } from '@angular/core';\nimport { Product } from '../products';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2esgwvf1fam3h5x5s4af544h\">在 <code>ProductAlertsComponent</code> 類別定義中，使用 <code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> 裝飾器定義一個名為 <code>product</code> 的屬性。<code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> 裝飾器指出此屬性值要從本元件的父元件 <code>ProductListComponent</code> 中傳入。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.ts\" region=\"input-decorator\">\nexport class ProductAlertsComponent {\n\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() product: Product | undefined;\n\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8njqhnc9yzj1somtw52axixzu\">開啟 <code>product-alerts.component.html</code> 並將佔位符段落替換為 <strong>Notify Me</strong> 按鈕，如果產品價格超過 700 美元，就會出現此按鈕。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.html\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.html\">\n&lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product &amp;&amp; product.price &gt; 700\"&gt;\n  &lt;button type=\"button\"&gt;Notify Me&lt;/button&gt;\n&lt;/p&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b7rjf6vcytam11t7tb4654te\">產生器會自動把 <code>ProductAlertsComponent</code> 新增到 <code>AppModule</code> 中，以便它能用於本應用的其它元件中。</p>\n<code-example header=\"src/app/app.module.ts\" path=\"getting-started/src/app/app.module.ts\" region=\"declare-product-alerts\">\nimport { ProductAlertsComponent } from './product-alerts/product-alerts.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    ProductListComponent,\n    ProductAlertsComponent,\n  ],\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6a2chs6ji2st2uc9uichzsq22\">最後，要將 <code>ProductAlertsComponent</code> 顯示為 <code>ProductListComponent</code> 的子級，請將 <code>&lt;app-product-alerts&gt;</code> 元素新增到 <code>product-list.component.html</code> 中。使用屬性繫結將當前產品作為輸入傳給此元件。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.5.html\" region=\"app-product-alerts\">\n&lt;button type=\"button\" (click)=\"share()\"&gt;\n  Share\n&lt;/button&gt;\n\n&lt;app-product-alerts\n  [product]=\"product\"&gt;\n&lt;/app-product-alerts&gt;\n\n</code-example>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"yjdnm5zgnrc8warwm2nhqt2a\">這個新的產品通知元件將產品作為產品清單中的輸入。使用該輸入，它將根據產品的價格顯示或隱藏 <strong>Notify Me</strong> 按鈕。Phone XL 的價格超過了 700 美元，因此該產品上會顯示 <strong>Notify Me</strong> 按鈕。</p>\n<div class=\"lightbox\">\n<img alt=\"Product alert button added to products over $700\" src=\"generated/images/guide/start/product-alert-button.png\" width=\"259\" height=\"406\">\n</div>\n<p><a id=\"output\"></a></p>\n<h2 id=\"pass-data-to-a-parent-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"388olbu2t4tappo3eqy233dc9\">將資料傳遞到父元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#pass-data-to-a-parent-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"czodjznp7djbeh4yvv05ntojg\">為了使 <strong>Notify Me</strong> 按鈕起作用，子元件需要通知並將資料傳遞給父元件。當用戶單擊 <strong>Notify Me</strong> 時 <code>ProductAlertsComponent</code> 需要引發一個事件，並且 <code>ProductListComponent</code> 需要回應此事件。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dyfi62xnpxjwpevx72ne3uytb\">在 <code>product-alerts.component.ts</code> 中，從 <code>@angular/core</code> 匯入符號 <code><a href=\"api/core/Output\" class=\"code-anchor\">Output</a></code> 和 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code>。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a>, <a href=\"api/core/Output\" class=\"code-anchor\">Output</a>, <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a> } from '@angular/core';\nimport { Product } from '../products';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qurq08r7mzn9j0zqs9rrdsxu\">在元件類別中，使用 <code>@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>()</code> 裝飾器和 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>()</code> 的實例定義一個名為 <code>notify</code> 的屬性。使用 <code>@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>()</code> 設定 <code>ProductAlertsComponent</code>，這會讓 <code>ProductAlertsComponent</code> 在 <code>notify</code> 屬性的值發生變化時引發一個事件。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.ts\" region=\"input-output\">\nexport class ProductAlertsComponent {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() product: Product | undefined;\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() notify = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>();\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ajghezqnm442p5f13p8kuy6g\">在 <code>product-alerts.component.html</code> 中，修改 <strong>Notify Me</strong> 按鈕，增加事件繫結，並呼叫 <code>notify.emit()</code> 方法。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.html\" path=\"getting-started/src/app/product-alerts/product-alerts.component.html\">\n&lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product &amp;&amp; product.price &gt; 700\"&gt;\n  &lt;button type=\"button\" (click)=\"notify.emit()\"&gt;Notify Me&lt;/button&gt;\n&lt;/p&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bjo2uwksc5e49ic4esbj5ehfh\">定義使用者單擊按鈕時發生的行為。當子元件引發事件時，父元件 <code>ProductListComponent</code>（而不是 <code>ProductAlertsComponent</code>）會採取行動。在 <code>product-list.component.ts</code> 中，定義一個 <code>onNotify()</code> 方法，類似於 <code>share()</code> 方法。</p>\n<code-example header=\"src/app/product-list/product-list.component.ts\" path=\"getting-started/src/app/product-list/product-list.component.ts\" region=\"on-notify\">\nexport class ProductListComponent {\n\n  products = [...products];\n\n  share() {\n    window.alert('The product has been shared!');\n  }\n\n  onNotify() {\n    window.alert('You will be notified when the product goes on sale');\n  }\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dc5rga0thpqsxhcmtqktayqh6\">更新 <code>ProductListComponent</code>，以從 <code>ProductAlertsComponent</code> 中接收資料。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"822hxnz65ccx4ab1nxj71ntkl\">在 <code>product-list.component.html</code> 中，將 <code>&lt;app-product-alerts&gt;</code> 繫結到產品清單元件的 <code>onNotify()</code> 方法。<code>&lt;app-product-alerts&gt;</code> 會顯示 <strong>Notify Me</strong> 按鈕的內容。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.6.html\" region=\"on-notify\">\n&lt;button type=\"button\" (click)=\"share()\"&gt;\n  Share\n&lt;/button&gt;\n\n&lt;app-product-alerts\n  [product]=\"product\" \n  (notify)=\"onNotify()\"&gt;\n&lt;/app-product-alerts&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8yri8fnvy0k75k0sev8z81so0\">單擊 <strong>Notify Me</strong> 按鈕以觸發一條通知，內容為：\"You will be notified when the product goes on sale\"。</p>\n<div class=\"lightbox\">\n<img alt=\"Product alert notification confirmation dialog\" src=\"generated/images/guide/start/product-alert-notification.png\" width=\"329\" height=\"104\">\n</div>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34j2rzs86cu7cqy2dqdpawx7l\">有關元件之間的通訊的更多訊息，請參見<a href=\"guide/component-interaction\" title=\"元件互動\">元件互動</a>。</p>\n<p><a id=\"whats-next\"></a></p>\n<h2 id=\"whats-next\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"407r2fj2mi5kvg7imj9zdcpe\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8bea1peulyjmt9me7lqcdvv0\">在本節中，你已經建立了一個應用，該應用會遍歷資料，並讓屬性元件彼此通訊。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmvpa5c0tfeb2ljt5bde9hql6\">要繼續探索 Angular 並開發此應用，請執行以下操作：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5j6xzggygp2dtf1bga8an8kg\">繼續進行<a href=\"start/start-routing\" title=\"入門：應用內導向\">應用內導向</a>，以建立產品詳情頁。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3efx8z5tsn2tsksh6ssj6r7e4\">跳至<a href=\"start/start-deployment\" title=\"入門：部署\">部署</a>以轉為本地開發，或將你的應用部署到 Firebase 或你自己的伺服器上。</li>\n</ul>\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/developer-guide-overview\n - guide/docs-style-guide\n - guide/example-apps-list\n - guide/localizing-angular\n - guide/router-tutorial-toh\n - guide/setup-local\n - guide/understanding-angular-overview\n - guide/what-is-angular\n - quick-start\n - start/start-data\n - start/start-deployment\n - start/start-forms\n - start/start-routing\n - tutorial/tour-of-heroes\n-->\n<!-- links from this doc:\n - api/common/NgFor\n - api/common/NgIf\n - api/core/Component\n - api/core/EventEmitter\n - api/core/Input\n - api/core/NgModule\n - api/core/Output\n - guide/architecture-components\n - guide/architecture-components#template-syntax\n - guide/component-interaction\n - guide/setup-local\n - guide/structural-directives\n - start#create-the-product-list\n - start#create-the-sample-project\n - start#getting-started-with-angular\n - start#pass-data-to-a-child-component\n - start#pass-data-to-a-parent-component\n - start#prerequisites\n - start#take-a-tour-of-the-example-application\n - start#whats-next\n - start/start-deployment\n - start/start-routing\n - https://developer.mozilla.org/docs/Learn/HTML\n - https://developer.mozilla.org/docs/Web/JavaScript\n - https://developer.stackblitz.com/docs/platform\n - https://stackblitz.com\n - https://www.typescriptlang.org/\n-->"}