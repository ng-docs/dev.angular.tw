{"id":"start","title":"Angular 入门","contents":"<div class=\"content\">\n  <h1 id=\"getting-started-with-angular\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53e2u4loku1tispahkm932qvl\">Angular 入门<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#getting-started-with-angular\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1m57i9vhckvmig6y9idyjf4jf\">Angular 欢迎你！</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"clfxdenwjtye6ivv8g3dgt75p\">本教程将通过构建一个电子商务网站，向你介绍 Angular 的基本知识。该网站具有商品名录、购物车和结账表单。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ajznsl3twg4o4ujjxoatmze3\">为了帮助你更好地起步，本教程提供了一个已完成的应用，你可以在 <a href=\"https://stackblitz.com\">Stackblitz</a> 上试验及互动，而不用<a href=\"guide/setup-local\" title=\"Setup guide\">建立本地开发环境</a>。StackBlitz 是一个基于浏览器的开发环境，你可以在其中使用各种技术来创建、保存和共享项目。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dp7zq0zy2yzg1t3x1wcavpmlc\">为了充分利用本教程，你应该已经对以下内容有基本的了解。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"as6hd3zpr56z6wgf3ux433i32\"><a href=\"https://developer.mozilla.org/docs/Learn/HTML\" title=\"学习 HTML：指南和教程\">HTML</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5mudc13me97bc08myddsm5t5z\"><a href=\"https://developer.mozilla.org/docs/Web/JavaScript\" title=\"JavaScript\">JavaScript</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3b1dadw3096r30pgmpthseb03\"><a href=\"https://www.typescriptlang.org/\" title=\"TypeScript 语言\">TypeScript</a></li>\n</ul>\n<p><a id=\"components\"></a></p>\n<h2 id=\"take-a-tour-of-the-example-application\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"75hhqxdhse279zrl3k9oxl5oi\">浏览范例应用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#take-a-tour-of-the-example-application\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6ix19tpe28ec5348vmoqf7fd\">你可以用组件构建 Angular 应用。组件定义了 UI 中的职责范围，让你可以复用某些 UI 功能集。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"23xzddxu7vs86gx2s3qmwm9ay\">一个组件由三部分组成：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fiovp45e6v0zb8c9gqk3jdwa\">组件部分</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5cpwxaikwcm0ypacd7x5thp6r\">一个组件类</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7zwthnotd6od5n1i8r0bk3vkm\">处理数据和功能</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fap404wd1th6tgei399865iq\">一个 HTML 模板</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8plqo7kd6ns4qw2evk0ipil33\">确定用户界面</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"k3i4yyngb0qkrsyk27cmv3mu\">组件特定的样式</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3wlzda49u8lp43zu5xpe6xihl\">定义外观和感觉</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mmyf6mr3fghwqx6sqhgqkk2m\">本指南演示了如何使用下列组件构建应用：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c7vzzlnsersqq3lvejga81lr\">组件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>&lt;app-root&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fq1qy46d590smwc15jccj99j\">第一个加载的组件，也是其他组件的容器</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&lt;app-top-bar&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3t3dw0db49exnt9f1c2i0icyf\">商店名称和结账按钮</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&lt;app-product-list&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9hz36v5voxg18ifa2kfky6loo\">产品列表</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&lt;app-product-alerts&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c6s891442s72sneazkrvy526n\">包含应用程序警报的组件</td>\n</tr>\n</tbody>\n</table>\n<div class=\"lightbox\">\n<img alt=\"Online store with three components\" src=\"generated/images/guide/start/app-components.png\" width=\"324\" height=\"527\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6xcg029upob51ad6i4o4ixsp9\">有关组件的更多信息，请参见<a href=\"guide/architecture-components\" title=\"组件和模板简介\">组件简介</a>。</p>\n<p><a id=\"new-project\"></a></p>\n<h2 id=\"create-the-sample-project\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b9h7fygood3230bhgu6rmtjxl\">创建范例项目<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#create-the-sample-project\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7cyzqq4d1pxmky23vay0t7irh\">要创建范例项目，请<live-example name=\"getting-started-v0\" nodownload=\"\">在 StackBlitz 中生成一个预置的范例项目</live-example>。要保存你的工作，请执行以下操作：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"duh4npuujdyfo25r43jk7o5wi\">登录到 StackBlitz。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ardpukj2nqgmq27tjzdbjf08\">对你生成的项目进行分支。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zlaeb6bao0ucbquv3h6ld8fl\">定时保存。</li>\n</ol>\n<div class=\"lightbox\">\n<img alt=\"Fork the project\" src=\"generated/images/guide/start/fork-the-project.png\" width=\"200\" height=\"118\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7pf6if3kcumm78zcvvq0kyhz\">在 StackBlitz 中，右侧的预览窗格会显示范例应用的启动状态。此预览有两个区域：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4o4qphf3kqg1esfg84g8efhdn\">带有商店名称（<code>My Store</code>）和结账按钮的顶部栏</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3w2ltktauae3fqyfjf3cm467\">产品列表（<code>Products</code>）及其标题</li>\n</ul>\n<div class=\"lightbox\">\n<img alt=\"Starter online store application\" src=\"generated/images/guide/start/new-app-all.gif\" width=\"600\" height=\"219\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aw7tdk3w5b7nspp9b08idpg47\">左侧的项目区显示了构成本应用的源文件，包括基础结构和配置文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2pucux6zcevpjzxhbvixlfot\">当你生成本教程随附的 StackBlitz 范例应用时，StackBlitz 会为你创建启动程序文件和模拟数据。本教程中用到的文件位于 <code>src</code> 文件夹中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dnhvywk2q1eszbt03757uw1uz\">有关如何使用 StackBlitz 的更多信息，请参见 <a href=\"https://developer.stackblitz.com/docs/platform\">StackBlitz 的文档</a>。</p>\n<p><a id=\"product-list\"></a></p>\n<h2 id=\"create-the-product-list\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3iy8k9xqv780os2di9s7eq4ga\">创建产品列表<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#create-the-product-list\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2a1a28c1wirsi9f2acyaswp9h\">在本节中，你将修改应用以显示产品列表。你会用到来自 <code>products.ts</code> 文件的预定义产品数据，和一些来自 <code>product-list.component.ts</code> 文件的方法。本节将指导你完成编辑 HTML（也称为模板）的过程。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eaqfajdnhtao96wz2wwofu0ji\">在 <code>product-list</code> 文件夹中，打开模板文件 <code>product-list.component.html</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7r4qq6p4a2hn87le6v2c1hy1k\">在 <code>&lt;div&gt;</code> 上添加一个结构型指令 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>，如下所示。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.2.html\" region=\"ngfor\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wnamtlohg0wdiuxfi0h9wsa4\">使用 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>，会把这个 <code>&lt;div&gt;</code> 针对列表中的每个产品进行复写。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bcgveam2pvdri4quvk5wdggrl\">结构型指令会通过添加、删除和操作元素来调整或重塑 DOM 结构。有关结构型指令的更多信息，请参见<a href=\"guide/structural-directives\">结构型指令</a>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bt3l50evg1llwgrwiqmi8iy25\">在此 <code>&lt;div&gt;</code> 中，添加 <code>&lt;h3&gt;</code> 和 <code>{{ product.name }}</code>。<code>{{ product.name }}</code> 语句是 Angular 插值语法的范例。插值 <code>{{ }}</code> 可以让你把属性值渲染为文本。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.2.html\" region=\"interpolation\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n      {{ product.name }}\n  &lt;/h3&gt;\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6f6fntooozwdypap6rcy9vvlm\">预览窗格将会更新，以显示列表中每个商品的名称。</p>\n<div class=\"lightbox\">\n<img alt=\"Product names added to list\" src=\"generated/images/guide/start/template-syntax-product-names.png\" width=\"259\" height=\"271\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9lae9ug44l2e3c84ssqxs5958\">为了让每个商品名称都能链接到商品详情，请围绕 <code>{{ product.name }}</code> 添加一个 <code>&lt;a&gt;</code> 元素。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7an2sbhunqj6lhk38mam0780y\">使用 <code>[ ]</code> 语法将标题设置为此产品的名称，如下所示：</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.2.html\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a [title]=\"product.name + ' details'\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"26eryuity2t97wzatyx4gr290\">在预览窗格中，将鼠标悬停在产品名称上，可以查看所绑定的 name 属性值，该值是产品名加上单词 “details”。通过属性绑定 <code>[ ]</code> 可以在模板表达式中使用属性值。</p>\n<div class=\"lightbox\">\n<img alt=\"Product name anchor text is product name property\" src=\"generated/images/guide/start/template-syntax-product-anchor.png\" width=\"259\" height=\"271\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c3n4yqn1v884z5jz7voddid5i\">添加产品说明。在 <code>&lt;p&gt;</code> 元素上使用 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 指令，以便 Angular 只让当前产品有描述 <code>&lt;p&gt;</code>。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.3.html\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a [title]=\"product.name + ' details'\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n  &lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product.description\"&gt;\n    Description: {{ product.description }}\n  &lt;/p&gt;\n\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7b0sum1lbijqg9fo8buq43uay\">应用程序现在显示列表中每个产品的名称和描述。 请注意，最终产品没有描述段落。 Angular 不会创建 \n<code>&lt;p&gt;</code> 元素，因为产品的描述属性为空。</p>\n<div class=\"lightbox\">\n<img alt=\"Product descriptions added to list\" src=\"generated/images/guide/start/template-syntax-product-description.png\" width=\"259\" height=\"289\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6efxrv37g7to7sne5l6ufz436\">添加一个按钮，以便用户可以共享产品。将按钮的 <code>click</code> 事件绑定到 <code>product-list.component.ts</code> 中的 <code>share()</code> 方法。事件绑定要在此事件用一组圆括号 <code>( )</code> 括起来，就比如 <code>&lt;button&gt;</code> 元素上的 <code>(click)</code>。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.4.html\">\n&lt;h2&gt;Products&lt;/h2&gt;\n\n&lt;div *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let product of products\"&gt;\n\n  &lt;h3&gt;\n    &lt;a [title]=\"product.name + ' details'\"&gt;\n      {{ product.name }}\n    &lt;/a&gt;\n  &lt;/h3&gt;\n\n  &lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product.description\"&gt;\n    Description: {{ product.description }}\n  &lt;/p&gt;\n\n  &lt;button type=\"button\" (click)=\"share()\"&gt;\n    Share\n  &lt;/button&gt;\n\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6lptplqm7vp4e2itr6ncvkgc\">每个产品现在都有一个 “<strong>Share</strong>” 按钮。</p>\n<div class=\"lightbox\">\n<img alt=\"Share button added for each product\" src=\"generated/images/guide/start/template-syntax-product-share-button.png\" width=\"259\" height=\"376\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"auxqahd4c6ni8c8ii75i3b3qo\">单击 “<strong>Share</strong>” 按钮将触发一条通知，指出 “The product has been shared!”。</p>\n<div class=\"lightbox\">\n<img alt=\"Alert box indicating product has been shared\" src=\"generated/images/guide/start/template-syntax-product-share-alert.png\" width=\"330\" height=\"104\">\n</div>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96tr35z0ss28r4xw1l23c9298\">在编辑模板时，你已经了解了 Angular 模板的一些最常用的功能。更多信息，请参阅<a href=\"guide/architecture-components#template-syntax\" title=\"模板语法\">组件和模板简介</a>。</p>\n<p><a id=\"passing-data-in\"></a></p>\n<h2 id=\"pass-data-to-a-child-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7dw7zzuagcir1jks9oybqrdud\">将数据传递给子组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#pass-data-to-a-child-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4rajeri6dksdazuski5ukrt4\">目前，产品列表中显示了每个产品的名称和描述。<code>ProductListComponent</code> 还定义了一个 <code>products</code> 属性，包含从 <code>products.ts</code> 的 <code>products</code> 数组导入的各个产品的数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"an4b75b6l5zt4817psa78nzg4\">下一步是创建一个新的警报功能，该功能将使用\n<code>ProductListComponent</code>中的产品数据。 警报应检查产品的价格。如果发现价格大于 700 美元，则应显示“通知我”按钮。用户单击该按钮后，应该能够注册通知，通知他们产品何时打折。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8toek29oqoczvz5pgux9j8u8s\">本节将引导你创建一个子组件 <code>ProductAlertsComponent</code>，该子组件可以从其父组件 <code>ProductListComponent</code> 接收数据。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5kfu2r31f40zskoqzhpui4vr9\">点击当前终端上方的加号，新建一个终端，运行命令生成组件。</p>\n<div class=\"lightbox\">\n<img alt=\"StackBlitz command to generate component\" src=\"generated/images/guide/start/create-new-terminal.png\" width=\"620\" height=\"204\">\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a0ti8be2mqvbzfjxu3rpxznng\">在新终端中，通过运行以下命令生成一个名为 <code>product-alerts</code> 的新组件：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component product-alerts\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ait4a1kwqpjnnl3x8dhxx5ify\">该生成器会为组件的三个部分创建初始文件：</p>\n<ul>\n<li><code>product-alerts.component.ts</code></li>\n<li><code>product-alerts.component.html</code></li>\n<li><code>product-alerts.component.css</code></li>\n</ul>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cwmr1gabcdix2m3ogucjvkmxn\">打开 <code>product-alerts.component.ts</code>。<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 装饰器会指出它后面的类是组件。<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 还会提供有关组件的元数据，包括其选择器、模板和样式。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.ts\" region=\"as-generated\">\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css']\n})\nexport class ProductAlertsComponent {\n\n\n}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6jvb065ax7vvakkhdt8dht6f9\"><code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 中的主要功能如下：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cl67jlkkfdkkhq78ira4e943f\"><code>selector</code>（<code>app-product-alerts</code>）用于标识组件。按照惯例，Angular 组件选择器以前缀 <code>app-</code> 开头，后跟组件名称。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aa5eie714yowuf11jk1rqnhdn\">模板和样式文件名引用了组件的 HTML 和 CSS。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3zf48nixuikj7vvv6z5o8jnel\">这个 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 定义还导出了类 <code>ProductAlertsComponent</code>，该类会处理组件的功能。</p>\n</li>\n</ul>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3yijd230mqf9qao28y8zmz9m\">要将 <code>ProductAlertsComponent</code> 设置为接收产品数据，请首先从 <code>@angular/core</code> 中导入符号 <code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code>。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a> } from '@angular/core';\nimport { Product } from '../products';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2esgwvf1fam3h5x5s4af544h\">在 <code>ProductAlertsComponent</code> 类定义中，使用 <code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> 装饰器定义一个名为 <code>product</code> 的属性。<code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> 装饰器指出此属性值要从本组件的父组件 <code>ProductListComponent</code> 中传入。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.ts\" region=\"input-decorator\">\nexport class ProductAlertsComponent {\n\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() product: Product | undefined;\n\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8njqhnc9yzj1somtw52axixzu\">打开 <code>product-alerts.component.html</code> 并将占位符段落替换为 <strong>Notify Me</strong> 按钮，如果产品价格超过 700 美元，就会出现此按钮。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.html\" path=\"getting-started/src/app/product-alerts/product-alerts.component.1.html\">\n&lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product &amp;&amp; product.price &gt; 700\"&gt;\n  &lt;button type=\"button\"&gt;Notify Me&lt;/button&gt;\n&lt;/p&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b7rjf6vcytam11t7tb4654te\">生成器会自动把 <code>ProductAlertsComponent</code> 添加到 <code>AppModule</code> 中，以便它能用于本应用的其它组件中。</p>\n<code-example header=\"src/app/app.module.ts\" path=\"getting-started/src/app/app.module.ts\" region=\"declare-product-alerts\">\nimport { ProductAlertsComponent } from './product-alerts/product-alerts.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    ProductListComponent,\n    ProductAlertsComponent,\n  ],\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6a2chs6ji2st2uc9uichzsq22\">最后，要将 <code>ProductAlertsComponent</code> 显示为 <code>ProductListComponent</code> 的子级，请将 <code>&lt;app-product-alerts&gt;</code> 元素添加到 <code>product-list.component.html</code> 中。使用属性绑定将当前产品作为输入传给此组件。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.5.html\" region=\"app-product-alerts\">\n&lt;button type=\"button\" (click)=\"share()\"&gt;\n  Share\n&lt;/button&gt;\n\n&lt;app-product-alerts\n  [product]=\"product\"&gt;\n&lt;/app-product-alerts&gt;\n\n</code-example>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"yjdnm5zgnrc8warwm2nhqt2a\">这个新的产品通知组件将产品作为产品列表中的输入。使用该输入，它将根据产品的价格显示或隐藏 <strong>Notify Me</strong> 按钮。Phone XL 的价格超过了 700 美元，因此该产品上会显示 <strong>Notify Me</strong> 按钮。</p>\n<div class=\"lightbox\">\n<img alt=\"Product alert button added to products over $700\" src=\"generated/images/guide/start/product-alert-button.png\" width=\"259\" height=\"406\">\n</div>\n<p><a id=\"output\"></a></p>\n<h2 id=\"pass-data-to-a-parent-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"388olbu2t4tappo3eqy233dc9\">将数据传递到父组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#pass-data-to-a-parent-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"czodjznp7djbeh4yvv05ntojg\">为了使 <strong>Notify Me</strong> 按钮起作用，子组件需要通知并将数据传递给父组件。当用户单击 <strong>Notify Me</strong> 时 <code>ProductAlertsComponent</code> 需要引发一个事件，并且 <code>ProductListComponent</code> 需要响应此事件。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dyfi62xnpxjwpevx72ne3uytb\">在 <code>product-alerts.component.ts</code> 中，从 <code>@angular/core</code> 导入符号 <code><a href=\"api/core/Output\" class=\"code-anchor\">Output</a></code> 和 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code>。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a>, <a href=\"api/core/Output\" class=\"code-anchor\">Output</a>, <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a> } from '@angular/core';\nimport { Product } from '../products';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qurq08r7mzn9j0zqs9rrdsxu\">在组件类中，使用 <code>@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>()</code> 装饰器和 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>()</code> 的实例定义一个名为 <code>notify</code> 的属性。使用 <code>@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>()</code> 配置 <code>ProductAlertsComponent</code>，这会让 <code>ProductAlertsComponent</code> 在 <code>notify</code> 属性的值发生变化时引发一个事件。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.ts\" path=\"getting-started/src/app/product-alerts/product-alerts.component.ts\" region=\"input-output\">\nexport class ProductAlertsComponent {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() product: Product | undefined;\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() notify = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>();\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ajghezqnm442p5f13p8kuy6g\">在 <code>product-alerts.component.html</code> 中，修改 <strong>Notify Me</strong> 按钮，增加事件绑定，并调用 <code>notify.emit()</code> 方法。</p>\n<code-example header=\"src/app/product-alerts/product-alerts.component.html\" path=\"getting-started/src/app/product-alerts/product-alerts.component.html\">\n&lt;p *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product &amp;&amp; product.price &gt; 700\"&gt;\n  &lt;button type=\"button\" (click)=\"notify.emit()\"&gt;Notify Me&lt;/button&gt;\n&lt;/p&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bjo2uwksc5e49ic4esbj5ehfh\">定义用户单击按钮时发生的行为。当子组件引发事件时，父组件 <code>ProductListComponent</code>（而不是 <code>ProductAlertsComponent</code>）会采取行动。在 <code>product-list.component.ts</code> 中，定义一个 <code>onNotify()</code> 方法，类似于 <code>share()</code> 方法。</p>\n<code-example header=\"src/app/product-list/product-list.component.ts\" path=\"getting-started/src/app/product-list/product-list.component.ts\" region=\"on-notify\">\nexport class ProductListComponent {\n\n  products = [...products];\n\n  share() {\n    window.alert('The product has been shared!');\n  }\n\n  onNotify() {\n    window.alert('You will be notified when the product goes on sale');\n  }\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dc5rga0thpqsxhcmtqktayqh6\">更新 <code>ProductListComponent</code>，以从 <code>ProductAlertsComponent</code> 中接收数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"822hxnz65ccx4ab1nxj71ntkl\">在 <code>product-list.component.html</code> 中，将 <code>&lt;app-product-alerts&gt;</code> 绑定到产品列表组件的 <code>onNotify()</code> 方法。<code>&lt;app-product-alerts&gt;</code> 会显示 <strong>Notify Me</strong> 按钮的内容。</p>\n<code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.6.html\" region=\"on-notify\">\n&lt;button type=\"button\" (click)=\"share()\"&gt;\n  Share\n&lt;/button&gt;\n\n&lt;app-product-alerts\n  [product]=\"product\" \n  (notify)=\"onNotify()\"&gt;\n&lt;/app-product-alerts&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8yri8fnvy0k75k0sev8z81so0\">单击 <strong>Notify Me</strong> 按钮以触发一条通知，内容为：\"You will be notified when the product goes on sale\"。</p>\n<div class=\"lightbox\">\n<img alt=\"Product alert notification confirmation dialog\" src=\"generated/images/guide/start/product-alert-notification.png\" width=\"329\" height=\"104\">\n</div>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34j2rzs86cu7cqy2dqdpawx7l\">有关组件之间的通信的更多信息，请参见<a href=\"guide/component-interaction\" title=\"组件互动\">组件交互</a>。</p>\n<p><a id=\"whats-next\"></a></p>\n<h2 id=\"whats-next\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"407r2fj2mi5kvg7imj9zdcpe\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8bea1peulyjmt9me7lqcdvv0\">在本节中，你已经创建了一个应用，该应用会遍历数据，并让特性组件彼此通讯。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmvpa5c0tfeb2ljt5bde9hql6\">要继续探索 Angular 并开发此应用，请执行以下操作：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5j6xzggygp2dtf1bga8an8kg\">继续进行<a href=\"start/start-routing\" title=\"入门：应用内导航\">应用内导航</a>，以创建产品详情页。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3efx8z5tsn2tsksh6ssj6r7e4\">跳至<a href=\"start/start-deployment\" title=\"入门：部署\">部署</a>以转为本地开发，或将你的应用部署到 Firebase 或你自己的服务器上。</li>\n</ul>\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/developer-guide-overview\n - guide/docs-style-guide\n - guide/example-apps-list\n - guide/localizing-angular\n - guide/router-tutorial-toh\n - guide/setup-local\n - guide/understanding-angular-overview\n - guide/what-is-angular\n - quick-start\n - start/start-data\n - start/start-deployment\n - start/start-forms\n - start/start-routing\n - tutorial/tour-of-heroes\n-->\n<!-- links from this doc:\n - api/common/NgFor\n - api/common/NgIf\n - api/core/Component\n - api/core/EventEmitter\n - api/core/Input\n - api/core/NgModule\n - api/core/Output\n - guide/architecture-components\n - guide/architecture-components#template-syntax\n - guide/component-interaction\n - guide/setup-local\n - guide/structural-directives\n - start#create-the-product-list\n - start#create-the-sample-project\n - start#getting-started-with-angular\n - start#pass-data-to-a-child-component\n - start#pass-data-to-a-parent-component\n - start#prerequisites\n - start#take-a-tour-of-the-example-application\n - start#whats-next\n - start/start-deployment\n - start/start-routing\n - https://developer.mozilla.org/docs/Learn/HTML\n - https://developer.mozilla.org/docs/Web/JavaScript\n - https://developer.stackblitz.com/docs/platform\n - https://stackblitz.com\n - https://www.typescriptlang.org/\n-->"}