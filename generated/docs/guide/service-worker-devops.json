{"id":"guide/service-worker-devops","title":"生產環境下的 Service Worker","contents":"<div class=\"content\">\n  <h1 id=\"service-worker-in-production\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bsw3a3w4jwe2a12gg6enp7uxj\">生產環境下的 Service Worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-in-production\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2nut8sqkdh8ijfnscfqwssc4n\">本頁講的是如何使用 Angular Service Worker 發布和支援生產環境下的應用。它解釋了 Angular Service Worker 如何滿足大規模生產環境的需求、Service Worker 在多種條件下有哪些行為以及有哪些可用的資源和故障保護機制。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xq8keqzpcinu80uje7xu3rbf\">對下列知識有基本的瞭解：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3chpa91gkd8kngrnffrmr754r\"><a href=\"guide/service-worker-communications\">與 Service Worker 通訊</a>.</li>\n</ul>\n<h2 id=\"service-worker-and-caching-of-application-resources\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60bp6ioemxve2wjs5d5a13us9\">Service Worker 與應用資源的快取<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-and-caching-of-application-resources\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cxf5dcd2pgbixx6wzngoe5tn1\">你可以把 Angular Service Worker 想象成一個轉發式快取或裝在最終使用者瀏覽器中的 CDN（內容分發網路）邊緣。Service Worker 的工作是從本地快取中回應 Angular 應用對資源或資料的請求，而不用等待網路。和所有快取一樣，它有一些規則來決定內容該如何過期或更新。</p>\n<p><a id=\"versions\"></a></p>\n<h3 id=\"application-versions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5bwh5dyy4nlq80szbp7ebk8w6\">應用的版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#application-versions\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"952rushaq124nbrmoqim1alox\">在 Angular Service Worker 的語境下，『版本』是指用來表示 Angular 應用的某一次建立成果的一組資源。當應用的一個新的建立發布時，Service Worker 就把它看做此應用的一個新版本。就算只修改了一個檔案，也同樣如此。在任何一個給定的時間，Service Worker 可能會在它的快取中擁有此應用的多個版本，這幾個版本也都能用於提供服務。要了解更多，參閱 <a href=\"guide/service-worker-devops#tabs\">App 頁籤</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eji39uaj2ce87zeib1eesww5s\">要保持應用的整體性，Angular Service Worker 會用所有的檔案共同組成一個版本。組成版本的這些檔案通常包括 HTML、JS 和 CSS 檔案。把這些檔案分成一組是至關重要的，因為它們會互相引用，並且依賴於一些特定內容。比如，<code>index.html</code> 檔案可能有個引用 <code>bundle.js</code> 的 <code>&lt;script&gt;</code> 標籤，它可能會試圖從這個指令碼中呼叫一個 <code>startApp()</code> 函式。任何時候，只要這個版本的 <code>index.html</code> 被提供了，與它對應的 <code>bundle.js</code> 也必須同時提供。這種情況下，使用呼叫了 <code>startApp()</code> 的老的 <code>index.html</code> 並同時使用定義了 <code>runApp()</code> 的新 bundle 就是無效的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekhitpa1fzjbzdytid7gb98om\">延遲載入時，檔案完整性尤為重要。 一個 JS 捆綁包可能引用許多延遲載入區塊，而延遲載入區塊的檔案名對應應用程式的特定建立是唯一的。 如果正在執行版本為 \n<code>X</code> 的應用程式嘗試載入一個延遲載入區塊，但伺服器已更新到版本 \n<code>X + 1</code>，延遲載入操作將失敗。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1x5qfpzcbbo2wkbjj87kit9jc\">本應用的版本識別符號由其所有資源的內容決定，如果它們中的任何一個發生了變化，則版本識別符號也隨之改變。實際上，版本是由 <code>ngsw.json</code> 檔案的內容決定的，包含了所有已知內容的雜湊值。如果任何一個被快取的檔案發生了變化，則該檔案的雜湊也將在 <code>ngsw.json</code> 中隨之變化，從而導致 Angular Service Worker 將這個活動檔案的集合視為一個新版本。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z22e4ahjymdkl9jpmp38mc0k\">此建立過程會使用來自 <code>ngsw-config.json</code> 的訊息建立清單檔案（<code>ngsw.json</code>）。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bls3y9r1imwjqjug9hoh2frf4\">藉助 Angular Service Worker 的這種版本控制行為，應用伺服器就可以確保這個 Angular 應用中的這組檔案始終保持一致。</p>\n<h4 id=\"update-checks\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amysa1zxmz0ft7ifyf5l96ut3\">更新檢測<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#update-checks\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29lpwacx0axhk1sdw93aznodk\">每當使用者開啟或重新整理應用程式時，Angular Service Worker 都會透過檢視清單（manifest）檔案 『ngsw.json』 的更新來檢查該應用程式的更新。如果它找到了更新，就會自動下載並快取這個版本，並在下次載入應用程式時提供。</p>\n<h3 id=\"resource-integrity\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"37obfigzne4rvau7emo7yv3um\">資源整體性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#resource-integrity\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"54g5h7y5d6khm86qi1cujiyps\">長週期快取的潛在副作用之一就是可能無意中快取了無效的資源。在普通的 HTTP 快取中，硬重新整理或快取過期限制了快取這種無效檔案導致的負面影響。而 Service Worker 會忽略這樣的約束，事實上會對整個應用程式進行長期快取。因此，讓 Service Worker 獲得正確的內容就顯得至關重要，所以它會保持這些資源的雜湊值，以維護其完整性。</p>\n<h4 id=\"hashed-content\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62mx63wzetwa3e760dpyby3ng\">雜湊內容<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#hashed-content\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rq1q0pr75oavs6yi2grm1lj6\">為了確保資源的整體性，Angular Service Worker 會驗證所有帶雜湊的資源的雜湊值。通常，對於 <a href=\"cli\">Angular CLI</a> 應用程式，使用者的 <code>src/ngsw-config.json</code> 設定檔案中會涵蓋 <code>dist</code> 目錄下的所有內容。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pfui98zyd8pvmpseuodfuhdi\">如果某個特定的檔案未能透過驗證，Angular Service Worker 就會嘗試用 『cache-busting』 URL 為引數重新獲取內容，以消除瀏覽器或中間快取的影響。如果該內容也未能透過驗證，則 Service Worker 會認為該應用的整個版本都無效，並停止用它提供服務。如有必要，Service Worker 會進入安全模式，這些請求將退化為直接訪問網路。如果服務無效、損壞或內容過期的風險很高，則會選擇不使用快取。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ngjch7l61brixh4x67t8vr9q\">導致雜湊值不對應的原因有很多：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1el3650tjyallh2pv4iylg8u\">在源伺服器和最終使用者之間快取圖層可能會提供陳舊的內容。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"788ey3fnj9f5youijeqcffk2u\">非原子化的部署可能會導致 Angular Service Worker 看到部分更新後的內容。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1h5zczwtx6f1pwbmy3g6878j0\">建立過程中的錯誤可能會導致更新了資源，卻沒有更新 <code>ngsw.json</code>。反之，也可能發生沒有更新資源，卻更新了 <code>ngsw.json</code> 的情況。</li>\n</ul>\n<h4 id=\"unhashed-content\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1culj5eol0vjvud0cudv1zdh9\">不帶雜湊的內容<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#unhashed-content\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eivxj3ykt5hdpwhf3n2x1n56l\"><code>ngsw.json</code> 清單中唯一帶雜湊值的資源就是建立清單時 <code>dist</code> 目錄中的資源。而其它資源，特別是從 CDN 載入的資源，其內容在建立時是未知的，或者會比應用程式部署得更頻繁。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rb4c6badvcc8swk2sxlluynw\">如果 Angular Service Worker 沒有雜湊可以驗證給定的資源，它仍然會快取它的內容，但會使用 『重新驗證時失效』 的策略來承認 HTTP 快取頭。也就是說，即使被快取資源的 HTTP 快取頭指出該資源已不再有效，Angular Service Worker 仍然會繼續提供內容。同時它會在後台重新整理資源。這樣，那些被破壞的非雜湊資源留在快取中的時間就不會超出為它設定的生命週期。</p>\n<p><a id=\"tabs\"></a></p>\n<h3 id=\"application-tabs\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eb2lzfyktm15fy79whjs7htz2\">App 頁籤<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#application-tabs\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"35vg8boipatd1om463vxze7bt\">如果應用程式的資源版本突然發生了變化或沒有給出警告，就可能會有問題。關於這些問題的描述，請參閱前面的 <a href=\"guide/service-worker-devops#versions\">版本</a> 部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bfoxra5xa9e5ecx6nx535avul\">Angular Service Worker 會保證：正在執行的應用程式會繼續執行和當前應用相同的版本。而如果在新的 Web 瀏覽器頁籤中開啟了該應用的另一個實例，則會提供該應用的最新版本。因此，這個新標籤可以和原始標籤同時執行不同版本的應用。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3sjwfmn9asby5dfgnm0hzrmgt\"><strong>重要</strong>：<br>\n這種擔保比普通的 Web 部署模型提供的擔保還要<strong>更強一點</strong>。\n如果沒有 Service Worker，則不能保證稍後在這個延遲載入的程式碼\n和其初始程式碼的版本是一樣的。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60bi1xqzndwtiylhjqgwlzzkh\">Angular Service Worker 可能會在錯誤條件下更改正在執行的應用程式的版本，例如：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44u2zx34ix6ho16qmzwl60cqi\">由於雜湊失敗，當前版本變得無效</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"emyre21hot5f7cg4g2w5cncy\">不相關的錯誤導致 Service Worker 進入安全模式並暫時停用它</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24pj7doswjjwns7r5xnhou9dn\">當沒有標籤頁使用它們時，Angular Service Worker 會清理應用版本。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ap7gxcxdx3jcnvq05xo2e2f35\">另一些可能導致 Angular Service Worker 在執行期間改變版本的因素是一些正常事件：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xqi7ywfwbjdasvwx0ccyhwc3\">頁面被重新載入/重新整理。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bosog1jd8wp8e8ob635eqmus3\">該頁面透過 <code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> 服務請求立即啟用這個更新。</li>\n</ul>\n<h3 id=\"service-worker-updates\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6sx4vyva0fc0p8re7jk9uad10\">Service Worker 更新<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-updates\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jfjkrf61e3dvv83q5x3ce1b\">Angular Service Worker 是一個執行在 Web 瀏覽器中的小腳本。有時，這個 Service Worker 也可能會需要更新，以修復錯誤和增強屬性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edloa4899bhpdja1pairbefw3\">首次開啟應用時或在一段非活動時間之後再訪問應用程式時，就會下載 Angular Service Worker。如果 Service Worker 發生了變化，就會在後台進行更新。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45qcmbeys80prtogd0tmzip1b\">Angular Service Worker 的大部分更新對應用程式來說都是透明的。舊快取仍然有效，其內容仍然能正常使用。但是，在 Angular Service Worker 中可能偶爾會有錯誤修復或新功能，需要讓舊的快取失效。這時，應用程式就從會網路上透明地進行重新整理。</p>\n<h3 id=\"bypassing-the-service-worker\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dlscbyq8xt6wiw0bvkid6bdmb\">繞過 Service Worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#bypassing-the-service-worker\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lfrndazg0egvvzjv71vo2lls\">某些情況下，你可能想要完全繞過 Service Worker，轉而讓瀏覽器處理請求。比如當你要用到某些 Service Worker 尚不支援的屬性時（比如<a href=\"https://github.com/w3c/ServiceWorker/issues/1141\">報告檔案上傳的進度</a>）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6thahpmuztjjgqszqz5kcbozs\">要想繞過 Service Worker，你可以設定一個名叫 <code>ngsw-bypass</code> 的請求頭或查詢引數。這個請求頭或查詢引數的值會被忽略，可以把它設為空字串或略去。</p>\n<h3 id=\"service-worker-requests-when-the-server-cant-be-reached\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f2zpu2tasz7l8u2arh9btwxst\">無法訪問伺服器時的 Service Worker 請求<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-requests-when-the-server-cant-be-reached\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22qcm3mjmov3vy3ikcbi2nbk9\">除非<a href=\"guide/service-worker-devops#bypassing-the-service-worker\">顯式繞過 Service Worker</a>，否則 Service Worker 會處理所有請求。根據快取的狀態和設定，Service Worker 可以回傳快取的回應或將請求傳送到伺服器。Service Worker 僅快取對非修改型請求的回應，例如 <code>GET</code> 和 <code>HEAD</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekqh0vjzybvb4z7b2orpq5tw9\">如果 Service Worker 收到來自伺服器的錯誤或沒有收到回應，它會回傳一個錯誤狀態，以表明呼叫的結果。例如，如果 Service Worker 沒有收到回應，它會建立並回傳一個 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504\">504 Gateway Timeout</a> 狀態。此範例中的 <code>504</code> 狀態可能是因為伺服器離線或用戶端已斷開連線而回傳的。</p>\n<h2 id=\"debugging-the-angular-service-worker\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6u0i3eftdh5oi2q2ijmw3e42q\">除錯 Angular Service Worker<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#debugging-the-angular-service-worker\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckpc2ojdshiscgt81nf017ivr\">偶爾，可能會需要檢查執行中的 Angular Service Worker，以調查問題或確保它在按設計執行。瀏覽器提供了用於除錯 Service Worker 的內建工具，而且 Angular Service Worker 本身也包含了一些有用的除錯功能。</p>\n<h3 id=\"locating-and-analyzing-debugging-information\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b988j1j9ijm47m2mi2amln092\">定位並分析除錯訊息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#locating-and-analyzing-debugging-information\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekvfdwysq6429q1jxlw6ie5zf\">Angular Service Worker 會在虛擬目錄 <code>ngsw/</code> 下暴露出除錯訊息。目前，它暴露的唯一的 URL 是 <code>ngsw/state</code>。下面是這個除錯頁面中的一段範例內容：</p>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nNGSW Debug Info:\n\nDriver version: 13.3.7\nDriver state: NORMAL ((nominal))\nLatest manifest hash: eea7f5f464f90789b621170af5a569d6be077e5c\nLast update check: never\n\n=== Version eea7f5f464f90789b621170af5a569d6be077e5c ===\n\nClients: 7b79a015-69af-4d3d-9ae6-95ba90c79486, 5bc08295-aaf2-42f3-a4cc-9e4ef9100f65\n\n=== Idle Task Queue ===\nLast update tick: 1s496u\nLast update run: never\nTask queue:\n * init post-load (update, cleanup)\n\nDebug log:\n\n</code-example>\n<h4 id=\"driver-state\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bomzqghnmiehvwbxvqttt7oew\">驅動程式的狀態<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#driver-state\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9yzpxr71wv90tigp1uxbqdn1z\">第一行表示驅動程式的狀態：</p>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nDriver state: NORMAL ((nominal))\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"354s9jzrr6zr9t9m9tni4w4is\"><code>NORMAL</code> 表示這個 Service Worker 正在正常執行，並且沒有處於降級執行的狀態。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9l2u9xclnaj8zhfl0ntbbpep\">有兩種可能的降級狀態：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29b4zobe0ssxocv4xdr7c5fra\">降級狀態</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>EXISTING_CLIENTS_ONLY</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5fb9izaboy7mf8gx80lo49626\">服務工作執行緒沒有最新已知版本的應用程式的清潔副本。舊的快取版本可以安全使用，因此現有標籤繼續從快取中執行，但應用程式的新載入將從網路提供。當檢測到並安裝應用程式的新版本時，服務工作執行緒將嘗試從此狀態恢復。這發生在新的 \n<code>ngsw.json</code> 可用時。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>SAFE_MODE</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8cix4yskjcuex0o8496i2nh94\">服務工作執行緒無法保證使用快取資料的安全性。發生了意外錯誤，或所有快取版本都無效。所有流量將從網路提供，儘可能少地執行服務工作執行緒程式碼。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqgsnca502c193rd8jevbyz37\">在這兩種情況下，後面的括號註解中都會提供導致 Service Worker 進入降級狀態的錯誤訊息。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c1jm7os82vsupp37zzmp8zwp\">這兩種狀態都是暫時的；它們僅在 <a href=\"https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope\">ServiceWorker 實例</a> 的生命週期內儲存。瀏覽器有時會終止空閒的 Service Worker，以節省記憶體和處理能力，並建立一個新的 Service Worker 實例來回應網路事件。無論先前實例的狀態如何，新實例均以 <code>NORMAL</code> 模式啟動。</p>\n<h4 id=\"latest-manifest-hash\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a5hghq674h9y5e7ohjd20hfbk\">最新清單的雜湊<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#latest-manifest-hash\"><i class=\"material-icons\">link</i></a></h4>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nLatest manifest hash: eea7f5f464f90789b621170af5a569d6be077e5c\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81c64p9oyyholr6uj0p7n4mpr\">這是 Service Worker 所知道的應用最新版本的 SHA1 雜湊值。</p>\n<h4 id=\"last-update-check\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7f04u1t9zipd9uxpg0ffm6te0\">最後一次更新檢查<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#last-update-check\"><i class=\"material-icons\">link</i></a></h4>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nLast update check: never\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9t9t8q5g5kerc7w6pmcf81btr\">這表示 Service Worker 最後一次檢查應用程式的新版本或更新的時間。『never』 表示 Service Worker 從未檢查過更新。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ay3br0epdnf9ohvaz5edxpb7n\">在這個除錯檔案範例中，這次更新檢查目前是已排期的，如下一節所述。</p>\n<h4 id=\"version\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34ck2qsr4jsfv24ims2mht0vy\">版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#version\"><i class=\"material-icons\">link</i></a></h4>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\n=== Version eea7f5f464f90789b621170af5a569d6be077e5c ===\n\nClients: 7b79a015-69af-4d3d-9ae6-95ba90c79486, 5bc08295-aaf2-42f3-a4cc-9e4ef9100f65\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aphwoh8vnyio1yhwi5e3uqaxa\">在這個例子中，Service Worker 擁有一個版本的應用程式快取並用它服務於兩個不同的頁籤。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9d5a2y15vaebkp5y8vzi31dlt\"><strong>注意</strong>：<br>\n這個版本雜湊值是上面列出的『最新清單的雜湊』。\n它的兩個客戶執行的都是最新版本。每個客戶都用瀏覽器中 <code>Clients</code> API 的 ID 列了出來。</p>\n</div>\n<h4 id=\"idle-task-queue\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"71baiwjkvpc4nrgobmsyrhrcx\">空閒任務佇列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#idle-task-queue\"><i class=\"material-icons\">link</i></a></h4>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\n=== Idle Task Queue ===\nLast update tick: 1s496u\nLast update run: never\nTask queue:\n * init post-load (update, cleanup)\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"rxwd7o3r9p6dhm0u1cb1zm9j\">空閒任務佇列是 Service Worker 中所有在後台發生的未決任務的佇列。如果這個佇列中存在任何任務，則列出它們的描述。在這個例子中，Service Worker 安排的任務是一個用於更新檢查和清除過期快取的後期初始化操作。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b69sp4apt3ay41fqw1bogbdv2\">最後的 tick/run 計數器給出了與特定事件發生有關的空閒佇列中的時間。『Last update run』 計數器顯示的是上次執行空閒任務的時間。『Last update tick』 顯示的是自上次事件以來可能要處理的佇列的時間。</p>\n<h4 id=\"debug-log\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c64x6ha0w0v4d8hpdaq2k3sjc\">除錯日誌<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#debug-log\"><i class=\"material-icons\">link</i></a></h4>\n<code-example format=\"output\" hidecopy=\"\" language=\"shell\">\n\nDebug log:\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpz0h3xxnn2s8scsfpm601ck1\">Service Worker 中發生的錯誤會記錄在此。</p>\n<h3 id=\"developer-tools\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9wabhoy9semoioyr50kpqp69\">開發者工具<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#developer-tools\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9du9akc46lt4t4jrgyax2k7ku\">Chrome 等瀏覽器提供了能與 Service Worker 互動的開發者工具。這些工具在使用得當時非常強大，但也要牢記一些事情。</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1sbyalg5qg3ggtg38tv1lga4x\">使用開發人員工具時，Service Worker 將繼續在後台執行，並且不會重新啟動。這可能會導致開著 Dev Tools 時的行為與使用者實際遇到的行為不一樣。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43wo0e2110957p8x9qp1jh0v9\">如果你檢視快取儲存器的檢視器，快取就會經常過期。右鍵單擊快取儲存器的標題並重新整理快取。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"csdsdzqtn3gsu3svd4ewhiye\">在 Service Worker 頁停止並重新啟動這個 Service Worker 將會觸發一次更新檢查。</p>\n</li>\n</ul>\n<h2 id=\"service-worker-safety\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f2wcvq0zgf6gnorhl2xjppiqo\">Service Worker 的安全性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#service-worker-safety\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3c5nixhjx6bt2tntujmzb26t7\">錯誤或損壞的設定可能會導致 Angular Service Worker 以不可預知的方式工作。如果出現了這種情況，管理員需要快速停用 Service Worker，Angular Service Worker 也包含多種故障保護機制。</p>\n<h3 id=\"fail-safe\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9e3cv7qzw4kfkak3n0fd0n7dt\">故障保護機制<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#fail-safe\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2jtrkva4c05fnmfyexcy7cdkh\">要停用 Service Worker，請刪除或重新命名 <code>ngsw.json</code> 檔案。當 Service Worker 對 <code>ngsw.json</code> 的請求回傳 <code>404</code> 時，Service Worker 就會刪除它的所有快取並登出自己，本質上就是自毀。</p>\n<h3 id=\"safety-worker\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hn87j75ffkjo5kwzpu6pxnym\">安全工作者<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#safety-worker\"><i class=\"material-icons\">link</i></a></h3>\n<!-- vale Angular.Google_Acronyms = NO -->\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31r75x479qx62mov2qeviuw7y\"><code>@angular/service-worker</code> NPM 套件中還包含一個小腳本 <code>safety-worker.js</code>。當載入它時，就會把它從瀏覽器中登出，並移除此 Service Worker 的快取。這個指令碼可以作為終極武器來擺脫那些已經安裝在用戶端頁面上的不想要的 Service Worker。</p>\n<!-- vale Angular.Google_Acronyms = YES -->\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ogaqihw6kenqgxopimp06ks0\"><strong>重要</strong>：<br>\n你不能直接註冊這個 Safety Worker，因為具有已快取狀態的舊用戶端可能無法看到一個新的、用來安裝 另一個 worker 指令碼的 <code>index.html</code>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9tu5dcdyw425bxnqhwlsqzv76\">你必須在想要登出的 Service Worker 指令碼的 URL 中提供 <code>safety-worker.js</code> 的內容，\n而且必須持續這樣做，直到確定所有使用者都已成功登出了原有的 Worker。\n對大多數網站而言，這意味著你應該永遠為舊的 Service Worker URL 提供 這個 Safety Worker。\n這個指令碼可以用來停用 <code>@angular/service-worker</code>（並移除相應的快取）以及任何其它曾在你的站點上提供過的 Service Worker。</p>\n<h3 id=\"changing-your-applications-location\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3z4xrnvkw00kzjimjbv8nwy7w\">更改應用的位置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#changing-your-applications-location\"><i class=\"material-icons\">link</i></a></h3>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5fr6nob87wir1pvupsx6a5s0h\"><strong>重要</strong>：<br>\nService Worker 無法在重導向後工作。你可能已經遇到過這種錯誤：<code>The script resource is behind a redirect, which is disallowed</code>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ucc7qbcpk4uf4alxzt6y2ga1\">如果你不得不更改應用的位置，就可能會出現問題。如果你設定了從舊位置（比如 <code>example.com</code>）到新位置（比如 <code>www.example.com</code>）的重導向，則 Service Worker 將停止工作。同樣，對於完全從 Service Worker 載入該網站的使用者，甚至都不會觸發重導向。老的 Worker（註冊在 <code>example.com</code>）會嘗試更新並將請求傳送到原來的位置 <code>example.com</code>，該位置重導向到新位置 <code>www.example.com</code> 就會導致錯誤 <code>The script resource is behind a redirect, which is disallowed</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"98jg0ucr52q4v172lr6m1j9ry\">為了解決這個問題，你可能需要用上述技巧（<a href=\"guide/service-worker-devops#fail-safe\">故障安全</a>或<a href=\"guide/service-worker-devops#safety-worker\">Safety Worker</a>）之一移除老的 Worker。</p>\n<h2 id=\"more-on-angular-service-workers\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9jl51v338pdg88lkv1cl8f1i\">關於 Angular Service Worker 的更多訊息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-devops#more-on-angular-service-workers\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oolgylns9kaynftarwog49tq\">你可能還對下列內容感興趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ew4ab2vokoabifajmxtyb01m1\"><a href=\"guide/service-worker-config\">Service Worker 設定</a>。</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Wed Sep 06 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/service-worker-config\n - guide/service-worker-intro\n - guide/service-worker-notifications\n-->\n<!-- links from this doc:\n - api/service-worker/SwUpdate\n - cli\n - guide/service-worker-communications\n - guide/service-worker-config\n - guide/service-worker-devops#application-tabs\n - guide/service-worker-devops#application-versions\n - guide/service-worker-devops#bypassing-the-service-worker\n - guide/service-worker-devops#changing-your-applications-location\n - guide/service-worker-devops#debug-log\n - guide/service-worker-devops#debugging-the-angular-service-worker\n - guide/service-worker-devops#developer-tools\n - guide/service-worker-devops#driver-state\n - guide/service-worker-devops#fail-safe\n - guide/service-worker-devops#hashed-content\n - guide/service-worker-devops#idle-task-queue\n - guide/service-worker-devops#last-update-check\n - guide/service-worker-devops#latest-manifest-hash\n - guide/service-worker-devops#locating-and-analyzing-debugging-information\n - guide/service-worker-devops#more-on-angular-service-workers\n - guide/service-worker-devops#prerequisites\n - guide/service-worker-devops#resource-integrity\n - guide/service-worker-devops#safety-worker\n - guide/service-worker-devops#service-worker-and-caching-of-application-resources\n - guide/service-worker-devops#service-worker-in-production\n - guide/service-worker-devops#service-worker-requests-when-the-server-cant-be-reached\n - guide/service-worker-devops#service-worker-safety\n - guide/service-worker-devops#service-worker-updates\n - guide/service-worker-devops#tabs\n - guide/service-worker-devops#unhashed-content\n - guide/service-worker-devops#update-checks\n - guide/service-worker-devops#version\n - guide/service-worker-devops#versions\n - https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope\n - https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504\n - https://github.com/w3c/ServiceWorker/issues/1141\n-->"}