{"id":"guide/cheatsheet","title":"速查表","contents":"<div class=\"content\">\n  <div class=\"center-layout-wide\">\n<h1 class=\"no-toc\" id=\"cheat-sheet\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3q9xg5162yzq576ij8zd0qh61\">速查表<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/cheatsheet#cheat-sheet\"><i class=\"material-icons\">link</i></a></h1>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6p29plvvbfir7eo01lmju80ab\">引導</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> import { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic'; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8af32l32h1f1rp6vcig19pkj\">從\n<code>@angular/platform-browser-dynamic</code>中匯入\n<code><a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule); </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cs52w4c6v3xp9z2f9glxb0fhf\">從指定的\n<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>中使用根元件引導應用程式。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\">NgModules</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> import { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core'; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6qxz5n06nsb48gmemm2ns32a\">從\n<code>@angular/core</code>匯入\n<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({ \n&nbsp; declarations: …, \n&nbsp; imports: …, \n&nbsp; exports: …, \n&nbsp; providers: …, \n&nbsp; bootstrap: … \n}) \nclass MyModule {} </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6mnff4io92mzlq1l8j7tzp7xb\">定義一個包含元件、指令、通道和提供者的模組。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> declarations: [ \n&nbsp; MyRedComponent, \n&nbsp; MyBlueComponent, \n&nbsp; MyDatePipe \n] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ryg35mx9gjbhkfgdedx7k3fp\">屬於此模組的元件、指令和通道的清單。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> imports: [ \n&nbsp; <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, \n&nbsp; SomeOtherModule \n] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83ehjt4tyiymm7x4do2you2vf\">要匯入到此模組的模組清單。匯入模組中的所有內容對此模組的\n<code>declarations</code>可見。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> exports: [ \n&nbsp; MyRedComponent, \n&nbsp; MyDatePipe \n] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2i2yyp7mugzaqvtpxxyrs33c7\">對匯入此模組的模組可見的元件、指令和通道的清單。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> providers: [ \n&nbsp; MyService, \n&nbsp; { provide: … } \n] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9m10cg840ckfe2rp6otunfx4\">對此模組內容及匯入此模組的模組可見的依賴注入提供者清單。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> bootstrap: [MyAppComponent] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44xv5um0unbdwukahkmnx8gad\">在引導此模組時要引導的元件清單。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5w5kqvgmi0o4l4z6rjt7db87s\">範本語法</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;input [value]=\"firstName\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24jd9krxo2nalnessot9qyb0q\">將屬性\n<code>value</code>繫結到表示式\n<code>firstName</code>的結果。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [attr.role]=\"myAriaRole\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1poyb2ls4nu5vcp8683w70d8z\">將屬性\n<code>role</code>繫結到表示式\n<code>myAriaRole</code>的結果。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [class.extra-sparkle]=\"isDelightful\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5uhv95ya40bj0tib48uwllj2o\">將元素上CSS類別\n<code>extra-sparkle</code>的存在與表示式\n<code>isDelightful</code>的真假繫結。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [style.width.px]=\"mySize\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epo1b9wf5zh2ienusyvwepz3u\">將樣式屬性\n<code>width</code>繫結到表示式\n<code>mySize</code>的結果，單位為畫素。單位是可選的。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;button (click)=\"readRainbow($event)\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3jqk65rul7w35hgloiyfksok\">當單擊此按鈕元素（或其子元素）時調用方法\n<code>readRainbow</code>並傳入事件物件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div title=\"Hello {{ponyName}}\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6d784t8e62ghhfwllfk5z3b31\">將屬性繫結到內嵌字串，例如，\"Hello Seabiscuit\"。等效於：\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n  &lt;div [title]=\"'Hello ' + ponyName\"&gt; \n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;p&gt; \n&nbsp; Hello {{ponyName}} \n&lt;/p&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6q86xheakoie0vva7rdxxe8d0\">將文字內容繫結到內嵌字串，例如，\"Hello Seabiscuit\"。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;my-cmp [(title)]=\"name\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"av5hwyzob17p6xplxyr759k6o\">設定雙向資料繫結。等效於：\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n  &lt;my-cmp [title]=\"name\" (titleChange)=\"name=$event\"&gt; \n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;video #movieplayer …&gt;&lt;/video&gt; \n&lt;button (click)=\"movieplayer.play()\"&gt; \n&nbsp; Play \n&lt;/button&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"kdegutdk4b4qgwsmmc3wtho2\">建立一個名為\n<code>movieplayer</code>的區域性變數，該變數可在當前範本中的資料繫結和事件繫結表示式中訪問\n<code>video</code>元素實例。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;p *myUnless=\"myExpression\"&gt; \n&nbsp; … \n&lt;/p&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a5oz7hhzatzapw7v7tg5yzo3f\">星號（\n<code>*</code>）字元將當前元素轉換為嵌入式範本。等效於：\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n  &lt;ng-template [myUnless]=\"myExpression\"&gt; &nbsp; &lt;p&gt; &nbsp;&nbsp;&nbsp; … &nbsp; &lt;/p&gt; &lt;/ng-template&gt; \n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;p&gt; \n&nbsp; Card No.: {{cardNumber | myCardNumberFormatter}} \n&lt;/p&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"528za5x58ebs8bh37lj98bvdf\">使用名為\n<code>myCardNumberFormatter</code>的通道轉換表示式\n<code>cardNumber</code>的當前值。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;p&gt; \n&nbsp; Employer: {{employer?.companyName}} \n&lt;/p&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dftpzwoyiktds5lojjodfatrr\">安全導向運算符（\n<code>?</code>）表示\n<code>employer</code>欄位是可選的，如果為\n<code>undefined</code>，則應忽略表示式的其餘部分。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;svg:rect x=\"0\" \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y=\"0\" \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; width=\"100\" \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; height=\"100\"/&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7qkqqsobj4vf3q918qiv56qzw\">SVG 範本片段需要在其根元素上新增 \n<code>svg:</code> 字首，以區分 SVG 元素和 HTML 元件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;svg&gt; \n&nbsp; &lt;rect x=\"0\" \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y=\"0\" \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; width=\"100\" \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; height=\"100\"/&gt; \n&lt;/svg&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d9d1qu9f7lz2nynbt37jc5dcq\">檢測到一個 \n<code>&lt;svg&gt;</code> 根元素會自動識別為 SVG 元素，無需字首。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"caiz9ki6ffyzkmf5op1f69ql7\">內建指令</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> import { <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> } from '@angular/common'; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gzu2mcp7jkmd27bgc683elmr\">從 \n<code>@angular/common</code> 中匯入 \n<code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;section *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"showSection\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ju1xzflyuxxu876cmc5u7gwv\">根據 \n<code>showSection</code> 表示式移除或重新建立 DOM 樹的一部分。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let item of list\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bryhepezgk400mg4ykkvvchll\">將 \n<code>li</code> 元素及其內容轉換為範本，並使用它為清單中的每個專案實例化一個檢視。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [<a href=\"api/common/NgSwitch\" class=\"code-anchor\">ngSwitch</a>]=\"conditionExpression\"&gt;\n&nbsp; &lt;ng-template [<a href=\"api/common/NgSwitchCase\" class=\"code-anchor\">ngSwitchCase</a>]=\"case1Exp\"&gt; \n&nbsp;&nbsp;&nbsp; … \n&nbsp; &lt;/ng-template&gt;\n&nbsp; &lt;ng-template <a href=\"api/common/NgSwitchCase\" class=\"code-anchor\">ngSwitchCase</a>=\"case2LiteralString\"&gt; \n&nbsp;&nbsp;&nbsp; … \n&nbsp; &lt;/ng-template&gt;\n&nbsp; &lt;ng-template <a href=\"api/common/NgSwitchDefault\" class=\"code-anchor\">ngSwitchDefault</a>&gt; \n&nbsp;&nbsp;&nbsp; … \n&nbsp; &lt;/ng-template&gt; \n&lt;/div&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9evc0q7wphqh4jxnqmg4t47hl\">根據當前 \n<code>conditionExpression</code> 的值，透過選擇其中一個嵌入範本來有條件地交換 \n<code>div</code> 的內容。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [<a href=\"api/common/NgClass\" class=\"code-anchor\">ngClass</a>]=\"{'active': isActive, \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'disabled': isDisabled}\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ateyyrl23m9f7gmwo5b9yz279\">將 CSS 類別的出現繫結到元素上，根據相關對映值的真值。右側表示式應回傳 \n<code>{class-name: true/false}</code> 對映表。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;div [<a href=\"api/common/NgStyle\" class=\"code-anchor\">ngStyle</a>]=\"{'property': 'value'}\"&gt; \n&lt;div [<a href=\"api/common/NgStyle\" class=\"code-anchor\">ngStyle</a>]=\"dynamicStyles()\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ay6kb4vvztg2r8oodhwr8zjxy\">允許你使用 CSS 為 HTML 元素分配樣式。你可以直接使用 CSS，就像第一個範例中那樣，或者你可以從元件中呼叫一個方法。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xsni8fgg13z9qwldwylke25i\">表單</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> import { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> } from '@angular/forms'; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6puvbt4ja2ssrw6nshns6om2\">從 \n<code>@angular/forms</code> 中匯入 \n<code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;input [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"userName\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7zogn1ffbztd1l1mmg473995c\">為表單控制元件提供雙向資料繫結、解析和驗證。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eeom5pdaiszm2cpagxgv939fw\">類別裝飾器</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> import { <a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, … } from '@angular/core'; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1m3wh2yl9cbb68rhhikqskxb2\">從 \n<code>@angular/core';</code> 中匯入 \n<code><a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, &amp;hellip;</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({…}) \nclass MyComponent() {} </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ee1veddzwc3yjqyb9eu4quodw\">宣告一個類別是元件，並提供有關該組件的元資料。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({…}) \nclass MyDirective() {} </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8db0838b79hwvn46jgpsbewsa\">宣告一個類別是指令，並提供有關該指令的元資料。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/Pipe\" class=\"code-anchor\">Pipe</a>({…}) \nclass MyPipe() {} </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7qz5rl7e74vjgqxf5fcb03dmr\">宣告一個類別是通道，並提供有關該通道的元資料。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>() \nclass MyService() {} </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3eowwrxqiduoe7o8041mtlidc\">宣告一個類別可以由其他類別提供和注入。沒有這個裝飾器，編譯器不會生成足夠的元資料，以允許在某處注入時正確建立該類別。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"azk2dn7rjdadywgbbt0nzm2f\">指令設定</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({ \n&nbsp; property1: value1, \n&nbsp; … \n}) </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"t15ncdni51d5ovipsgbpy6xt\">向指令新增具有值為 \n<code>value1</code> 的 \n<code>property1</code> 屬性。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> selector: '.cool-button:not(a)' </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22ik3ni3scpcknqkxb06ldsks\">指定一個 CSS 選擇器，用於在範本中標識該指令。支援的選擇器包括 \n<code>element</code>、\n<code>[attribute]</code>、\n<code>.class</code> 和 \n<code>:not()</code>。 \n<br> 不支援父子關係選擇器。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> providers: [ \n&nbsp; MyService, \n&nbsp; { provide: … } \n] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uqgh14di2o202kssb9l1pjio\">為該指令及其子級提供依賴注入提供者清單。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8q7jaepbcy8tixv0atcr9z8e5\">元件設定 \n<br> \n<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 擴充套件自 \n<code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code>，因此 \n<code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code> 的設定也適用於元件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> viewProviders: [MyService, { provide: … }] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edacqgtsy1o6nh1j4nia6rtal\">依賴注入提供者清單，僅限於該組件的檢視。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> template: 'Hello {{name}}' \ntemplateUrl: 'my-component.html' </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4mmwcp2dogmn05yw8sp8ojoj7\">元件檢視的行內範本或外部範本URL。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> styles: ['.primary {color: red}'] \nstyleUrls: ['my-component.css'] </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60rsj6rokzemd0nkuenaw30ji\">用於樣式化元件檢視的行內CSS樣式或外部樣式表URL清單。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zy1tapigmzr60ihtg0or25ip\">指令和元件的類別欄位裝飾器。</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> import { <a href=\"api/core/Input\" class=\"code-anchor\">Input</a>, … } from '@angular/core'; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt670xt005czqwtoam5eqakvk\">從 \n<code>@angular/core</code> 中匯入 \n<code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a>, ...</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() myProperty; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b623x7f8jc4i37qclsr781svr\">宣告一個可透過屬性繫結更新的輸入屬性（例如：\n<code>&lt;my-cmp [myProperty]=\"someExpression\"&gt;</code>）。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() myEvent = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>(); </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ave842j5k6ersxswxz9rqd4mn\">宣告一個觸發事件的輸出屬性，可以使用事件繫結進行訂閱（例如：\n<code>&lt;my-cmp (myEvent)=\"doSomething()\"&gt;</code>）。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/HostBinding\" class=\"code-anchor\">HostBinding</a>('class.valid') isValid; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"exztr312t4402k861cwfs5ymq\">將宿主元素屬性（這裡是CSS類別 \n<code>valid</code>）繫結到指令/元件屬性（\n<code>isValid</code>）。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>('click', ['$event']) onClick(e) {…} </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dgsaufp70xg0t7ydwha2n3tof\">使用一個指令/元件方法（\n<code>onClick</code>）訂閱宿主元素事件（\n<code>click</code>），可選擇性地傳遞引數（\n<code>$event</code>）。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/ContentChild\" class=\"code-anchor\">ContentChild</a>(myPredicate) myChildComponent; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1uoi3pq1hfa2uoioqj6xyvoee\">將元件內容查詢的第一個結果（\n<code>myPredicate</code>）繫結到類別的屬性（\n<code>myChildComponent</code>）。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(myPredicate) myChildComponents; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"257smj8crgmzl0znw7g5v0wgl\">將元件內容查詢的結果（\n<code>myPredicate</code>）繫結到類別的屬性（\n<code>myChildComponents</code>）。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>(myPredicate) myChildComponent; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92n9qdkf2tqbsnsvvsjrnvl9x\">將元件檢視查詢的第一個結果（\n<code>myPredicate</code>）繫結到類別的屬性（\n<code>myChildComponent</code>）。不適用於指令。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> @<a href=\"api/core/ViewChildren\" class=\"code-anchor\">ViewChildren</a>(myPredicate) myChildComponents; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ay7ok7hukr1ickapdbot7ejqk\">將元件檢視查詢的結果（\n<code>myPredicate</code>）繫結到類別的屬性（\n<code>myChildComponents</code>）。不適用於指令。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"72kw4ez66luybcx31lzysw1qk\">指令和元件的變更檢測和生命週期鉤子（實現為類別方法）</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> constructor(myService: MyService, …) { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eg2aqwdkxbslxouui7xudzq90\">在任何其他生命週期鉤子之前呼叫。用於注入依賴項，但避免在此處進行任何嚴重的工作。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngOnChanges(changeRecord) { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ialdd7t9xdzck0okhcq0umip\">在每次更改輸入屬性之後，以及處理內容或子檢視之前呼叫。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngOnInit() { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nbfew2b0u9s3vhibuldqo18z\">在建構式函式之後呼叫，初始化輸入屬性，並首次呼叫 \n<code>ngOnChanges</code> 之前呼叫。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngDoCheck() { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d3wrvosqynf2ke6vngsxflkog\">每次檢查元件或指令的輸入屬性時調用。用於透過執行自定義檢查來擴充套件變更檢測。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngAfterContentInit() { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bg2hhn7ewbosl6j9st7oefxv\"><code>ngOnInit</code> 後呼叫，當元件或指令的內容已初始化。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngAfterContentChecked() { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eip7wtlphdxg02yi6zb1cjkhq\">在元件或指令內容的每次檢查之後呼叫。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngAfterViewInit() { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dscuupgpmh76ax6sztlhfdvlu\">在元件檢視和子檢視/指令所在檢視初始化後呼叫\n<code>ngAfterContentInit</code>之後。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngAfterViewChecked() { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27hmxmg2f2b3mhworaa2ltrdh\">在元件檢視和子檢視/指令所在檢視的每次檢查之後呼叫。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> ngOnDestroy() { … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqvjt0ospae160oava0hg3goq\">在實例銷燬之前呼叫一次。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ssn6uzcufropks11kqjq01rz\">依賴注入設定</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> { provide: MyService, useClass: MyMockService } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4dpjmnvrck26iz1efj03py8is\">將\n<code>MyService</code>的提供者設定或覆蓋為\n<code>MyMockService</code>類別。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> { provide: MyService, useFactory: myFactory } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9wcxyldw0djwa2sks4nnim87d\">將\n<code>MyService</code>的提供者設定或覆蓋為\n<code>myFactory</code>工廠函式。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> { provide: MyValue, useValue: 41 } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"54oq6kydlymurf93507bsm7k3\">將\n<code>MyValue</code>的提供者設定或覆蓋為值\n<code>41</code>。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezodoh04qben8komampk7fumq\">路由與導向</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> import { <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>, <a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>, … } from '@angular/router'; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31t7oppgw45rk9hirqr7bm8pr\">從\n<code>@angular/router</code>匯入\n<code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>, <a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>, ...</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> const routes: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a> = [ \n&nbsp; { path: '', component: HomeComponent }, \n&nbsp; { path: 'path/:routeParam', component: MyComponent }, \n&nbsp; { path: 'staticPath', component: … }, \n&nbsp; { path: '**', component: … }, \n&nbsp; { path: 'oldPath', redirectTo: '/staticPath' }, \n&nbsp; { path: …, component: …, data: { message: 'Custom' } } \n]); \n \nconst routing = RouterModule.forRoot(routes); </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"de2ckawbhj4yqz14mnf6b1aj1\">為應用程式設定路由。支援靜態、引數化、重導向和萬用字元路由。還支援自定義路由資料和解析。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt; \n&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a> name=\"aux\"&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"yez9ev7y3zv2s1hv4lvmaoqk\">標記要載入當前路由元件的位置。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/path\"&gt; \n&lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"[ '/path', routeParam ]\"&gt; \n&lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"[ '/path', { matrixParam: 'value' } ]\"&gt; \n&lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"[ '/path' ]\" [queryParams]=\"{ page: 1 }\"&gt; \n&lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"[ '/path' ]\" fragment=\"anchor\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"el7ezxr4djdy1wtuqk2j7xir7\">基於包含路由路徑、必需和可選引數、查詢引數和片段的路由指令，建立到不同檢視的連結。要導向到根路由，請使用\n<code>/</code>字首；對於子路由，請使用\n<code>./</code>字首；對於兄弟或父路由，請使用\n<code>../</code>字首。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"[ '/path' ]\" <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7kaylhzx2vxikrwhkplg6n93\">當\n<code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>成為當前活動路由時，將提供的類別新增到元素中。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"html\" hidecopy=\"\" language=\"html\"> &lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"[ '/path' ]\" <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active\" ariaCurrentWhenActive=\"page\"&gt; </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7gndgj2al75mkessnd989xwli\">當\n<code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>成為當前活動路由時，將提供的類別和\n<code>aria-current</code>屬性新增到元素中。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> function canActivateGuard: <a href=\"api/router/CanActivateFn\" class=\"code-anchor\">CanActivateFn</a> = \n&nbsp; ( \n&nbsp;&nbsp;&nbsp; route: <a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a>, \n&nbsp;&nbsp;&nbsp; state: <a href=\"api/router/RouterStateSnapshot\" class=\"code-anchor\">RouterStateSnapshot</a> \n&nbsp; ) =&gt; { … } \n \n{ path: …, canActivate: [canActivateGuard] } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bsmvnq4zh3z0aydqam4kh8cak\">用於定義路由器首先呼叫的函式介面，以確定是否應激活該元件。應回傳\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>或解析為\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>的Observable/Promise。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> function canDeactivateGuard: <a href=\"api/router/CanDeactivateFn\" class=\"code-anchor\">CanDeactivateFn</a>&lt;T&gt; = \n&nbsp; ( \n&nbsp;&nbsp;&nbsp; component: T, \n&nbsp;&nbsp;&nbsp; route: <a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a>, \n&nbsp;&nbsp;&nbsp; state: <a href=\"api/router/RouterStateSnapshot\" class=\"code-anchor\">RouterStateSnapshot</a> \n&nbsp; ) =&gt; { … } \n \n{ path: …, canDeactivate: [canDeactivateGuard] } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adj8z9dgi8h11a518zwvtx1zu\">用於定義路由器首先呼叫的函式介面，以確定導向後是否應停用此元件。應回傳\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>或解析為\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>的Observable/Promise。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> function canActivateChildGuard: <a href=\"api/router/CanActivateChildFn\" class=\"code-anchor\">CanActivateChildFn</a> = \n&nbsp; ( \n&nbsp;&nbsp;&nbsp; route: <a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a>, \n&nbsp;&nbsp;&nbsp; state: <a href=\"api/router/RouterStateSnapshot\" class=\"code-anchor\">RouterStateSnapshot</a> \n&nbsp; ) =&gt; { … } \n \n{ path: …, canActivateChild: [canActivateGuard], children: … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8v55fjw8uxyq7cc1wqxf66ykc\">用於定義路由器首先呼叫的函式介面，以確定是否應激活子路由。應回傳\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>或解析為\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>的Observable/Promise。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> function resolveGuard implements <a href=\"api/router/ResolveFn\" class=\"code-anchor\">ResolveFn</a>&lt;T&gt; = \n&nbsp; ( \n&nbsp;&nbsp;&nbsp; route: <a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a>, \n&nbsp;&nbsp;&nbsp; state: <a href=\"api/router/RouterStateSnapshot\" class=\"code-anchor\">RouterStateSnapshot</a> \n&nbsp; ) =&gt; { … }  \n \n{ path: …, resolve: [resolveGuard] } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6rzq2gnc0h5i67w5slil9u8ok\">用於定義路由器首先呼叫的函式介面，以在渲染路由之前解析路由資料。應回傳值或解析為值的Observable/Promise。</td>\n</tr>\n<tr>\n<td align=\"left\"><code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\"> function canLoadGuard: <a href=\"api/router/CanLoadFn\" class=\"code-anchor\">CanLoadFn</a> = \n&nbsp; ( \n&nbsp;&nbsp;&nbsp; route: <a href=\"api/router/Route\" class=\"code-anchor\">Route</a> \n&nbsp; ) =&gt; { … } \n \n{ path: …, canLoad: [canLoadGuard], loadChildren: … } </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xhkbj348addfkijp14nom634\">用於定義路由器首先呼叫的函式介面，以確定是否應載入延遲載入模組。應回傳\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>或解析為\n<code>boolean|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>的Observable/Promise。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common/CommonModule\n - api/common/NgClass\n - api/common/NgFor\n - api/common/NgIf\n - api/common/NgStyle\n - api/common/NgSwitch\n - api/common/NgSwitchCase\n - api/common/NgSwitchDefault\n - api/core/Component\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/Directive\n - api/core/EventEmitter\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/Injectable\n - api/core/Input\n - api/core/NgModule\n - api/core/Output\n - api/core/Pipe\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - api/router/ActivatedRouteSnapshot\n - api/router/CanActivateChildFn\n - api/router/CanActivateFn\n - api/router/CanDeactivateFn\n - api/router/CanLoadFn\n - api/router/ResolveFn\n - api/router/Route\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterModule\n - api/router/RouterOutlet\n - api/router/RouterStateSnapshot\n - api/router/Routes\n - api/router/UrlTree\n - guide/cheatsheet#cheat-sheet\n-->"}