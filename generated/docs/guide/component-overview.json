{"id":"guide/component-overview","title":"Angular 元件概述","contents":"<div class=\"content\">\n  <h1 id=\"angular-components-overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"clubqel41yqq62ycwooty4ewc\">Angular 元件概述<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#angular-components-overview\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9z9210n2ii6af0cinx60o1ht1\">元件是 Angular 應用程式的主要基礎元素。 每個元件包括：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"al1kpmvu0dgylozjk8hpha553\">一個 HTML 範本，用於宣告頁面要渲染的內容</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epd1l2mlqfud7tldbn57ou5h3\">一個用於定義行為的 TypeScript 類別</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ddxhrt5qib2clx3vm6mfbw7f0\">一個 CSS 選擇器，用於定義元件在範本中的使用方式</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4bua2un3s910me1212vt8232m\">（可選）要應用在範本上的 CSS 樣式</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8g3w5aezounz5ptqf7qq12do\">本主題描述如何建立和設定 Angular 元件。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a23bl0c815syprodxe0xt0ykn\">要檢視或下載本主題中使用的範例程式碼，參閱 <live-example></live-example>。</p>\n</div>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bacei7rggynht33n543eb0g0b\">要建立一個元件，請先驗證你是否滿足以下前提條件：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e7nvh0m6l0udc9ohgxw04rmuq\"><a href=\"guide/setup-local#install-the-angular-cli\">安裝 Angular CLI</a>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hwkzh2ntrwg4txo2f95j34r7\"><a href=\"guide/setup-local#create-a-workspace-and-initial-application\">建立一個帶有初始專案的 Angular 工作區</a>。如果還沒有專案，你可以用 <code>ng new &lt;project-name&gt;</code> 建立一個，其中 <code>&lt;project-name&gt;</code> 是你的 Angular 應用的名字。</li>\n</ol>\n<h2 id=\"creating-a-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfexuzskbn4lagfamdqvlf7e1\">建立一個元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1a3dwlq74u20cboiw942zun07\">Angular CLI 是用來建立元件的最簡途徑。你也可以手動建立一個元件。</p>\n<h3 id=\"creating-a-component-using-the-angular-cli\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"tlyfqzjv5wyhy4vtd4337klg\">使用 Angular CLI 建立元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-using-the-angular-cli\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nb4pzf3kopoyanh5gm2cbkib\">使用 Angular CLI 建立一個元件：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dd0jai8xjc1b4j80ep4rl21l2\">在終端視窗中，導向到要放置你應用的目錄。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65iprg6rmfr4eegmc68th9nv1\">執行 <code>ng generate component &lt;component-name&gt;</code> 指令，其中 <code>&lt;component-name&gt;</code> 是新元件的名字。</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zmtuebi26l3auqkhixquesly\">預設情況下，該指令會建立以下內容：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2xb2vrgozvo46cexlj1ix0h2c\">一個以該組件命名的資料夾</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70r6rlbjznlsqhj5mv24n1q59\">一個元件檔案 <code>&lt;component-name&gt;.component.ts</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wp6qs0h8up7n43eg7za6c8n0\">一個範本檔案 <code>&lt;component-name&gt;.component.html</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ksx3iyqcm02uh3pdqe2ih5qo\">一個 CSS 檔案，<code>&lt;component-name&gt;.component.css</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d46m07e8tr67zix7ndgnjynhd\">測試檔案 <code>&lt;component-name&gt;.component.spec.ts</code></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jl21e0tfjyy19vujima7p36e\">其中 <code>&lt;component-name&gt;</code> 是元件的名稱。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1egfg8jm289gsb4v8jb3inxr8\">你可以更改 <code>ng generate component</code> 建立新元件的方式。欲知詳情，參閱 Angular CLI 文件中的 <a href=\"cli/generate#component-command\">ng generate component</a>。</p>\n</div>\n<h3 id=\"creating-a-component-manually\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vjzz3r0xtjhespt4ar4wd6zp\">手動建立元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cr5kqy527sdoyt4nmkieidi81\">雖然 Angular CLI 是建立 Angular 元件的最佳途徑，但你也可以手動建立一個元件。本節將介紹如何在現有的 Angular 專案中建立核心元件檔案。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9izqpd6yy4nxru7v0xo8vwnxf\">要手動建立一個新元件：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"25uh9edho0ira5188ni9swr7r\">導向到你的 Angular 專案目錄。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7m013f9s7azxf6nu3q0c9m4my\">建立一個新檔案 <code>&lt;component-name&gt;.component.ts</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7iuo02qhpj66wgyew3srhrm7e\">在檔案的頂部，新增下面的 import 語句。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"import\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gxcnahqes06dehkxlt8f54zk\">在 <code>import</code> 語句之後，新增一個 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator-skeleton\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n})\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccrqhk0v6n41ub9v0oal8m5pu\">為元件選擇一個 CSS 選擇器。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8pxt9hreqxil3fujf2ir477nb\">關於選擇選擇器的更多訊息，參閱<a href=\"guide/component-overview#specifying-a-components-css-selector\">指定元件的選擇器</a>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hlxu8rp7akmyompk39thh5vl\">定義元件用以顯示訊息的 HTML 範本。在大多數情況下，這個範本是一個單獨的 HTML 檔案。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2y2aegw2zkggxh3rn0jppkg0k\">關於定義元件範本的更多訊息，參閱<a href=\"guide/component-overview#defining-a-components-template\">定義元件的範本</a>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d06egr94wzfrmsi3eciqc56zi\">為元件的範本選擇樣式。在大多數情況下，你可以在單獨的檔案中定義元件範本的樣式。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20m2f066e1z9c6rrtfhn8rk7s\">新增一個包含該組件程式碼 <code>class</code> 語句。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"class\">\nexport class ComponentOverviewComponent {\n\n}\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"specifying-a-components-css-selector\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70ctz9en18my4onugov6d7fbp\">指定元件的 CSS 選擇器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#specifying-a-components-css-selector\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"egv1oznvtcyjth6xj360zyyuf\">每個元件都需要一個 CSS <em>選擇器</em>。選擇器會告訴 Angular：當在範本 HTML 中找到相應的標籤時，就把該組件實例化在那裡。比如，考慮一個元件 <code>hello-world.component.ts</code>，它的選擇器定義為 <code>app-hello-world</code>。當 <code>&lt;app-hello-world&gt;</code> 出現在範本中時，這個選擇器就會讓 Angular 實例化該組件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5w4xkpdou81cir6pywjqljk56\">透過在 \n<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中新增一個 \n<code>selector</code> 屬性來指定元件的選擇器。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<h2 id=\"defining-a-components-template\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y9qd0phyeze5viyxvyjwzj36\">定義一個元件的範本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#defining-a-components-template\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4d1jc6wysgwxxyqx9ldhxd3fo\">範本是一段 HTML，它告訴 Angular 如何在應用中渲染元件。可以透過以下兩種方式之一為元件定義範本：引用外部檔案，或直接寫在元件內部。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7q2txxtunbwn9da7uf0sxk234\">要把範本定義為外部檔案，就要把 <code>templateUrl</code> 新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3yuzc6pbcuovei6fmvubzxxmz\">要在元件中定義範本，就要把一個 <code>template</code> 屬性新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 中，該屬性的內容是要使用的 HTML。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.1.ts\" region=\"template\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bdu8unulqn3lgdajtvoy9bhcl\">如果你想讓範本跨越多行，可以使用反引號（<code>`</code>）。比如：</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.2.ts\" region=\"templatebacktick\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: `\n    &lt;h1&gt;Hello World!&lt;/h1&gt;\n    &lt;p&gt;This template definition spans <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> lines.&lt;/p&gt;\n  `\n})\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3z03kyzjo7ieimvc11rz4emo1\">Angular 元件需要使用 \n<code>template</code> 或 \n<code>templateUrl</code> 定義範本。 一個元件不能同時擁有這兩個屬性。</p>\n</div>\n<h2 id=\"declaring-a-components-styles\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dey3egqa690he5hpel1gurf51\">宣告元件的樣式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#declaring-a-components-styles\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xaabyc19s72phhvhnq4sg7bm\">有兩種方式可以為元件的範本宣告樣式：引用一個外部檔案，或直接寫在元件內部。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3zadetr5r21rkltchqv49w6c\">要在單獨的檔案中宣告元件的樣式，就要把 <code>styleUrls</code> 屬性新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a83944ps311s15dwqapb09qrz\">要想在元件內部宣告樣式，就要把 <code>styles</code> 屬性新增到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>，該屬性的內容是你要用的樣式。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.3.ts\" region=\"styles\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n  styles: ['h1 { font-weight: normal; }']\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7kfjubhydvatd25s570u9xl2h\"><code>styles</code> 屬性接受一個包含 CSS 規則的字串陣列。</p>\n<h3 id=\"creating-a-component-manually-1\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vjzz3r0xtjhespt4ar4wd6zp\">手動建立元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually-1\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"k6uruyvrum25y57e9jirwb0u\">我們建議使用 \n<code>standalone: true</code> 標誌使元件獨立，將其放在 \n<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.4.ts\" region=\"standalonedeclaration\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n  styles: ['h1 { font-weight: normal; }'],\n  standalone: true\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"312f670guk2phuk0ugbk0jqj8\">然而，在使用基於 \n<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的應用程式時，元件需要新增到正確的 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 中。 要在模組中嵌入一個元件，將其嵌入到 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 裝飾器中的宣告陣列中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.module.ts\" region=\"componentmoduledeclaration\">\n// Your component path\nimport {ComponentOverviewComponent} from './component-overview.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    // Existing Components\n   ComponentOverviewComponent\n  ]\n  // Rest of the Module Content\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ewk6q63fux8jl8ju3fmba9ef9\">完成這些步驟後，你的 Angular 元件已準備好在應用程式中整合和使用。</p>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dx7e0my4kp5vs8kp4t7uviz3f\">關於元件的體系結構概述，參閱<a href=\"guide/architecture-components\">元件和範本簡介</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pisa5o6dkhqxqdzr79vdo3pe\">關於建立元件時可以使用的其他選項，參閱『API 參考手冊』中的<a href=\"api/core/Component\">『元件』</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3h7qta1aln1dahluezr4to42d\">要了解關於為元件指定樣式的更多訊息，參閱<a href=\"guide/component-styles\">元件樣式</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cuf4vbys1ozpuinarnd39ejvi\">關於範本的詳細訊息，參閱<a href=\"guide/template-syntax\">範本語法</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Sat Jul 29 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - errors/NG0300\n - guide/built-in-directives\n - guide/content-projection\n - guide/understanding-angular-overview\n - guide/what-is-angular\n - start/start-deployment\n - tutorial/first-app/first-app-lesson-02\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/NgModule\n - api/forms/SelectMultipleControlValueAccessor\n - cli/generate#component-command\n - guide/architecture-components\n - guide/component-overview#angular-components-overview\n - guide/component-overview#creating-a-component\n - guide/component-overview#creating-a-component-manually\n - guide/component-overview#creating-a-component-manually-1\n - guide/component-overview#creating-a-component-using-the-angular-cli\n - guide/component-overview#declaring-a-components-styles\n - guide/component-overview#defining-a-components-template\n - guide/component-overview#next-steps\n - guide/component-overview#prerequisites\n - guide/component-overview#specifying-a-components-css-selector\n - guide/component-styles\n - guide/setup-local#create-a-workspace-and-initial-application\n - guide/setup-local#install-the-angular-cli\n - guide/template-syntax\n-->"}