{"id":"guide/component-overview","title":"Angular 组件概述","contents":"<div class=\"content\">\n  <h1 id=\"angular-components-overview\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"clubqel41yqq62ycwooty4ewc\">Angular 组件概述<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#angular-components-overview\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9z9210n2ii6af0cinx60o1ht1\">组件是 Angular 应用程序的主要构建块。 每个组件包括：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"al1kpmvu0dgylozjk8hpha553\">一个 HTML 模板，用于声明页面要渲染的内容</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epd1l2mlqfud7tldbn57ou5h3\">一个用于定义行为的 TypeScript 类</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ddxhrt5qib2clx3vm6mfbw7f0\">一个 CSS 选择器，用于定义组件在模板中的使用方式</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4bua2un3s910me1212vt8232m\">（可选）要应用在模板上的 CSS 样式</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8g3w5aezounz5ptqf7qq12do\">本主题描述如何创建和配置 Angular 组件。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a23bl0c815syprodxe0xt0ykn\">要查看或下载本主题中使用的范例代码，参阅 <live-example></live-example>。</p>\n</div>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bacei7rggynht33n543eb0g0b\">要创建一个组件，请先验证你是否满足以下前提条件：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e7nvh0m6l0udc9ohgxw04rmuq\"><a href=\"guide/setup-local#install-the-angular-cli\">安装 Angular CLI</a>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hwkzh2ntrwg4txo2f95j34r7\"><a href=\"guide/setup-local#create-a-workspace-and-initial-application\">创建一个带有初始项目的 Angular 工作区</a>。如果还没有项目，你可以用 <code>ng new &lt;project-name&gt;</code> 创建一个，其中 <code>&lt;project-name&gt;</code> 是你的 Angular 应用的名字。</li>\n</ol>\n<h2 id=\"creating-a-component\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfexuzskbn4lagfamdqvlf7e1\">创建一个组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1a3dwlq74u20cboiw942zun07\">Angular CLI 是用来创建组件的最简途径。你也可以手动创建一个组件。</p>\n<h3 id=\"creating-a-component-using-the-angular-cli\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"tlyfqzjv5wyhy4vtd4337klg\">使用 Angular CLI 创建组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-using-the-angular-cli\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nb4pzf3kopoyanh5gm2cbkib\">使用 Angular CLI 创建一个组件：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dd0jai8xjc1b4j80ep4rl21l2\">在终端窗口中，导航到要放置你应用的目录。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65iprg6rmfr4eegmc68th9nv1\">运行 <code>ng generate component &lt;component-name&gt;</code> 命令，其中 <code>&lt;component-name&gt;</code> 是新组件的名字。</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zmtuebi26l3auqkhixquesly\">默认情况下，该命令会创建以下内容：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2xb2vrgozvo46cexlj1ix0h2c\">一个以该组件命名的文件夹</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70r6rlbjznlsqhj5mv24n1q59\">一个组件文件 <code>&lt;component-name&gt;.component.ts</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4wp6qs0h8up7n43eg7za6c8n0\">一个模板文件 <code>&lt;component-name&gt;.component.html</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ksx3iyqcm02uh3pdqe2ih5qo\">一个 CSS 文件，<code>&lt;component-name&gt;.component.css</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d46m07e8tr67zix7ndgnjynhd\">测试文件 <code>&lt;component-name&gt;.component.spec.ts</code></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jl21e0tfjyy19vujima7p36e\">其中 <code>&lt;component-name&gt;</code> 是组件的名称。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1egfg8jm289gsb4v8jb3inxr8\">你可以更改 <code>ng generate component</code> 创建新组件的方式。欲知详情，参阅 Angular CLI 文档中的 <a href=\"cli/generate#component-command\">ng generate component</a>。</p>\n</div>\n<h3 id=\"creating-a-component-manually\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vjzz3r0xtjhespt4ar4wd6zp\">手动创建组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cr5kqy527sdoyt4nmkieidi81\">虽然 Angular CLI 是创建 Angular 组件的最佳途径，但你也可以手动创建一个组件。本节将介绍如何在现有的 Angular 项目中创建核心组件文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9izqpd6yy4nxru7v0xo8vwnxf\">要手动创建一个新组件：</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"25uh9edho0ira5188ni9swr7r\">导航到你的 Angular 项目目录。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7m013f9s7azxf6nu3q0c9m4my\">创建一个新文件 <code>&lt;component-name&gt;.component.ts</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7iuo02qhpj66wgyew3srhrm7e\">在文件的顶部，添加下面的 import 语句。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"import\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5gxcnahqes06dehkxlt8f54zk\">在 <code>import</code> 语句之后，添加一个 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator-skeleton\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n})\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccrqhk0v6n41ub9v0oal8m5pu\">为组件选择一个 CSS 选择器。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8pxt9hreqxil3fujf2ir477nb\">关于选择选择器的更多信息，参阅<a href=\"guide/component-overview#specifying-a-components-css-selector\">指定组件的选择器</a>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hlxu8rp7akmyompk39thh5vl\">定义组件用以显示信息的 HTML 模板。在大多数情况下，这个模板是一个单独的 HTML 文件。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2y2aegw2zkggxh3rn0jppkg0k\">关于定义组件模板的更多信息，参阅<a href=\"guide/component-overview#defining-a-components-template\">定义组件的模板</a>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d06egr94wzfrmsi3eciqc56zi\">为组件的模板选择样式。在大多数情况下，你可以在单独的文件中定义组件模板的样式。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20m2f066e1z9c6rrtfhn8rk7s\">添加一个包含该组件代码 <code>class</code> 语句。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"class\">\nexport class ComponentOverviewComponent {\n\n}\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"specifying-a-components-css-selector\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70ctz9en18my4onugov6d7fbp\">指定组件的 CSS 选择器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#specifying-a-components-css-selector\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"egv1oznvtcyjth6xj360zyyuf\">每个组件都需要一个 CSS <em>选择器</em>。选择器会告诉 Angular：当在模板 HTML 中找到相应的标签时，就把该组件实例化在那里。比如，考虑一个组件 <code>hello-world.component.ts</code>，它的选择器定义为 <code>app-hello-world</code>。当 <code>&lt;app-hello-world&gt;</code> 出现在模板中时，这个选择器就会让 Angular 实例化该组件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5w4xkpdou81cir6pywjqljk56\">通过在 \n<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器中添加一个 \n<code>selector</code> 属性来指定组件的选择器。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<h2 id=\"defining-a-components-template\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y9qd0phyeze5viyxvyjwzj36\">定义一个组件的模板<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#defining-a-components-template\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4d1jc6wysgwxxyqx9ldhxd3fo\">模板是一段 HTML，它告诉 Angular 如何在应用中渲染组件。可以通过以下两种方式之一为组件定义模板：引用外部文件，或直接写在组件内部。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7q2txxtunbwn9da7uf0sxk234\">要把模板定义为外部文件，就要把 <code>templateUrl</code> 添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3yuzc6pbcuovei6fmvubzxxmz\">要在组件中定义模板，就要把一个 <code>template</code> 属性添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 中，该属性的内容是要使用的 HTML。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.1.ts\" region=\"template\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bdu8unulqn3lgdajtvoy9bhcl\">如果你想让模板跨越多行，可以使用反引号（<code>`</code>）。比如：</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.2.ts\" region=\"templatebacktick\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: `\n    &lt;h1&gt;Hello World!&lt;/h1&gt;\n    &lt;p&gt;This template definition spans <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> lines.&lt;/p&gt;\n  `\n})\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3z03kyzjo7ieimvc11rz4emo1\">Angular 组件需要使用 \n<code>template</code> 或 \n<code>templateUrl</code> 定义模板。 一个组件不能同时拥有这两个属性。</p>\n</div>\n<h2 id=\"declaring-a-components-styles\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dey3egqa690he5hpel1gurf51\">声明组件的样式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#declaring-a-components-styles\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xaabyc19s72phhvhnq4sg7bm\">有两种方式可以为组件的模板声明样式：引用一个外部文件，或直接写在组件内部。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3zadetr5r21rkltchqv49w6c\">要在单独的文件中声明组件的样式，就要把 <code>styleUrls</code> 属性添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a83944ps311s15dwqapb09qrz\">要想在组件内部声明样式，就要把 <code>styles</code> 属性添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>，该属性的内容是你要用的样式。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.3.ts\" region=\"styles\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n  styles: ['h1 { font-weight: normal; }']\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7kfjubhydvatd25s570u9xl2h\"><code>styles</code> 属性接受一个包含 CSS 规则的字符串数组。</p>\n<h3 id=\"creating-a-component-manually-1\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vjzz3r0xtjhespt4ar4wd6zp\">手动创建组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually-1\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"k6uruyvrum25y57e9jirwb0u\">我们建议使用 \n<code>standalone: true</code> 标志使组件独立，将其放在 \n<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.4.ts\" region=\"standalonedeclaration\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&lt;h1&gt;Hello World!&lt;/h1&gt;',\n  styles: ['h1 { font-weight: normal; }'],\n  standalone: true\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"312f670guk2phuk0ugbk0jqj8\">然而，在使用基于 \n<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的应用程序时，组件需要添加到正确的 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 中。 要在模块中嵌入一个组件，将其嵌入到 \n<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 装饰器中的声明数组中。</p>\n<code-example path=\"component-overview/src/app/component-overview/component-overview.module.ts\" region=\"componentmoduledeclaration\">\n// Your component path\nimport {ComponentOverviewComponent} from './component-overview.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    // Existing Components\n   ComponentOverviewComponent\n  ]\n  // Rest of the Module Content\n})\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ewk6q63fux8jl8ju3fmba9ef9\">完成这些步骤后，你的 Angular 组件已准备好在应用程序中集成和使用。</p>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dx7e0my4kp5vs8kp4t7uviz3f\">关于组件的体系结构概述，参阅<a href=\"guide/architecture-components\">组件和模板简介</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pisa5o6dkhqxqdzr79vdo3pe\">关于创建组件时可以使用的其他选项，参阅“API 参考手册”中的<a href=\"api/core/Component\">“组件”</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3h7qta1aln1dahluezr4to42d\">要了解关于为组件指定样式的更多信息，参阅<a href=\"guide/component-styles\">组件样式</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cuf4vbys1ozpuinarnd39ejvi\">关于模板的详细信息，参阅<a href=\"guide/template-syntax\">模板语法</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Sat Jul 29 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - errors/NG0300\n - guide/built-in-directives\n - guide/content-projection\n - guide/understanding-angular-overview\n - guide/what-is-angular\n - start/start-deployment\n - tutorial/first-app/first-app-lesson-02\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/NgModule\n - api/forms/SelectMultipleControlValueAccessor\n - cli/generate#component-command\n - guide/architecture-components\n - guide/component-overview#angular-components-overview\n - guide/component-overview#creating-a-component\n - guide/component-overview#creating-a-component-manually\n - guide/component-overview#creating-a-component-manually-1\n - guide/component-overview#creating-a-component-using-the-angular-cli\n - guide/component-overview#declaring-a-components-styles\n - guide/component-overview#defining-a-components-template\n - guide/component-overview#next-steps\n - guide/component-overview#prerequisites\n - guide/component-overview#specifying-a-components-css-selector\n - guide/component-styles\n - guide/setup-local#create-a-workspace-and-initial-application\n - guide/setup-local#install-the-angular-cli\n - guide/template-syntax\n-->"}