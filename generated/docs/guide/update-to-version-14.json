{"id":"guide/update-to-version-14","title":"更新 Angular","contents":"<div class=\"content\">\n  <h1 id=\"update-angular-to-v14\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2sib9zu1t1mgpjvkmbxwqudov\">更新 Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#update-angular-to-v14\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2eosf7cys6g5fgat301oq01k3\">本指南包含更新到 Angular 版本 14 的信息。</p>\n<h2 id=\"update-angular-cli-applications\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbjb46qu795k8sow0p0o4ow24\">更新 Angular CLI 应用程序<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#update-angular-cli-applications\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45sp62ag7eexuh3wkt332dl2\">有关如何更新到最新的 Angular 版本和利用 Angular 自动迁移工具的分步说明，请使用 <a href=\"https://update.angular.io\">update.angular.io</a> 上的交互式更新指南。</p>\n<h2 id=\"changes-and-deprecations-in-version-14\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5egbuxs41jkbo2ol5wq5vlsob\">版本 14 中的更改与弃用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#changes-and-deprecations-in-version-14\"><i class=\"material-icons\">link</i></a></h2>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5y3ym2486hgagoa8a00925ffn\">有关Angular弃用和移除实践的信息，请参阅\n<a href=\"guide/releases#deprecation-policy\">Angular版本发布实践</a>。</p>\n</div>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ayjybuti3wprsnztnetipiw3k\"><strong>严格类型的响应式表单</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dgups6ysd28yhu3qxgx1aap1v\">响应式表单类型 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 、 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 、 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 和 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 现在支持一个泛型参数，该参数允许对控件进行严格键入。自动迁移会将这些类型的现有用法转换为特殊的 <code>Untyped</code> 别名，以保留现有行为。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ze8yzquwzsxljjt8bl4qfim3\"><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造的 <code>initialValueIsDefault</code> 选项已被弃用，以支持 <code>nonNullable</code> 选项（具有相同的行为）。这种重命名使 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造函数与其他与可空性相关的严格类型 API 保持一致。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fq7mwm6tbwljbsr7bg860rs8\"><strong><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 和 <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> 清理</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ay2b3fplvsg9hkflcnx21fj25\">许多使用 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 或 <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> 的 API 已被弃用，并替换为直接使用组件或 NgModule 类的新 API。</p>\n</li>\n</ul>\n<h3 id=\"breaking-changes-in-angular-version-14\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cx8e7uzlgyws64cw3d9codc36\">Angular 版本 14 中的重大更改<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#breaking-changes-in-angular-version-14\"><i class=\"material-icons\">link</i></a></h3>\n<p><a id=\"breaking-changes\"></a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1u3j6w2rv4idtzrcrkbu8ty32\"><a href=\"https://github.com/angular/angular/pull/45729\"><strong>PR&nbsp;#45729</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81twov5m5f9n31874ebn3ojxl\"><code>initialNavigation: 'enabled'</code> 在 v11 中已弃用，并由 <code>initialNavigation: 'enabledBlocking'.</code> 代替.</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ee56ep28celv8cqbo7uz5mfk\"><a href=\"https://github.com/angular/angular/pull/42803\"><strong>PR&nbsp;#42803</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dcgvgwogn2joiqqp2qpyq8khr\">表单 <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> 输入强制：如果表单 <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> 输入值是使用任何值而不是 false 和 'false' 定义的，则将被视为 true。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5vz2sfm3w0e3peaz1inh59as9\"><a href=\"https://github.com/angular/angular/pull/33729\"><strong>PR&nbsp;#33729</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bk3akxjjj71vn40npo9ra3qw\">长度键设置为零的对象将不再验证为空。从技术上讲，这是一个突破性更改，因为键 <code>length</code> 和值为 <code>0</code> 的对象将不再验证为空。这是一个非常小的更改，无论如何，对此行为的任何依赖都可能是一个错误。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"at9tu04vs7fpwitrb873ud7t1\"><a href=\"https://github.com/angular/angular/pull/44921\"><strong>PR&nbsp;#44921</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cq3uyowra8rr0bshpxqc2km6f\">加载 Hammer 时不要运行变更检测。此更改可能会导致在特定数字上隐式断言的单元测试或变更检测的顺序失败。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41i5t7u3102pkt1o7ju6tw9is\"><a href=\"https://github.com/angular/angular/pull/23020\"><strong>PR&nbsp;#23020</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5gmt9uxi4aagwkcfxqmwm1sn\"><code><a href=\"api/core/TransferState\" class=\"code-anchor\">TransferState</a></code>使用的参数类型增加了类型安全性，这可能会显示出现有的问题调用。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ab63xgdcmyqzuugl74nqfthy8\"><a href=\"https://github.com/angular/angular/pull/43863\"><strong>PR&nbsp;#43863</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jvn0myh3lhiks8omkzojb4bb\">类型\n<code><a href=\"api/router/Navigation\" class=\"code-anchor\">Navigation</a>#initialUrl</code>已经窄化为\n<code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>以反映现实。此外，\n<code>initialUrl</code>的值现在与其文档匹配：\"导航前传递给Router#navigateByUrl()调用的目标URL\"。在此之前，它错误地设置为导航发生时Router当前内部\n<code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ayoq4dkntwngdz5q5ljr3u6ku\"><a href=\"https://github.com/angular/angular/pull/45114\"><strong>PR&nbsp;#45114</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3hb9x1840bsstcw7xmb6ix15u\"><code>AnimationDriver.getParentElement</code> 方法已成为必需，因此现在要求此接口的任何实现者提供此方法的实现。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"246mp2pkhzpepnd2md87l9saq\"><a href=\"https://github.com/angular/angular/pull/45176\"><strong>PR&nbsp;#45176</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8tvz8d2wdz0d3eqfgexcxi6lk\"><code><a href=\"api/router/Route#pathMatch\" class=\"code-anchor\">Route.pathMatch</a></code> 的类型现在更严格。使用 <code>pathMatch</code> 的地方可能需要更新为显式 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> / <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> 类型，以便 TypeScript 不会将类型推断为 <code>string</code>。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lbvr7acuzyrzr6hutrwclp2c\"><a href=\"https://github.com/angular/angular/pull/44573\"><strong>PR&nbsp;#44573</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ztzbvagcx9zmg80qy1jfk6o2\">路由器现在仅获取解析器发出的第一个值，然后继续导航。这现在与其他警卫返回的 <code>Observables</code> 一致：仅使用第一个值。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"752v4blkwhuoxt04gkrsd0il\"><a href=\"https://github.com/angular/angular/pull/45394\"><strong>PR&nbsp;#45394</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5bp8spr4axkre3s5jbnbi8ieb\">不再支持早于 <code>4.6.0</code> 的 TypeScript 版本。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c2ql47ty627itehmv43zpfvmd\"><a href=\"https://github.com/angular/angular/pull/45210\"><strong>PR&nbsp;#45210</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5v4jc7p43yz5lwah3mg35frai\">在 JSONP 请求上设置标头时，<code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 将抛出错误。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d9amq5nojkhradzn037j89ciw\"><a href=\"https://github.com/angular/angular/pull/43834\"><strong>PR&nbsp;#43834</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2b6ey5u0krrrc0vlfag38iy6i\">响应式表单类型（例如 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 和 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 现在具有泛型类型参数并推断更严格的类型。迁移会将现有的用法转换为新的 <code>Untyped</code> 前缀的别名，以保留现有的行为。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5tl03mgw3nmufwnfbfkyig5c8\"><a href=\"https://github.com/angular/angular/pull/45487\"><strong>PR&nbsp;#45487</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bpxvgot5f2gpc5mf7xl45ays1\"><code><a href=\"api/core/testing/TestBed\" class=\"code-anchor\">TestBed</a></code> 配置中已过时的 <code>aotSummaries</code> 字段已删除。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2oavnu130nci1qx5irl9v410x\"><a href=\"https://github.com/angular/angular/pull/45648\"><strong>PR&nbsp;#45648</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edzwyho1st9ykjcjkpgoawty7\">添加了一个新的必需类成员 <code><a href=\"api/common/LocationStrategy\" class=\"code-anchor\">LocationStrategy</a>#getState</code>，此接口的任何实现者都需要提供。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6re68xvvlnaby0luhb8thrte7\"><a href=\"https://github.com/angular/angular/pull/45735\"><strong>PR&nbsp;#45735</strong></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2t6wyd335qio770tc2x5tgr12\">当守卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 时，以前路由器会在 <code>setTimeout</code> 内安排重定向导航。现在删除了此超时，这可能会由于测试编写不正确而导致测试失败。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"new-deprecations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d330inymbovn4s7orothpjxi1\">新的弃用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#new-deprecations\"><i class=\"material-icons\">link</i></a></h3>\n<p><a id=\"deprecations\"></a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8rauhn4qvl8aihjj83daq48w4\">已移除</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b60cmg37kstj9qup38pt8swfn\">替代品</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"api/forms/FormControlOptions#initialValueIsDefault\"><code>FormControlOptions#initialValueIsDefault</code></a></td>\n<td align=\"left\"><a href=\"api/forms/FormControlOptions#nonNullable\"><code>FormControlOptions#nonNullable</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ze8yzquwzsxljjt8bl4qfim3\"><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造的 <code>initialValueIsDefault</code> 选项已被弃用，以支持 <code>nonNullable</code> 选项（具有相同的行为）。这种重命名使 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造函数与其他与可空性相关的严格类型 API 保持一致。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1f4m61ndmopruk4psk4djxne1\"><code>ErrorEvent</code>传递给[\n<code><a href=\"api/common/http/testing/TestRequest\" class=\"code-anchor\">TestRequest</a>#error</code>](api/common/http/testing/TestRequest#error]</td>\n<td align=\"left\"><code>ProgressEvent</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1i1mgn0tmsivwoky76n27d2gr\">Http 请求永远不会发出 <code>ErrorEvent</code>。改用 <code>ProgressEvent</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/getModuleFactory\"><code>getModuleFactory</code></a></td>\n<td align=\"left\"><code><a href=\"api/core/getNgModuleById\" class=\"code-anchor\">getNgModuleById</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edh4bth2v06efgamzts5gasvm\"><code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> 本身已被弃用。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ModuleWithComponentFactories\"><code>ModuleWithComponentFactories</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73sge2u2r4dhz6clcby81bor0\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/Compiler\"><code>Compiler</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73sge2u2r4dhz6clcby81bor0\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/CompilerFactory\"><code>CompilerFactory</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73sge2u2r4dhz6clcby81bor0\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/NgModuleFactory\"><code>NgModuleFactory</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zcv7p6n1jkms99j3i4hk9sxy\">此类主要是作为基于 ViewEngine 的 JIT API 的一部分，在 Ivy JIT 模式下不再需要。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。 Angular 提供了能直接接受 NgModule 类的 API（例如<a href=\"api/core/PlatformRef#bootstrapModule\"><code>PlatformRef.bootstrapModule</code></a>和<a href=\"api/core/createNgModuleRef\"><code>createNgModuleRef</code></a> ），考虑切换到这些 API 而不再使用基于工厂的 API。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b82cbpvnq3vcgxgseyhrk7hga\">Angular 不再需要 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 。其他 API 允许直接使用组件类。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ComponentFactoryResolver\"><code>ComponentFactoryResolver</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b82cbpvnq3vcgxgseyhrk7hga\">Angular 不再需要 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 。其他 API 允许直接使用组件类。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50a4oxemkbnyw3s03b1w5hdly\"><a href=\"api/core/CompilerOptions\"><code>CompilerOptions</code></a>中的 <code>useJit</code> 和 <code>missingTranslation</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yq6lebfh4cb1esqo9nceeok2\">Ivy JIT 模式不支持这些选项。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/platform-browser-dynamic/JitCompilerFactory\"><code>JitCompilerFactory</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73sge2u2r4dhz6clcby81bor0\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/platform-browser-dynamic/RESOURCE_CACHE_PROVIDER\"><code>RESOURCE_CACHE_PROVIDER</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xkof0j533u226yv6p5dcih6l\">以前在某些情况下需要使用 View Engine 测试 AOT 编译的组件，但自 Ivy 以来不再需要。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ayph4nfwjye2njehe48e8uuqe\">路由器<a href=\"api/router/ExtraOptions\"><code>ExtraOptions</code></a>中的 <code>relativeLinkResolution</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ibu82h7ttao0u2a6zrck3d0o\">切换到默认的 <code>'corrected'</code> 链接解析方式</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cijv67oyzhzgx4jeba0xiuqcz\">引入此选项是为了以向后兼容的方式修复具有链接解析的错误。仍然依赖于有问题的旧版行为的现有应用程序应该切换到更正后的新行为并停止传递此标志。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8bfaycx4vadbhtab80l9r8jxd\"><a href=\"api/router/RouterOutletContract#activateWith\"><code>RouterOutletContract.activateWith</code></a>中的 <code>resolver</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9or0ha74tg4mw8m42ak57iifz\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>和\n<code><a href=\"api/core/ComponentFactoryResolver\" class=\"code-anchor\">ComponentFactoryResolver</a></code>已被弃用，不再需要传递解析器参数来检索\n<code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"52fqsglgzrbn794vnvbbryylf\"><a href=\"https://v14.angular.io/api/router/OutletContext#resolver\">`OutletContext#resolver</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bqxdxpf5r0nhscdsqpo5pmsk\">不适用</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2b664hpx1w129ghuh5nyx2y62\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 和 <code><a href=\"api/core/ComponentFactoryResolver\" class=\"code-anchor\">ComponentFactoryResolver</a></code> 已经弃用，不再需要传 resolver 参数以获取 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://v14.angular.io/api/service-worker/SwUpdate#activated\"><code>SwUpdate#activated</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"46sma5ftt2xd0u85m0x21n1yu\"><a href=\"api/service-worker/SwUpdate#activateUpdate\"><code>SwUpdate#activateUpdate</code></a>的返回值</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6b1bx8xtulxzuzgkn1syvp2b\"><code>activated</code> 属性已被弃用。现有用法可以迁移到<a href=\"api/service-worker/SwUpdate#activateUpdate\"><code>SwUpdate#activateUpdate</code></a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://v14.angular.io/api/service-worker/SwUpdate#available\"><code>SwUpdate#available</code></a></td>\n<td align=\"left\"><a href=\"https://v14.angular.io/api/service-worker/SwUpdate#versionUpdates\"><code>SwUpdate#versionUpdates</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6z16bankyh2oeyvhwycwocnlb\"><a href=\"https://v14.angular.io/api/service-worker/SwUpdate#available\"><code>SwUpdate#available</code></a>的行为可以通过从\n<a href=\"https://v14.angular.io/api/service-worker/VersionReadyEvent\"><code>SwUpdate#versionUpdates</code></a>中过滤\n<code>VersionReadyEvent</code>来实现</td>\n</tr>\n</tbody>\n</table>\n\n  <div class=\"reviewed\">最后复查时间：Tue May 31 2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common/LocationStrategy\n - api/common/http/HttpClient\n - api/common/http/testing/TestRequest\n - api/core/Compiler\n - api/core/CompilerFactory\n - api/core/CompilerOptions\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver\n - api/core/ModuleWithComponentFactories\n - api/core/NgModuleFactory\n - api/core/PlatformRef#bootstrapModule\n - api/core/TransferState\n - api/core/createNgModuleRef\n - api/core/getModuleFactory\n - api/core/getNgModuleById\n - api/core/testing/TestBed\n - api/forms/AbstractControl\n - api/forms/EmailValidator\n - api/forms/FormArray\n - api/forms/FormControl\n - api/forms/FormControlOptions#initialValueIsDefault\n - api/forms/FormControlOptions#nonNullable\n - api/forms/FormGroup\n - api/platform-browser-dynamic/JitCompilerFactory\n - api/platform-browser-dynamic/RESOURCE_CACHE_PROVIDER\n - api/router/ExtraOptions\n - api/router/Navigation\n - api/router/Route\n - api/router/Route#pathMatch\n - api/router/RouterOutletContract#activateWith\n - api/router/Routes\n - api/router/UrlTree\n - api/service-worker/SwUpdate#activateUpdate\n - api/service-worker/SwUpdate#versionUpdates\n - guide/deprecations#jit-api-changes\n - guide/releases#deprecation-policy\n - guide/update-to-version-14#breaking-changes-in-angular-version-14\n - guide/update-to-version-14#changes-and-deprecations-in-version-14\n - guide/update-to-version-14#new-deprecations\n - guide/update-to-version-14#update-angular-cli-applications\n - guide/update-to-version-14#update-angular-to-v14\n - https://github.com/angular/angular/pull/23020\n - https://github.com/angular/angular/pull/33729\n - https://github.com/angular/angular/pull/42803\n - https://github.com/angular/angular/pull/43834\n - https://github.com/angular/angular/pull/43863\n - https://github.com/angular/angular/pull/44573\n - https://github.com/angular/angular/pull/44921\n - https://github.com/angular/angular/pull/45114\n - https://github.com/angular/angular/pull/45176\n - https://github.com/angular/angular/pull/45210\n - https://github.com/angular/angular/pull/45394\n - https://github.com/angular/angular/pull/45487\n - https://github.com/angular/angular/pull/45648\n - https://github.com/angular/angular/pull/45729\n - https://github.com/angular/angular/pull/45735\n - https://update.angular.io\n - https://v14.angular.io/api/router/OutletContext#resolver\n - https://v14.angular.io/api/service-worker/SwUpdate#activated\n - https://v14.angular.io/api/service-worker/SwUpdate#available\n - https://v14.angular.io/api/service-worker/SwUpdate#versionUpdates\n - https://v14.angular.io/api/service-worker/VersionReadyEvent\n-->"}