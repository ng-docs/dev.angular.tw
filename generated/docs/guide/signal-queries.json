{"id":"guide/signal-queries","title":"訊號查詢","contents":"<div class=\"content\">\n  <h1 id=\"signal-queries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"al58ovkri23bhkzbju7vytf9k\">訊號查詢<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#signal-queries\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7tq4tuiafsdh5fjg6upd5x47v\">元件或指令可以定義查詢，查詢子元素並從它們的注入器中讀取數值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ax87wkt9uvslck2z9n4qjhtd\">開發者最常用查詢來檢索對元件、指令、DOM元素等的引用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eutcarm9m9xyzdxvrqnf0apc0\">查詢分為兩類：檢視查詢和內容查詢。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jgygctx70sw2ycvs5ma67fxt\">訊號查詢將查詢結果提供為回應式訊號原語。您可以在\n<code><a href=\"api/core/computed\" class=\"code-anchor\">computed</a></code>和\n<code><a href=\"api/core/effect\" class=\"code-anchor\">effect</a></code>中使用查詢結果，將這些結果與其他訊號組合。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8azagb48szk03py1nekkau9ke\">訊號查詢處於\n<a href=\"/guide/releases#developer-preview\">開發者預覽</a>階段。根據反饋，API可能會更改，而無需經歷 Angular 的棄用週期。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7bk67b0h1ltezn0pc4xv0tx18\">如果您已經熟悉 Angular 查詢，可以直接跳轉到\n<a href=\"guide/signal-queries#comparing-signal-based-queries-to-decorator-based-queries\">比較基於訊號的查詢和基於裝飾器的查詢</a></p>\n<h2 id=\"view-queries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2a5tlqpspdydex6hp9edul2jb\">檢視查詢<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#view-queries\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9f7o8o5f3ird3jfscvyrhbrhe\">檢視查詢從元件自己的樣板（檢視）中的元素中檢索結果。</p>\n<h3 id=\"viewchild\"><code><a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#viewchild\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"axeo86qd9cbqud5k2ylwtwj1f\">您可以使用\n<code><a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a></code>函式宣告針對單個結果的查詢。</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n    template: `\n        &lt;div #el&gt;&lt;/div&gt;\n        &lt;my-component /&gt;\n    `\n})\nexport class TestComponent {\n    // <a href=\"api/animations/query\" class=\"code-anchor\">query</a> for a single result by a string predicate  \n    divEl = <a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a>&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>&gt;('el');       // <a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a>&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>|undefined&gt;\n    // <a href=\"api/animations/query\" class=\"code-anchor\">query</a> for a single result by a type predicate\n    cmp = <a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a>(MyComponent);              // <a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a>&lt;MyComponent|undefined&gt;\n}\n</code-example>\n<h3 id=\"viewchildren\"><code><a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#viewchildren\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65l3xfzv4t2bb6f5bjo61m5iz\">您還可以使用\n<code><a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a></code>函式查詢多個結果。</p>\n<code-example language=\"ts\">\n @<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n    template: `\n        &lt;div #el&gt;&lt;/div&gt;\n        @if (show) {\n            &lt;div #el&gt;&lt;/div&gt;\n        }\n    `\n})\nexport class TestComponent {\n    show = true;\n\n    // <a href=\"api/animations/query\" class=\"code-anchor\">query</a> for <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> results\n    divEls = <a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a>&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>&gt;('el');        // <a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a>&lt;ReadonlyArray&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>&gt;&gt;\n}\n</code-example>\n<h3 id=\"view-query-options\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21hecleojc2h4569hm9tax35e\">檢視查詢選項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#view-query-options\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59ltt1zyjoatrowbm93ear91l\"><code><a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a></code>和\n<code><a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a></code>查詢宣告函式具有類似的簽名，接受兩個引數：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cuqijjy0g5gpk6mzrq2uy2fhz\">一個\n<strong>定位器</strong>來指定查詢目標-可以是一個\n<code>string</code>或任何可注入的標記</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arwih0elwk87ha8e4e3pfc6zw\">一組\n<strong>選項</strong>以調整給定查詢的行為。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dfmwi8fzq0ms9ec7377hmjzfx\">基於訊號的檢視查詢僅接受一個選項：\n<code>read</code>。 \n<code>read</code>選項指示要從對應節點中注入並在最終結果中回傳的結果型別。</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n    template: `&lt;my-component/&gt;`\n})\nexport class TestComponent {\n    // <a href=\"api/animations/query\" class=\"code-anchor\">query</a> for a single result with options\n    cmp = <a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a>(MyComponent, {read: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>});   // <a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a>&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>|undefined&gt;\n}\n</code-example>\n<h2 id=\"content-queries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ay96wu6bnipmgxe6mr7tio2qp\">內容查詢<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#content-queries\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bk1grqdhevgk6iqazqy3myoxf\">內容查詢從元件內容中的元素中檢索結果 - 這些元素巢狀在樣板中使用元件標記內部。</p>\n<h3 id=\"contentchild\"><code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#contentchild\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b8zprc2pyo8ot4ajeyl1wz47f\">你可以使用 \n<code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code> 函式查詢單個結果。</p>\n<code-example language=\"ts\">\n @<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({...})\n export class TestComponent {\n    // <a href=\"api/animations/query\" class=\"code-anchor\">query</a> by a string predicate  \n    headerEl = <a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a>&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>&gt;('h');                    // <a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a>&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>|undefined&gt;\n\n    // <a href=\"api/animations/query\" class=\"code-anchor\">query</a> by a type predicate\n    header = <a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a>(MyHeader);                             // <a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a>&lt;MyHeader|undefined&gt;\n }\n</code-example>\n<h3 id=\"contentchildren\"><code><a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#contentchildren\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"602h0rhv3kkw46pwvkhxjlfmy\">你也可以使用 \n<code><a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a></code> 函式查詢多個結果。</p>\n<code-example language=\"ts\">\n @<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({...})\n export class TestComponent {\n    // <a href=\"api/animations/query\" class=\"code-anchor\">query</a> for <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> results\n    divEls = <a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a>&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>&gt;('h');                  // <a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a>&lt;ReadonlyArray&lt;<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>&gt;&gt;\n }\n</code-example>\n<h3 id=\"content-query-options\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a43dlp424jdrycvcwgt0d0jb8\">內容查詢選項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#content-query-options\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53skkezhv7f4zngm8ryj1ez65\"><code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code> 和 \n<code><a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a></code> 查詢宣告函式具有類似的簽名，接受兩個引數：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cuqijjy0g5gpk6mzrq2uy2fhz\">一個\n<strong>定位器</strong>來指定查詢目標-可以是一個\n<code>string</code>或任何可注入的標記</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arwih0elwk87ha8e4e3pfc6zw\">一組\n<strong>選項</strong>以調整給定查詢的行為。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cugs45okyduw16rpjyybmwav\">內容查詢接受以下選項：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"khjovquzc4sll3ij0vg2ue3g\"><code>descendants</code> 預設情況下，內容查詢僅查詢元件的直接子元素，並不遍歷到子代。如果將此選項更改為 \n<code>true</code>，查詢結果將包括元素的所有子代。然而，即使為 \n<code>true</code>，查詢\n<b>永遠</b>不會遍歷到元件中。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"51idji9gnsvqa9zycu52rzfgu\"><code>read</code> 表示從對應節點中檢索並在最終結果中回傳的結果型別。</li>\n</ul>\n<h3 id=\"required-child-queries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4flhso3g3c7m6lk1svxtvhnrt\">必需的子查詢<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#required-child-queries\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nureowc2qk8w70tsb66yjqkc\">如果子查詢 (\n<code><a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a></code> 或 \n<code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code>) 沒有找到結果，其值為 \n<code>undefined</code>。如果目標元素被 \n<code><a href=\"api/core/if\" class=\"code-anchor\">@if</a></code> 或 \n<code><a href=\"api/core/for\" class=\"code-anchor\">@for</a></code> 等控制流語句隱藏，可能會發生這種情況。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dnodueu7pjac3i3suqelbvb0j\">因此，子查詢回傳一個潛在具有 \n<code>undefined</code> 值的訊號。大多數情況下，特別是對於檢視子查詢，開發者編寫程式碼以確保：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7civr90h3s2pjdyscrk2uzt6\">至少有一個對應結果；</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ocvwb6uu22fnuuh13hbxbohg\">在樣板處理後訪問結果並查詢結果可用。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3tsfbd9k8as1hm4bccvpsekt\">對於這種情況，你可以將子查詢標記為 \n<code>required</code>，以強制至少存在一個對應結果。這將從結果型別簽名中清除 \n<code>undefined</code>。如果 \n<code>required</code> 查詢沒有找到任何結果，Angular 將丟擲錯誤。</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  standalone: true,\n  template: `\n    &lt;div #requiredEl&gt;&lt;/div&gt;\n  `,\n})\nexport class App {\n  existingEl = viewChild.required('requiredEl');     // required and existing result\n  missingEl = viewChild.required('notInATemplate'); // required but NOT existing result\n  \n  ngAfterViewInit() {\n    console.log(this.existingEl()); // OK :-)\n    console.log(this.missingEl());  // Runtime error: result marked as required but not available!\n  }\n}\n</code-example>\n<h2 id=\"results-availability-timing\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3mcjezgkyclrifsk25n59ijt5\">結果可用性時間<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#results-availability-timing\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62tbj3dmbcotmpnvicqs6d2ug\">作為指令實例構造的一部分，訊號查詢作者函式將被執行。這發生在我們能夠建立查詢實例並執行樣板的建立模式以收集任何對應項之前。因此，存在一個時間段，在這段時間內訊號實例已建立（並可讀取），但尚未收集到任何查詢結果。在結果可用之前，預設情況下 Angular 將回傳 \n<code>undefined</code>（對於子查詢）或空陣列（對於子查詢）。在此時訪問必需查詢將丟擲錯誤。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"mez3bscy3nwzpx5w7fo6pzl7\">Angular 惰性計算基於訊號的查詢結果，按需計算。這意味著除非有一個讀取訊號的程式碼路徑，否則不會收集查詢結果。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3lstabuvwnzqy165hqr4z09n\">由於檢視操作 - 無論是透過 Angular 的控制流（\n<code><a href=\"api/core/if\" class=\"code-anchor\">@if</a></code>、\n<code><a href=\"api/core/for\" class=\"code-anchor\">@for</a></code> 等）還是透過直接呼叫 \n<code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> API - 查詢結果可能隨時間變化。當從查詢結果訊號中讀取值時，你可能會隨時間收到不同的值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6yabdhwr9c8vj1w5otgb1mbpc\">注意：為避免在渲染樣板時回傳不完整的查詢結果，Angular 延遲查詢解析，直到完成渲染給定樣板。</p>\n<h2 id=\"query-declarations-functions-and-the-associated-rules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xgxs49bbr3cvd5lcg9ptsv59\">查詢宣告函式和相關規則<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#query-declarations-functions-and-the-associated-rules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8u2n4z1b77k2d71eelkcelnmg\">Angular 編譯器識別的特殊函式包括 \n<code><a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a></code>、\n<code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code>、\n<code><a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a></code> 和 \n<code><a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a></code>。你可以透過初始化元件或指令屬性來使用這些函式宣告查詢。在元件和指令屬性初始化器之外，你無法呼叫這些函式。</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  standalone: true,\n  template: `\n    &lt;div #el&gt;&lt;/div&gt;\n  `,\n})\nexport class App {\n  el = <a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a>('el'); // all good!\n\n  constructor() {\n    const myConst = <a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a>('el'); // NOT SUPPORTED\n  }\n}\n</code-example>\n<h2 id=\"comparing-signal-based-queries-to-decorator-based-queries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e5f7yu16l5aqrist9m73g7j3\">將基於訊號的查詢與基於裝飾器的查詢進行比較<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/signal-queries#comparing-signal-based-queries-to-decorator-based-queries\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vfmf6ep3vr3ac578tqcz5li1\">訊號查詢是一種替代方法，用於替代使用 \n<code>@<a href=\"api/core/ContentChild\" class=\"code-anchor\">ContentChild</a></code>、\n<code>@<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a></code>、\n<code>@<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a></code> 或 \n<code>@<a href=\"api/core/ViewChildren\" class=\"code-anchor\">ViewChildren</a></code> 裝飾器宣告的查詢。這種新方法將查詢結果暴露為訊號，這意味著查詢結果可以與其他訊號（使用 \n<code><a href=\"api/core/computed\" class=\"code-anchor\">computed</a></code> 或 \n<code><a href=\"api/core/effect\" class=\"code-anchor\">effect</a></code>）進行組合並驅動變更檢測。此外，基於訊號的查詢系統還提供其他優點：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b98tw29j0vtm3fgi5lfsfdhb\"><strong>更可預測的時間。</strong> 你可以在查詢結果可用時立即訪問它們。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yb4dkt3q6nauqcybc1pay9m\"><strong>更簡單的 API 表面。</strong> 所有查詢都回傳一個訊號，並且具有多個結果的查詢允許你使用標準陣列處理。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"51qku5aanh1cfm7nh6q5kmtq3\"><strong>改進的型別安全性。</strong> 較少的查詢用例包括 \n<code>undefined</code> 在可能的結果中。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3c20wxlb8ox680voicd89rapp\"><strong>更準確的型別推斷。</strong> 當使用型別斷言或指定顯式 \n<code>read</code> 選項時，TypeScript 可以推斷出更準確的型別。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ptmkvdlpmwev2zlcxtg12sw3\"><strong>更懶惰的更新。</strong> - Angular 懶惰地更新基於訊號的查詢結果；框架只有在你的程式碼明確讀取查詢結果時才會執行工作。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5tik8y3stjvmf0ax4d6czoj5q\">底層查詢機制並沒有太大變化 - 從概念上講，Angular 仍然建立針對樣板（檢視）或內容中的元素的單數『child』或複數『children』查詢。區別在於結果型別和結果可用性的確切時機。宣告基於訊號的查詢的作者格式也發生了變化：作為類別成員的初始化器的 \n<code><a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a></code>、\n<code><a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a></code>、\n<code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code> 和 \n<code><a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a></code> 函式會被 Angular 自動識別。</p>\n\n  \n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /guide/releases#developer-preview\n - api/animations/query\n - api/core/Component\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/ElementRef\n - api/core/Signal\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/computed\n - api/core/contentChild\n - api/core/contentChildren\n - api/core/effect\n - api/core/for\n - api/core/if\n - api/core/viewChild\n - api/core/viewChildren\n - api/forms/SelectMultipleControlValueAccessor\n - guide/signal-queries#comparing-signal-based-queries-to-decorator-based-queries\n - guide/signal-queries#content-queries\n - guide/signal-queries#content-query-options\n - guide/signal-queries#contentchild\n - guide/signal-queries#contentchildren\n - guide/signal-queries#query-declarations-functions-and-the-associated-rules\n - guide/signal-queries#required-child-queries\n - guide/signal-queries#results-availability-timing\n - guide/signal-queries#signal-queries\n - guide/signal-queries#view-queries\n - guide/signal-queries#view-query-options\n - guide/signal-queries#viewchild\n - guide/signal-queries#viewchildren\n-->"}