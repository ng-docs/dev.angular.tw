{"id":"guide/router-tutorial","title":"在單頁面應用中使用 Angular 路由","contents":"<div class=\"content\">\n  <h1 id=\"using-angular-routes-in-a-single-page-application\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"46o14uth7hi11lt332w6q5xb8\">在單頁面應用中使用 Angular 路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#using-angular-routes-in-a-single-page-application\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ppzrxhnjpdcd3v5ktpyf8mxc\">本教學課程將介紹如何建立一個使用多個 Angular 路由的單頁面應用 SPA。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avd9zdg6w0ov2dphgh0dp7j6t\">在 SPA（Single Page Application 單頁面應用）中，所有應用的所有功能都存在於同一個 HTML 頁面中。當用戶訪問應用的各種屬性時，瀏覽器只需渲染那些使用者需要關心的部分，而不用重新載入頁面。這種模式可以顯著改善應用的使用者體驗。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2brrmk2dyqvwdim8j255r8tz\">為了定義使用者如何在應用中導向，你可以使用路由。可以新增一些路由來定義使用者如何從應用的某個部分導向到另一部分。也可以設定一些路由來防範意外或未經授權的行為。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7n3rl7kbvtni3ptiju15z25w4\">要探索本教學課程的範例應用，請參閱<live-example></live-example>。</p>\n<h2 id=\"objectives\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbta8klpv23x9gfh4twoy80po\">目標<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#objectives\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70h77yo149u449vsfxt5r2m3y\">將範例應用的各個屬性組織到一些模組中。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"35hw3aw7np2gu3ipj66xg8e11\">定義如何導向到元件。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43l34wph9ia165pexxzoihj5q\">使用引數把訊息傳給元件。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6zo484f196joy30f76l7xhhgy\">透過巢狀多個路由來構造路由體系。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dwb96wmdxz1dir5f89a3vq052\">檢查使用者是否可以訪問路由。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dw5zsm38cbfqs7fwxxk77z4om\">控制該應用是否可以放棄未儲存的更改。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9djs3b5v0vs0aa8c7dohmlhf\">透過預先獲取路由資料和延遲載入屬性模組來提高效能。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c05ue0uznbjoy1pdi6bwm0myg\">需要特定的條件來載入元件。</li>\n</ul>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5zh2yuyafmn2qaumsdhhvo8n9\">要完成本教學課程，你應該對以下概念有基本的瞭解：</p>\n<ul>\n<li>JavaScript</li>\n<li>HTML</li>\n<li>CSS</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4vtg2wry451tucy201uexb3e4\"><a href=\"cli\">Angular CLI</a></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2md4wpdlbgon5ims4on6pkjw8\">你可能會發現<a href=\"tutorial/tour-of-heroes\">《英雄之旅》教學課程</a>很有用，但這不是必需的。</p>\n<h2 id=\"create-a-sample-application\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bruw2t9iar7oam6yjy176ohbg\">建立一個範例應用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#create-a-sample-application\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a0p9p17hywrjurzhdswafpczp\">使用 Angular CLI，建立一個新的應用<em>angular-router-sample</em>。這個應用程式有兩個元件：<em>crisis-list</em>和<em>heroes-list</em>。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f19ajpykgfylkqg7nz8prmpmy\">建立一個新的 Angular 專案 <em>angular-router-sample</em>。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng new angular-router-sample\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7m5p0hhhbfq912888dgv9mdml\">當系統提示 <code>Would you like to add Angular routing?</code> 時，選擇 <code>N</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekg7ire5wfr2pk4k3xpx6sjtb\">當系統提示 <code>Which stylesheet format would you like to use?</code> 時，選擇 <code>CSS</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y7fju12vi4jlthrkhn7n476n\">一段時間後，一個新專案 <code>angular-router-sample</code> 就準備就緒了。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bg5ggztddband7g78mrugzldl\">在終端上，導向到 <code>angular-router-sample</code> 目錄。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cndom1j9weg4lv711yv63cmb6\">建立一個元件 <em>crisis-list</em>。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component crisis-list\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3tx75849tr8xcv70wbi6vcowh\">在你的程式碼編輯器中，找到檔案 <code>crisis-list.component.html</code> 並用如下 HTML 替換佔位符內容。</p>\n<code-example header=\"src/app/crisis-list/crisis-list.component.html\" path=\"router-tutorial/src/app/crisis-list/crisis-list.component.html\">\n&lt;h3&gt;CRISIS CENTER&lt;/h3&gt;\n&lt;p&gt;Get your crisis here&lt;/p&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"exd8qmu4pruckvpmaaoz6ndjn\">建立第二個元件 <code>heroes-list</code>。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component heroes-list\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73foebm8lgbk59wzbpsheyvu2\">在你的程式碼編輯器中，找到 <code>heroes-list.component.html</code> 檔案，並用如下 HTML 替換佔位符內容。</p>\n<code-example header=\"src/app/heroes-list/heroes-list.component.html\" path=\"router-tutorial/src/app/heroes-list/heroes-list.component.html\">\n&lt;h3&gt;HEROES&lt;/h3&gt;\n&lt;p&gt;Get your heroes here&lt;/p&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"836tq9d1nxnnp29ayuxnjyjkm\">在你的程式碼編輯器中，開啟檔案 <code>app.component.html</code> 並用如下 HTML 替換其內容。</p>\n<code-example header=\"src/app/app.component.html\" path=\"router-tutorial/src/app/app.component.html\" region=\"setup\">\n&lt;h1&gt;Angular <a href=\"api/router/Router\" class=\"code-anchor\">Router</a> Sample&lt;/h1&gt;\n&lt;app-crisis-list&gt;&lt;/app-crisis-list&gt;\n&lt;app-heroes-list&gt;&lt;/app-heroes-list&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"rbtxxyj4wr4fzmzpoxa2s75e\">執行 <code>ng serve</code> 來驗證新應用是否正常執行。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng serve\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ckjv92jxuamm59dj19n89bpp\">開啟瀏覽器訪問 <code>http://localhost:4200</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gh20666kkq5ojt17wlu86wey\">你會看到一個網頁，它由一個標題和兩個元件的 HTML 組成。</p>\n</li>\n</ol>\n<h2 id=\"define-your-routes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyola5y1m9nxg8uatetfffqsu\">定義你的各個路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#define-your-routes\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bshdgcqsoyfwjezctbp7wtpi1\">在本節中，你將定義兩個路由：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9oa5anm5prrc9sqzy8ybnw1he\">路由 <code>/crisis-center</code> 用來開啟 <code>crisis-center</code> 元件。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"sd0g9kbgpe3aheelbsb4yegq\">路由 <code>/heroes-list</code> 用來開啟 <code>heroes-list</code> 元件。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"85yk5m8jypw6m03i23knwplwo\">路由定義是一個 JavaScript 物件。每個路由通常都有兩個屬性。第一個屬性 <code>path</code> 是一個字串，它指定路由的 URL 路徑。第二個屬性 <code>component</code> 是元件類別，它指定應用要為該路由顯示哪個元件。</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pauvn9rfv9wwpjcl59886j7p\">從您的程式碼編輯器中建立並開啟\n<code>app.routes.ts</code>檔案。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4hk0nzudp30lvjfq7zm7ukfau\">為您的應用程式建立並匯出一個路由清單：</li>\n</ol>\n<code-example>\nimport {<a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>} from '@angular/router';\n\nexport const routes = [];\n</code-example>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3zz9hpj3onb7e8e2hk0x9vebb\">為您的前兩個元件新增兩個路由：</li>\n</ol>\n<code-example>\n  {path: 'crisis-list', component: CrisisListComponent},\n  {path: 'heroes-list', component: HeroesListComponent},\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xu9jnb8s59vi8y3oi2i9x3jh\">這個路由清單是一個JavaScript物件陣列，每個物件定義一個路由的屬性。</p>\n<h2 id=\"import-providerouter-from-angularrouter\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nda9odd8pczwz0orc02gtf1f\">從\n<code>@angular/router</code>匯入\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#import-providerouter-from-angularrouter\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mbp8tdqgzvy13mzdevq887zy\">路由允許您根據URL路徑顯示應用程式的特定檢視。 要將此功能新增到您的範例應用程式中，您需要更新\n<code>app.config.ts</code>檔案以使用路由提供者函式\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>。 您從\n<code>@angular/router</code>匯入此提供者函式。</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d6l5gm2jfhdzyrykc1boau2mq\">從您的程式碼編輯器中開啟\n<code>app.config.ts</code>檔案。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3l08j59og1a5wq8pzayvvytbm\">新增以下匯入語句：</li>\n</ol>\n<code-example>\nimport { <a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a> } from '@angular/router';\nimport { routes } from './app.routes';\n</code-example>\n<ol start=\"2\">\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c608d8zc3ohjsp3k552nwe3rj\">更新\n<code>appConfig</code>中的提供者：</li>\n</ol>\n<code-example>\nproviders: [<a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a>(routes)]\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3iw9of2m91xh93zdh4lhl1po6\">對於基於\n<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>的應用程式，請將\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>放入\n<code>AppModule</code>的\n<code>providers</code>清單中，或者將其傳遞給應用程式中的\n<code>bootstrapModule</code>的任何模組中。</p>\n<h2 id=\"update-your-component-with-router-outlet\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bvq3zzxwoh1to9a8buxfhzyr1\">更新你的元件以新增 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#update-your-component-with-router-outlet\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bcccvsegwnsha8414jecgn6sb\">此刻，你已經為應用定義了兩個路由。但是，你的應用仍然在你的 <code>app.component.html</code> 範本中硬編碼著 <code>crisis-list</code> 和 <code>heroes-list</code> 元件。為了讓你的路由正常工作，需要更新範本，以便根據 URL 路徑動態載入一個元件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d90yrknupaq8scwn4po0vit33\">要實現這個功能，你就可以把 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a></code> 指令新增到範本檔案中。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"iu0u9f80e6c0cpfy934pjahh\">在程式碼編輯器中，開啟 <code>app.component.html</code> 檔案。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4t8f8w1m7pz0tcx3ugxbny2wg\">刪除下面這幾行。</p>\n<code-example header=\"src/app/app.component.html\" path=\"router-tutorial/src/app/app.component.html\" region=\"components\">\n&lt;app-crisis-list&gt;&lt;/app-crisis-list&gt;\n&lt;app-heroes-list&gt;&lt;/app-heroes-list&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3h6qsp78md0ugkxcdaoczx2xg\">新增 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a></code> 指令。</p>\n<code-example header=\"src/app/app.component.html\" path=\"router-tutorial/src/app/app.component.html\" region=\"router-outlet\">\n&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b78y59lzgi1wqp8w39xlmr1xd\">在\n<code>app.component.ts</code>中的\n<code>AppComponent</code>的匯入中新增\n<code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code></p>\n</li>\n</ol>\n<code-example>\nimports: [<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a>],\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ce4t9hgwgto45hmej525ewsb0\">在瀏覽器中檢視更新後的應用。你應該只看到應用標題。要檢視 <code>crisis-list</code> 元件，就要把 <code>crisis-list</code> 新增到瀏覽器地址欄的路徑末尾。比如：</p>\n<code-example format=\"https\" language=\"https\">\n\nhttp://localhost:4200/crisis-list\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61jvz47pgchc4serb6vnu54js\">注意，<code>crisis-list</code> 元件會顯示出來。Angular 正在使用你定義的路由來動態載入元件。你可以用同樣的方法載入 <code>heroes-list</code> 元件：</p>\n<code-example format=\"https\" language=\"https\">\n\nhttp://localhost:4200/heroes-list\n\n</code-example>\n<h2 id=\"control-navigation-with-ui-elements\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2l21tyedt0l9wy3p83i54bxiu\">用 UI 元素控制導向<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#control-navigation-with-ui-elements\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"audpyxuvc942spt3dw903dkt4\">目前，你的應用支援兩種路由。但是目前使用這些路由的唯一方法是讓使用者在瀏覽器的地址欄中手動輸入路徑。在本節中，你要新增兩個連結，使用者可以單擊它們在 <code>heroes-list</code> 和 <code>crisis-list</code> 元件之間導向。你還會新增一些 CSS 樣式。雖然這些樣式不是必需的，但它們可以讓你更容易的識別出當前顯示的元件的連結。你將在下一節中新增此功能。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"wblyjov2qglwx1o8uq3z24gz\">開啟 <code>app.component.html</code> 檔案，在標題下方新增以下 HTML。</p>\n<code-example header=\"src/app/app.component.html\" path=\"router-tutorial/src/app/app.component.html\" region=\"nav\">\n&lt;nav&gt;\n  &lt;a class=\"button\" <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/crisis-list\"&gt;Crisis Center&lt;/a&gt; |\n  &lt;a class=\"button\" <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/heroes-list\"&gt;Heroes&lt;/a&gt;\n&lt;/nav&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ntwy6pdjko96wdqxgv5p41fp\">這個 HTML 使用了 Angular 指令 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>。該指令將你定義的路由連線到範本檔案中。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6zwy3q4yf96e9uj2kzfs0bikn\">在\n<code>app.component.ts</code>的\n<code>AppComponent</code>的匯入清單中新增\n<code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>指令</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4hie642ihxmh92y1wdxgvwzs4\">開啟 <code>app.component.css</code> 檔案並新增如下樣式。</p>\n<code-example header=\"src/app/app.component.css\" path=\"router-tutorial/src/app/app.component.css\">\n.button {\n    box-shadow: inset 0 1px 0 0 #ffffff;\n    background: #ffffff linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n    border-radius: 6px;\n    border: 1px solid #dcdcdc;\n    display: inline-block;\n    cursor: pointer;\n    color: #666666;\n    font-family: Arial, sans-serif;\n    font-size: 15px;\n    font-weight: bold;\n    padding: 6px 24px;\n    text-decoration: none;\n    text-shadow: 0 1px 0 #ffffff;\n    outline: 0;\n}\n.activebutton {\n    box-shadow: inset 0 1px 0 0 #dcecfb;\n    background: #bddbfa linear-gradient(to bottom, #bddbfa 5%, #80b5ea 100%);\n    border: 1px solid #84bbf3;\n    color: #ffffff;\n    text-shadow: 0 1px 0 #528ecc;\n}\n\n\n</code-example>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bl9l84npb9q0zwxt0ftzdtfj2\">如果你在瀏覽器中檢視應用，你會看到這兩個連結。單擊某個連結時，會出現相應的元件。</p>\n<h2 id=\"identify-the-active-route\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5aaw65shwz9t5nrnas0p2iryp\">標出活動路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#identify-the-active-route\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3cucxsv8pqtglhow85fs9rtg\">雖然使用者可以使用上一節中新增的連結來瀏覽你的應用，但他們並沒有簡單的方法來確定活動路由是什麼。可以用 Angular 的 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a></code> 指令新增這個功能。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"iu0u9f80e6c0cpfy934pjahh\">在程式碼編輯器中，開啟 <code>app.component.html</code> 檔案。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btowrdfszy9vuiyjceyfvpsxr\">更新 a 標籤以包含 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a></code> 指令。</p>\n<code-example header=\"src/app/app.component.html\" path=\"router-tutorial/src/app/app.component.html\" region=\"routeractivelink\">\n&lt;nav&gt;\n  &lt;a class=\"button\"\n     <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/crisis-list\"\n     <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"activebutton\"\n     ariaCurrentWhenActive=\"page\"&gt;\n    Crisis Center\n  &lt;/a&gt; |\n  &lt;a class=\"button\"\n     <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/heroes-list\"\n     <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"activebutton\"\n     ariaCurrentWhenActive=\"page\"&gt;\n    Heroes\n  &lt;/a&gt;\n&lt;/nav&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ey4owdnfs8cx3gvb814ceizp\">在\n<code>app.component.ts</code>的\n<code>AppComponent</code>的\n<code>imports</code>清單中新增\n<code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code>指令</p>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3yppr1st04ocym39v1g74c7z4\">再次檢視你的申請表。單擊其中一個按鈕時，該按鈕的樣式會自動更新，併為該使用者標出該活動元件。透過新增 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a></code> 指令，可以通知你的應用把一個特定的 CSS 類別應用到當前的活動路由中。在本教學課程中，這個 CSS 類別是 <code>activebutton</code>，但你可以使用任何想要的類別。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bdza8biw9rvh4qpyxih3o2s71\">請注意，我們還為\n<code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a></code>的\n<code>ariaCurrentWhenActive</code>指定了一個值。這可以確保視覺障礙使用者（可能無法感知應用的不同樣式）也能識別活動按鈕。有關更多訊息，請參閱無障礙最佳實踐\n<a href=\"/guide/accessibility#active-links-identification\">活動連結識別部分</a>。</p>\n<h2 id=\"adding-a-redirect\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d7dl9sopp9gc27t9bz5739u6g\">新增一個重導向<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#adding-a-redirect\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4p3x1tgqfqkg8pi3hyio6w4qg\">在本教學課程的這一步中，你將新增一個重導向路由來把使用者導向 <code>/heroes-list</code> 元件。</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e7knlvhxqb1wbp7tk93b9z5d3\">從您的程式碼編輯器中開啟\n<code>app.routes.ts</code>檔案。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dawexx7iv7dbsuqsnmommnmc2\">按照以下方式更新\n<code>routes</code>部分。</li>\n</ol>\n<code-example>\n  {path: '', redirectTo: '/heroes-list', pathMatch: 'full'},\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1z6t9z4wsd5dj2r5aamnp8jq6\">注意這個新路由使用一個空字串作為它的路徑。另外，它還把 <code>component</code> 屬性替換成了這兩個新屬性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ghvm54f9feewnb0zbrlubp2h\">屬性</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>redirectTo</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e938uf1gip8t52ddbfpq56m5q\">此屬性指示Angular將從空路徑重導向到\n<code>heroes-list</code>路徑。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>pathMatch</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7nxxc300veim0gmmbk3jx5q5f\">此屬性指示Angular對應URL的多少。對於本教學課程，您應將此屬性設定為\n<code>full</code>。當路徑為空字串時，建議使用此策略。有關此屬性的更多訊息，請參閱\n<a href=\"api/router/Route\">Route API文件</a>。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"56lzjut8xj6fqp1r1modm8ph1\">現在，當你開啟應用時，它會預設顯示 <code>heroes-list</code> 元件。</p>\n<h2 id=\"adding-a-404-page\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"etw4wyuye7289v04i0wyh1jea\">新增 404 頁面<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#adding-a-404-page\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"asy28897rchmkjn1x3z643xvt\">使用者可以嘗試訪問你尚未定義的路由。為了解決這個問題，最佳做法是顯示一個 404 頁面。在本節中，你將建立一個 404 頁面，並更新路由設定，以便為任何未指定的路由顯示該頁面。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5odn6vmzpv6p35wvm2gd2ur2b\">在終端上，建立一個新的元件 <code>PageNotFound</code>。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component page-not-found\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzkitqtouv3zcgx25x7zodg6\">在程式碼編輯器中，開啟 <code>page-not-found.component.html</code> 檔案並用下面的 HTML 替換它的內容。</p>\n<code-example header=\"src/app/page-not-found/page-not-found.component.html\" path=\"router-tutorial/src/app/page-not-found/page-not-found.component.html\">\n&lt;h2&gt;Page Not Found&lt;/h2&gt;\n&lt;p&gt;We couldn't find that page! Not even with x-ray vision.&lt;/p&gt;\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2exmv2ie9iidvkvab7qwbpt9u\">開啟\n<code>app.routes.ts</code>檔案，並將以下路由新增到路由清單中：</p>\n</li>\n</ol>\n<code-example>\n  {path: '**', component: PageNotFoundComponent}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fpo89176tc1clqg7mkp7xtif\">新路由使用路徑 <code>**</code>。這個路徑是 Angular 表示萬用字元路由的方式。任何與你設定中的路由都不對應的路由都會使用這個路由。</p>\n    <div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5b89gkgy2s3cj02xretgs2y5d\">請注意，萬用字元路由要放在陣列的末尾。路由的順序很重要，因為 Angular 會按順序應用路由並使用所找到的第一個對應項。</p>\n    </div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"uiobw0pt85j3db0ljkeqhb19\">嘗試導向到應用程式中不存在的路由，例如\n<code>http://localhost:4200/powers</code>。 此路由在您的\n<code>app.routes.ts</code>檔案中未定義任何對應項。 但是，由於您定義了萬用字元路由，應用程式會自動顯示您的\n<code>PageNotFound</code>元件。</p>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-tutorial#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"olflv3r4gqp5225wn87tctf6\">你已經有了一個基本的應用程式，它使用 Angular 的路由功能來根據 URL 地址改變使用者可以看到的元件。你還擴充套件了這些屬性，以包含一個重導向，以及一個用來顯示自定義 404 頁面的萬用字元路由。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3zlxk6eimcgv1rctvds5jhbxc\">關於路由的更多訊息，請參閱以下主題：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4komekzloksxs2iyp1mgeljwe\"><a href=\"guide/router\">應用內路由和導向</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f32tbnu2aj5akghd0cn3flxm0\"><a href=\"api/router\">路由器 API</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Tue Oct 24 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/example-apps-list\n - guide/routing-overview\n - guide/routing-with-urlmatcher\n-->\n<!-- links from this doc:\n - /guide/accessibility#active-links-identification\n - api/core/NgModule\n - api/router\n - api/router/Route\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterOutlet\n - api/router/Routes\n - api/router/provideRouter\n - cli\n - guide/router\n - guide/router-tutorial#adding-a-404-page\n - guide/router-tutorial#adding-a-redirect\n - guide/router-tutorial#control-navigation-with-ui-elements\n - guide/router-tutorial#create-a-sample-application\n - guide/router-tutorial#define-your-routes\n - guide/router-tutorial#identify-the-active-route\n - guide/router-tutorial#import-providerouter-from-angularrouter\n - guide/router-tutorial#next-steps\n - guide/router-tutorial#objectives\n - guide/router-tutorial#prerequisites\n - guide/router-tutorial#update-your-component-with-router-outlet\n - guide/router-tutorial#using-angular-routes-in-a-single-page-application\n - tutorial/tour-of-heroes\n-->"}