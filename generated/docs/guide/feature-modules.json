{"id":"guide/feature-modules","title":"特性模块","contents":"<div class=\"content\">\n  <h1 id=\"feature-modules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bf4qau51t25zl7c84rwr3a4f\">特性模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/feature-modules#feature-modules\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9d2kzc8u7qck2znv56nw9m765\">特性模块是用来对代码进行组织的模块。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16geite9hiew7mpg7sj141q89\">要想查看本页提到的这个带有特性模块的范例应用，参阅 <live-example></live-example>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7u3kdym9f2adg5vji86gxk8ia\">随着应用的增长，你可能需要组织与特定应用有关的代码。\n这将帮你把特性划出清晰的边界。使用特性模块，你可以把与特定的功能或特性有关的代码从其它代码中分离出来。\n为应用勾勒出清晰的边界，有助于开发人员之间、小组之间的协作，有助于分离各个指令，并帮助管理根模块的大小。</p>\n<h2 id=\"feature-modules-vs-root-modules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqxwz5vg5splvi09jha5fyq81\">特性模块 vs. 根模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/feature-modules#feature-modules-vs-root-modules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"77kg3qac2hbb8v4kes46ohhvk\">与核心的 Angular API 的概念相反，特性模块是最佳的组织方式。特性模块提供了聚焦于特定应用需求的一组功能，比如用户工作流、路由或表单。\n虽然你也可以用根模块做完所有事情，不过特性模块可以帮助你把应用划分成一些聚焦的功能区。特性模块通过它提供的服务以及共享出的组件、指令和管道来与根模块和其它模块合作。</p>\n<h2 id=\"how-to-make-a-feature-module\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jcazmx5d98oytp4pisxx0dip\">如何制作特性模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/feature-modules#how-to-make-a-feature-module\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4yk0damb7qdi9g2s51u1y6h83\">如果你已经有了 <a href=\"cli\">Angular CLI</a> 生成的应用，可以在项目的根目录下输入下面的命令来创建特性模块。把这里的 <code>CustomerDashboard</code> 替换成你的模块名。你可以从名字中省略掉“Module”后缀，因为 CLI 会自动追加上它：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate module CustomerDashboard\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a0pyi66xi2ptfppcdku005sdx\">这会让 CLI 创建一个名叫 <code>customer-dashboard</code> 的文件夹，其中有一个名叫 <code>customer-dashboard.module.ts</code>，内容如下：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> } from '@angular/common';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a>\n  ],\n  declarations: []\n})\nexport class CustomerDashboardModule { }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tg7dxpv2z798aj40sb988qpn\">无论根模块还是特性模块，其 NgModule 结构都是一样的。在 CLI 生成的特性模块中，在文件顶部有两个 JavaScript 的导入语句：第一个导入了 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>，它像根模块中一样让你能使用 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 装饰器；第二个导入了 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>，它提供了很多像 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 和 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 这样的常用指令。\n特性模块导入 <code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code>，而不是 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>，后者只应该在根模块中导入一次。\n<code><a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a></code> 只包含常用指令的信息，比如 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 和 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>，它们在大多数模板中都要用到，而 <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code> 为浏览器所做的应用配置只会使用一次。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64i4ti54m0vczvw2ggzgurseh\"><code>declarations</code> 数组让你能添加专属于这个模块的可声明对象（组件、指令和管道）。\n要添加组件，就在命令行中输入如下命令，这里的 <code>customer-dashboard</code> 是一个目录，CLI 会把特性模块生成在这里，而 <code>CustomerDashboard</code> 就是该组件的名字：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate component customer-dashboard/CustomerDashboard\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27dsy440xsaiqmkfj6i9dkb0o\">这会在 <code>customer-dashboard</code> 中为新组件生成一个目录，并使用 <code>CustomerDashboardComponent</code> 的信息修改这个特性模块：</p>\n<code-example header=\"src/app/customer-dashboard/customer-dashboard.module.ts\" path=\"feature-modules/src/app/customer-dashboard/customer-dashboard.module.ts\" region=\"customer-dashboard-component\">\n// import the new component\nimport { CustomerDashboardComponent } from './customer-dashboard/customer-dashboard.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a>\n  ],\n  declarations: [\n    CustomerDashboardComponent\n  ],\n})\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"402xuabs06c1t6vo5h5eoh1j9\"><code>CustomerDashboardComponent</code> 出现在了顶部的 JavaScript 导入列表里，并且被添加到了 <code>declarations</code> 数组中，它会让 Angular 把新组件和这个特性模块联系起来。</p>\n<h2 id=\"importing-a-feature-module\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6dll9l77n9l9br0f3ny04x0k\">导入特性模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/feature-modules#importing-a-feature-module\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1vx73d0atpaeikxo2eoe4lmk6\">要想把这个特性模块包含进应用中，你还得让根模块 <code>app.module.ts</code> 知道它。注意，在 <code>customer-dashboard.module.ts</code> 文件底部 <code>CustomerDashboardModule</code> 的导出部分。这样就把它暴露出来，以便其它模块可以拿到它。要想把它导入到 <code>AppModule</code> 中，就把它加入 <code>app.module.ts</code> 的导入表中，并将其加入 <code>imports</code> 数组：</p>\n<code-example header=\"src/app/app.module.ts\" path=\"feature-modules/src/app/app.module.ts\" region=\"app-module\">\nimport { <a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a> } from '@angular/common/<a href=\"api/common/http\" class=\"code-anchor\">http</a>';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> } from '@angular/forms';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n// import the feature module here so you can add it to the imports array below\nimport { CustomerDashboardModule } from './customer-dashboard/customer-dashboard.module';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n    <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>,\n    <a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a>,\n    CustomerDashboardModule // add the feature module here\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qop5qz9r6ls28opgxir07pxh\">现在 <code>AppModule</code> 知道这个特性模块了。如果你往该特性模块中加入过任何服务提供者，<code>AppModule</code> 也同样会知道它，其它模块中也一样。不过，NgModule 并不会暴露出它们的组件。</p>\n<h2 id=\"rendering-a-feature-modules-component-template\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6setre8jqluggrhei0ekhra9j\">渲染特性模块的组件模板<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/feature-modules#rendering-a-feature-modules-component-template\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzpqysevg9iyz9xrb6durbi7u\">当 CLI 为这个特性模块生成 <code>CustomerDashboardComponent</code> 时，还包含一个模板 <code>customer-dashboard.component.html</code>，它带有如下页面脚本：</p>\n<code-example header=\"src/app/customer-dashboard/customer-dashboard/customer-dashboard.component.html\" path=\"feature-modules/src/app/customer-dashboard/customer-dashboard/customer-dashboard.component.html\" region=\"feature-template\">\n&lt;p&gt;\n  customer-dashboard works!\n&lt;/p&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7cqn1spicb1j0zr6wdke8kcr0\">要想在 <code>AppComponent</code> 中查看这些 HTML，你首先要在 <code>CustomerDashboardModule</code> 中导出 <code>CustomerDashboardComponent</code>。\n在 <code>customer-dashboard.module.ts</code> 中，<code>declarations</code> 数组的紧下方，加入一个包含 <code>CustomerDashboardModule</code> 的 <code>exports</code> 数组：</p>\n<code-example header=\"src/app/customer-dashboard/customer-dashboard.module.ts\" path=\"feature-modules/src/app/customer-dashboard/customer-dashboard.module.ts\" region=\"component-exports\">\nexports: [\n  CustomerDashboardComponent\n]\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"douu83oy0rlym1gzquqmtikku\">然后，在 <code>AppComponent</code> 的 <code>app.component.html</code> 中，加入标签 <code>&lt;app-customer-dashboard&gt;</code>：</p>\n<code-example header=\"src/app/app.component.html\" path=\"feature-modules/src/app/app.component.html\" region=\"app-component-template\">\n&lt;h1&gt;\n  {{title}}\n&lt;/h1&gt;\n\n&lt;!-- add the selector from the CustomerDashboardComponent --&gt;\n&lt;app-customer-dashboard&gt;&lt;/app-customer-dashboard&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xldnueeqk2mmunvno4ns840c\">现在，除了默认渲染出的标题外，还渲染出了 <code>CustomerDashboardComponent</code> 的模板：</p>\n<div class=\"lightbox\">\n<img alt=\"feature module component\" src=\"generated/images/guide/feature-modules/feature-module.png\" width=\"594\" height=\"408\">\n</div>\n<h2 id=\"more-on-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4zpukz8usqrzb3byrzbogm52l\">关于 NgModule 的更多知识<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/feature-modules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"320pd4quk21g01cifflgmc0pj\">你可能还对下列内容感兴趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a488aahakf9yx5yykgy1ln7dv\"><a href=\"guide/lazy-loading-ngmodules\">使用 Angular 路由器惰性加载模块</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d0n6et5hry7sni1qgcd1web7k\"><a href=\"guide/providers\">服务提供者</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4bot5kxk6jyhqjbnbem8f1gew\"><a href=\"guide/module-types\">特性模块的分类</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/example-apps-list\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/ngmodules\n - guide/testing-components-scenarios\n-->\n<!-- links from this doc:\n - api/common/CommonModule\n - api/common/NgFor\n - api/common/NgIf\n - api/common/http\n - api/common/http/HttpClientModule\n - api/core/NgModule\n - api/forms/FormsModule\n - api/platform-browser/BrowserModule\n - cli\n - guide/feature-modules#feature-modules\n - guide/feature-modules#feature-modules-vs-root-modules\n - guide/feature-modules#how-to-make-a-feature-module\n - guide/feature-modules#importing-a-feature-module\n - guide/feature-modules#more-on-ngmodules\n - guide/feature-modules#rendering-a-feature-modules-component-template\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/providers\n-->"}