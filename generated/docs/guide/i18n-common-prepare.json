{"id":"guide/i18n-common-prepare","title":"準備翻譯元件","contents":"<div class=\"content\">\n  <h1 id=\"prepare-component-for-translation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bj8f466inlapqxogmicf5uhy\">準備翻譯元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#prepare-component-for-translation\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9o7ztlbvk0ts8s8q5xtz84yhx\">要準備翻譯專案，請完成以下操作。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9p04i909fe924mw5ei05yxh68\">使用 <code>i18n</code> 屬性標記元件樣板中的文字</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jthrd6b8u6ehqbh0hhlc8ndw\">使用 <code>i18n-</code> 屬性在元件樣板中標記屬性文字字串</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"etaph6jcpiu2d88hb6mejmt3d\">使用帶 <code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code> 標記的訊息字串標記元件程式碼中的文字字串</li>\n</ul>\n<h2 id=\"mark-text-in-component-template\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bswwv0jfsbyxsbi3pm7xs3i1\">在元件樣板中標記文字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#mark-text-in-component-template\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"32qoc8a22n4zw6fane2uwum5n\">在元件樣板中，i18n 元資料就是 <code>i18n</code> 屬性的值。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;element i18n=\"{i18n_metadata}\"&gt;{string_to_translate}&lt;/element&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"300seipmuow9mvyvq6zirnhiu\">使用 <code>i18n</code> 屬性在元件樣板中標記靜態文字訊息以進行翻譯。將它放在每個包含要翻譯的固定文字的元素標籤上。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"63hs2uuhhr5haaxwijrwire0u\"><code>i18n</code> 屬性是供 Angular 工具和編譯器識別的自定義屬性。</p>\n</div>\n<h3 id=\"i18n-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9k4b6jj7xat5pm0lhi820hqc4\"><code>i18n</code> 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#i18n-example\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dze9gfxl7xtshnqglbhvzyeue\">下面的 <code>&lt;h1&gt;</code> 標籤顯示了一個簡單的英語問候語：『Hello i18n！』。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"greeting\">\n&lt;h1&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtuwoqvnnpe9ip9vl9i0zf3gs\">要把這個問候語標記為要翻譯的，請把 <code>i18n</code> 屬性新增到 <code>&lt;h1&gt;</code> 標籤上。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute\">\n&lt;h1 i18n&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<h3 id=\"translate-inline-text-without-html-element\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"azj0l5kpw4kit2h5b6n14fmkq\">翻譯沒有 HTML 元素的行內文字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#translate-inline-text-without-html-element\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agnnh1gmt6lmact2dj2xvadx3\">使用 <code><a href=\"api/core/ng-container\" class=\"code-anchor\">&lt;ng-container&gt;</a></code> 元素來為特定文字關聯翻譯行為，而不會改變文字的顯示方式。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5new8xwiv1j0vg4tcxv2jem1e\">每個 HTML 元素都會建立一個新的 DOM 元素。要想避免建立新的 DOM 元素，請將文字包裹在 <code><a href=\"api/core/ng-container\" class=\"code-anchor\">&lt;ng-container&gt;</a></code> 元素中。以下範例顯示瞭如何將 <code><a href=\"api/core/ng-container\" class=\"code-anchor\">&lt;ng-container&gt;</a></code> 元素轉換為不顯示的 HTML 註解。</p>\n<code-example path=\"i18n/src/app/app.component.html\" region=\"i18n-ng-container\">\n&lt;ng-container i18n&gt;I don't output any element&lt;/ng-container&gt;\n\n</code-example>\n</div>\n<h2 id=\"mark-element-attributes-for-translations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7q2zgpld40cysfgz7gzx5zuoa\">標記要翻譯的元素屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#mark-element-attributes-for-translations\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c2j3b3k7angicbrbj3tdk32pf\">在元件樣板中，i18n 的元資料是 <code>i18n-{attribute_name}</code> 屬性的值。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;element i18n-{attribute_name}=\"{i18n_metadata}\" {attribute_name}=\"{attribute_value}\" /&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9iv3toenjec7fzym5c2i23jgm\">HTML 元素的屬性包括那些要和元件樣板中顯示的其它文字一起翻譯的文字。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"xz369t8a1s4dvpp7w9i2v50l\">將 <code>i18n-{attribute_name}</code> 與任何元素的任何屬性一起使用，並將 <code>{attribute_name}</code> 替換為該屬性的名稱。使用以下語法分配含義、描述和自定義 ID。</p>\n<!--todo: replace with code-example -->\n<code-example format=\"html\" language=\"html\">\n\ni18n-{attribute_name}=\"{meaning}|{description}@@{id}\"\n\n</code-example>\n<h3 id=\"i18n-title-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cte4jqg0jt4hl5no6ae1v2o35\"><code>i18n-title</code> 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#i18n-title-example\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"q4t3wu1jdqau59opxnlnd2lm\">要翻譯影象的標題，請檢視此範例。以下範例顯示具有 <code>title</code> 屬性的影象。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-title\">\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> [src]=\"logo\" title=\"Angular logo\" alt=\"Angular logo\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eztubtdusne04u4biabi70u83\">要標記出待翻譯的標題屬性，請完成以下操作。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"asahiu9kqhhsu6wugauc2m015\">新增 <code>i18n-title</code> 屬性</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f36m3tkxbzyrkjr0okdxldrt3\">下面的範例展示了如何透過新增 <code>i18n-title</code> 來標記出 <code><a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a></code> 標籤上的 <code>title</code> 屬性。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/src/app/app.component.html\" region=\"i18n-title-translate\">\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> [src]=\"logo\" i18n-title title=\"Angular logo\" alt=\"Angular logo\"/&gt;\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"mark-text-in-component-code\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ixewfve30f6doy28b267hdt5\">在元件程式碼中標記文字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#mark-text-in-component-code\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"boehnif927l7ipd9zb76k3szg\">在元件程式碼中，翻譯源文字和元資料被反引號 （<code>`</code>） 字元包圍。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zlceuq5ozbzb19bh1wp5rhxv\">使用 <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API  | Angular\"> <code>$localize</code> </a> 標記的訊息字串在程式碼中標記出要翻譯的字串。</p>\n<!--todo: replace with code-example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\n$localize `string_to_translate`;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a12uc8h1u9vqqs1h4k6jo9r1i\">i18n 元資料包裹在冒號 （<code>:</code>） 字元中，並放在翻譯源文字之前。</p>\n<!--todo: replace with code-example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\n$localize `:{i18n_metadata}:string_to_translate`\n\n</code-example>\n<h3 id=\"include-interpolated-text\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6etguknm7ecytmiqi8ubujld7\">包含內嵌文字<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#include-interpolated-text\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6hljrmlphz2jewayt135d5ca2\">在 <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API  | Angular\"><code>$localize</code></a> 標記的訊息字串中包含<a href=\"guide/glossary#interpolation\" title=\"interpolation - Glossary | Angular\">內嵌文字</a>。</p>\n<!--todo: replace with code-example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\n$localize `string_to_translate ${variable_name}`;\n\n</code-example>\n<h3 id=\"name-the-interpolation-placeholder\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"98bhej84al1celqk7vixvu7z5\">命名內嵌佔位符<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#name-the-interpolation-placeholder\"><i class=\"material-icons\">link</i></a></h3>\n<code-example format=\"typescript\" language=\"typescript\">\n\n$localize `string_to_translate ${variable_name}:placeholder_name:`;\n\n</code-example>\n<h2 id=\"i18n-metadata-for-translation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7686otfhj9dqmq5p227sfimx\">用於翻譯的 i18n 元資料<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#i18n-metadata-for-translation\"><i class=\"material-icons\">link</i></a></h2>\n<!--todo: replace with code-example -->\n<code-example>\n\n{meaning}|{description}@@{custom_id}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bf40me0dwkps3tphz93ilng14\">以下引數提供上下文和附加訊息，以避免翻譯人員弄混。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ca66ndnjhx2n1ocwfx2kahif\">元資料引數</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adglv61k66nzykq5yloiw83lt\">自定義識別符號</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ck5ncauvkmhfowmdlw09aa8mt\">提供一個自定義識別符號</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ar5q09mdsagdppsbze96eagxl\">說明</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9p9pttn8bnd36zd7yv7ahcmv0\">提供額外訊息或上下文</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ryq83o4vnwnm29aax9uihwua\">含義</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ovibrynhlte5ibov2agkcnlr\">在特定上下文中提供文字的含義或意圖</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3efybsuq052q74jtzurc6qlml\">有關自定義 ID 的其他訊息，請參閱<a href=\"guide/i18n-optional-manage-marked-text\" title=\"Manage marked text with custom IDs | Angular\">使用自定義 ID 管理已標記的文字</a>。</p>\n<h3 id=\"add-helpful-descriptions-and-meanings\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f2m0h2q6vyarvibnzpygfmtcc\">新增有用的描述和含義<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#add-helpful-descriptions-and-meanings\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"baifmsl5hjofdhuuc9n1r1dxe\">要準確翻譯文字訊息，就要為翻譯人員提供額外訊息或上下文。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"acc574xj6hz6d1740ospz87em\">為 <code>i18n</code> 屬性的值或 <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API  | Angular\"> <code>$localize</code> </a> 標記的訊息字串新增文字訊息的<em>描述</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekx00z42j9x9f6h82jr1iu7kh\">以下範例顯示了 <code>i18n</code> 屬性的值。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-desc\">\n&lt;h1 i18n=\"An introduction header for this sample\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1lf8j8fr2vmtsi04xjdlhff1b\">以下範例顯示了帶有描述的 <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API  | Angular\"><code>$localize</code></a> 標記訊息字串的值。</p>\n<!--todo: replace with code-example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\n$localize `:An introduction header for this sample:Hello i18n!`;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3e6inxjdvxpafmcl9kfm9fhfq\">翻譯者可能還需要瞭解該特定應用上下文中此文字訊息的含義或意圖，以便以與具有相同含義的其他文字相同的方式對其進行翻譯。把<em>含義</em>放在 <code>i18n</code> 屬性值的最前面，並用 <code>|</code> 字元將其與<em>描述</em>分開：<code>{meaning}|{description}</code>。</p>\n<h4 id=\"h1-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avkp4et228le4h1nvgu3op614\"><code>h1</code> 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#h1-example\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2a0blhk1k4e96e1qd26dv02hz\">比如，你可能希望將 <code>&lt;h1&gt;</code> 標記指定為需要以相同方式翻譯的站點標題，無論是把它用作標題還是在其他文字部分中引用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b81kxcvj0wbc1td37yvo2t2cn\">以下範例顯示如何指定 <code>&lt;h1&gt;</code> 標記無論在標題還是在別處引用都要以相同方式翻譯。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-meaning\">\n&lt;h1 i18n=\"site header|An introduction header for this sample\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3snm77wwpxbrvfr9b847du1lc\">其結果是：任何標有 <code>site header</code> 的文字都會以相同方式翻譯，因為其<em>含義</em>完全相同。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8wum43bsy8nvtb05lqgop6nvq\">以下程式碼範例顯示了帶有含義和描述的 <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API  | Angular\"><code>$localize</code></a> 標記訊息字串的值。</p>\n<!--todo: replace with code-example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\n$localize `:site header|An introduction header for this sample:Hello i18n!`;\n\n</code-example>\n<div class=\"callout is-helpful\">\n<header id=\"how-meanings-control-text-extraction-and-merges\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7781d0igmhpwdesb8tq0tydwy\">含義（meaning）是如何控制文字提取與合併的</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b31rog8ucxp6nn4mo3tv4t4yg\">Angular 提取工具會為樣板中的每個 <code>i18n</code> 屬性生成一個翻譯單元條目。Angular 提取工具會根據<em>含義</em>和<em>描述</em>為每個翻譯單元分配一個唯一的 ID。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1r4obwbgv8y4pj4tlomyhon7o\">有關 Angular 提取工具的更多訊息，請參閱<a href=\"guide/i18n-common-translation-files\" title=\"Work with translation files | Angular\">使用翻譯檔案</a>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ewfat9v7p194eo7ny3him9qh2\">具有不同<em>含義</em>的相同文字元素以不同的 ID 提取。比如，如果單詞『right』在兩個不同的位置使用以下兩個定義，則該單詞將被以不同地方式翻譯並作為不同的翻譯條目合併回應用程式。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8dcfuppotnhhqyg822h5d218h\"><code>correct</code> 如 \"you are right\"</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edaei6hg0auh1l02c51nk718r\"><code>direction</code> 如 \"turn right\"</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7gtox7tk3wjhxs9bxsbkhzo3u\">如果相同的文字元素滿足以下條件，則只會提取一次文字元素並使用相同的 ID。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qib1gtsd2jpzhjbo9t3iuj7n\">相同的含義或定義</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ee9m92u0zpho9cknujz5j39o7\">不同的描述</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xd3843kpxdwt7qf5ary1dzjz\">只要出現相同的文字元素，該翻譯條目就會合併回應用程式。</p>\n</div>\n<h2 id=\"icu-expressions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"88emkq0iydg7j15exjrzju5m2\">ICU 表示式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#icu-expressions\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"861tjswar0o9c9mr94s12a9e3\">ICU 表示式可幫助你在元件樣板中標記出某些條件下的替代文字。ICU 表示式包括一個元件屬性、一個 ICU 子句以及由左花括號 （ <code>{</code> ） 和右花括號 （ <code>}</code> ） 字元包圍的 case 語句。</p>\n<!--todo: replace with code-example -->\n<code-example>\n\n{ component_property, icu_clause, case_statements }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6kikp7qkufsy3glgdn51lb9n9\">元件屬性定義了變數，而 ICU 子句定義了條件文字的型別。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7jgp7i94iucab9bpq0mhbvgoa\">ICU 子句</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ac47tg497yynr26dpzodf0f21\"><a href=\"guide/i18n-common-prepare#mark-plurals\" title=\"標記複數 - 為翻譯準備元件 | Angular\"><code>plural</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xwby12joz1vv8u3hllt6t1w\">標記使用複數數字</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bogvq970y8kg079jma05oti5d\"><a href=\"guide/i18n-common-prepare#mark-alternates-and-nested-expressions\" title=\"標記備用和巢狀表示式 - 為翻譯準備樣板 | Angular\"><code>select</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ambfhwkc13m9bsd8l8gr3o29\">根據您定義的字串值標記備用文字的選擇</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1is2bnnufmwh95vo1svj4t2wi\">為了簡化翻譯，請使用帶有正則表示式的 Unicode 子句（ICU 子句）的國際化元件。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e461ftnblf1hmqutkubkuhdt\">ICU 子句遵循 <a href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules\" title=\"Plural Rules | CLDR - Unicode Common Locale Data Repository | Unicode\">CLDR 複數規則</a> 中指定的 <a href=\"https://unicode-org.github.io/icu/userguide/format_parse/messages\" title=\"ICU Message Format - ICU Documentation | Unicode | GitHub\">ICU 訊息格式</a>。</p>\n</div>\n<h3 id=\"mark-plurals\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ug9871ywbtpksp24gz84dld8\">標出複數形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#mark-plurals\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6tfyhb6q3dy12y3fgw46u131n\">不同的語言有不同的複數規則，這增加了翻譯的難度。因為其他語言環境表達基數的方式不同，你可能需要設定與英語不一致的複數類別。使用 <code>plural</code> 從句來標記當逐字翻譯時可能沒有意義的表示式。</p>\n<!--todo: replace with code-example -->\n<code-example>\n\n{ component_property, plural, pluralization_categories }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ajk7nbjtx8r8bdac7kmwuvyj\">在複數類別之後，輸入由左大括號 （<code>{</code>） 和右大括號 （<code>}</code>） 字元包圍的預設文字（英文）。</p>\n<!--todo: replace with code-example -->\n<code-example>\n\npluralization_category { }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bxnu76lj5xdew3b0re0ja34ly\">以下複數類別適用於英語，可能會根據語言環境而變化。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"94gksjtt6a4bwbn0x6d3do2mz\">複數化類別</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"lzz2v4ucg07faxnpe2bu1wa1\">範例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>zero</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ae31thacealdf8i5lqo4r2fnc\">數量為零</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sodrndzcbl17x5wcw2083s5v\"><code>=0 { }</code> \n<br> \n<code>zero { }</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>one</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ayrkcm3ut1jt66vwjgt5rvquu\">數量為1</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8cbcgnkl10xd23bz7wl8lnc4z\"><code>=1 { }</code> \n<br> \n<code>one { }</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>two</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7kk959nz0h4rwz9r5mh90tren\">數量為2</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1adqn5ad23atp8qc3ti3lbvqb\"><code>=2 { }</code> \n<br> \n<code>two { }</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>few</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9slvbl16qarah7cj178ooppu\">數量為2或更多</td>\n<td align=\"left\"><code>few { }</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>many</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"au4pjt2voj4hw7x4t1zlhg5yd\">數量為大數</td>\n<td align=\"left\"><code>many { }</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>other</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dsoams8ybqgdouw45206gd63\">預設數量</td>\n<td align=\"left\"><code>other { }</code></td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"blk9uaettic3988h9glgal9cl\">如果不能對應任何複數類別，Angular 就會使用 <code>other</code> 來對應缺失類別的標準備用值。</p>\n<!--todo: replace with code-example -->\n<code-example>\n\nother { default_quantity }\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31kabk194h4vfvdmf8ruycwjo\">有關複數類別的更多訊息，請參閱 <a href=\"https://cldr.unicode.org\" title=\"Unicode CLDR Project\">CLDR - Unicode Common Locale Data Repository</a> 中的<a href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Choosing-Plural-Category-Names\" title=\"Choosing Plural Category Names - Plural Rules | CLDR - Unicode Common Locale Data Repository | Unicode\">選擇複數類別名稱</a>。</p>\n</div>\n<div class=\"callout is-important\">\n<header id=\"background-locales-may-not-support-some-pluralization-categories\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0nlzyxjp2l6ed3339wyalyn5\">背景：語言環境可能不支援某些複數類別</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zim08s3lyi6b1esis834s0c2\">許多語言環境不支援某些複數類別。預設語言環境 (<code>en-US</code>) 使用一個非常簡單的 <code>plural()</code> 函式，該函式不支援 <code>few</code> 複數類別。另一個具有簡單 <code>plural()</code> 函式的語言環境是 <code>es</code>。以下程式碼範例顯示了 <a href=\"https://github.com/angular/angular/blob/ecffc3557fe1bff9718c01277498e877ca44588d/packages/core/src/i18n/locale_en.ts#L14-L18\" title=\"Line 14 to 18 - angular/packages/core/src/i18n/locale_en.ts | angular/angular | GitHub\">en-US 多重 <code>plural()</code></a> 函式。</p>\n<code-example path=\"i18n/doc-files/locale_plural_function.ts\" class=\"no-box\" hidecopy=\"\">\nfunction plural(n: number): number {\n  let i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n  if (i === 1 &amp;&amp; v === 0) return 1;\n  return 5;\n}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"av5b9d5gbeizs179265scpp7s\"><code>plural()</code> 函式只回傳 1 ( <code>one</code> ) 或 5 ( <code>other</code> )。而 <code>few</code> 類別永遠不會對應到。</p>\n</div>\n<h4 id=\"minutes-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpqsm0ac5iqcfzrcnmaoyjmq\"><code>minutes</code> 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#minutes-example\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbt7cacd7vlnhkbyw43svewo6\">如果你想用英文顯示以下短語，其中 <code>x</code> 是一個數字。</p>\n<!--todo: replace output code-example with screen capture image --->\n<code-example>\n\nupdated x minutes ago\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bfs1hh2yi9rqs9hb6ajfvjm8e\">如果你還想根據 <code>x</code> 的基數顯示以下短語。</p>\n<!--todo: replace output code-example with screen capture image --->\n<code-example>\n\nupdated just now\n\n</code-example>\n<!--todo: replace output code-example with screen capture image --->\n<code-example>\n\nupdated one minute ago\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1o0c1t75i08mlwg5xxuesga7p\">使用 HTML 標記和<a href=\"guide/glossary#interpolation\" title=\"interpolation - Glossary | Angular\">內嵌</a>。下面的程式碼範例展示了如何在 <code>&lt;span&gt;</code> 元素中使用 <code>plural</code> 子句來表達前三種情況。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/src/app/app.component.html\" region=\"i18n-plural\">\n&lt;span i18n&gt;Updated {minutes, plural, =0 {just now} =1 {one minute ago} other {{{minutes}} minutes ago}}&lt;/span&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9daqp66rek38fc0oiyqtqf9j8\">檢視前面程式碼範例中的以下詳細訊息。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2yvleri23pqevh8tr49s6skto\">引數</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>minutes</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"r5rbmlrlckonvh2fipsluwc6\">第一個引數指定元件屬性為\n<code>minutes</code>，並確定分鐘數。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>plural</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5frld0cjvxh6xuu4bcc4lu63r\">第二個引數指定 ICU 子句為\n<code>plural</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>=0 {just now}</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a01gqir99pz6399tepd88oe1p\">對於零分鐘，複數化類別為\n<code>=0</code>。值為\n<code>剛剛</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>=1 {one minute}</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"azvyayfllss2ezjhq0ka95cnj\">對於一分鐘，複數化類別為\n<code>=1</code>。值為\n<code>一分鐘</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>other {{{minutes}} minutes ago}</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cb8q1naau2f5axq9pp4jwzerm\">對於任何未對應的基數，預設的複數化類別為\n<code>other</code>。值為\n<code>{{minutes}}分鐘前</code>。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2azlq420i151a0zz6m8el1jyd\"><code>{{minutes}}</code> 是一個<a href=\"guide/glossary#interpolation\" title=\"interpolation - Glossary | Angular\">內嵌</a>。</p>\n<h3 id=\"mark-alternates-and-nested-expressions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l8jz8jj6o13j59srl1ph4e7f\">標記替代表示式和巢狀表示式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#mark-alternates-and-nested-expressions\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"brfalt75li2d0fapfipdf8foh\"><code>select</code> 子句根據你定義的字串值標記替代文字的選擇。</p>\n<!--todo: replace with code-example -->\n<code-example>\n\n{ component_property, select, selection_categories }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6syoohr6wq6cqse04mgnj35b6\">翻譯所有替代項以根據變數的值顯示替代文字。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e119hi4g0uva3hk5fazbdcfi4\">在選擇類別後，輸入由左大括號 （ <code>{</code> ） 和右大括號 （ <code>}</code> ） 字元包圍的文字（英文）。</p>\n<!--todo: replace with code-example -->\n<code-example>\n\nselection_category { text }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d78r4bwqyl51fillddnwm61z\">不同的語言環境具有不同的語法結構，這增加了翻譯的難度。使用 HTML 標記。如果無法對應任何選擇類別，Angular 就會使用 <code>other</code> 來對應缺失類別的標準備用值。</p>\n<!--todo: replace with code-example -->\n<code-example>\n\nother { default_value }\n\n</code-example>\n<h4 id=\"gender-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"krxf3nrhbvyqdoeo7iw2zcxw\"><code>gender</code> 例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#gender-example\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bybct64j6cm2hhmt4d82ord63\">如果你想用英文顯示下面的短語。</p>\n<!--todo: replace output code-example with screen capture image --->\n<code-example>\n\nThe author is other\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59585fvbln5u66t9ec7ak0283\">如果你還想根據元件的 <code>gender</code> 屬性顯示以下短語。</p>\n<!--todo: replace output code-example with screen capture image --->\n<code-example>\n\nThe author is female\n\n</code-example>\n<!--todo: replace output code-example with screen capture image --->\n<code-example>\n\nThe author is male\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9dqpnytpbbq14ybsc13ikr57o\">下面的程式碼範例展示了如何繫結元件的 <code>gender</code> 屬性，並使用 <code>select</code> 子句在 <code>&lt;span&gt;</code> 元素中表達前三種情況。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4y7q1gq1h8d4k841kvxw6gl08\"><code>gender</code> 屬性將輸出繫結到以下每個字串值。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66vasbp44yre2dcyqjx64g0vw\">數值</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"axlgfsc5jna8uzuso4zl8vtm7\">英文值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">female</td>\n<td align=\"left\"><code>female</code></td>\n</tr>\n<tr>\n<td align=\"left\">male</td>\n<td align=\"left\"><code>male</code></td>\n</tr>\n<tr>\n<td align=\"left\">other</td>\n<td align=\"left\"><code>other</code></td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ypch8wy7l965ths7bpqlpiga\"><code>select</code> 子句會將值對映成適當的翻譯。以下程式碼範例顯示了與 select 子句一起使用的 <code>gender</code> 屬性。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/src/app/app.component.html\" region=\"i18n-select\">\n&lt;span i18n&gt;The author is {gender, select, male {male} female {female} other {other}}&lt;/span&gt;\n\n</code-example>\n<h4 id=\"gender-and-minutes-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fadixvc8n3jjuj7cofa9bel1\"><code>gender</code> 和 <code>minutes</code> 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#gender-and-minutes-example\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ec5pnvaortllf4wkr6mroyzck\">將不同的子句組合在一起，比如 <code>plural</code> 和 <code>select</code> 子句。以下程式碼範例顯示了基於 <code>gender</code> 和 <code>minutes</code> 範例的巢狀子句。</p>\n<code-example header=\"src/app/app.component.html\" path=\"i18n/src/app/app.component.html\" region=\"i18n-nested\">\n&lt;span i18n&gt;Updated: {minutes, plural,\n  =0 {just now}\n  =1 {one minute ago}\n  other {{{minutes}} minutes ago by {gender, select, male {male} female {female} other {other}}}}\n&lt;/span&gt;\n\n</code-example>\n<h2 id=\"whats-next\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"407r2fj2mi5kvg7imj9zdcpe\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-prepare#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"arzc8hk8cqjfsumylt7ssaggv\"><a href=\"guide/i18n-common-translation-files\" title=\"Work with translation files | Angular\">使用翻譯檔案</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - api/localize/init/$localize\n - guide/angular-compiler-options\n - guide/i18n-common-format-data-locale\n - guide/i18n-common-overview\n - guide/i18n-common-translation-files\n - guide/i18n-optional-manage-marked-text\n-->\n<!-- links from this doc:\n - api/common/NgOptimizedImage\n - api/core/ng-container\n - api/localize/init/$localize\n - guide/glossary#interpolation\n - guide/i18n-common-prepare#add-helpful-descriptions-and-meanings\n - guide/i18n-common-prepare#gender-and-minutes-example\n - guide/i18n-common-prepare#gender-example\n - guide/i18n-common-prepare#h1-example\n - guide/i18n-common-prepare#i18n-example\n - guide/i18n-common-prepare#i18n-metadata-for-translation\n - guide/i18n-common-prepare#i18n-title-example\n - guide/i18n-common-prepare#icu-expressions\n - guide/i18n-common-prepare#include-interpolated-text\n - guide/i18n-common-prepare#mark-alternates-and-nested-expressions\n - guide/i18n-common-prepare#mark-element-attributes-for-translations\n - guide/i18n-common-prepare#mark-plurals\n - guide/i18n-common-prepare#mark-text-in-component-code\n - guide/i18n-common-prepare#mark-text-in-component-template\n - guide/i18n-common-prepare#minutes-example\n - guide/i18n-common-prepare#name-the-interpolation-placeholder\n - guide/i18n-common-prepare#prepare-component-for-translation\n - guide/i18n-common-prepare#translate-inline-text-without-html-element\n - guide/i18n-common-prepare#whats-next\n - guide/i18n-common-translation-files\n - guide/i18n-optional-manage-marked-text\n - http://cldr.unicode.org/index/cldr-spec/plural-rules\n - http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Choosing-Plural-Category-Names\n - https://cldr.unicode.org\n - https://github.com/angular/angular/blob/ecffc3557fe1bff9718c01277498e877ca44588d/packages/core/src/i18n/locale_en.ts#L14-L18\n - https://unicode-org.github.io/icu/userguide/format_parse/messages\n-->"}