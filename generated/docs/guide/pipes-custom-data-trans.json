{"id":"guide/pipes-custom-data-trans","title":"為自定義資料轉換建立通道","contents":"<div class=\"content\">\n  <h1 id=\"creating-pipes-for-custom-data-transformations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"byn6vq1dhq9z2si0f3n6ikiod\">為自定義資料轉換建立通道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#creating-pipes-for-custom-data-transformations\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"39jb1lxpmx51dcv8teehy49v8\">建立自定義通道來封裝那些內建通道沒有提供的轉換。然後就可以在樣板表示式中使用自定義通道了，像內建通道一樣，把輸入值轉換成顯示輸出。</p>\n<h2 id=\"marking-a-class-as-a-pipe\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dmncqwy4zdbr1ix9izi238ci4\">把一個類標記為一個通道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#marking-a-class-as-a-pipe\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b7kb7qjqz2u67rs9fzhehfu5r\">要將一個類標記為通道並提供設定元資料，請將 \n<a href=\"/api/core/Pipe\" title=\"Pipe 的 API 參考\"><code>@Pipe</code></a> \n<a href=\"/guide/glossary#decorator--decoration\" title=\"裝飾器的定義\">裝飾器</a> 應用於該類別。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2cwskv5au5gzbsxlpawb90774\">使用<a href=\"guide/glossary#case-types\" title=\"案例型別的定義\">UpperCamelCase</a>（類別名稱的一般約定）作為通道類名，並使用<a href=\"guide/glossary#case-types\" title=\"案例型別的定義\">camelCase</a>作為對應的 <code>name</code> 字串。不要在 <code>name</code> 中使用連字元。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yyq0vhhrcl6uebv8bjpyp7aw\">有關詳細訊息和更多範例，請參閱<a href=\"guide/styleguide#pipe-names\" title=\"Angular 編碼風格指南中的通道名稱\">通道名稱</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59woxknp7rmjrsh7t0u53y0tr\">在樣板表示式中使用 <code>name</code> 就像在內建通道中一樣。</p>\n<div class=\"alert is-important\">\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ehv7whg299d9zf2f68sw5quqx\">將你的通道包含在 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 元資料的 <code>declarations</code> 欄位中，以使其可用於樣板。請參閱範例應用程式中的 <code>app.module.ts</code> 檔案（<live-example></live-example>）。有關詳細訊息，請參閱<a href=\"guide/ngmodules\" title=\"NgModules 介紹\">NgModules</a>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"butqjskv5pxwbqymtlq2hmqbo\">註冊自定義通道。<a href=\"cli\" title=\"CLI 概述和指令參考\">Angular CLI</a> 的 <a href=\"cli/generate#pipe\" title=\"ng 在 CLI Command Reference 中生成通道\"><code>ng generate pipe</code></a> 指令會自動註冊該通道。</li>\n</ul>\n</div>\n<h2 id=\"using-the-pipetransform-interface\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"coz9qgu2vendycp7ynb13ugbr\">使用 PipeTransform 介面<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#using-the-pipetransform-interface\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e5u79qk4nzdwhb58zjzpj2jnj\">在你的自定義通道類中實現 \n<a href=\"/api/core/PipeTransform\" title=\"PipeTransform 的 API 參考\"><code>PipeTransform</code></a> 介面以執行轉換。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6rdwu0ty9ppt7pbhl77s60rk5\">Angular 呼叫 <code>transform</code> 方法，該方法使用繫結的值作為第一個引數，把其它任何引數都以清單的形式作為第二個引數，並回傳轉換後的值。</p>\n<h2 id=\"example-transforming-a-value-exponentially\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8nxbr3fmax5b8puwr1r32cix\">範例：指數級轉換<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-custom-data-trans#example-transforming-a-value-exponentially\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5o59bxhab8w3jz1n0dyos17e\">在遊戲中，可能希望實現一種指數級轉換，以指數級增加英雄的力量。比如，如果英雄的得分是 2，那麼英雄的能量會指數級增長 10 次，最終得分為 1024。你可以使用自定義通道進行這種轉換。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6hxuxz2tjgo19fh04hpo4t8b0\">下列程式碼範例顯示了兩個元件定義：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3irkvq0b44fm6jjn5bwxj8u0\"><code>exponential-strength.pipe.ts</code> 透過一個執行轉換的 <code>transform</code> 方法定義了一個名為 <code>exponentialStrength</code> 的自定義通道。它為傳給通道的引數定義了 <code>transform</code> 方法的一個引數（<code>exponent</code>）。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"egkrtvklbufxvb0lg9cndxqil\"><code>power-booster.component.ts</code> 元件示範了如何使用該通道，指定了一個值（<code>2</code>）和一個 exponent 引數（<code>10</code>）。</li>\n</ul>\n<code-tabs>\n    <code-pane header=\"src/app/exponential-strength.pipe.ts\" path=\"pipes/src/app/exponential-strength.pipe.ts\">\nimport { <a href=\"api/core/Pipe\" class=\"code-anchor\">Pipe</a>, <a href=\"api/core/PipeTransform\" class=\"code-anchor\">PipeTransform</a> } from '@angular/core';\n/*\n * Raise the value exponentially\n * Takes an exponent argument that defaults to 1.\n * Usage:\n *   value | exponentialStrength:exponent\n * Example:\n *   {{ 2 | exponentialStrength:10 }}\n *   formats to: 1024\n*/\n@<a href=\"api/core/Pipe\" class=\"code-anchor\">Pipe</a>({\n  standalone: true,\n  name: 'exponentialStrength'\n})\nexport class ExponentialStrengthPipe implements <a href=\"api/core/PipeTransform\" class=\"code-anchor\">PipeTransform</a> {\n  transform(value: number, exponent = 1): number {\n    return Math.pow(value, exponent);\n  }\n}\n\n\n</code-pane>\n    <code-pane header=\"src/app/power-booster.component.ts\" path=\"pipes/src/app/power-booster.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { ExponentialStrengthPipe } from './exponential-strength.pipe';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-power-booster',\n  template: `\n    &lt;h2&gt;Power Booster&lt;/h2&gt;\n    &lt;p&gt;Super power boost: {{2 | exponentialStrength: 10}}&lt;/p&gt;\n  `,\n  imports: [ExponentialStrengthPipe]\n})\nexport class PowerBoosterComponent { }\n\n\n</code-pane>\n</code-tabs>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"953cupjezya903jzm3cso9rlv\">瀏覽器顯示如下：</p>\n<code-example language=\"none\">\n\nPower Booster\n\nSuperpower boost: 1024\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7qolknuixfxule42whg5wkz4g\">可以到<live-example></live-example>中體驗 <code>exponentialStrength</code> 通道的行為，可以更改樣板中的值和可選的指數值。</p>\n</div>\n\n  <div class=\"reviewed\">最後複查時間：Fri Jan 06 2023</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/core/Pipe\n - /api/core/PipeTransform\n - /guide/glossary#decorator--decoration\n - api/core/Component\n - api/core/NgModule\n - api/core/Pipe\n - api/core/PipeTransform\n - cli\n - cli/generate#pipe\n - guide/glossary#case-types\n - guide/ngmodules\n - guide/pipes-custom-data-trans#creating-pipes-for-custom-data-transformations\n - guide/pipes-custom-data-trans#example-transforming-a-value-exponentially\n - guide/pipes-custom-data-trans#marking-a-class-as-a-pipe\n - guide/pipes-custom-data-trans#using-the-pipetransform-interface\n - guide/styleguide#pipe-names\n-->"}