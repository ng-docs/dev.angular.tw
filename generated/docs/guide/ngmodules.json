{"id":"guide/ngmodules","title":"NgModules","contents":"<div class=\"content\">\n  <h1 id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#ngmodules\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2b6ia9h14jr60su0x6s736v9\"><strong>NgModules</strong> 用于配置注入器和编译器，并帮你把那些相关的东西组织在一起。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ert4850h3x6pbjxmcady993v7\">NgModule 是一个带有 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 装饰器的类。<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的参数是一个元数据对象，用于描述如何编译组件的模板，以及如何在运行时创建注入器。它会标出该模块自己的组件、指令和管道，通过 <code>exports</code> 属性公开其中的一部分，以便外部组件使用它们。<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 还能把一些服务提供者添加到应用的依赖注入器中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c10p8fhbccylhf5adl8vs7951\">要想找一个涉及本章所讲的全部技术的范例，参阅 <live-example></live-example>。\n要想得到针对单项技术的一些讲解，参阅本目录下的相关页面。</p>\n<h2 id=\"angular-modularity\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezl02ydxqb4ynxky4foww77hp\">Angular 模块化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#angular-modularity\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ilamfqmqn5jxfk6hfik72v09\">模块是组织应用和使用外部库扩展应用的最佳途径。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2al0cc7qtc1d3e7rusuwuox5y\">Angular 自己的库都是 NgModule，比如 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>、<code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 和 <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code>。很多第三方库也是 NgModule，比如 <a href=\"https://material.angular.cn\">Material Design</a>、 <a href=\"http://ionicframework.com\">Ionic</a> 和 <a href=\"https://github.com/angular/angularfire2\">AngularFire2</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dv7zzxurp1e0o0u30g8sohzoo\">NgModule 把组件、指令和管道打包成内聚的功能块，每个模块聚焦于一个特性区域、业务领域、工作流或通用工具。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cdd7doxhex4rz4qhohuahhcb4\">模块还可以把服务加到应用中。这些服务可能是内部开发的（比如你自己写的），或者来自外部的（比如 Angular 的路由和 HTTP 客户端）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6op44blqu0dy3ypw9astarco\">模块可以在应用启动时急性加载，也可以由路由器进行异步的惰性加载。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rpwdk3hiiwznfxv7ldu780z9\">NgModule 的元数据会做这些：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2t340tjl3k2r3hkm6f7gqyik\">声明某些组件、指令和管道属于这个模块</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b59lz60ldw7tc20c53en1vas7\">公开其中的部分组件、指令和管道，以便其它模块中的组件模板中可以使用它们</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9o0ex9j1j1wp8bjueoiashcjb\">导入其它带有组件、指令和管道的模块，这些模块中的元件都是本模块所需的</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62yknemskgcc5ioy9o3fo0qiy\">提供一些供应用中的其它组件使用的服务</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vnghl8reb9kvghpazt6x84cq\">每个 Angular 应用都至少有一个模块，也就是根模块。你可以<a href=\"guide/bootstrapping\">引导</a>那个模块，以启动该应用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2smx7biikjt69avnnqwmsueez\">对于那些只有少量组件的简单应用，根模块就是你所需的一切。随着应用的成长，你要把这个根模块重构成一些<a href=\"guide/feature-modules\">特性模块</a>，它们代表一组密切相关的功能集。然后你再把这些模块导入到根模块中。</p>\n<h2 id=\"the-basic-ngmodule\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wm6vcqx58uae24nwua8t17ji\">基本的模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#the-basic-ngmodule\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5o1d9ejhmbznl2ookxrnax9q0\"><a href=\"cli\">Angular CLI</a> 在创建新应用时会生成如下基本模块 <code>AppModule</code>。</p>\n<code-example path=\"ngmodules/src/app/app.module.1.ts\" header=\"src/app/app.module.ts (default AppModule)\">\n// imports\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> decorator with its metadata\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [AppComponent],\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbioyjqd4ctg6dggxz3bqbivh\">文件的顶部是一些导入语句。接下来是你配置 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的地方，用于规定哪些组件和指令属于它（<code>declarations</code>），以及它使用了哪些其它模块（<code>imports</code>）。如果要进一步了解 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的结构，参阅<a href=\"guide/bootstrapping\">引导</a>。</p>\n<h2 id=\"more-on-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4zpukz8usqrzb3byrzbogm52l\">关于 NgModule 的更多知识<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"320pd4quk21g01cifflgmc0pj\">你可能还对下列内容感兴趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fzene1iev0zqe4b7pk810fn2\"><a href=\"guide/feature-modules\">特性模块</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d0n6et5hry7sni1qgcd1web7k\"><a href=\"guide/providers\">服务提供者</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3hygzo20lph5ajazkoynxc49e\"><a href=\"guide/module-types\">NgModule 的分类</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/aot-compiler\n - guide/architecture-components\n - guide/architecture-modules\n - guide/deprecations\n - guide/example-apps-list\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/ngmodule-vs-jsmodule\n - guide/pipes\n - guide/pipes-custom-data-trans\n - guide/testing-services\n - guide/upgrade\n - guide/what-is-angular\n - tutorial/tour-of-heroes/toh-pt1\n-->\n<!-- links from this doc:\n - api/common/http/HttpClientModule\n - api/core/NgModule\n - api/forms/FormsModule\n - api/platform-browser/BrowserModule\n - api/router/RouterModule\n - cli\n - guide/bootstrapping\n - guide/feature-modules\n - guide/module-types\n - guide/ngmodules#angular-modularity\n - guide/ngmodules#more-on-ngmodules\n - guide/ngmodules#ngmodules\n - guide/ngmodules#the-basic-ngmodule\n - guide/providers\n - https://github.com/angular/angularfire2\n - https://ionicframework.com\n - https://material.angular.io\n-->"}