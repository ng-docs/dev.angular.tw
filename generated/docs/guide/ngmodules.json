{"id":"guide/ngmodules","title":"NgModules","contents":"<div class=\"content\">\n  <h1 id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#ngmodules\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2b6ia9h14jr60su0x6s736v9\"><strong>NgModules</strong> 用於設定注入器和編譯器，並幫你把那些相關的東西組織在一起。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ert4850h3x6pbjxmcady993v7\">NgModule 是一個帶有 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 裝飾器的類別。<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的引數是一個元資料物件，用於描述如何編譯元件的範本，以及如何在執行時建立注入器。它會標出該模組自己的元件、指令和通道，透過 <code>exports</code> 屬性公開其中的一部分，以便外部元件使用它們。<code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 還能把一些服務提供者新增到應用的依賴注入器中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c10p8fhbccylhf5adl8vs7951\">要想找一個涉及本章所講的全部技術的範例，參閱 <live-example></live-example>。\n要想得到針對單項技術的一些講解，參閱本目錄下的相關頁面。</p>\n<h2 id=\"angular-modularity\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezl02ydxqb4ynxky4foww77hp\">Angular 模組化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#angular-modularity\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ilamfqmqn5jxfk6hfik72v09\">模組是組織應用和使用外部函式庫擴充套件應用的最佳途徑。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2al0cc7qtc1d3e7rusuwuox5y\">Angular 自己的函式庫都是 NgModule，比如 <code><a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a></code>、<code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 和 <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code>。很多第三方函式庫也是 NgModule，比如 <a href=\"https://material.angular.cn\">Material Design</a>、 <a href=\"http://ionicframework.com\">Ionic</a> 和 <a href=\"https://github.com/angular/angularfire2\">AngularFire2</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dv7zzxurp1e0o0u30g8sohzoo\">NgModule 把元件、指令和通道打包成內聚的功能塊，每個模組聚焦於一個屬性區域、業務領域、工作流或通用工具。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cdd7doxhex4rz4qhohuahhcb4\">模組還可以把服務加到應用中。這些服務可能是內部開發的（比如你自己寫的），或者來自外部的（比如 Angular 的路由和 HTTP 用戶端）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6op44blqu0dy3ypw9astarco\">模組可以在應用啟動時急性載入，也可以由路由器進行非同步的延遲載入。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3rpwdk3hiiwznfxv7ldu780z9\">NgModule 的元資料會做這些：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2t340tjl3k2r3hkm6f7gqyik\">宣告某些元件、指令和通道屬於這個模組</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b59lz60ldw7tc20c53en1vas7\">公開其中的部分元件、指令和通道，以便其它模組中的元件範本中可以使用它們</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9o0ex9j1j1wp8bjueoiashcjb\">匯入其它帶有元件、指令和通道的模組，這些模組中的元件都是本模組所需的</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62yknemskgcc5ioy9o3fo0qiy\">提供一些供應用中的其它元件使用的服務</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vnghl8reb9kvghpazt6x84cq\">每個 Angular 應用都至少有一個模組，也就是根模組。你可以<a href=\"guide/bootstrapping\">引導</a>那個模組，以啟動該應用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2smx7biikjt69avnnqwmsueez\">對於那些只有少量元件的簡單應用，根模組就是你所需的一切。隨著應用的成長，你要把這個根模組重構成一些<a href=\"guide/feature-modules\">屬性模組</a>，它們代表一組密切相關的功能集。然後你再把這些模組匯入到根模組中。</p>\n<h2 id=\"the-basic-ngmodule\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wm6vcqx58uae24nwua8t17ji\">基本的模組<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#the-basic-ngmodule\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5o1d9ejhmbznl2ookxrnax9q0\"><a href=\"cli\">Angular CLI</a> 在建立新應用時會生成如下基本模組 <code>AppModule</code>。</p>\n<code-example path=\"ngmodules/src/app/app.module.1.ts\" header=\"src/app/app.module.ts (default AppModule)\">\n// imports\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> decorator with its metadata\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [AppComponent],\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbioyjqd4ctg6dggxz3bqbivh\">檔案的頂部是一些匯入語句。接下來是你設定 <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的地方，用於規定哪些元件和指令屬於它（<code>declarations</code>），以及它使用了哪些其它模組（<code>imports</code>）。如果要進一步瞭解 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 的結構，參閱<a href=\"guide/bootstrapping\">引導</a>。</p>\n<h2 id=\"more-on-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4zpukz8usqrzb3byrzbogm52l\">關於 NgModule 的更多知識<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodules#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"320pd4quk21g01cifflgmc0pj\">你可能還對下列內容感興趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fzene1iev0zqe4b7pk810fn2\"><a href=\"guide/feature-modules\">屬性模組</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d0n6et5hry7sni1qgcd1web7k\"><a href=\"guide/providers\">服務提供者</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3hygzo20lph5ajazkoynxc49e\"><a href=\"guide/module-types\">NgModule 的分類</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/aot-compiler\n - guide/architecture-components\n - guide/architecture-modules\n - guide/deprecations\n - guide/example-apps-list\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/ngmodule-vs-jsmodule\n - guide/pipes\n - guide/pipes-custom-data-trans\n - guide/testing-services\n - guide/upgrade\n - guide/what-is-angular\n - tutorial/tour-of-heroes/toh-pt1\n-->\n<!-- links from this doc:\n - api/common/http/HttpClientModule\n - api/core/NgModule\n - api/forms/FormsModule\n - api/platform-browser/BrowserModule\n - api/router/RouterModule\n - cli\n - guide/bootstrapping\n - guide/feature-modules\n - guide/module-types\n - guide/ngmodules#angular-modularity\n - guide/ngmodules#more-on-ngmodules\n - guide/ngmodules#ngmodules\n - guide/ngmodules#the-basic-ngmodule\n - guide/providers\n - https://github.com/angular/angularfire2\n - https://ionicframework.com\n - https://material.angular.io\n-->"}