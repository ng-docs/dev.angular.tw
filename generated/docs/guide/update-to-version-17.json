{"id":"guide/update-to-version-17","title":"将 Angular 更新到 v17","contents":"<div class=\"content\">\n  <h1 id=\"update-angular-to-v17\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7hl075hb0ct5da4lmozndm2a7\">将 Angular 更新到 v17<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#update-angular-to-v17\"><i class=\"material-icons\">link</i></a></h1>\n<!-- NOTE to writers: When creating the topic for the next version,                               -->\n<!--   remember to update the redirect link in angular/aio/firebase.json                          -->\n<!-- To update the redirect link in angular/aio/firebase.json:                                    -->\n<!--   1. Search for the entry in firebase.json with \"source\": \"guide/update-to-latest-version\"   -->\n<!--   2,  Update the destination value to refer to the new guide's URL                           -->\n<!--                                                                                              -->\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5164a00y6lekbnv61znfkdyz4\">本主题提供有关将您的 Angular 应用程序更新到 Angular 版本 17 的信息。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7eet1rnfbktcjmb5arn2nunpa\">要了解此信息的摘要以及将您的 Angular 应用程序更新到 v17 的逐步过程，请参阅\n<a href=\"https://update.angular.io\">Angular 更新指南</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4z60xxbu42n1m49629j8zfqij\"><a href=\"https://update.angular.io\">Angular 更新指南</a>和本主题中的信息是从这些更改日志中总结的：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p1tcoqjybbamoiwriuz5dvk4\"><a href=\"https://github.com/angular/angular/blob/main/CHANGELOG.md\">angular/angular 库的变更日志</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4vjkm26a9sl0gyxbjwpa7l2ql\"><a href=\"https://github.com/angular/angular-cli/blob/main/CHANGELOG.md\">angular/angular-cli 库的变更日志</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ywcwq8fnzlusplbto7k5i79f\"><a href=\"https://github.com/angular/components/blob/main/CHANGELOG.md\">angular/components 库的变更日志</a></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9tfu1x832tzc3i362am39cnj5\">有关将 Angular 应用程序更新到 v16 的信息已存档在\n<a href=\"/guide/update-to-version-16\">更新到版本 16</a>。</p>\n<p><a id=\"new-features\"></a></p>\n<h2 id=\"feature-highlights-in-angular-v17\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"91gex5kr1tq7vti4liq9s886b\">Angular v17 中的特性亮点<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#feature-highlights-in-angular-v17\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74fu9coqz78h68tejpcwelq39\">要查看更全面的新功能列表，请参阅\n<a href=\"https://blog.angular.io\">有关更新到 v17 的 Angular 博客文章</a>。</p>\n<!-- markdownLint-disable MD001 -->\n<h4 id=\"deferrable-views\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47wqccy89733v0fogfbmtkwbl\">可延迟视图<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#deferrable-views\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"efzep17s0emt83a9r7j9vh41e\">新的可延迟视图允许您在模板的某个部分懒加载所有组件、指令和管道：</p>\n<code-example language=\"html\">\n@defer (on viewport) {\n  &lt;comment-list /&gt;\n} @placeholder {\n  &lt;!-- A placeholder content to show until the comments load --&gt;\n  &lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> src=\"comments-placeholder.png\" /&gt;\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"boca6mnr1o6svl9ojnvkx2jr3\">在上面的示例中，Angular 首先渲染占位符块的内容。当它在视口中可见时，\n<code>&lt;comment-list /&gt;</code> 组件的加载开始。加载完成后，Angular 移除占位符并渲染组件。</p>\n<h4 id=\"built-in-control-flow\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d1irlmekz2jxdklcwd5qbfxk0\">内置控制流<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#built-in-control-flow\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aq96si4pbjl0f5aat99fljke3\">我们使用了一个新的块语法来优化内置的控制流程。经过用户研究，我们发现许多开发人员在使用 \n<code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>、\n<code>*<a href=\"api/common/NgSwitch\" class=\"code-anchor\">ngSwitch</a></code> 和 \n<code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 时遇到困难。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3heqzg23gxmgu9vc3rxrgsm9o\">它包括条件语句：</p>\n<code-example language=\"text\">\n@if (loggedIn) {\n  The user is logged in\n} @else {\n  The user is not logged in\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5crgp5o64qlma80a2k6brnfzc\">Switch 语句：</p>\n<code-example language=\"text\">\n@switch (accessLevel) {\n  @case ('admin') { &lt;admin-dashboard/&gt; }\n  @case ('moderator') { &lt;moderator-dashboard/&gt; }\n  @default { &lt;user-dashboard/&gt; }\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8pwdmn1cc2v5t4qoopeg7z11w\">以及 for 循环：</p>\n<code-example language=\"text\">\n@for (user of users; track user.id) {\n  {{ user.name }}\n} @empty {\n  Empty list of users\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"91ydolcp4e7mkjkxt3l9bgd8x\">除了改进的工效学外，对于某些性能基准测试来说，控制流程还可以提高高达 90% 的速度。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"90dee6n6de6v7rz5wly7xgid\">截至 v17，内置的控制流程处于开发者预览阶段。要将项目更新为使用它，请运行原理图：</p>\n<code-example language=\"sh\">\nng generate @angular/core:control-flow\n</code-example>\n<h4 id=\"new-angularssr-package\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6stbfiwkria61snhovhe0ghb0\">新的 \n<code>@angular/ssr</code> 包<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#new-angularssr-package\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d64j9oulie29xwdt1knse6qp4\">我们将 Angular 服务器端渲染的代码从 \n<code>angular/universal</code> 移动到 \n<code>angular/angular-cli</code>，将 SSR 更直接地集成到我们的工具中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cotw8mquouwa5j1pwxakt9qbc\">从今天开始，要为现有应用添加 SSR 支持，请运行：</p>\n<code-example language=\"sh\">\nng add @angular/ssr\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7750krt60penw7hv2usy3e2a3\">此命令生成服务器入口点，添加 SSR 和 SSG 构建功能，并默认启用水合。 \n<code>@angular/ssr</code> 提供了与目前处于维护模式的 \n<code>@nguniversal/express-engine</code> 等价的功能！Angular CLI 将使用 \n<code>ng update</code> 自动更新您的代码到 \n<code>@angular/ssr</code>！</p>\n<h4 id=\"new-lifecycle-hooks\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"af4m639kqd5poadyhf5y9cs8w\">新的生命周期钩子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#new-lifecycle-hooks\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7eqb6pbyo9th4gi2b26fzjjq3\">为了提高 Angular 的 SSR 和 SSG 的性能，我们希望从 DOM 模拟和直接 DOM 操作中逐步移除。同时，在大多数应用程序的生命周期中，它们需要与元素交互以实例化第三方库，测量元素大小等。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zfcd7xubyzmb2429q25ho27\">为此，我们开发了一组新的生命周期钩子：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qo4md8quppe8at0ir6biqx2t\"><code><a href=\"api/core/afterRender\" class=\"code-anchor\">afterRender</a></code> - 注册一个回调，每次应用程序完成渲染时调用</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7r7243ednhjk9jtibn3f59qjt\"><code><a href=\"api/core/afterNextRender\" class=\"code-anchor\">afterNextRender</a></code> - 注册一个回调，下次应用程序完成渲染时调用</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"be95eg0qb47psta4a69i56fxj\">只有浏览器会调用这些钩子，这使您可以安全地在组件内部直接插入自定义 DOM 逻辑。例如，如果您想要实例化一个图表库，您可以使用 afterNextRender：</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-chart-cmp',\n  template: `&lt;div #chart&gt;{{ ... }}&lt;/div&gt;`,\n})\nexport class MyChartCmp {\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('chart') chartRef: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>;\n  chart: MyChart | null;\n\n  constructor() {\n    <a href=\"api/core/afterNextRender\" class=\"code-anchor\">afterNextRender</a>(() =&gt; {\n      this.chart = new MyChart(this.chartRef.nativeElement);\n    });\n  }\n}\n</code-example>\n<h4 id=\"vite-and-esbuild-the-default-for-new-projects\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8suypmmnc4lz04qzzz6rt1jwo\">Vite 和 esbuild 成为新项目的默认选择<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#vite-and-esbuild-the-default-for-new-projects\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7khyol4t8dtr63lcffgiwtk7g\">在 v16 中，我们推出了基于 esbuild 和 Vite 的开发者预览构建体验。从那时起，许多开发人员和企业对此进行了实验！今天，我们很高兴地宣布，新的应用程序构建器从开发者预览中毕业，并已默认启用于所有新应用程序！</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eo6a8bwoykzf9ss1hvnbizsnm\">在使用混合渲染时，我们更新了构建管道。通过 SSR 和 SSG，您可以观察到 ng build 的速度提高了高达 87%，对于 \n<code>ng serve</code>，编辑刷新循环速度更快了 80%。我们将致力于开发原理图，以将使用混合渲染（SSR 和 SSG）的现有应用程序切换到新的构建器。</p>\n<h4 id=\"dependency-injection-debugging-in-devtools\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7o96w34n70aaqh9io19z4cqx7\">在 DevTools 中调试依赖注入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#dependency-injection-debugging-in-devtools\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"abxg28e11td0ro2jthu1mbcej\">在过去的几个月里，我们实现了全新的调试 API，使我们能够连接到框架的运行时并检查注入器树。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7zoafehpo22o7hp40adfy7rc4\">基于这些 API，我们构建了一个检查用户界面，允许你预览：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6kob3jnbsfqoawwqivtbdfj8i\">在组件检查器中查看你的组件的依赖关系</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38p22g7bihh17v7t4wbfpks3b\">注入器树和依赖解析路径</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bb5876e4ikybm09rtpd89bai7\">在各个注入器中声明的提供者</li>\n</ul>\n<h4 id=\"experimental-view-transitions-support\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9slpdjjhgpcj56dpssjo2p0bu\">实验性视图过渡支持<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#experimental-view-transitions-support\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44qkdh21j58e5polcsbmts6eo\">视图过渡 API 在更改 DOM 时实现平滑过渡。在 Angular 路由器中，我们现在通过 \n<code><a href=\"api/router/withViewTransitions\" class=\"code-anchor\">withViewTransitions</a></code> 特性直接提供对该 API 的支持。使用此功能，你可以利用浏览器的原生能力在路由之间创建动画过渡。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4kpcux50mrz8a103g1xgf4jop\">你可以通过在启动时在路由器的提供者声明中配置来立即向你的应用添加此功能：</p>\n<code-example language=\"typescript\">\n<a href=\"api/platform-browser/bootstrapApplication\" class=\"code-anchor\">bootstrapApplication</a>(App, {\n  providers: [<a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a>(routes, <a href=\"api/router/withViewTransitions\" class=\"code-anchor\">withViewTransitions</a>())],\n});\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ayomhvmocxedetoqkpedbf62g\"><code><a href=\"api/router/withViewTransitions\" class=\"code-anchor\">withViewTransitions</a></code> 接受一个可选的配置对象，其中包含属性 \n<code>onViewTransitionCreated</code>，这是一个回调，让你可以有一些额外的控制：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96tl79xaycg8g710c9e3s3tcc\">决定是否跳过特定动画</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"40466kqpbjfk1lmcl0l33az66\">向文档添加类以自定义动画，并在动画完成时移除这些类</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmc14i3fe2i0j8dmrkp3thpl\">等等</li>\n</ul>\n<p><a id=\"breaking-changes\"></a></p>\n<h2 id=\"highlighted-breaking-changes-in-angular-v17\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83cyy85651osrfcv374oxzxsz\">Angular v17 中的重大变化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#highlighted-breaking-changes-in-angular-v17\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l2uq9q6l26zqu82bdg58420k\">有关重大更改的完整列表，请参阅 GitHub 上的完整变更日志。</p>\n<p><a id=\"v17-bc-01\"></a></p>\n<h3 id=\"angular-v17-requires-nodejs-version-v1813-or-newer\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2opbkakz9bbp0sui7fk35hgsq\">Angular v17 需要 node.js 版本 v18.13 或更高版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#angular-v17-requires-nodejs-version-v1813-or-newer\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"452uvzphv67v4g0pvoheuna3d\">Angular 需要 node.js v18.13 或更高版本。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7h86l3ewnugvd90sdni731l62\">有关完整版本兼容性的详细信息，请参阅<a href=\"/guide/versions\">版本兼容性</a>。</p>\n<p><a id=\"v17-bc-02\"></a></p>\n<h3 id=\"angular-v17-requires-typescript-version-52-or-later\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bj7tya4k7jzvwu6ct5w133ue4\">Angular v17 需要 TypeScript 版本 5.2 或更高版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#angular-v17-requires-typescript-version-52-or-later\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"663kdmkdq7epo0oytfcf2souk\">Angular v17 不再支持早于 5.2 版本的 TypeScript。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7h86l3ewnugvd90sdni731l62\">有关完整版本兼容性的详细信息，请参阅<a href=\"/guide/versions\">版本兼容性</a>。</p>\n<p><a id=\"v17-bc-03\"></a></p>\n<h3 id=\"angular-v17-requires-zonejs-v0140\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7bikcgfgk1lq9p77u3wjxo347\">Angular v17 需要 zone.js v0.14.0<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#angular-v17-requires-zonejs-v0140\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alqdsgfqa3dpoxvvt8enwumj0\">Angular v17 不再支持早于 v0.14.0 版本的 zone.js。</p>\n<p><a id=\"v17-bc-04\"></a></p>\n<h4 id=\"strict-ngswitch-check\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2td2k5mcj8eereit4wqexq3f\">NgSwitch 检查严格性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#strict-ngswitch-check\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8pxxpkii92sfdzrj1qytf5m41\">指令 \n<code><a href=\"api/common/NgSwitch\" class=\"code-anchor\">NgSwitch</a></code> 现在默认使用 \n<code>===</code> 相等运算符，迁移自先前使用的 \n<code>==</code>。需要调整 \n<code><a href=\"api/common/NgSwitch\" class=\"code-anchor\">NgSwitch</a></code> 表达式或单独条件值以适应此更严格的等式检查。在需要调整检查的地方，你会在控制台中看到警告消息。</p>\n<p><a id=\"v17-bc-06\"></a></p>\n<h4 id=\"routes-with-loadcomponent-data-inheritance\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bn473me7as4dbsd7m41zaojcn\">具有 \n<code>loadComponent</code> 数据继承的路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#routes-with-loadcomponent-data-inheritance\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"48zw3xbsnkd4tbtscajgxeqt7\">子路由不再默认从父级继承其数据，具有 \n<code>loadComponent</code> 的子路由。在 v17 中，默认的 \n<code>paramsInheritanceStrategy</code> 是 \n<code>emptyOnly</code>。如果想要在子路由中继承父级数据，请将策略更新为 \n<code>always</code>。</p>\n<p><a id=\"v17-bc-07\"></a></p>\n<h4 id=\"router-absolute-redirect-behavior-change\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7lqi8fue6gemekt4bpu08n8d7\">路由器绝对重定向行为更改<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#router-absolute-redirect-behavior-change\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e0q2eiyzvqhxq2jlba0zjtfmz\">绝对重定向不再阻止进一步的重定向。你可能需要调整路由配置以防止无限重定向。先前，在绝对重定向后，路由器会忽略所有重定向。</p>\n<p><a id=\"v17-bc-08\"></a></p>\n<h4 id=\"removal-of-setuptestingrouter\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5z66zd9yg2iafvwhxdq0xzhbk\">移除 \n<code>setupTestingRouter</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#removal-of-setuptestingrouter\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11eak0vt3ki8f9kd8cyu5mqe6\">使用 \n<code>RouterModule.forRoot</code> 或 \n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 来为测试设置路由器，而不是使用 \n<code>setupTestingRouter</code>。</p>\n<p><a id=\"v17-bc-09\"></a></p>\n<h4 id=\"removal-of-malformedurierrorhandler\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3difijd4zz0qxmieun6og2ikc\">移除 \n<code>malformedUriErrorHandler</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#removal-of-malformedurierrorhandler\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82j3ildzlxbtbxr8bwomkg46k\">我们从 \n<code>RouterModule.forRoot</code> 的选项中移除了 \n<code>malformedUriErrorHandler</code>。要处理 URL 解析错误，请使用 \n<code>UrlSerializer.parse</code> 方法。</p>\n<p><a id=\"v17-bc-10\"></a></p>\n<h4 id=\"removal-of-zonejs-bundles\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5eme92ix39ogg64hqwzujb7qx\">移除 zone.js 捆绑包<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#removal-of-zonejs-bundles\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2wfgavm28ow1cdoeohly0xkek\">在 v17 中，我们移除了 \n<code>zone-testing-bundle</code> 和 \n<code>zone-testing-node-bundle</code>，这将阻止你使用像 \n<code>zone.js/bundles/zone-testing.js</code> 和 \n<code>zone.js/dist/zone</code> 这样的 \n<code>dist/</code> 导入。</p>\n<p><a id=\"v17-bc-11\"></a></p>\n<h4 id=\"onpush-dynamically-instantiated-components\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9i0gd2tcfeqqzrfvkyp5swqki\"><code>OnPush</code> 动态实例化的组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#onpush-dynamically-instantiated-components\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97on9nwgehqvseezjs8vkqf6r\">对于动态实例化的组件，如果组件标记为脏，则现在会在变更检测期间执行 \n<code>ngDoCheck</code>。你可能需要更新动态实例化组件的测试或逻辑中的 \n<code>ngDoCheck</code>。</p>\n<p><a id=\"v17-bc-12\"></a></p>\n<h4 id=\"relocating-router-public-methods-to-providerouter-and-routermoduleforroot\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8509skh3ibkdodqdugf3zw99\">将路由器公共方法重新定位到 \n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 和 \n<code>RouterModule.forRoot</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#relocating-router-public-methods-to-providerouter-and-routermoduleforroot\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"93vc7w8sm70d5g7nukz8idhv5\">确保你在 \n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 或 \n<code>RouterModule.forRoot</code> 中配置 \n<code>setupTestingRouter</code>、\n<code>canceledNavigationResolution</code>、\n<code>paramsInheritanceStrategy</code>、\n<code>titleStrategy</code>、\n<code>urlUpdateStrategy</code>、\n<code>urlHandlingStrategy</code> 和 \n<code>malformedUriErrorHandler</code>，因为这些属性现在不再是 \n<code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 的公共 API 的一部分。</p>\n<p><a id=\"v17-bc-13\"></a></p>\n<h4 id=\"remove_styles_on_component_destroy-now-defaults-to-true\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aauii918g764ho6h7hr4twc3o\"><code><a href=\"api/platform-browser/REMOVE_STYLES_ON_COMPONENT_DESTROY\" class=\"code-anchor\">REMOVE_STYLES_ON_COMPONENT_DESTROY</a></code> 现在默认为 \n<code>true</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#remove_styles_on_component_destroy-now-defaults-to-true\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6whp7yaqsvpgp6tte57os486m\">Angular 现在会自动删除销毁组件的样式，这可能会影响到你现有的应用程序，特别是在你依赖泄漏样式的情况下。要更改此设置，请将 \n<code><a href=\"api/platform-browser/REMOVE_STYLES_ON_COMPONENT_DESTROY\" class=\"code-anchor\">REMOVE_STYLES_ON_COMPONENT_DESTROY</a></code> 提供者的值更新为 \n<code>false</code>。</p>\n<p><a id=\"deprecations\"></a></p>\n<h2 id=\"deprecations-highlights-in-angular-v17\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6484gtutip2m3r5cco85csfpw\">Angular v17 中的弃用亮点<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-17#deprecations-highlights-in-angular-v17\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4vt528ffqd7v2nrqfux4xes8w\">这些 API 在 v17 中仍然可用，但可能会在未来版本中根据 Angular 的 \n<a href=\"/guide/releases#deprecation-policy\">弃用策略</a> 被移除。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"o3n0wfbp4icz228hgohmdgh6\">为了保持 Angular 应用程序的可靠性，只要条件允许，就应该尽快更新应用程序。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8rauhn4qvl8aihjj83daq48w4\">已移除</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b60cmg37kstj9qup38pt8swfn\">替代品</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a id=\"v17-dp-01\"></a><code><a href=\"api/core/NgProbeToken\" class=\"code-anchor\">NgProbeToken</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6bs071f5k1m1udzmhtyd822xg\">无</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"di28f9jhe5ug2curhvhucwlzx\">从 View Engine 迁移到 Ivy 后，不再内部使用 \n<code><a href=\"api/core/NgProbeToken\" class=\"code-anchor\">NgProbeToken</a></code>。此令牌没有任何实用性，可以从应用程序和库中移除。</td>\n</tr>\n<tr>\n<td align=\"left\"><a id=\"v17-dp-02\"></a><code><a href=\"api/animations/browser/AnimationDriver#NOOP\" class=\"code-anchor\">AnimationDriver.NOOP</a></code></td>\n<td align=\"left\"><code><a href=\"api/animations/browser/NoopAnimationDriver\" class=\"code-anchor\">NoopAnimationDriver</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dnir7djkn2i6hp6du979bnejm\"><code><a href=\"api/animations/browser/AnimationDriver#NOOP\" class=\"code-anchor\">AnimationDriver.NOOP</a></code> 符号已被弃用，请改用 \n<code><a href=\"api/animations/browser/NoopAnimationDriver\" class=\"code-anchor\">NoopAnimationDriver</a></code>。</td>\n</tr>\n</tbody>\n</table>\n\n  <div class=\"reviewed\">最后复查时间：Thu Oct 26 2023</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /guide/releases#deprecation-policy\n - /guide/update-to-version-16\n - /guide/versions\n - api/animations/browser/AnimationDriver#NOOP\n - api/animations/browser/NoopAnimationDriver\n - api/common/NgFor\n - api/common/NgIf\n - api/common/NgOptimizedImage\n - api/common/NgSwitch\n - api/core/Component\n - api/core/ElementRef\n - api/core/NgProbeToken\n - api/core/ViewChild\n - api/core/afterNextRender\n - api/core/afterRender\n - api/platform-browser/REMOVE_STYLES_ON_COMPONENT_DESTROY\n - api/platform-browser/bootstrapApplication\n - api/router/Router\n - api/router/provideRouter\n - api/router/withViewTransitions\n - guide/update-to-version-17#angular-v17-requires-nodejs-version-v1813-or-newer\n - guide/update-to-version-17#angular-v17-requires-typescript-version-52-or-later\n - guide/update-to-version-17#angular-v17-requires-zonejs-v0140\n - guide/update-to-version-17#built-in-control-flow\n - guide/update-to-version-17#deferrable-views\n - guide/update-to-version-17#dependency-injection-debugging-in-devtools\n - guide/update-to-version-17#deprecations-highlights-in-angular-v17\n - guide/update-to-version-17#experimental-view-transitions-support\n - guide/update-to-version-17#feature-highlights-in-angular-v17\n - guide/update-to-version-17#highlighted-breaking-changes-in-angular-v17\n - guide/update-to-version-17#new-angularssr-package\n - guide/update-to-version-17#new-lifecycle-hooks\n - guide/update-to-version-17#onpush-dynamically-instantiated-components\n - guide/update-to-version-17#relocating-router-public-methods-to-providerouter-and-routermoduleforroot\n - guide/update-to-version-17#removal-of-malformedurierrorhandler\n - guide/update-to-version-17#removal-of-setuptestingrouter\n - guide/update-to-version-17#removal-of-zonejs-bundles\n - guide/update-to-version-17#remove_styles_on_component_destroy-now-defaults-to-true\n - guide/update-to-version-17#router-absolute-redirect-behavior-change\n - guide/update-to-version-17#routes-with-loadcomponent-data-inheritance\n - guide/update-to-version-17#strict-ngswitch-check\n - guide/update-to-version-17#update-angular-to-v17\n - guide/update-to-version-17#vite-and-esbuild-the-default-for-new-projects\n - https://blog.angular.io\n - https://github.com/angular/angular-cli/blob/main/CHANGELOG.md\n - https://github.com/angular/angular/blob/main/CHANGELOG.md\n - https://github.com/angular/components/blob/main/CHANGELOG.md\n - https://update.angular.io\n-->"}