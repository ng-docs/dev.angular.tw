{"id":"guide/accessibility","title":"Angular 中的无障碍功能","contents":"<div class=\"content\">\n  <h1 id=\"accessibility-in-angular\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o6dxjrxpcmlv2twyi7p6362m\">Angular 中的无障碍功能<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-in-angular\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dw9owvzecnpn6vjm5g4h2wu6c\">Web 会被各种各样的人使用，包括有视觉或运动障碍的人。有多种辅助技术能使这些人更轻松地和基于 Web 的软件应用进行交互。另外，将应用设计得更易于访问通常也能改善所有用户的体验。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a894vxiplny26zsmldlk8qi75\">关于如何设计无障碍应用的问题和技术的深入介绍，参阅 Google <a href=\"https://developers.google.com/web/fundamentals\">网络基础知识</a>的<a href=\"https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\">无障碍功能</a>部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b7k7kubpe7kbrhdrtcm2cnczv\">本页讨论了设计 Angular 应用的最佳实践，这些实践对所有用户（包括依赖辅助技术的用户）都适用。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d5oeh6bf2o8adlc4yerbj497y\">这里所说的范例应用，参阅<live-example></live-example>。</p>\n</div>\n<h2 id=\"accessibility-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ync61i3srqq9dfgzy5fav4qe\">无障碍属性（Attribute）<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-attributes\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"astlgd16skujgscg4tqamxov\">建立无障碍的 Web 体验通常会涉及设置 <a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-aria\">ARIA（Accessible Rich Internet Applications）属性（Attribute）</a> 以提供可能会丢失的语义。使用 <a href=\"guide/attribute-binding\">Attribute 绑定</a>模板语法来控制与无障碍性相关的属性（Attribute）值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agi98vg7nyn9bhwx2cxjj259u\">在 Angular 中绑定 ARIA 属性（Attribute）时，必须使用 <code>attr.</code> 前缀。ARIA 规范针对的是 HTML 属性（Attribute），而不是 DOM 元素的属性（Property）。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;!-- Use attr. when binding to an ARIA attribute --&gt;\n&lt;button [attr.aria-label]=\"myActionLabel\"&gt;…&lt;/button&gt;\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8v9f11hfwl20745e0uucr1ot\"><strong>注意</strong><br>\n此语法仅对于属性（Attribute）<em>绑定</em>是必需的。静态 ARIA 属性（Attribute）不需要额外的语法。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;!-- Static ARIA attributes require no extra syntax --&gt;\n&lt;button aria-label=\"Save document\"&gt;…&lt;/button&gt;\n\n</code-example>\n</div>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5uo4aa9m18bue5lqrnz6rz1v9\">按照约定，HTML 属性（Attribute）使用小写名称（<code>tabindex</code>），而 Property 使用 camelCase 名称（<code>tabIndex</code>）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ocbi86yyykafhk1118b95hni\">关于 Attribute 和 Property 之间差异的更多背景信息，参阅<a href=\"guide/binding-syntax#html-attribute-vs-dom-property\">模板语法</a>一章。</p>\n</div>\n<h2 id=\"angular-ui-components\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80sqwpowzhumn2usdk1eueq6t\">Angular UI 组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#angular-ui-components\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqpcexpve23iq60hpo442hqgr\">由 Angular 团队维护的 <a href=\"https://material.angular.cn\">Angular Material</a> 库是旨在提供完全无障碍的一组可复用 UI 组件。<a href=\"https://material.angular.cn/cdk/categories\">组件开发工具包（CDK）</a>中包括 <code>a11y</code> 软件包，该软件包提供了支持无障碍领域的各种工具。比如：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3nsavi0d6o4jhcktos3sagj0u\"><code>LiveAnnouncer</code> 用于使用 <code>aria-live</code> 区域向屏幕阅读器用户朗读消息。关于 <a href=\"https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\">aria-live 领域的</a>更多信息，参阅 W3C 文档。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"blm2wl7rwd9e72u67h2fy49tc\"><code>cdkTrapFocus</code> 指令能将 Tab 键焦点捕获在元素内。使用它可为必须限制焦点的模态对话框之类的组件创建无障碍体验。</p>\n</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8c4bgzxvge26rkzr3zns0ncsy\">关于这些工具和其它工具的完整详细信息，参阅 <a href=\"https://material.angular.io/cdk/a11y/overview\">Angular CDK 无障碍功能概述</a>。</p>\n<h3 id=\"augmenting-native-elements\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16yu8z8az1b6le9a72crw7rjo\">增强原生元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#augmenting-native-elements\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1dv8dptnym79096mn23an02o\">原生 HTML 元素捕获了一些对无障碍性很重要的标准交互模式。在制作 Angular 组件时，应尽可能直接复用这些原生元素，而不是重新实现已获良好支持的行为。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"vpeabjcj4nwz1l98zbo3xy2l\">比如，你可以创建一个组件，它使用属性（Attribute）选择器指向原生 <code>&lt;button&gt;</code> 元素，而不是为各种新按钮创建自定义元素。通常这适用于 <code>&lt;button&gt;</code> 和 <code>&lt;a&gt;</code>，但也可以用于许多其它类型的元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzfi3wjq55dohiky856khciqj\">你可以在 Angular Material 中看到此模式的范例：<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\"><code>MatButton</code></a>，<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\"><code>MatTabNav</code></a>，<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\"><code>MatTable</code></a>。</p>\n<h3 id=\"using-containers-for-native-elements\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"40sbaqnio0eq5lr6q4eszog1i\">将容器用于原生元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#using-containers-for-native-elements\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eynjjv3xz1wyyf5kjxihjosps\">有时要使用的原生元素需要一个容器元素。比如，原生 <code>&lt;input&gt;</code> 元素不能有子元素，因此任何自定义的文本输入组件都需要用额外的元素来包装 <code>&lt;input&gt;</code>。如果只在自定义组件的模板中包含 <code>&lt;input&gt;</code>，该组件的将用户无法为 <code>input</code> 元素设置任意 Property 和 Attribute。相反，你应该创建一个使用内容投影的容器组件，以将原生控件包含在组件的 API 中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"blyavfu3zvdy0cv18rk4z7fyb\">你可以把 <a href=\"https://material.angular.cn/components/form-field/overview\"><code>MatFormField</code></a> 作为该模式的例子。</p>\n<h2 id=\"case-study-building-a-custom-progress-bar\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7r9wg666rehjwuwy7dhwxjllt\">案例研究：构建自定义进度条<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#case-study-building-a-custom-progress-bar\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2x2svkp0qtg74slaho7mil5r5\">以下范例显示如何通过使用宿主（host）绑定来控制与无障碍性相关的属性（Attribute），来把进度条无障碍化。</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c436fafytujd4gma81r12wdus\">该组件使用标准的 HTML 属性（Attribute）<code>role</code> 和 ARIA 属性（Attribute）来定义要启用无障碍支持的元素。ARIA 属性（Attribute）<code>aria-valuenow</code> 绑定到用户的输入。</p>\n<code-example header=\"src/app/progress-bar.component.ts\" path=\"accessibility/src/app/progress-bar.component.ts\" region=\"progressbar-component\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a>} from '@angular/core';\n\n/**\n * Example progressbar component.\n */\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-example-progressbar',\n  template: '&lt;div class=\"bar\" [style.width.%]=\"value\"&gt;&lt;/div&gt;',\n  styleUrls: ['./progress-bar.component.css'],\n  host: {\n    // Sets the role for this component to \"progressbar\"\n    role: 'progressbar',\n\n    // Sets the minimum and maximum values for the progressbar role.\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n\n    // Binding that updates the current value of the progressbar.\n    '[attr.aria-valuenow]': 'value',\n  },\n})\nexport class ExampleProgressbarComponent {\n  /** Current value of the progressbar. */\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() value = 0;\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hq73m7gf0nq7rxj5ecl7mtb3\">在模板中，<code>aria-label</code> 属性（Attribute）可以确保屏幕阅读器能访问该控件。</p>\n<code-example header=\"src/app/app.component.html\" path=\"accessibility/src/app/app.component.html\" region=\"template\">\n&lt;label for=\"progress-value\"&gt;\n  Enter an example progress value\n  &lt;input id=\"progress-value\" type=\"number\" <a href=\"api/forms/MinValidator\" class=\"code-anchor\">min</a>=\"0\" <a href=\"api/forms/MaxValidator\" class=\"code-anchor\">max</a>=\"100\"\n      [value]=\"progress\" (input)=\"setProgress($event)\"&gt;\n&lt;/label&gt;\n\n&lt;!-- The user of the progressbar sets an aria-label to communicate what the progress means. --&gt;\n&lt;app-example-progressbar [value]=\"progress\" aria-label=\"Example of a progress bar\"&gt;\n&lt;/app-example-progressbar&gt;\n\n</code-example>\n</li>\n</ul>\n<h2 id=\"routing\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74nlsxkr1xp06lifpm36dhjjp\">路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#routing\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"focus-management-after-navigation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"s0u4q1vpb0rnra84slimyj4g\">导航后的焦点管理<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#focus-management-after-navigation\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6uek4q3vr5dtsymcdr099reey\">在设计无障碍性时，在 UI 中跟踪和控制<a href=\"https://developers.google.com/web/fundamentals/accessibility/focus\">焦点</a>是很重要的考虑因素。使用 Angular 路由时，你需要确定页面焦点在导航上的位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"iircnbpe31ilmufsa2v0h9eb\">为了避免仅仅依靠视觉提示，你需要确保路由代码会在页面导航之后更新焦点。使用 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务中的 <code><a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a></code> 事件可以知道何时该更新焦点。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8u0f11p1a31ku2htebopprg1m\">以下范例显示了导航后如何在 DOM 中查找并把焦点移动到主体内容的头部。</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nrouter.events.pipe(filter(e =&gt; e instanceof <a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a>)).subscribe(() =&gt; {\n  const mainHeader = document.querySelector('#main-content-header')\n  if (mainHeader) {\n    mainHeader.focus();\n  }\n});\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"chyg00as3j0r927wtwzl17tx0\">在实际的应用程序中，哪些元素会获得焦点取决于该应用特有的结构和布局。获得焦点的元素应使用户能够立即移动到刚刚进入视野的主要内容。你应该避免当路由变化后焦点重新回到 <code>body</code> 元素的情况。</p>\n<h3 id=\"active-links-identification\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"73qjvuir25sjc793zmbmqjuhl\">活动链接标识<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#active-links-identification\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e98bguawgxixr8xgkqvye2py6\">用在活跃 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 元素上的 CSS 类（比如 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code>）提供了有关哪个链接正处于活跃状态的视觉提醒。不幸的是，此类提醒不适用于盲人或视障用户。将 <code>aria-current</code> 属性添加到此元素，可以帮你标出活跃链接。有关更多信息，参阅<a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\">MDN aria-current</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ca5h9vzd7mcts7cqv33hs946\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令提供了 <code>ariaCurrentWhenActive</code> 输入属性，该输入属性会在链接变为活跃状态时将 <code>aria-current</code> 设置为指定的值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15mien5sj6iere4uwp53wqljs\">以下示例展示了如何将 <code>active-page</code> 类应用于活跃链接，以及如何在它们处于活跃状态时将它们的 <code>aria-current</code> 属性设置为 <code>\"page\"</code>：</p>\n<code-example language=\"html\">\n    &lt;nav&gt;\n      &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"home\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\"&gt;\n        Home\n      &lt;/a&gt;\n      &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"about\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\"&gt;\n        About\n      &lt;/a&gt;\n      &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"shop\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\"&gt;\n        Shop\n      &lt;/a&gt;\n    &lt;/nav&gt;\n</code-example>\n<!-- vale Angular.Angular_Spelling = NO -->\n<h2 id=\"more-information\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4i4l0z1p0mxth3he9lk6m2op\">更多信息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#more-information\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jxdu37766jkozcdjhws9i31u\"><a href=\"https://developers.google.com/web/fundamentals/accessibility\">无障碍功能 - Google 网络基础知识</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bry39j4jwnw9bkwhlikwd8yh8\"><a href=\"https://www.w3.org/TR/wai-aria\">ARIA 规范和写作惯例</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"18q1shwiu2rqrh9ynwovp3nc9\"><a href=\"https://material.io/design/usability/accessibility.html\">Material Design - 无障碍功能</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3t9lep0vrizz7x7y99e2r6xsx\"><a href=\"https://www.smashingmagazine.com/search/?q=accessibility\">Smashing 杂志</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4vaqgioddgumxcaen6re1zaoh\"><a href=\"https://inclusive-components.design\">包容性组件</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eapzcrj0k8ollj29dwh9ikm7c\"><a href=\"https://dequeuniversity.com/resources\">无障碍功能的资源和代码范例</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aeqgpcnvqi7vxxs2czj3giutn\"><a href=\"https://www.w3.org/WAI/people-use-web\">W3C - 网络无障碍倡议</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6xii4cc50b25u1p6bzl3t2lm1\"><a href=\"https://www.youtube.com/watch?v=HtTyRajRuyY\">Rob Dodson 的 A11y 播客</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bwx4c2wjpxv8nl2wun9f8hy8l\"><a href=\"https://github.com/angular-eslint/angular-eslint#functionality\">Angular ESLint</a>提供了整理（linting）规则，可以帮助你确保你的代码符合无障碍性标准。</li>\n</ul>\n<!-- vale Angular.Angular_Spelling = YES -->\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5t6jngyrv5ar7fimler5o7gq2\">图书</p>\n<!-- vale Angular.Google_Quotes = NO -->\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9g4ucqe2mthkhyqpc7bnyktsg\">“适合所有人的网络：设计无障碍的用户体验”，莎拉·霍顿和惠特尼·奎森伯里</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8a643oypio5vtetxl4eh3u4bp\">“包容性设计模式”，Heydon Pickering</li>\n</ul>\n<!-- vale Angular.Google_Quotes = YES -->\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - everyone\n - features\n - guide/architecture-next-steps\n - guide/example-apps-list\n - tutorial/tour-of-heroes/toh-pt2\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/Input\n - api/forms/MaxValidator\n - api/forms/MinValidator\n - api/router/NavigationEnd\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - guide/accessibility#accessibility-attributes\n - guide/accessibility#accessibility-in-angular\n - guide/accessibility#active-links-identification\n - guide/accessibility#angular-ui-components\n - guide/accessibility#augmenting-native-elements\n - guide/accessibility#case-study-building-a-custom-progress-bar\n - guide/accessibility#focus-management-after-navigation\n - guide/accessibility#more-information\n - guide/accessibility#routing\n - guide/accessibility#using-containers-for-native-elements\n - guide/attribute-binding\n - guide/binding-syntax#html-attribute-vs-dom-property\n - https://dequeuniversity.com/resources\n - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\n - https://developers.google.com/web/fundamentals\n - https://developers.google.com/web/fundamentals/accessibility\n - https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\n - https://developers.google.com/web/fundamentals/accessibility/focus\n - https://developers.google.com/web/fundamentals/accessibility/semantics-aria\n - https://github.com/angular-eslint/angular-eslint#functionality\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\n - https://inclusive-components.design\n - https://material.angular.io\n - https://material.angular.io/cdk/a11y/overview\n - https://material.angular.io/cdk/categories\n - https://material.angular.io/components/form-field/overview\n - https://material.io/design/usability/accessibility.html\n - https://www.smashingmagazine.com/search/?q=accessibility\n - https://www.w3.org/TR/wai-aria\n - https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\n - https://www.w3.org/WAI/people-use-web\n - https://www.youtube.com/watch?v=HtTyRajRuyY\n-->"}