{"id":"guide/template-reference-variables","title":"理解範本變數","contents":"<div class=\"content\">\n  <h1 id=\"understanding-template-variables\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34marep0igwa0f1zsomxufpiz\">理解範本變數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#understanding-template-variables\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sfq56lxu4y2gn1a5791xapm6\">範本變數可以幫助你在範本的另一部分使用這個部分的資料。使用範本變數，你可以執行某些任務，比如回應使用者輸入或微調應用的表單。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ovn6gghr4199c3mn8u5mmrxy\">範本變數可以引用這些東西：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2dxuw253v5qxvmvrnbkvtyswg\">範本中的 DOM 元素</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"51iycf4hpcolvskqzse2tlwcj\">指令或元件</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7n66fs9eg4l5xwtvpsp7iu34p\">來自 <a href=\"api/core/ng-template\">ng-template</a> 的 <a href=\"api/core/TemplateRef\">TemplateRef</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ew1xbem8hycy6dap4fra7qch\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\" title=\"MDN：Web Components\">Web 元件</a></li>\n</ul>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81el5yk7yllx1tewd03bnp7o0\">本章包含程式碼片段的工作實例參閱<live-example></live-example>。</p>\n</div>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2lvs0h1x4icqv27g56mkig8yt\"><a href=\"guide/template-overview\">瞭解範本</a></li>\n</ul>\n<h2 id=\"syntax\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p44mx807exjp3s0k9dwbuxla\">語法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#syntax\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3whnp7u7qsr7n9h3iykqot3ta\">在範本中，要使用井號 <code>#</code> 來宣告一個範本變數。下列範本變數 <code>#phone</code> 宣告了一個名為 <code>phone</code> 的變數，其值為此 <code>&lt;input&gt;</code> 元素。</p>\n<code-example path=\"template-reference-variables/src/app/app.component.html\" region=\"ref-var\" header=\"src/app/app.component.html\">\n&lt;input #phone placeholder=\"phone number\" /&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cnun2x28nu8dicxhzebpec1gz\">可以在元件範本中的任何地方引用某個範本變數。這裡的 <code>&lt;button&gt;</code> 就引用了 <code>phone</code> 變數。</p>\n<code-example path=\"template-reference-variables/src/app/app.component.html\" region=\"ref-phone\" header=\"src/app/app.component.html\">\n&lt;input #phone placeholder=\"phone number\" /&gt;\n\n&lt;!-- lots of other elements --&gt;\n\n&lt;!-- phone refers to the input element; pass its `value` to an event handler --&gt;\n&lt;button type=\"button\" (click)=\"callPhone(phone.value)\"&gt;Call&lt;/button&gt;\n\n</code-example>\n<h2 id=\"how-angular-assigns-values-to-template-variables\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cgfzvbpavqbnp4icxupw4051k\">Angular 是如何為範本變數賦值的<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#how-angular-assigns-values-to-template-variables\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyijzhxvj22n8hl7gjxgr33u4\">Angular 根據你所宣告的變數的位置給範本變數賦值：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"du09uyt5gt1rc15qnqh51fe2v\">如果在元件上聲明變數，該變數就會引用該組件實例。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3wc5k6ctg9gki85u4u4x9e7rl\">如果在標準的 HTML 標記上聲明變數，該變數就會引用該元素。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7n8wt8iwty107a7l8ro6rux2i\">如果你在 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 元素上聲明變數，該變數就會引用一個 <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> 實例來代表此範本。關於 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 的更多訊息，請參閱<a href=\"guide/structural-directives#asterisk\">結構型指令</a> 中的 <a href=\"guide/structural-directives#asterisk\">Angular 如何使用 <code>*</code> 語法</a>部分。</li>\n</ul>\n<h2 id=\"variable-specifying-a-name\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ttt65m3ssa6c9z1umnylirzp\">指定名稱的變數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#variable-specifying-a-name\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckmyfkiyod7kryt2odfp8ok9y\">如果變數在右側指定了一個名稱，例如 \n<code>#var=\"<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>\"</code>，那麼該變數將指向具有對應的 \n<code>exportAs</code> 名稱的元素上的指令或元件。 \n<!-- 第二部分的含義是什麼？^^我們能更全面地解釋這一點嗎？我能看一個範例嗎？-kw --></li>\n</ul>\n<h3 id=\"using-ngform-with-template-variables\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e68jpjuh4zg1beu3ssac49m2s\">將 <code><a href=\"api/forms/NgForm\" class=\"code-anchor\">NgForm</a></code> 與範本變數一起使用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#using-ngform-with-template-variables\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fkxo8l9sbitv0vsebj3ejbhu\">在大多數情況下，Angular 會把範本變數的值設定為它所在的元素。在前面的例子中，<code>phone</code> 引用的是電話號碼 <code>&lt;input&gt;</code>。該按鈕的 click 處理程式會把這個 <code>&lt;input&gt;</code> 的值傳給該組件的 <code>callPhone()</code> 方法。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8yyzigotrn2w47e3zkwgh48il\">這裡的 <code><a href=\"api/forms/NgForm\" class=\"code-anchor\">NgForm</a></code> 指令示範了如何透過引用指令的的 <code>exportAs</code> 名字來引用不同的值。在下面的例子中，範本變數 <code>itemForm</code> 在 HTML 中分別出現了三次。</p>\n<code-example path=\"template-reference-variables/src/app/app.component.html\" region=\"ngForm\" header=\"src/app/hero-form.component.html\">\n&lt;form #itemForm=\"<a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a>\" (ngSubmit)=\"onSubmit(itemForm)\"&gt;\n  &lt;label for=\"name\"&gt;Name&lt;/label&gt;\n  &lt;input type=\"text\" id=\"name\" class=\"form-control\" name=\"name\" <a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a> required /&gt;\n  &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;div [hidden]=\"!itemForm.form.valid\"&gt;\n  &lt;p&gt;{{ submitMessage }}&lt;/p&gt;\n&lt;/div&gt;\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bcki8pqy69mz7xl0j5yi3el9s\">如果沒有 <code><a href=\"api/forms/NgForm\" class=\"code-anchor\">ngForm</a></code> 這個屬性值，<code>itemForm</code> 引用的值將是 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement\">HTMLFormElement</a> 也就是 <code>&lt;form&gt;</code> 元素。如果某元素是一個 Angular 元件，則不帶屬性值的引用會自動引用此元件的實例。否則，不帶屬性值的引用會引用此 DOM 元素，而不管此元素上有一個或多個指令。</p>\n<!-- What is the train of thought from talking about a form element to the difference between a component and a directive? Why is the component directive conversation relevant here?  -kw I agree -alex -->\n<h2 id=\"template-variable-scope\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5zb03j1233w56w7duyxmg7v08\">範本變數的作用域<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#template-variable-scope\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bm1j989lcmi3fg0rha2snz431\">就像 JavaScript 或 TypeScript 程式碼中的變數一樣，範本變數的範圍為宣告它們的範本。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4iiaslxwd7i5jyi33fmp6mytd\">同樣，諸如 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 和 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 類別的<a href=\"guide/built-in-directives\">結構指令</a>或 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 宣告會建立一個新的巢狀範本範圍，就像 JavaScript 的控制流語句（例如 <code>if</code> 和 <code>for</code> 建立新的詞法範圍。你不能從邊界外訪問這些結構指令之一中的範本變數。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqstnxv9izg2pi4m203ztr2dg\">同名變數在範本中只能定義一次，這樣執行時它的值就是可預測的。</p>\n</div>\n<h3 id=\"accessing-in-a-nested-template\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e0hlnkptlnosg1ovybg1wdvnx\">在巢狀範本中訪問<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#accessing-in-a-nested-template\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xj003t897s66xb1jgev9apj3\">內部範本可以訪問外範本定義的範本變數。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bpptaf3w46pstfiz99pq85yk\">在下面的例子中，修改 <code>&lt;input&gt;</code> 中的文字值也會改變 <code>&lt;span&gt;</code> 中的值，因為 Angular 會立即透過範本變數 <code>ref1</code> 來更新這種變化。</p>\n<code-example path=\"template-reference-variables/src/app/app.component.html\" region=\"template-ref-vars-scope1\" header=\"src/app/app.component.html\">\n&lt;input #ref1 type=\"text\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"firstExample\" /&gt;\n&lt;span *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"true\"&gt;Value: {{ ref1.value }}&lt;/span&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ci28nl781ztjjxutp6l8uck48\">在這種情況下，<code>&lt;span&gt;</code> 上的 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 會建立一個新的範本範圍，其中包括其父範圍中的 <code>ref1</code> 變數。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bepstuhg4ywxe24nh9ukffinw\">但是，從外部的父範本訪問子範圍中的變數是行不通的。</p>\n<code-example language=\"html\">\n  &lt;input *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"true\" #ref2 type=\"text\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"secondExample\" /&gt;\n  &lt;span&gt;Value: {{ ref2?.value }}&lt;/span&gt; &lt;!-- doesn't work --&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ndcr2vqh0dw52q1pqtd3k8s\">在這裡，<code>ref2</code> 是在 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 建立的子範圍中宣告的，並且無法從父範本訪問。</p>\n<a id=\"template-input-variable\"></a>\n<a id=\"template-input-variables\"></a>\n<h2 id=\"template-input-variable\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c5a2gy97h1l50s2vnxa0okxfh\">範本輸入變數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#template-input-variable\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7sxcz812kjfe8b4beoe0zso2g\"><em>範本輸入變數</em>是一個具有在建立該範本實例時設定的值的變數。請參閱：<a href=\"/guide/structural-directives\">編寫結構指令</a></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3l1ypsn4kc5u2p8kfvcye5jg8\">可以在 <code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code> 的長格式用法中看到範本輸入變數的作用：</p>\n<code-example language=\"html\">\n&lt;ul&gt;\n  &lt;ng-template <a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a> let-hero [<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngForOf</a>]=\"heroes\"&gt;\n    &lt;li&gt;{{hero.name}}&lt;/li&gt;\n  &lt;/ng-template&gt;\n&lt;/ul&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4vm5cqll6e6yt02vnw0xp1vc0\"><code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code> 指令將實例化此<ng-template>為 hero 陣列中的每個 <code>heroes</code> 一次，並將為每個實例相應地設定 <code>hero</code> 變數。</ng-template></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2d8n0ahhnt8zcw5lno2ruoba\">實例化 <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&lt;ng-template&gt;</a></code> 時，可以傳遞多個命名值，這些值可以繫結到不同的範本輸入變數。輸入變數的 <code>let-</code> 宣告的右側可以指定應該用於該變數的值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dwdwjks2a2mb7wpktz4sijq22\">例如，<code><a href=\"api/common/NgFor\" class=\"code-anchor\">NgFor</a></code> 還提供了對陣列中每個英雄的 <code>index</code> 的訪問：</p>\n<code-example language=\"html\">\n&lt;ul&gt;\n  &lt;ng-template <a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a> let-hero let-i=\"index\" [<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngForOf</a>]=\"heroes\"&gt;\n    &lt;li&gt;Hero number {{i}}: {{hero.name}}&lt;/li&gt;\n  &lt;/ng-template&gt;\n&lt;/ul&gt;\n</code-example>\n<h2 id=\"whats-next\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ll381kx5kaawqp659sqtiywr\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-reference-variables#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6lacfdwyuycapdvs7y35hq3rn\"><a href=\"/guide/structural-directives\">編寫結構指令</a></p>\n\n  <div class=\"reviewed\">最後複查時間：Thu May 12 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - api/common/NgFor\n - api/common/NgForOf\n - api/core/ng-template\n - guide/binding-overview\n - guide/example-apps-list\n - guide/forms\n - guide/glossary\n - guide/inputs-outputs\n - guide/template-overview\n - guide/template-statements\n - guide/template-syntax\n - guide/understanding-template-expr-overview\n - guide/user-input\n-->\n<!-- links from this doc:\n - /guide/structural-directives\n - api/common/NgFor\n - api/common/NgForOf\n - api/common/NgIf\n - api/core/TemplateRef\n - api/core/ng-template\n - api/forms/NgForm\n - api/forms/NgModel\n - guide/built-in-directives\n - guide/structural-directives\n - guide/structural-directives#asterisk\n - guide/template-overview\n - guide/template-reference-variables#accessing-in-a-nested-template\n - guide/template-reference-variables#how-angular-assigns-values-to-template-variables\n - guide/template-reference-variables#prerequisites\n - guide/template-reference-variables#syntax\n - guide/template-reference-variables#template-input-variable\n - guide/template-reference-variables#template-variable-scope\n - guide/template-reference-variables#understanding-template-variables\n - guide/template-reference-variables#using-ngform-with-template-variables\n - guide/template-reference-variables#variable-specifying-a-name\n - guide/template-reference-variables#whats-next\n - https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement\n - https://developer.mozilla.org/en-US/docs/Web/Web_Components\n-->"}