{"id":"guide/understanding-angular-animation","title":"理解 Angular 動畫","contents":"<div class=\"content\">\n  <h1 id=\"understanding-angular-animation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5z9xuluv49pumk72ezs50ce87\">理解 Angular 動畫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#understanding-angular-animation\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62umr09t5h60yzdolk65647ef\">動畫提供了運動的錯覺：HTML 元素會隨時間改變樣式。精心設計的動畫可以讓你的應用程式更加有趣和易於使用，但它們不僅僅是裝飾性的。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aigeu09mj9yqqtjgzjo6wf544\">在學習 Angular 動畫之前，你應該已熟悉如何建立基本的 Angular 應用程式：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xycsbxcv0c5qkbyobw77ktsd\"><a href=\"tutorial\">教學課程</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eeu18mg6g2yn9t3gjx4l6qcb7\"><a href=\"guide/architecture\">架構概覽</a></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"19sm83xn5otq3eolby0qg5j8u\">動畫可以透過多種方式改善你的應用程式和使用者體驗：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4v5l8p9ewk2rpzloon951k5dk\">沒有動畫，Web 頁面的轉場就會顯得突兀、不協調</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5vtng5o4wn7x842r2i12mmlwi\">運動能極大地提升使用者體驗，因此動畫可以讓使用者察覺到應用對他們的操作做出了回應</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mflvab1vt9l5fzmk56gtp6w0\">良好的動畫可以直觀的把使用者的注意力吸引到要留意的地方</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pt5ptuz84it603a2iirwidfv\">通常，動畫會隨時間進行多種樣式<em>轉換</em>。HTML 元素可以移動、改變顏色、增大、縮小、淡化或滑出頁面。這些變化可以同時或依次發生。你可以控制每個轉換的時間。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dpxkc3edmt9v0gj7sw2h8s2aw\">Angular 的動畫系統建立在 CSS 能力之上，這意味著你可以對瀏覽器認為可設定動畫的任何屬性設定動畫。這包括位置、大小、變換、顏色、邊框等。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1j8ab82zqc4t5k6albcu50ipc\">W3C 在其 <a href=\"https://www.w3.org/TR/css-transitions-1\">CSS Transitions</a> 頁面上維護了一個動畫屬性清單。</p>\n<h2 id=\"animation-transition-states\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2112xpw2ntu7dhs49tfita2rd\">動畫轉場狀態<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/understanding-angular-animation#animation-transition-states\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95y8wqxfcldepbcdw4uwztbf\">動畫轉場狀態表示動畫中某些點的樣式，你可以對其進行動畫處理。例如，你可以將一個狀態設定為不同狀態的起點和動畫的結束點。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"64vvnehqz4hahh6600728k3i\">為將單個 HTML 元素從一種狀態更改為另一種狀態之間的轉場設定動畫。例如，你可以指定按鈕根據使用者的最後一個操作顯示<strong>開啟</strong>或<strong>關閉</strong>。當按鈕處於 <code>open</code> 狀態時，它是完全可見的黃色。當它處於 <code>closed</code> 狀態時，它是半透明的藍色。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9fm76rnxxcfz62pnuukqtzdi2\">在 HTML 中，這些屬性都使用普通的 CSS 樣式，比如顏色（color）和透明度（opacity）。在 Angular 中，使用 <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> 函式來指定一組用作動畫的 CSS 樣式。可以為動畫狀態指定一組樣式，併為該狀態指定一個名字，比如 <code>open</code> 或 <code>closed</code>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9045ome5as587ha6w1babcyps\">要建立一個新的 <code>open-close</code> 元件並使用簡單的轉場動畫進行動畫處理，請在指令行工具中執行以下指令來建立元件：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng g component open-close\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cnfvus0b7okxpwsa2gqfmn4c\">這將在 <code>src/app/open-close.component.ts</code> 中建立該組件。</p>\n</div>\n\n  <div class=\"reviewed\">最後複查時間：Mon Dec 19 2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/style\n - guide/architecture\n - guide/understanding-angular-animation#animation-transition-states\n - guide/understanding-angular-animation#prerequisites\n - guide/understanding-angular-animation#understanding-angular-animation\n - tutorial\n - https://www.w3.org/TR/css-transitions-1\n-->"}