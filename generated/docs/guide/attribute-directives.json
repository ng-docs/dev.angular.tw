{"id":"guide/attribute-directives","title":"屬性型指令","contents":"<div class=\"content\">\n  <h1 id=\"attribute-directives\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cdzt47k44s3ld0g2lsx3frsix\">屬性型指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#attribute-directives\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"clkah1g0umbz68d0n7zqccutu\">使用屬性型指令，可以更改 DOM 元素和 Angular 元件的外觀或行為。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81el5yk7yllx1tewd03bnp7o0\">本章包含程式碼片段的工作實例參閱<live-example></live-example>。</p>\n</div>\n<h2 id=\"building-an-attribute-directive\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3782jn37gabxu8ofs9zh2s0wq\">建立屬性型指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#building-an-attribute-directive\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"93z4s07x9efe5r62ti1bn7b2h\">本節將引導你建立『突出顯示』指令，該指令會將宿主元素的背景色設定為黃色。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3v21d9vn9ynlo5v255qi49z8d\">要建立指令，請使用 CLI 指令 <a href=\"cli/generate\"><code>ng generate directive</code></a>。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate directive highlight\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alg38nqqjhqg2ouqnuwghnm3b\">CLI 建立 <code>src/app/highlight.directive.ts</code> 以及相應的測試檔案 <code>src/app/highlight.directive.spec.ts</code>，並在 <code>AppModule</code> 中宣告此指令類別。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dhby5k3f3vglgyujiwylbf2a6\">CLI 生成預設的 <code>src/app/highlight.directive.ts</code>，如下所示：</p>\n<code-example header=\"src/app/highlight.directive.ts\" path=\"attribute-directives/src/app/highlight.directive.0.ts\">\nimport {<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  standalone: true,\n  selector: '[appHighlight]',\n})\nexport class HighlightDirective {}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8wy8upchvhivk7tiub7a774fj\"><code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> 裝飾器的設定屬性會指定指令的 CSS 屬性選擇器 <code>[appHighlight]</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4l19tyr59ay5phm2oo2vqg6hf\">從 <code>@angular/core</code> 匯入 <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code>。<code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> 的 <code>nativeElement</code> 屬性會提供對宿主 DOM 元素的直接訪問許可權。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qd1319umf0fvszjmk9lm2lek\">在指令的 <code>constructor()</code> 中新增 <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> 以<a href=\"guide/dependency-injection\">注入</a>對宿主 DOM 元素的引用，該元素就是 <code>appHighlight</code> 的作用目標。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9crcxltxro7b8mivayrlk8gmk\">向 <code>HighlightDirective</code> 類別中新增邏輯，將背景設定為黃色。</p>\n<code-example header=\"src/app/highlight.directive.ts\" path=\"attribute-directives/src/app/highlight.directive.1.ts\">\nimport {<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  standalone: true,\n  selector: '[appHighlight]',\n})\nexport class HighlightDirective {\n  constructor(private el: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>) {\n    this.el.nativeElement.style.backgroundColor = 'yellow';\n  }\n}\n\n\n</code-example>\n</li>\n</ol>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6wuu6ki9hn6xza5n9778y3ees\">指令<em>不</em>支援名稱空間。</p>\n<code-example header=\"src/app/app.component.avoid.html (unsupported)\" path=\"attribute-directives/src/app/app.component.avoid.html\" region=\"unsupported\">\n&lt;p app:Highlight&gt;This is invalid&lt;/p&gt;\n\n</code-example>\n</div>\n<p><a id=\"apply-directive\"></a></p>\n<h2 id=\"applying-an-attribute-directive\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bilfq2qkp36tcd1bfsafbhfwh\">應用屬性型指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#applying-an-attribute-directive\"><i class=\"material-icons\">link</i></a></h2>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"abff50yaq4m2lzcsneyy6npe0\">要使用 <code>HighlightDirective</code>，請將 <code>&lt;p&gt;</code> 元素新增到 HTML 範本中，並以偽指令作為屬性。</p>\n<code-example header=\"src/app/app.component.html\" path=\"attribute-directives/src/app/app.component.1.html\" region=\"applied\">\n&lt;p appHighlight&gt;Highlight me!&lt;/p&gt;\n\n</code-example>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qk17u0tvy37agt3kvrje49m7\">Angular 會建立 <code>HighlightDirective</code> 類別的實例，並將 <code>&lt;p&gt;</code> 元素的引用注入到該指令的建構式函式中，它會將 <code>&lt;p&gt;</code> 元素的背景樣式設定為黃色。</p>\n<p><a id=\"respond-to-user\"></a></p>\n<h2 id=\"handling-user-events\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7pp18scug6z4dyduc3go16oub\">處理使用者事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#handling-user-events\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6m89fw8rov48uzx5crbd6h7da\">本節會展示如何檢測使用者何時將滑鼠移入或移出元素以及如何透過設定或清除突出顯示顏色來進行回應。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ojz0cl798uen0kezn0cqg2dk\">從 '@angular/core' 匯入 <code><a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a></code>。</p>\n<code-example header=\"src/app/highlight.directive.ts (imports)\" path=\"attribute-directives/src/app/highlight.directive.2.ts\" region=\"imports\">\nimport {<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>, <a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>} from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"889uwzk7z2t5onozm3ff9v58n\">新增兩個事件處理程式，它們會在滑鼠進入或離開時做出回應，每個事件處理程式都帶有 <code>@<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>()</code> 裝飾器。</p>\n<code-example header=\"src/app/highlight.directive.ts (mouse-methods)\" path=\"attribute-directives/src/app/highlight.directive.2.ts\" region=\"mouse-methods\">\n@<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>('mouseenter') onMouseEnter() {\n  this.highlight('yellow');\n}\n\n@<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>('mouseleave') onMouseLeave() {\n  this.highlight('');\n}\n\nprivate highlight(color: string) {\n  this.el.nativeElement.style.backgroundColor = color;\n}\n\n</code-example>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5mbwfssl05ps7kfoklt7j086z\">要訂閱本屬性型指令宿主 DOM 元素上的事件（在本例中是 <code>&lt;p&gt;</code>），可以使用 <code>@<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>()</code> 裝飾器。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lduj0hd01ep3z66br8xt22fn\">處理程式會委託給一個輔助方法 <code>highlight()</code>，該方法會設定宿主 DOM 元素 <code>el</code> 的顏色。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21un9y884n4fp9o9zfqgad9od\">完整的指令如下：</p>\n<code-example header=\"src/app/highlight.directive.ts\" path=\"attribute-directives/src/app/highlight.directive.2.ts\">\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  standalone: true,\n  selector: '[appHighlight]',\n})\nexport class HighlightDirective {\n  constructor(private el: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>) {}\n\n  @<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>('mouseenter') onMouseEnter() {\n    this.highlight('yellow');\n  }\n\n  @<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>('mouseleave') onMouseLeave() {\n    this.highlight('');\n  }\n\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"98jz3eujlr5zipe63amvu18sq\">當指標懸停在 p 元素上時，背景顏色就會出現；而當指標移出時，背景顏色就會消失。</p>\n<div class=\"lightbox\">\n<img alt=\"Second Highlight\" src=\"generated/images/guide/attribute-directives/highlight-directive-anim.gif\" width=\"204\" height=\"72\">\n</div>\n<p><a id=\"bindings\"></a></p>\n<h2 id=\"passing-values-into-an-attribute-directive\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"evlpr0z4pecdroeyd72g40f1x\">將值傳遞給屬性型指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#passing-values-into-an-attribute-directive\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cprkhnissdk5zfm3jidacftg\">本節將引導你在應用 <code>HighlightDirective</code> 時設定突出顯示顏色。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2l9lywv4q7zkyusjx7t0v69j5\">在 <code>highlight.directive.ts</code> 中，從 <code>@angular/core</code> 匯入 <code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code>。</p>\n<code-example header=\"src/app/highlight.directive.ts (imports)\" path=\"attribute-directives/src/app/highlight.directive.3.ts\" region=\"imports\">\nimport {<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>, <a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a>} from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3uhto8fatxn3i53akvp50tk9f\">新增一個 <code>appHighlight</code> 的 <code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> 屬性。</p>\n<code-example header=\"src/app/highlight.directive.ts\" path=\"attribute-directives/src/app/highlight.directive.3.ts\" region=\"input\">\n@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() appHighlight = '';\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5g0yj3ifdoxb35tjc62vnp4k\"><code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> 裝飾器會將元資料新增到此類別，以便讓該指令的 <code>appHighlight</code> 屬性可用於繫結。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3m3812ehicwb6o3boatklp4bp\">在 <code>app.component.ts</code>，將 <code>color</code> 屬性新增到 <code>AppComponent</code>。</p>\n<code-example header=\"src/app/app.component.ts (class)\" path=\"attribute-directives/src/app/app.component.1.ts\" region=\"class\">\nexport class AppComponent {\n  color = 'yellow';\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2n6ahho5my5afef8cwub6cjgc\">要同時應用指令和顏色，請透過 <code>appHighlight</code> 指令選擇器使用屬性繫結，將其設定為 <code>color</code>。</p>\n<code-example header=\"src/app/app.component.html (color)\" path=\"attribute-directives/src/app/app.component.html\" region=\"color\">\n&lt;p [appHighlight]=\"color\"&gt;Highlight me!&lt;/p&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"biisehi00wezr6tziel8bcpac\"><code>[appHighlight]</code> 屬性繫結執行兩項任務：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jawhvyphxfuwycxd4ht3b2q7\">將突出顯示指令應用於 <code>&lt;p&gt;</code> 元素</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"78aizovj1wjkwvw1j3fl35c3n\">透過屬性繫結設定指令的突出顯示顏色</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"setting-the-value-with-user-input\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2nxspofomyqs6e1cyayflt4a0\">透過使用者輸入來設定值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#setting-the-value-with-user-input\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9g9kfw5yrg51qjcknhi0w8uud\">本節指導你新增單選按鈕，將你選擇的顏色繫結到 <code>appHighlight</code> 指令。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ea0oc0qmk6kyrdle0qw34kmh\">將標記新增到 <code>app.component.html</code> 以選擇顏色，如下所示：</p>\n<code-example header=\"src/app/app.component.html (v2)\" path=\"attribute-directives/src/app/app.component.html\" region=\"v2\">\n&lt;h1&gt;My First <a href=\"api/core/Attribute\" class=\"code-anchor\">Attribute</a> <a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>&lt;/h1&gt;\n\n&lt;h2&gt;Pick a highlight color&lt;/h2&gt;\n&lt;div&gt;\n  &lt;input type=\"radio\" name=\"colors\" (click)=\"color='lightgreen'\"&gt;Green\n  &lt;input type=\"radio\" name=\"colors\" (click)=\"color='yellow'\"&gt;Yellow\n  &lt;input type=\"radio\" name=\"colors\" (click)=\"color='cyan'\"&gt;Cyan\n&lt;/div&gt;\n&lt;p [appHighlight]=\"color\"&gt;Highlight me!&lt;/p&gt;\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4cjehlfvsff0muh442bkqtm0q\">修改 <code>AppComponent.color</code>，使其沒有初始值。</p>\n<code-example header=\"src/app/app.component.ts (class)\" path=\"attribute-directives/src/app/app.component.ts\" region=\"class\">\nexport class AppComponent {\n  color = '';\n}\n\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bs4jbbekiyacbk2wlqjlklkc\">在 <code>highlight.directive.ts</code> 中，修改 <code>onMouseEnter</code> 方法，讓它首先嘗試使用 <code>appHighlight</code> 進行高亮顯示，如果 <code>appHighlight</code> 是 <code>undefined</code>，則回退為 <code>red</code>。</p>\n<code-example header=\"src/app/highlight.directive.ts (mouse-enter)\" path=\"attribute-directives/src/app/highlight.directive.3.ts\" region=\"mouse-enter\">\n@<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>('mouseenter') onMouseEnter() {\n  this.highlight(this.appHighlight || 'red');\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7pe813fupq2ky4n2ciiwtf5kw\">啟動本應用的開發伺服器，以驗證使用者可以透過單選按鈕選擇顏色。</p>\n<div class=\"lightbox\">\n<img alt=\"Animated gif of the refactored highlight directive changing color according to the radio button the user selects\" src=\"generated/images/guide/attribute-directives/highlight-directive-v2-anim.gif\" width=\"432\" height=\"172\">\n</div>\n</li>\n</ol>\n<p><a id=\"second-property\"></a></p>\n<h2 id=\"binding-to-a-second-property\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2x5hkp3td453rgs0r8iw31nw2\">繫結到第二個屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#binding-to-a-second-property\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6kxwmaf92zrfo9jsnwkcysf20\">本節將指導你設定應用程式，以便開發人員可以設定預設顏色。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"99f846hlj1301f4ta7khspeyk\">將第二個 <code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> 屬性 <code>defaultColor</code> 新增到 <code>HighlightDirective</code>。</p>\n<code-example header=\"src/app/highlight.directive.ts (defaultColor)\" path=\"attribute-directives/src/app/highlight.directive.ts\" region=\"defaultColor\">\n@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() defaultColor = '';\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c97mgxmrpjniyr9o5hugjfeql\">修改指令的 <code>onMouseEnter</code>，使其首先嘗試使用 <code>appHighlight</code> 進行突出顯示，然後嘗試 <code>defaultColor</code>，如果兩個屬性都 <code>undefined</code>，則變回 <code>red</code>。</p>\n<code-example header=\"src/app/highlight.directive.ts (mouse-enter)\" path=\"attribute-directives/src/app/highlight.directive.ts\" region=\"mouse-enter\">\n@<a href=\"api/core/HostListener\" class=\"code-anchor\">HostListener</a>('mouseenter') onMouseEnter() {\n  this.highlight(this.appHighlight || this.defaultColor || 'red');\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fifdvh4zn858c75rsm5a1by6\">若要繫結到 <code>AppComponent.color</code> 並回退為預設顏色『紫羅蘭（violet）』，請新增以下 HTML。在這裡，<code>defaultColor</code> 繫結沒有使用方括號 <code>[]</code>，因為它是靜態的。</p>\n<code-example header=\"src/app/app.component.html (defaultColor)\" path=\"attribute-directives/src/app/app.component.html\" region=\"defaultColor\">\n&lt;p [appHighlight]=\"color\" defaultColor=\"violet\"&gt;\n  Highlight me too!\n&lt;/p&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enzzk27n94d6x18qq7as122b9\">與元件一樣，你可以將指令的多個屬性繫結新增到宿主元素上。</p>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9jnxrzbliu6c9iaf1lnxta7fk\">如果沒有預設顏色（defaultColor）繫結，則預設為紅色。當用戶選擇一種顏色時，所選的顏色將成為突出顯示的顏色。</p>\n<div class=\"lightbox\">\n<img alt=\"Animated gif of final highlight directive that shows red color with no binding and violet with the default color set. When user selects color, the selection takes precedence.\" src=\"generated/images/guide/attribute-directives/highlight-directive-final-anim.gif\" width=\"440\" height=\"212\">\n</div>\n<p><a id=\"ngNonBindable\"></a></p>\n<h2 id=\"deactivating-angular-processing-with-ngnonbindable\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1onrx5nnpj0vm9b4ldkuuunbe\">透過 <code>NgNonBindable</code> 停用 Angular 處理過程<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/attribute-directives#deactivating-angular-processing-with-ngnonbindable\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"znijcfvn9z8byiaqanf34fae\">要防止在瀏覽器中進行表示式求值，請將 <code>ngNonBindable</code> 新增到宿主元素。<code>ngNonBindable</code> 會停用範本中的內嵌、指令和繫結。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7n3emgugenpvob8hbb7zgdfll\">在下面的範例中，表示式 <code>{{ 1 + 1 }}</code> 的渲染方式會和在程式碼編輯器的一樣，而不會顯示 <code>2</code>。</p>\n<code-example header=\"src/app/app.component.html\" linenums=\"false\" path=\"attribute-directives/src/app/app.component.html\" region=\"ngNonBindable\">\n&lt;p&gt;Use ngNonBindable to stop evaluation.&lt;/p&gt;\n&lt;p ngNonBindable&gt;This should not evaluate: {{ 1 + 1 }}&lt;/p&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95izp8527lnqantfpkgzyxu59\">將 <code>ngNonBindable</code> 應用於元素將停止對該元素的子元素的繫結。但是，<code>ngNonBindable</code> 仍然允許指令在應用 <code>ngNonBindable</code> 的元素上工作。在以下範例中，<code>appHighlight</code> 指令仍處於活躍狀態，但 Angular 不會對錶達式 <code>{{ 1 + 1 }}</code> 求值。</p>\n<code-example header=\"src/app/app.component.html\" linenums=\"false\" path=\"attribute-directives/src/app/app.component.html\" region=\"ngNonBindable-with-directive\">\n&lt;h3&gt;ngNonBindable with a directive&lt;/h3&gt;\n&lt;div ngNonBindable [appHighlight]=\"'yellow'\"&gt;This should not evaluate: {{ 1 +1 }}, but will highlight yellow.\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1ouewdyny7ewn3er3xlcarkf\">如果將 <code>ngNonBindable</code> 應用於父元素，則 Angular 會停用該元素的子元素的任何內嵌和繫結，比如屬性繫結或事件繫結。</p>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/architecture-components\n - guide/bootstrapping\n - guide/built-in-directives\n - guide/content-projection\n - guide/dependency-injection-in-action\n - guide/example-apps-list\n - guide/glossary\n - guide/what-is-angular\n-->\n<!-- links from this doc:\n - api/core/Attribute\n - api/core/Directive\n - api/core/ElementRef\n - api/core/HostListener\n - api/core/Input\n - cli/generate\n - guide/attribute-directives#applying-an-attribute-directive\n - guide/attribute-directives#attribute-directives\n - guide/attribute-directives#binding-to-a-second-property\n - guide/attribute-directives#building-an-attribute-directive\n - guide/attribute-directives#deactivating-angular-processing-with-ngnonbindable\n - guide/attribute-directives#handling-user-events\n - guide/attribute-directives#passing-values-into-an-attribute-directive\n - guide/attribute-directives#setting-the-value-with-user-input\n - guide/dependency-injection\n-->"}