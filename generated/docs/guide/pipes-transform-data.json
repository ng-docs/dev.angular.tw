{"id":"guide/pipes-transform-data","title":"使用参数和管道链来格式化数据","contents":"<div class=\"content\">\n  <h1 id=\"transforming-data-with-parameters-and-chained-pipes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b4a9d0lyu6gy7m4elaz7euiv\">使用参数和管道链来格式化数据<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#transforming-data-with-parameters-and-chained-pipes\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9jtkc00shxjxbn2epk5c7zjb\">某些管道有\n<em>可选</em>参数，用于微调管道的输出。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"57w35i3hk6v5g3919ed0e3i2z\">例如，\n<a href=\"api/common/CurrencyPipe\" title=\"API 参考\"><code>CurrencyPipe</code></a> 接受一个国家代码作为参数。 要指定参数，请在管道名称（\n<code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code>）后跟一个冒号（\n<code>:</code>）和参数值（国家代码）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8y3tkumrdeiejp0yqst175asw\">模板表达式 \n<code>{{ amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a>:'EUR' }}</code> 显示带有欧元符号（€）前缀的金额。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kemvtni1n7eefwf7bepv07fh\">某些管道接受多个\n<em>可选</em>参数。通过冒号分隔，将每个参数传递给管道。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2zqdw3fzj1kozf9spgzp2mu7m\">例如，\n<code>{{ amount | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a>:'EUR':'欧元 '}}</code> 显示带有标签\"欧元\"（第二个参数）而不是欧元符号的金额。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9y5ovwtuwxjudy58ja13ygt5m\">一些管道，例如\n<a href=\"/api/common/SlicePipe\" title=\"SlicePipe的API参考\"><code>SlicePipe</code></a>，\n<em>需要</em>至少一个参数，可能允许更多的\n<em>可选</em>参数。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"uuz180qqza3kker46r3zqph7\">表达式\n<code>{{ anArray | <a href=\"api/common/SlicePipe\" class=\"code-anchor\">slice</a>:1:5 }}</code>显示一个包含从元素\n<code>1</code>开始到元素\n<code>5</code>结束的元素子集的新字符串。</p>\n<h2 id=\"example-formatting-a-date\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qgptgdnstpqby6redeyn9ey\">范例：格式化日期<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#example-formatting-a-date\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ulpjk01mghhridrpjjgufp0q\">以下示例演示了使用\n<a href=\"api/common/DatePipe\" title=\"API参考\"><code>DatePipe</code></a>格式化英雄出生日期的两种方法。</p>\n<code-tabs>\n    <code-pane header=\"birthday-formatting.component.html (template)\" path=\"pipes/src/app/birthday-formatting.component.html\">\n&lt;p&gt;The hero's birthday is {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>:\"shortDate\" }} in the \"shortDate\" format.&lt;/p&gt;\n\n&lt;p&gt;The hero's birthday is {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>:format }} in \"{{format}}\" format.\n  Click the toggle button to change formats.&lt;/p&gt;\n\n&lt;button type=\"button\" (click)=\"toggleFormat()\"&gt;Toggle Format&lt;/button&gt;\n\n\n</code-pane>\n    <code-pane header=\"birthday-formatting.component.ts (class)\" path=\"pipes/src/app/birthday-formatting.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a> } from '@angular/common';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-birthday-formatting',\n  templateUrl: './birthday-formatting.component.html',\n  imports: [<a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a>],\n})\nexport class BirthdayFormattingComponent {\n  birthday = new Date(1988, 3, 15); // April 15, 1988 -- since month parameter is zero-based\n  toggle = true;\n\n  get format()   { return this.toggle ? 'mediumDate' : 'fullDate'; }\n\n  toggleFormat() { this.toggle = !this.toggle; }\n}\n\n\n</code-pane>\n</code-tabs>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7t92muwxnyqgnljvkyi32o56o\">在模板中，第一个表达式将出生日期传递给\n<code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code>，带有一个字面的日期格式参数\"shortDate\"。输出为\n<strong>04/15/88</strong>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3pmvagxbyvqvz7ulc56zra74a\">第二个表达式将出生日期传递给\n<code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code>，带有一个日期格式参数，该参数与组件属性\n<em>绑定</em>（\n<code>format</code>）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44q7a0bny6qk6roeh8n21eoco\">点击\"切换\"按钮会在两种\n<em>许多可能的预定义格式</em>中切换该属性值，\n<code>'mediumDate'</code>和\n<code>'fullDate'</code>。输出为\n<strong>1988年4月15日</strong>或\n<strong>1988年4月15日星期五</strong>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xlm5zqn6su5hfxrxbslzrr4g\">页面以指定的格式显示出生日期。</p>\n<h2 id=\"example-chaining-two-pipes-together\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dimegpak9r7oleybkekroq2mn\">示例：链接两个管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-transform-data#example-chaining-two-pipes-together\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9hchmf6swku9l7847tkjlgic3\">使用\"管道链接语法\"连接多个管道，使一个管道的输出成为下一个管道的输入。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84l3lmvzwayoj6g3ey7t1u0ij\">以下示例将出生日期传递给\n<code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code>，然后将结果转发给\n<code><a href=\"api/common/UpperCasePipe\" title=\"API参考\">UpperCasePipe</a></code>管道，使用\"管道链接语法\"。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fsh11za2teufagtyi8n58az3\">再次演示了\n<code><a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a></code>使用\n<em>带</em>和\n<em>不带</em>格式参数。注意两个结果（\n<strong>APR 15, 1988</strong>和\n<strong>FRIDAY, APRIL 15, 1988</strong>）都是大写的。</p>\n<code-tabs>\n    <code-pane header=\"birthday-pipe-chaining.component.html (template)\" path=\"pipes/src/app/birthday-pipe-chaining.component.html\">\n&lt;p&gt;\n  The chained hero's uppercase birthday is\n  {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a> | <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">uppercase</a>}}\n&lt;/p&gt;\n\n&lt;p&gt;\n  The chained hero's uppercase birthday in \"fullDate\" format is\n  {{ birthday | <a href=\"api/common/DatePipe\" class=\"code-anchor\">date</a>:'fullDate' | uppercase}}\n&lt;/p&gt;\n\n\n</code-pane>\n    <code-pane header=\"birthday-pipe-chaining.component.ts (class)\" path=\"pipes/src/app/birthday-pipe-chaining.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a>, <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">UpperCasePipe</a>} from '@angular/common';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-birthday-pipe-chaining',\n  templateUrl: './birthday-pipe-chaining.component.html',\n  imports: [<a href=\"api/common/DatePipe\" class=\"code-anchor\">DatePipe</a>, <a href=\"api/common/UpperCasePipe\" class=\"code-anchor\">UpperCasePipe</a>],\n})\nexport class BirthdayPipeChainingComponent {\n  birthday = new Date(1988, 3, 15); // April 15, 1988 -- since month parameter is zero-based\n}\n\n\n</code-pane>\n</code-tabs>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"boyw8onnz42z6bs9vtodh0xvb\">切换到类文件以查看这是一个\n<a href=\"guide/standalone-components\">独立组件</a>；它从\n<code>@angular/common</code>导入了这两个管道，这是所有内置管道的来源。</p>\n\n  <div class=\"reviewed\">最后复查时间：Mon Aug 14 2023</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/common/SlicePipe\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DatePipe#pre-defined-format-options\n - api/common/SlicePipe\n - api/common/UpperCasePipe\n - api/core/Component\n - guide/pipes-transform-data#example-chaining-two-pipes-together\n - guide/pipes-transform-data#example-formatting-a-date\n - guide/pipes-transform-data#transforming-data-with-parameters-and-chained-pipes\n - guide/standalone-components\n-->"}