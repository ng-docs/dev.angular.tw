{"id":"guide/template-syntax","title":"模板语法","contents":"<div class=\"content\">\n  <h1 id=\"template-syntax\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5w5kqvgmi0o4l4z6rjt7db87s\">模板语法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#template-syntax\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0ngn6r472rafcs5602dlzvv9\">在 Angular 中，<em>模板</em>就是一块 HTML。你可以在模板中通过一种特殊的语法来使用 Angular 的诸多特性。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7jewxpiarjexo6ti7e27dm0k5\">在学习模板语法之前，你应该熟悉下列内容：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ewog4mcjalzx66yxssnau63b3\"><a href=\"guide/architecture\">Angular 的概念</a></li>\n<li>JavaScript</li>\n<li>HTML</li>\n<li>CSS</li>\n</ul>\n<!--todo: Do we still need the following section? It seems more relevant to those coming from AngularJS, which is now 7 versions ago. -->\n<!-- You may be familiar with the component/template duality from your experience with model-view-controller (MVC) or model-view-viewmodel (MVVM).\nIn Angular, the component plays the part of the controller/viewmodel, and the template represents the view. -->\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lillkwfgvbodjcsfogox31km\">应用程序中的每个 Angular 模板都是一块 HTML，你可以将其包含在浏览器显示的页面中。Angular 中的 HTML 模板与常规 HTML 一样，可以在浏览器中渲染视图或用户界面，但功能要多得多。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jnoa87ru062b68f7yfqibl7e\">使用 Angular CLI 生成 Angular 应用时，<code>app.component.html</code> 文件是一个包含占位符 HTML 的默认模板。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"654iy415b0lm36o3f7mlh1fgp\">本模板语法指南向你展示了如何通过协调类和模板之间的数据来控制 UX/UI。</p>\n<div class=\"is-helpful alert\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bk2njiw51qgxhneah7b42htst\">大多数模板语法指南都有专门的可工作的范例应用，这些应用程序演示了每个指南中的各个主题。要查看把所有应用合在一起时的工作情况，请参阅综合<live-example title=\"Template Syntax Live Code\"></live-example>。</p>\n</div>\n<h2 id=\"empower-your-html\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"223lu7dwlgq6jh2t13r6mxywe\">为你的 HTML 赋能<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#empower-your-html\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30fhvq0fb6xwcthepl7q7m6wf\">通过在模板中使用特殊的 Angular 语法，扩展应用程序的 HTML 词汇。 例如，Angular 可以帮助您使用内置模板函数、变量、事件监听和数据绑定等功能动态获取和设置 DOM（文档对象模型）的值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cvteh5kkgspqsq428qhuikay\">几乎所有的 HTML 语法都是有效的模板语法。但是，由于 Angular 模板只是整个网页的一部分，而不是整个网页，因此你不需要包含诸如 <code>&lt;html&gt;</code>，<code>&lt;body&gt;</code> 或 <code>&lt;base&gt;</code> 元素。这样你可以专注于正在开发的那部分页面。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ogqtq7q14homizhs8de3qxl1\">为了消除脚本注入攻击的风险，Angular 不支持模板中使用 <code>&lt;script&gt;</code> 元素。Angular 会忽略 <code>&lt;script&gt;</code> 标记，并向浏览器控制台输出一条警告。欲知详情，参阅<a href=\"guide/security\">“安全性”</a>页面。</p>\n</div>\n<h2 id=\"more-on-template-syntax\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"17gbqei8x3zozb5w3xf0z2qfu\">关于模板语法的更多信息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#more-on-template-syntax\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oolgylns9kaynftarwog49tq\">你可能还对下列内容感兴趣：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"349gxhvoq0786v2eduuongf1f\">主题</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6fyhbaja116kgcp0ar1jv4smq\">插值</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3vjcdz7kopgbpz27k22y8cyyf\">学习如何在 HTML 中使用插值和表达式。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2f1axmc62ssz3pt6hgsd9y608\"><a href=\"guide/template-statements\">模板语句</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8o8xzyo58w2rlfmz1rtsjy3wt\">响应模板中的事件。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7boobbok84b51i60fmn6nurfv\"><a href=\"guide/binding-syntax\">绑定语法</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5p00kiuroz44vfma03jkagg0e\">使用绑定来协调应用程序中的值。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"mfyxx87fibqbnu58gbuv5vkk\"><a href=\"guide/property-binding\">属性绑定</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2vjxy8j41jllna77sdd1ddvr7\">设置目标元素或指令\n<code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code>装饰器的属性。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1s9recaovxecjue2ku8t1qnd2\">属性、类和样式绑定</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyjlq084genf0qu7vi4h8dt7d\">设置属性、类和样式的值。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6tdxpqx0gzw605pst3e974rgi\"><a href=\"guide/event-binding\">事件绑定</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31snv82api7n7mdawk477hog\">监听 HTML 事件。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"pmgobrf7ht0v6oo28ihppae5\"><a href=\"guide/two-way-binding\">双向绑定</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6h82mn5mpdksorg4nxnsr6tos\">在类和其模板之间共享数据。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"crdrd68gygpi9ic4x51i9uccy\">内置指令</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bt5hcpthajspu4419nv7p1c8a\">监听并修改 HTML 的行为和布局。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9s1abhjjqm50i635v45p07pmh\">模板引用变量</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59senwuxsk427e1wleg3ilziw\">在模板中使用特殊变量引用某个 DOM 元素。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8xwvk9gjs0500yzvzsybwxoav\"><a href=\"guide/inputs-outputs\">输入和输出</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5thyajf5fmkci0mkps4zdsukg\">在父级上下文和子指令或组件之间共享数据。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2t87syi4onzaeuuwgtc1z0mp8\">模板表达式操作符</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f10jeg2s3lyqu4gyofa397e6e\">了解管道操作符（\n<code>|</code>），以及在 HTML 中防止\n<code>null</code>或\n<code>undefined</code>值。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a216uzguya41b4m7asu0ouh9a\">模板中的 SVG</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dh0ptdiuc5kji69u0bwp82afy\">动态生成交互式图形。</td>\n</tr>\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/architecture-components\n - guide/architecture-next-steps\n - guide/component-overview\n - guide/example-apps-list\n - guide/forms\n - guide/glossary\n - guide/understanding-angular-overview\n - start/start-deployment\n - tutorial/first-app/first-app-lesson-07\n-->\n<!-- links from this doc:\n - api/core/Input\n - guide/architecture\n - guide/attribute-binding\n - guide/binding-syntax\n - guide/built-in-directives\n - guide/event-binding\n - guide/inputs-outputs\n - guide/interpolation\n - guide/property-binding\n - guide/security\n - guide/svg-in-templates\n - guide/template-expression-operators\n - guide/template-reference-variables\n - guide/template-statements\n - guide/template-syntax#empower-your-html\n - guide/template-syntax#more-on-template-syntax\n - guide/template-syntax#prerequisites\n - guide/template-syntax#template-syntax\n - guide/two-way-binding\n-->"}