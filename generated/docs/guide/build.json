{"id":"guide/build","title":"建立並執行 Angular 應用","contents":"<div class=\"content\">\n  <h1 id=\"building-and-serving-angular-apps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"88hw7b6e7kfuxqib71xfmwdzt\">建立並執行 Angular 應用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#building-and-serving-angular-apps\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"264k8ntig6ntsx0emx55r9tpr\">本文討論的是 Angular 專案中與建立有關的設定項。</p>\n<p><a id=\"app-environments\"></a></p>\n<h2 id=\"configuring-application-environments\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ma6kdja1brkmk7k888c0uj86\">設定應用環境<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#configuring-application-environments\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"72k4p493u1zq6xuh66dum2lx8\">你可以為專案定義不同的命名建立設定，例如 <code>development</code> 和 <code>staging</code>，具有不同的預設值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6bkppnhkebal80ui38062wq7s\">每個命名設定項都可以具有某些選項的預設值，並應用於各種<a href=\"guide/glossary#target\">建立目標</a>，比如 <code>build</code>、<code>serve</code> 和 <code>test</code>。<a href=\"cli\">Angular CLI</a> 的 <code>build</code>、<code>serve</code> 和 <code>test</code> 指令可以為不同的目標環境，把檔案替換成合適的版本。</p>\n<h3 id=\"configure-environment-specific-defaults\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bduetr5d2s7esxw285ejrymc6\">設定針對特定環境的預設值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#configure-environment-specific-defaults\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"h174ee1odgpweo20nh49nqk9\">使用 Angular CLI，首先執行此處顯示的<a href=\"cli/generate#environments-command\">生成環境指令</a>以建立 <code>src/environments/</code> 目錄並將專案設定為使用這些檔案。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate environments\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4sosmt4657puytmpadhi4v40u\">專案的 <code>src/environments/</code> 目錄包含基本設定檔案 <code>environment.ts</code>，它提供 <code>production</code> 的設定，即預設環境。你可以在特定於目標的設定檔案中覆蓋其他環境的預設值，例如 <code>development</code> 和 <code>staging</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4reizjf10jcs1ftw359bt1ndz\">比如：</p>\n<div class=\"filetree\">\n    <div class=\"file\">\n        myProject/src/environments\n    </div>\n    <div class=\"children\">\n        <div class=\"file\">\n          environment.ts\n        </div>\n        <div class=\"file\">\n          environment.development.ts\n        </div>\n        <div class=\"file\">\n          environment.staging.ts\n        </div>\n    </div>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2crrbos1h23l4zzftumq9rghn\">基礎環境 <code>environment.ts</code> 包含了預設的環境設定。比如：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nexport const environment = {\n  production: true\n};\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4p0cwwztefuyaat7et6q6kq0r\">當沒有指定環境時，<code>build</code> 指令就會用它作為建立目標。你可以新增其它變數，可以用該環境物件附加屬性的形式，也可以用獨立物件的形式。比如：以下內容將會把一個變數新增到預設環境中：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nexport const environment = {\n  production: true,\n  apiUrl: 'http://my-prod-url'\n};\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zz71iyiwvc46yt23jyunl3mr\">你可以新增特定於目標的設定檔案，例如 <code>environment.development.ts</code>。以下內容為開發建立目標設定了預設值：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://my-api-url'\n};\n\n</code-example>\n<h3 id=\"using-environment-specific-variables-in-your-app\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bho9hv9x3zox5xp2qg8omtwfz\">在應用中使用針對特定環境的變數<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#using-environment-specific-variables-in-your-app\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4qgml65n2xboitkwjrn9hl35k\">以下應用程式結構可以為 <code>development</code> 和 <code>staging</code> 環境設定建立目標：</p>\n<div class=\"filetree\">\n    <div class=\"file\">\n        src\n    </div>\n    <div class=\"children\">\n        <div class=\"file\">\n          app\n        </div>\n        <div class=\"children\">\n            <div class=\"file\">\n              app.component.html\n            </div>\n            <div class=\"file\">\n              app.component.ts\n            </div>\n        </div>\n        <div class=\"file\">\n          environments\n        </div>\n        <div class=\"children\">\n            <div class=\"file\">\n              environment.ts\n            </div>\n            <div class=\"file\">\n              environment.development.ts\n            </div>\n            <div class=\"file\">\n              environment.staging.ts\n            </div>\n        </div>\n    </div>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a2sdvcc2pzgw2sp1y08manamh\">要使用已定義的設定環境，元件必須匯入原始版的環境檔案：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport { environment } from './../environments/environment';\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9hiltcxghmf8s1ba2nav74ov4\">這會確保 <code>build</code> 和 <code>serve</code> 指令能找到針對特定目標的設定。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7qoq2yyn2t00sfus44vvlvltl\">元件檔案（<code>app.component.ts</code>）中的下列程式碼可以使用該設定檔案中定義的環境變數。</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n  import { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n  import { environment } from './../environments/environment';\n\n  @<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n  })\n  export class AppComponent {\n    constructor() {\n      console.log(environment.production); // Logs false for development environment\n    }\n\n    title = 'app works!';\n  }\n\n</code-example>\n<p><a id=\"file-replacement\"></a></p>\n<h2 id=\"configure-target-specific-file-replacements\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ch840up35ylnv5k37hepyoh4i\">設定針對特定目標的檔案替換規則<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#configure-target-specific-file-replacements\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zr7qsau8pnnnbkr7gpmtkc71\">CLI 的主設定檔案 <code>angular.json</code> 中的每個建立目標下都包含了一個 <code>fileReplacements</code> 區段。這能讓你把 TypeScript 程式中的任何檔案替換為針對特定目標的版本。當建立目標需要包含針對特定環境（比如生產或預生產）的程式碼或變數時，這非常有用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6abqd21n54m82f02j192m33bm\">預設情況下不會替換任何檔案。你可以為特定的建立目標新增檔案替換規則。比如：</p>\n<code-example format=\"json\" language=\"json\">\n\n  \"configurations\": {\n    \"development\": {\n      \"fileReplacements\": [\n          {\n            \"replace\": \"src/environments/environment.ts\",\n            \"with\": \"src/environments/environment.development.ts\"\n          }\n        ],\n        …\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"esn3mk7f8pk9269pbi6w8bb0v\">這意味著當你使用 <code>ng build --configuration development</code> 建立開發設定時，<code>src/environments/environment.ts</code> 檔案將替換為特定於目標的版本 <code>src/environments/environment.development.ts</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6g4ocsee7rr2868tqxdmaweqi\">你還可以按需新增更多設定檔案。要想新增預生產環境，把 <code>src/environments/environment.ts</code> 複製為 <code>src/environments/environment.staging.ts</code>，然後在 <code>angular.json</code> 中新增 <code>staging</code> 設定：</p>\n<code-example format=\"json\" language=\"json\">\n\n  \"configurations\": {\n    \"development\": { … },\n    \"production\": { … },\n    \"staging\": {\n      \"fileReplacements\": [\n        {\n          \"replace\": \"src/environments/environment.ts\",\n          \"with\": \"src/environments/environment.staging.ts\"\n        }\n      ]\n    }\n  }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b9hnii6g591zv57yd9j8xv8fb\">你還可以往目標環境中新增更多設定項。你的建立目標支援的任何選項都可以在建立目標設定中進行覆蓋。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4aaxm18q5irqc0m5qn6o45ucf\">要想使用預生產環境（staging）的設定進行建立，請執行下列指令：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng build --configuration=staging\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"36p6w1mfzonskp4a0438oyso8\">如果將其新增到 <code>angular.json</code> 的 \"serve:configurations\" 區段，你還可以設定 <code>serve</code> 指令來使用 目標建立設定：</p>\n<code-example format=\"json\" language=\"json\">\n\n  \"serve\": {\n    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n    \"options\": {\n      \"browserTarget\": \"your-project-name:build\"\n    },\n    \"configurations\": {\n      \"development\": {\n        \"browserTarget\": \"your-project-name:build:development\"\n      },\n      \"production\": {\n        \"browserTarget\": \"your-project-name:build:production\"\n      },\n      \"staging\": {\n        \"browserTarget\": \"your-project-name:build:staging\"\n      }\n    }\n  },\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p3c6k9qk077n6t5o6ttkwt1i\"><a id=\"size-budgets\"></a>\n<a id=\"configure-size-budgets\"></a></p>\n<h2 id=\"configuring-size-budgets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3hx5ugdfaz1upcjjlktn9xiha\">設定檔案大小預算<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#configuring-size-budgets\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9i8aki2fcslj3ijkrj32e6ar\">當應用的功能不斷增長時，其檔案大小也會同步增長。CLI 允許你透過設定項來限制檔案大小，以確保應用的各個部分都處於你定義的大小範圍內。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"167dxf0g3scnm9foagizhtezc\">你可以在 CLI 設定檔案 <code>angular.json</code> 的 <code>budgets</code> 區段為每個<a href=\"guide/build#app-environments\">所設定的環境</a>定義這些大小範圍。</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  …\n  \"configurations\": {\n    \"production\": {\n      …\n      \"budgets\": []\n    }\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3z2ssvoxs1756k992nomfgcjz\">你可以為整個應用指定大小範圍，也可以為特定部分。每個條目會為一種特定的型別設定大小範圍。用下列各式來指定大小的值：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f39e1sxuw8gilo5hjvhhep4dy\">尺寸數值</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1mrn2snrolso1n9jjtrigmf7u\"><code>123</code> 或 \n<code>123b</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3r30dd191rd2w0bey9q4q6bkb\">位元組大小。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>123kb</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5k6j2vwd86pxs3mbj1efnhpf\">千位元組大小。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>123mb</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ac6e9w1d42rlexbzf3296np80\">兆位元組大小。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>12%</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e11g16jg0k83x5ns0585fd5s3\">相對於基線的尺寸百分比。（對於基線值無效。）</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2sahp62uiyc5stee2w3n2shan\">如果設定了大小範圍，建立系統就會在發現應用的某個部分達到或超過了你設定的大小範圍時發出警告或報錯。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"r1yblry1oaoj120b94avnusx\">每個範圍條目是一個 JSON 物件，它具有下列屬性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dkddoxcqk28ajo52wkpdu2by\">屬性</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66vasbp44yre2dcyqjx64g0vw\">數值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">type</td>\n<td align=\"left\">The type of budget. One of: <table> <thead> <tr> <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5hi6fx5hpdr89gqwsxztq1jc\">數值</th> <th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"40zskny0031m998f20foy4oiv\">詳情</th> </tr> </thead> <tbody> <tr> <td> <code>bundle</code> </td> <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ay8unomh4ixl3q5sicb16t0d\">特定捆綁包的大小。</td> </tr> <tr> <td> <code>initial</code> </td> <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3f8c091389hbhuz88bienbo0r\">用於引導應用程式所需的JavaScript大小。預設情況下，在500kb時警告，在1mb時出錯。</td> </tr> <tr> <td> <code>allScript</code> </td> <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9g2flta1848jigu01i46uo1tx\">所有指令碼的大小。</td> </tr> <tr> <td> <code>all</code> </td> <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4f6t8v7672wlybjs905m7nesc\">整個應用程式的大小。</td> </tr> <tr> <td> <code>anyComponentStyle</code> </td> <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"921ale2pm55jedpwmnr0nwo4t\">任何一個元件樣式表的大小。預設情況下，在2kb時警告，在4kb時出錯。</td> </tr> <tr> <td> <code>anyScript</code> </td> <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d3crns90xctd9o8bg3cjt3sx3\">任何一個指令碼的大小。</td> </tr> <tr> <td> <code>any</code> </td> <td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4n8vb9e842dxtf91av6syk0n\">任何檔案的大小。</td> </tr> </tbody> </table></td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2jd7cr5m6proql0afx8o0cya3\">捆綁包的名稱（對於\n<code>type=bundle</code>）。</td>\n</tr>\n<tr>\n<td align=\"left\">baseline</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1epv53086i1a3zu49n418dtkb\">用於比較的基線大小。</td>\n</tr>\n<tr>\n<td align=\"left\">maximumWarning</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"14v0v2trrr6l9yp6tnhdqfaqd\">相對於基線的警告最大閾值。</td>\n</tr>\n<tr>\n<td align=\"left\">maximumError</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"at72xfo9mcoc9zrpz2e23gesg\">相對於基準線的最大錯誤閾值。</td>\n</tr>\n<tr>\n<td align=\"left\">minimumWarning</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dla2chntl6cza6knr6hkhy79b\">相對於基準線的最小警告閾值。</td>\n</tr>\n<tr>\n<td align=\"left\">minimumError</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ffjzvk8mmmuvjevi8owmrs78\">相對於基準線的最小錯誤閾值。</td>\n</tr>\n<tr>\n<td align=\"left\">warning</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97be9epj15cieph3z6j1i8rvi\">相對於基準線的警告閾值（最小值和最大值）。</td>\n</tr>\n<tr>\n<td align=\"left\">error</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d9chm0twsg8aquavd8woiyftw\">相對於基準線的錯誤閾值（最小值和最大值）。</td>\n</tr>\n</tbody>\n</table>\n<p><a id=\"commonjs \"></a></p>\n<h2 id=\"configuring-commonjs-dependencies\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dtt5cni4eitwlf9yrurqvqjgf\">設定 CommonJS 依賴項<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#configuring-commonjs-dependencies\"><i class=\"material-icons\">link</i></a></h2>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a2b9jp8kwbkjmqew0ipccrzqs\">建議你避免在 Angular 應用程式中依賴 CommonJS 模組。依賴 CommonJS 模組可能會阻止捆綁器和壓縮器最佳化此應用，導致捆綁包體積變大。建議你在整個應用程式中使用 <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/import\">ECMAScript 模組</a>。更多訊息，請參見 <a href=\"https://web.dev/commonjs-larger-bundles\">為何 CommonJS 讓捆綁包變大了</a>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btgxs1r6jea3umzf7x3lh7vnb\">如果 Angular CLI 檢測到你的瀏覽器端應用依賴了 CommonJS 模組，就會發出警告。要停用這些警告，你可以把這些 CommonJS 模組的名字新增到 <code>angular.json</code> 檔案的 <code>build</code> 區的 <code>allowedCommonJsDependencies</code> 選項中。</p>\n<code-example language=\"json\">\n\n\"build\": {\n  \"builder\": \"@angular-devkit/build-angular:browser\",\n  \"options\": {\n     \"allowedCommonJsDependencies\": [\n        \"lodash\"\n     ]\n     …\n   }\n   …\n},\n\n</code-example>\n<p><a id=\"browser-compat\"></a></p>\n<h2 id=\"configuring-browser-compatibility\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bbvdhz7f1axeulwv1ynf76v8\">設定瀏覽器相容性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#configuring-browser-compatibility\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aabn5nybhevg9nvria0shk0nh\">Angular CLI 使用 <a href=\"https://github.com/browserslist/browserslist\">Browserslist</a> 來確保對不同瀏覽器版本的相容性。\n<a href=\"https://github.com/postcss/autoprefixer\">Autoprefixer</a> 用於為 CSS 新增供應商字首，而 <a href=\"https://babeljs.io/docs/en/babel-preset-env\">@babel/preset-env</a> 用於進行 JavaScript 語法轉換。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5rcg62fj3igw2jk31omdi00in\">在內部，Angular CLI 使用如下 <code>browserslist</code> 設定，以對應 Angular <a href=\"guide/browser-support\">所支援的瀏覽器</a>。</p>\n  <code-example format=\"none\" language=\"text\">\n  last 2 Chrome versions\n  last 1 Firefox version\n  last 2 Edge major versions\n  last 2 Safari major versions\n  last 2 iOS major versions\n  Firefox ESR\n  </code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dd560jolz5d81kgemwylbhahd\">要覆蓋內部設定，請執行\n<a href=\"cli/generate#config-command\"><code>ng generate config browserslist</code></a>，這將在專案目錄中生成一個\n<code>.browserslistrc</code>設定檔案。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dg61zg3zbpnr984dp1nxnoegs\">有關如何以特定瀏覽器和版本為目標的更多範例，請參閱<a href=\"https://github.com/browserslist/browserslist\">browserslist 儲存庫</a>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cpbn9ooolsydmk20jmoih46pk\">使用 <a href=\"https://browsersl.ist\">browsersl.ist</a> 顯示與 <code>browserslist</code> 查詢相容的瀏覽器。</p>\n</div>\n<p><a id=\"proxy\"></a></p>\n<h2 id=\"proxying-to-a-backend-server\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"as1sui53pjttfayo0ymkbvaia\">代理到後端伺服器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#proxying-to-a-backend-server\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9m6hhoqijgnjceuq1haon0cip\">可以用 <code>webpack</code> 開發伺服器中的<a href=\"https://webpack.js.org/configuration/dev-server/#devserver-proxy\">代理支援</a>來把特定的 URL 轉發給後端伺服器，只要傳入 <code>--proxy-config</code> 選項就可以了。\n比如，要把所有到 <code>http://localhost:4200/api</code> 的呼叫都轉給執行在 <code>http://localhost:3000/api</code> 上的伺服器，可採取如下步驟。</p>\n<ol>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4v0ny4ddq71j1v23062jxnham\">在專案的 <code>src/</code> 目錄下建立一個 <code>proxy.conf.json</code> 檔案。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eobya4dqv87s2iodonvi2nl3q\">往這個新的代理設定檔案中新增如下內容：</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"/api\": {\n    \"target\": \"http://localhost:3000\",\n    \"secure\": false\n  }\n}\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"crcv8lvhyn4co7pfoqwxt0fp5\">在 CLI 設定檔案 <code>angular.json</code> 中為 <code>serve</code> 目標新增 <code>proxyConfig</code> 選項：</p>\n<code-example format=\"json\" language=\"json\">\n\n  …\n  \"architect\": {\n    \"serve\": {\n      \"builder\": \"@angular-devkit/build-angular:dev-server\",\n      \"options\": {\n        \"browserTarget\": \"your-application-name:build\",\n        \"proxyConfig\": \"src/proxy.conf.json\"\n      },\n…\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dsbqe3h7rf5wssumy8yz33bxx\">要使用這個代理選項啟動開發伺服器，請執行 <code>ng serve</code> 指令。</p>\n</li>\n</ol>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29ccg08tn5o5jyzzxchgonfcb\">可以編輯這個代理設定檔案，以新增設定項，下面是一些例子。要檢視所有選項的詳細說明，參閱 <a href=\"https://webpack.js.org/configuration/dev-server/#devserver-proxy\">webpack DevServer 文件</a>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cj5t0symv3pmu75kne2hqqm5p\">注意：<br>\n如果你編輯了代理設定檔案，必須重新啟動 <code>ng serve</code> 程序才能使更改生效。</p>\n</div>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5pysn8hliviy7rgf558g49k9k\">從 Node 版本 17 開始，Node 不會總是將\n<code>http://localhost:&lt;port&gt;</code>解析為\n<code>http://127.0.0.1:&lt;port&gt;</code>，這取決於每台機器的設定。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"248cvkxolsmh4khk8my176ai1\">如果使用代理指向\n<code>localhost</code> URL時出現\n<code>ECONNREFUSED</code>錯誤，您可以透過將目標從\n<code>http://localhost:&lt;port&gt;</code>更新為\n<code>http://127.0.0.1:&lt;port&gt;</code>來解決此問題。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qewuhpd6sk4ct4hqp8mj3fai\">有關更多訊息，請參閱\n<a href=\"https://github.com/chimurai/http-proxy-middleware#nodejs-17-econnrefused-issue-with-ipv6-and-localhost-705\">http代理中間件文件</a>。</p>\n</div>\n<h3 id=\"rewrite-the-url-path\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jrg6qusnjadtgntlgb2lhdq\">重寫 URL 路徑<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#rewrite-the-url-path\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2mq38dkpr523cknbxfp0asw9h\"><code>pathRewrite</code> 代理設定項能讓你在執行時重寫 URL 路徑。比如，可以在代理設定中指定如下的 <code>pathRewrite</code> 值，以移除路徑末尾的 \"api\" 部分。</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"/api\": {\n    \"target\": \"http://localhost:3000\",\n    \"secure\": false,\n    \"pathRewrite\": {\n      \"^/api\": \"\"\n    }\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"tympussveb4zxejzcipnag5w\">如果你要訪問的後端不在 <code>localhost</code> 上，還要設定 <code>changeOrigin</code> 選項。比如：</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"/api\": {\n    \"target\": \"http://npmjs.org\",\n    \"secure\": false,\n    \"pathRewrite\": {\n      \"^/api\": \"\"\n    },\n    \"changeOrigin\": true\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2lf03ysugmq8slleet7xnw9lx\">要想瞭解你的代理是否在如預期般工作，可以設定 <code>logLevel</code> 選項。比如：</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"/api\": {\n    \"target\": \"http://localhost:3000\",\n    \"secure\": false,\n    \"pathRewrite\": {\n      \"^/api\": \"\"\n    },\n    \"logLevel\": \"debug\"\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a998lvcjyqs0qfeu736omzjfb\">代理的有效日誌級別是 <code>info</code>（預設值）、<code>debug</code>、<code>warn</code>、<code>error</code> 和 <code>silent</code>。</p>\n<h3 id=\"proxy-multiple-entries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"68676s6ynzyqt7oynmcx83tks\">代理多個條目<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#proxy-multiple-entries\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agvl5kdrohmum3h9hy5vv50lv\">透過用 JavaScript 定義此設定，你還可以把多個條目代理到同一個目標。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1kqgfnxf9qdforw29bp35kama\">將代理設定檔案設定為 <code>proxy.conf.mjs</code> （而不是 <code>proxy.conf.json</code> ），並按照以下範例指定設定檔案。</p>\n<code-example format=\"javascript\" language=\"javascript\">\n\nexport default [\n  {\n    context: [\n        '/my',\n        '/many',\n        '/endpoints',\n        '/i',\n        '/need',\n        '/to',\n        '/proxy'\n    ],\n    target: 'http://localhost:3000',\n    secure: false\n  }\n];\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f189xhkvkvasuxx4a0ox77qx0\">在 CLI 設定檔案 <code>angular.json</code> 中，指向 JavaScript 設定檔案：</p>\n<code-example format=\"json\" language=\"json\">\n\n…\n\"architect\": {\n  \"serve\": {\n    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n    \"options\": {\n      \"browserTarget\": \"your-application-name:build\",\n      \"proxyConfig\": \"src/proxy.conf.mjs\"\n    },\n…\n\n</code-example>\n<h3 id=\"bypass-the-proxy\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b0qkcwvxku0on5xfs49mauj4v\">繞過代理<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#bypass-the-proxy\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"yok7hje68e9wof2ck0yz47h0\">如果你需要根據情況繞過此代理，或在發出請求前先動態修改一下，可以新增 <code>bypass</code> 選項，就像下例的 JavaScript 所示。</p>\n<code-example format=\"javascript\" language=\"javascript\">\n\nexport default {\n  '/api/proxy': {\n    \"target\": 'http://localhost:3000',\n    \"secure\": false,\n    \"bypass\": function (req, res, proxyOptions) {\n        if (req.headers.accept.includes('html')) {\n            console.log('Skipping proxy for <a href=\"api/animations/browser\" class=\"code-anchor\">browser</a> request.');\n            return '/index.html';\n        }\n        req.headers['X-Custom-Header'] = 'yes';\n    }\n  }\n};\n\n</code-example>\n<h3 id=\"using-corporate-proxy\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"94r25i030czvrd8tyz95yash8\">使用公司代理<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/build#using-corporate-proxy\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"j7telk9ir0rhg9r6oj3ns6ks\">如果你在某個公司代理之後，此後端就無法直接代理到區域網路之外的任何 URL。這種情況下，你可以把這個後端代理設定為，藉助 agent 透過你的公司代理轉發此呼叫：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nnpm install --save-dev https-proxy-agent\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"671mtfsiixjjyi2cr4bgk2ifp\">如果你定義了環境變數 <code>http_proxy</code> 或 <code>HTTP_PROXY</code>，當執行 <code>npm start</code> 時，就會自動新增一個 agent 來透過你的企業代理轉發網路呼叫。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jthtuu06rsswqxszrww1krg3\">請在 JavaScript 設定檔案中使用如下內容。</p>\n<code-example format=\"javascript\" language=\"javascript\">\n\nimport HttpsProxyAgent from 'https-proxy-agent';\n\nconst proxyConfig = [{\n  context: '/api',\n  target: 'http://your-remote-server.com:3000',\n  secure: false\n}];\n\nexport default (proxyConfig) =&gt; {\n  const proxyServer = process.env.http_proxy || process.env.HTTP_PROXY;\n  if (proxyServer) {\n    const agent = new HttpsProxyAgent(proxyServer);\n    console.log('Using corporate proxy server: ' + proxyServer);\n\n    for (const entry of proxyConfig) {\n      entry.agent = agent;\n    }\n  }\n\n  return proxyConfig;\n};\n\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Tue Jan 17 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/aot-compiler\n - guide/architecture-next-steps\n - guide/i18n-common-merge\n - guide/npm-packages\n - guide/strict-mode\n - guide/upgrade-setup\n - guide/workspace-config\n - start/start-deployment\n-->\n<!-- links from this doc:\n - api/animations/browser\n - api/core/Component\n - cli\n - cli/generate#config-command\n - cli/generate#environments-command\n - guide/browser-support\n - guide/build#app-environments\n - guide/build#building-and-serving-angular-apps\n - guide/build#bypass-the-proxy\n - guide/build#configure-environment-specific-defaults\n - guide/build#configure-target-specific-file-replacements\n - guide/build#configuring-application-environments\n - guide/build#configuring-browser-compatibility\n - guide/build#configuring-commonjs-dependencies\n - guide/build#configuring-size-budgets\n - guide/build#proxy-multiple-entries\n - guide/build#proxying-to-a-backend-server\n - guide/build#rewrite-the-url-path\n - guide/build#using-corporate-proxy\n - guide/build#using-environment-specific-variables-in-your-app\n - guide/glossary#target\n - https://babeljs.io/docs/en/babel-preset-env\n - https://browsersl.ist\n - https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/import\n - https://github.com/browserslist/browserslist\n - https://github.com/chimurai/http-proxy-middleware#nodejs-17-econnrefused-issue-with-ipv6-and-localhost-705\n - https://github.com/postcss/autoprefixer\n - https://web.dev/commonjs-larger-bundles\n - https://webpack.js.org/configuration/dev-server/#devserverproxy\n-->"}