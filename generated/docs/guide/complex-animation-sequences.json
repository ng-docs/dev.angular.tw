{"id":"guide/complex-animation-sequences","title":"複雜動畫序列","contents":"<div class=\"content\">\n  <h1 id=\"complex-animation-sequences\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8h9nq1h7xgyv428lndzt1rmdo\">複雜動畫序列<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#complex-animation-sequences\"><i class=\"material-icons\">link</i></a></h1>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5wtw65w7vo9ysndhyuq3y2kie\">對下列概念有基本的理解：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ejrwy9jlbr7n31leje9s0nwps\"><a href=\"guide/animations\">Angular 動畫簡介</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2d2gzislo0xv4rrldotf2u8yh\"><a href=\"guide/transition-and-triggers\">轉場與觸發器</a></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8vf5no835n2v51cbaeultmhxp\">到目前為止，我們已經學過了單個 HTML 元素的簡單動畫。Angular 還允許你在進入和離開頁面時播放 \"動畫協調序列\"，比如當整個網格或元素清單進入或離開頁面時，多個條目的動畫之間需要彼此協調時間。你可以選擇並行執行多個動畫，或者按順序逐個執行離散動畫。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ni8fc03en2kgqcm9bx2iefhh\">用來控制複雜動畫序列的函式如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt2uvbdl3r7k4tmkiulzt8lb8\">函式</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"714wxnnqgch7206c2p29qxmz6\">查詢一個或多個內部 HTML 元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>()</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b77cycb4t1f4z8uvk1qhs9d31\">為多個元素的動畫應用級聯延遲。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/animations/group\"><code>group()</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bamd5dhig4dlncjrahdifra2h\">並行執行多個動畫步驟。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80bu7pu844my73fvn6xu2y5ss\">依次執行動畫步驟。</td>\n</tr>\n</tbody>\n</table>\n<p><a id=\"complex-sequence\"></a></p>\n<h2 id=\"the-query-function\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bs1ymiunfxx4sbm87j7g6x2h2\">query() 函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#the-query-function\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"437dvekbh34thxhzp0teo1xoz\">大多數複雜動畫都依賴 <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 函式來查詢子元素並對其應用動畫，基本的例子是：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4iecnoqh39op5dvxqr6b3gip\">例子</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c7x8uc92wut5jjjgd2mkjed2o\"><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 後跟 \n<code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"rkj186haqcos5dn5e4p2dpub\">用於查詢簡單的 HTML 元素，並直接對它們應用動畫。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8j3441edf3vuv7b7lof55vqjf\"><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 後跟 \n<code><a href=\"api/animations/animateChild\" class=\"code-anchor\">animateChild</a>()</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a7g5ch0cso6pmnm0ev41dwpi5\">用於查詢子元素，這些子元素本身已應用動畫元資料，並觸發此類別動畫（否則將會被當前/父元素的動畫阻止）。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6oe200zuqzfubfs8olilv9kj1\"><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 的第一個引數是一個 <a href=\"https://developer.mozilla.org/docs/Web/CSS/CSS_Selectors\">css 選擇器</a>字串，它還可以包含以下 Angular 特定的標記：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elev8izsbicr4x4j0jytnbbhp\">令牌</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"barnuidmu3zr5n0kgyqroldks\"><code>:enter</code> \n<br> \n<code>:leave</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bcwav0f8iztnp9d54h9a6yqpk\">用於進入/離開元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>:animating</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ncy7hzc7xrcgxn3kgzbmwgpr\">用於當前正在執行動畫的元素。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69fu9m7p5947ghe07ow43t4gl\"><code>@*</code> \n<br> \n<code>@triggerName</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27ox9ixhjfgaqcvg1751hf6fv\">用於具有任何—或特定—觸發器的元素。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>:self</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7iamzrgl2lr0o7hn3oukae5zi\">正在執行動畫的元素本身。</td>\n</tr>\n</tbody>\n</table>\n<div class=\"callout is-helpful\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ds6gyfeyxlutmtruft5xx1szy\">進入和離開元素</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4g2q3g7mz2p71dhlh57xhcrvd\">並非所有子元素都會實際上被認為是進入/離開；有時，這可能是違反直覺和令人困惑的。有關更多訊息，參閱 <a href=\"api/animations/query#entering-and-leaving-elements\">query api 的文件</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7nyths47xrhngqk36jesey20a\">你還可以在 Querying 頁籤下的動畫實時範例（在動畫<a href=\"guide/animations#about-this-guide\">介紹部分介紹</a>）中看到這方面的插圖。</p>\n</div>\n<h2 id=\"animate-multiple-elements-using-query-and-stagger-functions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1q29g72qdf3wzn0vzx8mb1uwt\">使用 query() 和 stagger() 函式對多個元素進行動畫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#animate-multiple-elements-using-query-and-stagger-functions\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cg0x0gfi7nlgppq9tt5wi5vxv\">透過 <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 查詢子元素後，<code><a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>()</code> 函式允許你定義每個查詢的動畫項之間的時間間隙，從而為元素之間延遲設定動畫。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"314cg38q64v95bxx0lr4qkl5z\">下面的例子示範了如何使用 <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 和 <code><a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>()</code> 函式對依次新增的英雄清單從上到下播放動畫（有少許延遲）。</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bd44xlsv7fdt4fx038srk38o\">用 <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 查閱正在進入或離開頁面的任意元素。該查詢會找出那些符合某種特定標準的元素</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2pza5cxo1l8c5pzveq2upx5wv\">對每個元素，使用 <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> 為其設定初始樣式。使其變得透明，並使用 <code>transform</code> 將其移出位置，以便它能滑入後就位。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv8w81owh21zmwaqcsr899gpo\">使用 <code><a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>()</code> 來在每個動畫之間延遲 30 毫秒</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"baw7hvsathps6zgso2t04mfa2\">對螢幕上的每個元素，根據一條自定義緩動曲線播放 0.5 秒的動畫，同時將其淡入，而且逐步取消以前的位移效果</p>\n</li>\n</ul>\n<code-example header=\"src/app/hero-list-page.component.ts\" path=\"animations/src/app/hero-list-page.component.ts\" region=\"page-animations\">\nanimations: [\n  <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('pageAnimations', [\n    <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':enter', [\n      <a href=\"api/animations/query\" class=\"code-anchor\">query</a>('.hero', [\n        <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({opacity: 0, transform: 'translateY(-100px)'}),\n        <a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>(30, [\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('500ms cubic-bezier(0.35, 0, 0.25, 1)',\n          <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1, transform: 'none' }))\n        ])\n      ])\n    ])\n  ]),\n\n</code-example>\n<h2 id=\"parallel-animation-using-group-function\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1lbz19oqu76rh9bd9auwumt6l\">使用 group() 函式進行並行動畫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#parallel-animation-using-group-function\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81njwco46eqin6cjpyrnxkiph\">你已經瞭解瞭如何在兩個連續的動畫之間新增延遲。不過你可能還想設定一些並行的動畫。比如，你可能希望為同一個元素的兩個 CSS 屬性設定動畫，但要為每個屬性使用不同的 <code>easing</code> 函式。這時，你可以使用動畫函式 <a href=\"api/animations/group\"><code>group()</code></a>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jd7m1vfi6xsa2tedpunizh3v\"><strong>注意</strong>：<br>\n<a href=\"api/animations/group\"><code>group()</code></a>函式用於對動畫<em>步驟</em>進行分組，而不是針對動畫元素。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e0s0y04jcerlshrc4e3nxn2wf\">在下面的例子中，對 <code>:enter</code> 和 <code>:leave</code> 使用分組，可以設定兩種不同的時序。它們會同時作用於同一個元素，但彼此獨立執行。</p>\n<code-example header=\"src/app/hero-list-groups.component.ts (excerpt)\" path=\"animations/src/app/hero-list-groups.component.ts\" region=\"animationdef\">\nanimations: [\n  <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('flyInOut', [\n    state('in', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n      width: '*',\n      transform: 'translateX(0)', opacity: 1\n    })),\n    <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':enter', [\n      <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ width: 10, transform: 'translateX(50px)', opacity: 0 }),\n      group([\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.3s 0.1s ease', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n          transform: 'translateX(0)',\n          width: '*'\n        })),\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.3s ease', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n          opacity: 1\n        }))\n      ])\n    ]),\n    <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':leave', [\n      group([\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.3s ease', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n          transform: 'translateX(50px)',\n          width: 10\n        })),\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.3s 0.2s ease', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n          opacity: 0\n        }))\n      ])\n    ])\n  ])\n]\n\n</code-example>\n<h2 id=\"sequential-vs-parallel-animations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6s7ok4t8js23qmoxuvet73u6t\">順序動畫與平行動畫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#sequential-vs-parallel-animations\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6bx0rtg3qcr55mz8w7y2tovee\">複雜動畫中可以同時發生很多事情。但是當你要建立一個需要讓幾個子動畫逐個執行的動畫時，該怎麼辦呢？以前我們使用 <a href=\"api/animations/group\"><code>group()</code></a> 來同時並行執行多個動畫。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8xis5fr5ip6yzuupusplybrou\">第二個名叫 <code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code> 的函式會讓你一個接一個地執行這些動畫。在 <code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code> 中，這些動畫步驟由 <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> 或 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 的函式呼叫組成。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"87k37z64rlstmi9i4dtocxwln\"><code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> 用來立即應用所指定的樣式資料。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ty13jabndunovlidmq1ouk8h\"><code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 用來在一定的時間間隔內應用樣式資料。</li>\n</ul>\n<h2 id=\"filter-animation-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z01tbzbykl6h77k28w970yrj\">過濾器動畫範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#filter-animation-example\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1uv7w65hf7yn8zmb1z9lgf3g4\">來看看範例應用中的另一個動畫。在 Filter/Stagger 頁，往 <strong>Search Heroes</strong> 文字框中輸入一些文字，比如 <code>Magnet</code> 或 <code>tornado</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ek11inuc2njnrmy7bchvlutm\">過濾器會在你輸入時實時工作。每當你鍵入一個新字母時，就會有一些元素離開頁面，並且過濾條件也會逐漸變得更加嚴格。相反，當你刪除過濾器中的每個字母時，英雄清單也會逐漸重新進入頁面中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6fubbdw74frw2s1itkcftb62u\">HTML 範本中包含一個名叫 <code>filterAnimation</code> 的觸發器。</p>\n<code-example header=\"src/app/hero-list-page.component.html\" path=\"animations/src/app/hero-list-page.component.html\" region=\"filter-animations\">\n&lt;label for=\"search\"&gt;Search heroes: &lt;/label&gt;\n&lt;input type=\"text\" id=\"search\" #criteria\n       (input)=\"updateCriteria(criteria.value)\"\n       placeholder=\"Search heroes\"&gt;\n\n&lt;ul class=\"heroes\" [@filterAnimation]=\"heroesTotal\"&gt;\n  &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\" class=\"hero\"&gt;\n    &lt;div class=\"inner\"&gt;\n      &lt;span class=\"badge\"&gt;{{ hero.id }}&lt;/span&gt;\n      &lt;span class=\"name\"&gt;{{ hero.name }}&lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enhimftslp9j9f1j1jja3j1ai\">該組件裝飾器中的 <code>filterAnimation</code> 包含三個轉場。</p>\n<code-example header=\"src/app/hero-list-page.component.ts\" path=\"animations/src/app/hero-list-page.component.ts\" region=\"filter-animations\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  animations: [\n    <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('filterAnimation', [\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':enter, * =&gt; 0, * =&gt; -1', []),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':increment', [\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':enter', [\n          <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0, width: 0 }),\n          <a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>(50, [\n            <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('300ms ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1, width: '*' })),\n          ]),\n        ], { optional: true })\n      ]),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(':decrement', [\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':leave', [\n          <a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>(50, [\n            <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('300ms ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0, width: 0 })),\n          ]),\n        ])\n      ]),\n    ]),\n  ]\n})\nexport class HeroListPageComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  heroesTotal = -1;\n\n  get heroes() { return this._heroes; }\n  private _heroes: Hero[] = [];\n\n  ngOnInit() {\n    this._heroes = HEROES;\n  }\n\n  updateCriteria(criteria: string) {\n    criteria = criteria ? criteria.trim() : '';\n\n    this._heroes = HEROES.filter(hero =&gt; hero.name.toLowerCase().includes(criteria.toLowerCase()));\n    const newTotal = this.heroes.length;\n\n    if (this.heroesTotal !== newTotal) {\n      this.heroesTotal = newTotal;\n    } else if (!criteria) {\n      this.heroesTotal = -1;\n    }\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4z9wl3e5mzl4552nfdka5ncs\">這個例子中的程式碼包含下列任務：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qhbjudyh98kkhdhnu2a20vds\">當用戶首次開啟或導向到此頁面時，跳過所有動畫（該動畫會壓扁已經存在的內容，因此它只會作用於那些已經存在於 DOM 中的元素）</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dv9mpta0xxycog6p6w1epay9o\">根據搜尋框中的值過濾英雄</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"jvdl990wsv45dmx6l8ixdtfn\">對於每次對應：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d5magmvz93vjlgv7erjyxtcg5\">透過將元素的不透明度和寬度設定為 0 來隱藏正在離開 DOM 的元素</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30z43w0frmqtg17xpbo5pv1g7\">對正在進入 DOM 的元素，播放一個 300 毫秒的動畫。在動畫期間，該元素採用其預設寬度和不透明度。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b47n9rormtihkate0cdqi0r3z\">如果有多個對應的元素正在進入或離開 DOM，則從頁面頂部的元素開始對每個元素進行交錯（stagger），每個元素之間的延遲為 50 毫秒</p>\n</li>\n</ul>\n<h2 id=\"animating-the-items-of-a-reordering-list\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bkf1gkkrok6uqgmvp5a624o0f\">在重新排序清單的條目時設定動畫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#animating-the-items-of-a-reordering-list\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"48kl4u6qrnekftgiqszfc7aow\">儘管 Angular 開箱即用的支援 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 清單項動畫，但如果只是它們的順序變化了，就無法支援。因為 Angular 會忘記哪個元素是哪個元素，從而導致這些動畫被破壞。幫助 Angular 跟蹤此類別元素的唯一方法是將 <code><a href=\"api/core/TrackByFunction\" class=\"code-anchor\">TrackByFunction</a></code> 分配給 <code><a href=\"api/common/NgForOf\" class=\"code-anchor\">NgForOf</a></code> 指令。這可確保 Angular 始終知道哪個元素是哪個，從而允許它始終將正確的動畫應用於正確的元素。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"14q4qitb4cgfe9436leoxxtm3\"><strong>重要</strong>：<br>\n如果你需要為 <code>*<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code> 清單的條目設定動畫，並且此類別條目的順序有可能在執行時更改，請始終使用 <code><a href=\"api/core/TrackByFunction\" class=\"code-anchor\">TrackByFunction</a></code>。</p>\n</div>\n<h2 id=\"animations-and-component-view-encapsulation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bnolavb2l7xhdsq4yzrd1iub5\">動畫和元件檢視封裝<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#animations-and-component-view-encapsulation\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dncocwojqcrvpq7i0q0182xcx\">Angular 動畫基於元件的 DOM 結構，不會直接考慮<a href=\"/guide/view-encapsulation\">檢視封裝</a>，這意味著使用 <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code> 的元件的行為方式與使用 <code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code> （ <code><a href=\"api/core/ViewEncapsulation#ShadowDom\" class=\"code-anchor\">ViewEncapsulation.ShadowDom</a></code> 行為方式不同，我們將很快討論） .</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cyaeni9zyydivugm3ofekcwhb\">例如，如果要在使用模擬（emulated）檢視封裝的元件樹的頂級元件中應用 <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 函式（你還會在動畫指南的其餘部分看到更多此類別函式），則這樣的查詢將能夠識別（並播放動畫）此樹的任何深度上的 DOM 元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xyqq1a5mel1f4a14ram4ygp4\">另一方面，<code><a href=\"api/core/ViewEncapsulation#ShadowDom\" class=\"code-anchor\">ViewEncapsulation.ShadowDom</a></code> 會通過在 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a> 元素中『隱藏』 DOM 元素來更改元件的 DOM 結構。此類別 DOM 操作就會阻礙某些動畫實現的正常工作，因為它只能工作在簡單的 DOM 結構上，並沒有考慮 <code>ShadowRoot</code> 元素。因此，建議避免使用 ShadowDom 檢視封裝將動畫應用到包含元件的檢視。</p>\n<h2 id=\"animation-sequence-summary\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bny745whiscktuf4eqjir2zm9\">動畫序列總結<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#animation-sequence-summary\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61k6o0r1dyjwj0lakylkqn8ko\">Angular 中這些用於多元素動畫的函式，都要從 <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 開始，查詢出內部元素，比如找出某個 <code>&lt;div&gt;</code> 中的所有圖片。其餘函式 <code><a href=\"api/animations/stagger\" class=\"code-anchor\">stagger</a>()</code>、<a href=\"api/animations/group\"><code>group()</code></a> 和 <code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code> 會以級聯方式或你的自定義邏輯來控制要如何應用多個動畫步驟。</p>\n<h2 id=\"more-on-angular-animations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a26kagk7mrtsdtdkoro0iswgp\">關於 Angular 動畫的更多知識<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/complex-animation-sequences#more-on-angular-animations\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oolgylns9kaynftarwog49tq\">你可能還對下列內容感興趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ejrwy9jlbr7n31leje9s0nwps\"><a href=\"guide/animations\">Angular 動畫簡介</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2d2gzislo0xv4rrldotf2u8yh\"><a href=\"guide/transition-and-triggers\">轉場與觸發器</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82pieugpn2i38mksdalgha2g3\"><a href=\"guide/reusable-animations\">可複用動畫</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"be5qvxhwesxxj6af0lirn21vy\"><a href=\"guide/route-animations\">路由轉場動畫</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/animations\n - guide/reusable-animations\n - guide/route-animations\n - guide/transition-and-triggers\n-->\n<!-- links from this doc:\n - /guide/view-encapsulation\n - api/animations/animate\n - api/animations/animateChild\n - api/animations/group\n - api/animations/query\n - api/animations/query#entering-and-leaving-elements\n - api/animations/sequence\n - api/animations/stagger\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/common/NgFor\n - api/common/NgForOf\n - api/core/Component\n - api/core/OnInit\n - api/core/TrackByFunction\n - api/core/ViewEncapsulation#Emulated\n - api/core/ViewEncapsulation#None\n - api/core/ViewEncapsulation#ShadowDom\n - guide/animations\n - guide/animations#about-this-guide\n - guide/complex-animation-sequences#animate-multiple-elements-using-query-and-stagger-functions\n - guide/complex-animation-sequences#animating-the-items-of-a-reordering-list\n - guide/complex-animation-sequences#animation-sequence-summary\n - guide/complex-animation-sequences#animations-and-component-view-encapsulation\n - guide/complex-animation-sequences#complex-animation-sequences\n - guide/complex-animation-sequences#filter-animation-example\n - guide/complex-animation-sequences#more-on-angular-animations\n - guide/complex-animation-sequences#parallel-animation-using-group-function\n - guide/complex-animation-sequences#prerequisites\n - guide/complex-animation-sequences#sequential-vs-parallel-animations\n - guide/complex-animation-sequences#the-query-function\n - guide/reusable-animations\n - guide/route-animations\n - guide/transition-and-triggers\n - https://developer.mozilla.org/docs/Web/CSS/CSS_Selectors\n - https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\n-->"}