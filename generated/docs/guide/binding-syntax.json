{"id":"guide/binding-syntax","title":"绑定语法：概述","contents":"<div class=\"content\">\n  <h1 id=\"binding-syntax\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhz87804xt0nm2nf4oqx6i31t\">绑定语法：概述<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#binding-syntax\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nnqvhsb482vep3kssbcufq91\">数据绑定会根据应用程序的状态自动使你的页面保持最新状态。你可以使用数据绑定来指定诸如图像源、按钮状态或特定用户的数据之类的内容。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"81el5yk7yllx1tewd03bnp7o0\">本章包含代码片段的工作实例参阅<live-example></live-example>。</p>\n</div>\n<h2 id=\"data-binding-and-html\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ctfz01d790f1dk5fe7h129lt\">数据绑定和 HTML<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#data-binding-and-html\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6y3b44m89lkduu458au0ky3nu\">开发人员可以使用字符串值指定属性来定制 HTML。在以下示例中，<code>class</code>、<code>src</code> 和 <code>disabled</code> 修饰了 <code>&lt;div&gt;</code>、<code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> 和 <code>&lt;button&gt;</code> 元素。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"special\"&gt;Plain old HTML&lt;/div&gt;\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> src=\"images/item.png\"&gt;\n&lt;button disabled&gt;Save&lt;/button&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qre15v263cyufd9grszglwmf\">可以使用数据绑定来控制按钮状态等：</p>\n<code-example header=\"src/app/app.component.html\" path=\"binding-syntax/src/app/app.component.html\" region=\"disabled-button\">\n&lt;!-- Bind button disabled state to `isUnchanged` property --&gt;\n&lt;button type=\"button\" [disabled]=\"isUnchanged\"&gt;Save&lt;/button&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9e1oloznsodnr1sk8b9oc5hk3\">请注意，绑定是绑定到 <code>disabled</code> 这个 Property（属性），而不是 Attribute（属性）。数据绑定使用的是 DOM 元素、组件和指令的 Property，而不是 HTML Attribute。</p>\n<p><a id=\"html-attribute-vs-dom-property\"></a></p>\n<h3 id=\"html-attributes-and-dom-properties\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1crrrjl9bzd174izmk6yzqcqm\">HTML Attribute 和 DOM Property<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#html-attributes-and-dom-properties\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ahclbwd1fkifxy2ad9s3jlcs\">对于 Angular 绑定来说，HTML Attribute 和 DOM Property 是有显著区别的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9dwl1ifd8w3g2fvgjn1nwo3c6\">Attribute 会初始化 DOM Property，你可以配置它们以修改元素的行为。Property 则是 DOM 节点的特性。</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d67cf7iid2rryutlwqyogais1\">少数 HTML Attribute 可以 1:1 映射到同名的 Property。比如,</p>\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\nid\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8sh6ihw6jrknkozo96qnqa0n\">某些 HTML Attribute 没有对应的 Property；比如，</p>\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\naria-*\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8j4qb9ff4rhv1hwph7v18yjpi\">某些 DOM Property 没有对应的 Attribute；比如，</p>\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\ntextContent\n\n</code-example>\n</li>\n</ul>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmww25ix4blz07t0mvei7ntrd\">请记住，即使 HTML Attribute 和 DOM Property 具有相同的名称，它们也仍然是不同的。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"x8tkn7m8n7i48ajgo6kkev0z\">在 Angular 中，HTML Attribute 的唯一作用是初始化元素和指令的状态。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7npshxmehmsn273w0toiacfpw\">编写数据绑定时，你只是在处理 DOM Property 和目标对象的事件。</p>\n<h4 id=\"example-1-an-input\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3yfgm7j3x4mlgpumhnprvpl2q\">范例 1：<code>&lt;input&gt;</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#example-1-an-input\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8rqb1ewaqncdm1yd3c6tdh6ic\">当浏览器渲染 <code>&lt;input type=\"text\" value=\"Sarah\"&gt;</code> 时，它将创建一个具有 <code>value</code> 这个 Property 的相应 DOM 节点，并将其 <code>value</code> 初始化为 “Sarah”。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;input type=\"text\" value=\"Sarah\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24iyosrgy2d6k9p9iccgn9pkn\">当用户将 <code>Sally</code> 输入到 <code>&lt;input&gt;</code> 时，DOM 元素的 <code>value</code> Property 会变为 <code>Sally</code>。但是，如果使用 <code>input.getAttribute('value')</code> 读取 <code>value</code>，你会看到该 Attribute 保持不变 - 它仍然会返回 “Sarah”。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ecb38nttst75tieajy7fhxa1b\">作为 HTML Attribute 的 <code>value</code> 会指定初始值； 而 DOM 的 Property <code>value</code> 则是当前值。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9q9sg9zctnap6205i5kwch35l\">要在运行的应用程序中查看 Attribute 与 DOM Property，参阅<live-example name=\"binding-syntax\"></live-example>，请特别关注绑定语法的信息。</p>\n<h4 id=\"example-2-a-disabled-button\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2d0pu6ahvlwlv463v84kbcqf1\">范例 2：禁用按钮<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#example-2-a-disabled-button\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3peso6huczpht4wwj9ze3vkk5\">默认情况下，按钮的 <code>disabled</code> Property 为 <code>false</code>，因此启用了此按钮。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5217c66u0w82zoelcobqt3ile\">当添加 <code>disabled</code> Attribute 时，你正在将按钮的 <code>disabled</code> Property 初始化为 <code>true</code>，这将禁用该按钮。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;button disabled&gt;Test Button&lt;/button&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"128v1d41j0vqfryi2in6sir6w\">添加或删除 <code>disabled</code> 这个 Attribute 将禁用或启用该按钮。但是，该 Attribute 的值无关紧要，这就是为什么你无法通过编写 <code>&lt;button disabled=\"false\"&gt;Still Disabled&lt;/button&gt;</code> 来启用按钮的原因。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dt7tvqwjkev6jw6nzcvx75e27\">要控制按钮的状态，请设置 <code>disabled</code> 这个 Property。</p>\n<h4 id=\"property-and-attribute-comparison\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4f0bbyrvj0l82xevr5qu4k3yq\">Property 和 Attribute 的比较<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#property-and-attribute-comparison\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bozhia6vmsy1itjho0rnua0ja\">尽管从技术角度上说，可以设置 <code>[attr.disabled]</code> Attribute 这个绑定，但是它的值是不同的，差异在于其 Property 绑定必须是布尔值，而其相应的 Attribute 绑定则取决于该值是否为 <code>null</code>。考虑以下情况：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;input [disabled]=\"condition ? true : false\"&gt;\n&lt;input [attr.disabled]=\"condition ? 'disabled' : null\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5exu4d3pcg6hvrrd6d2otwmd6\">第一行使用 <code>disabled</code> 这个 Property，要使用布尔值。第二行使用 <code>disabled</code> 这个 Attribute，要判定是否为 <code>null</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bl6jzgbikbw40yq7nqw5jl4y\">通常，要使用 Property 绑定而不是 Attribute 绑定。因为布尔值很容易阅读，语法较短，并且 Property 绑定的性能更高。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9wztl8dw9ngi8t8bsadh6owuq\">要在运行的应用程序中查看 <code>disabled</code> 按钮，请参见<live-example></live-example>。本示例说明如何从组件中切换 disabled 这个 Property。</p>\n<h2 id=\"types-of-data-binding\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"243919zv5rhea07voelcq0jko\">数据绑定的类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#types-of-data-binding\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9q3vchx49hz135ggeyxdebe9j\">Angular 根据数据流的方向提供三种类型的数据绑定：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4xzgt6yc1t178ji5xazixufa5\">从源到视图</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"mj1qc0emgpjs6ktbg9c4kd55\">从视图到源</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"91cuwq2xy3a20xh48k1vu4hm2\">双向，从视图到源再到视图</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9l7wx57qn2rdbzj13yjkljua0\">类型</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p44mx807exjp3s0k9dwbuxla\">语法</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3hg0rfp9hxuu1apt1jmdrpier\">类别</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"fwu1vl4n2b4n9a8z73mhs4ny\">插值 \n<br> 属性 \n<br> 属性 \n<br> 类 \n<br> 样式</td>\n<td align=\"left\"><code-example> {{expression}} \n[target]=\"expression\" </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3iqret7qogze13idqiovqxrhj\">从数据源到视图目标的单向绑定</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ri5aawu01dna2ww7rmbqpe5z\">事件</td>\n<td align=\"left\"><code-example> (target)=\"statement\" </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fvocs7lf44rq50uzo4yaj9ug\">从视图目标到数据源的单向绑定</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"49u142yrbz919lf77ofeazw0w\">双向绑定</td>\n<td align=\"left\"><code-example> [(target)]=\"expression\" </code-example></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"49u142yrbz919lf77ofeazw0w\">双向绑定</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"26muwgwylf0bcye0x6zqtf47b\">插值以外的绑定类型在等号左侧有一个目标名称。绑定的目标是 property 或事件，你可以用方括号（<code>[ ]</code>）字符、括号（<code>( )</code>）字符或两者（<code>[( )]</code>）字符括起来。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"w2oeenbs2v7b7n0x0tzg7px4\"><code>[]</code>、<code>()</code>、<code>[()]</code> 这些绑定标点以及前缀，用来指定数据流的方向。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"298wwa8qns1qgmgt7vfeq5ps2\">使用 <code>[]</code> 从源绑定到视图</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0i31gxtz7vi1kpph48ad3ha3\">使用 <code>()</code> 从视图绑定到源</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1m163h01acvhygnsf65bckzed\">使用 <code>[()]</code> 进行双向绑定，将视图绑定到源再绑定到视图</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16e3sphjsdhofslxd74q16q66\">将表达式或语句放在双引号 <code>\"\"</code> 中等号的右侧。有关更多信息，请参见<a href=\"guide/interpolation\">插值</a>和<a href=\"guide/template-statements\">模板语句</a>。</p>\n<h2 id=\"binding-types-and-targets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7qlkrgijoingk6yn81a5p8oko\">绑定类型和目标<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/binding-syntax#binding-types-and-targets\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9rv9r8oymv063pbmrqjqrwxs\">数据绑定的目标可以是 Property、事件或 Attribute 的名称。源指令的每个 public 成员都可以自动用于绑定模板表达式或模板语句中。下表总结了不同绑定类型的目标。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9l7wx57qn2rdbzj13yjkljua0\">类型</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bly7ndu0w5xdzvobl0tuytuxx\">目标</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4iecnoqh39op5dvxqr6b3gip\">例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dkddoxcqk28ajo52wkpdu2by\">属性</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dmldx9ed5napahw4w9saemi3o\">元素属性 \n<br> 组件属性 \n<br> 指令属性</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"wlerhvtqn4enonmb1m9p9e5e\"><code>alt</code>、\n<code>src</code>、\n<code>hero</code> 和下列\n<code><a href=\"api/common/NgClass\" class=\"code-anchor\">ngClass</a></code>中的\n<code>img</code>： \n<code-example path=\"template-syntax/src/app/app.component.html\" region=\"property-binding-syntax-1\">\n  &lt;\n <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> [alt]=\"hero.name\" [src]=\"heroImageUrl\"&gt; &lt;app-hero-detail [hero]=\"currentHero\"&gt;&lt;/app-hero-detail&gt; &lt;div [\n <a href=\"api/common/NgClass\" class=\"code-anchor\">ngClass</a>]=\"{'special': isSpecial}\"&gt;&lt;/div&gt; \n</code-example> \n<!-- 有关更多信息，请参阅[属性绑定](guide/property-binding)。 --></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ri5aawu01dna2ww7rmbqpe5z\">事件</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sur8xm6x8syajeya17n0jj1e\">元素事件 \n<br> 组件事件 \n<br> 指令事件</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3tznncf2rnt5oj11wchzqgiyr\"><code>click</code>、\n<code>deleteRequest</code> 和下列\n<code>event-binding-syntax-1</code>中的\n<code>myClick</code>： \n<code-example path=\"template-syntax/src/app/app.component.html\" region=\"event-binding-syntax-1\">\n  &lt;button type=\"button\" (click)=\"onSave()\"&gt;Save&lt;/button&gt; &lt;app-hero-detail (deleteRequest)=\"deleteHero()\"&gt;&lt;/app-hero-detail&gt; &lt;div (myClick)=\"clicked=$event\" clickable&gt;click me&lt;/div&gt; \n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"49u142yrbz919lf77ofeazw0w\">双向绑定</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d81g4e3dtkzptc624bomvrw0v\">事件和属性</td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"2-way-binding-syntax-1\">\n&lt;input [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"name\"&gt;\n\n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edc2xkhswumgqfurgp2kcy630\">属性</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzkmjjydtrfp2kml0vniv0nsx\">属性（该例外）</td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"attribute-binding-syntax-1\">\n&lt;button type=\"button\" [attr.aria-label]=\"help\"&gt;help&lt;/button&gt;\n\n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"985cbtp8j98j90yytg5u911v3\">类</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d1n07a3l1sblfrxwdsjjnm6zv\"><code>class</code> 属性</td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"class-binding-syntax-1\">\n&lt;div [class.special]=\"isSpecial\"&gt;Special&lt;/div&gt;\n\n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ab6gpm47ggoqvg5dy42ycwx7f\">样式</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3cobm68l984hmk45zypjnxq7\"><code><a href=\"api/animations/style\" class=\"code-anchor\">style</a></code> 属性</td>\n<td align=\"left\"><code-example path=\"template-syntax/src/app/app.component.html\" region=\"style-binding-syntax-1\">\n&lt;button type=\"button\" [style.color]=\"isSpecial ? 'red' : 'green'\"&gt;\n\n</code-example></td>\n</tr>\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - errors/NG8002\n - guide/accessibility\n - guide/event-binding\n - guide/example-apps-list\n - guide/interpolation\n - guide/property-binding\n - guide/styleguide\n - guide/template-syntax\n-->\n<!-- links from this doc:\n - api/animations/style\n - api/common/NgClass\n - api/common/NgOptimizedImage\n - api/forms/NgModel\n - guide/binding-syntax#binding-syntax\n - guide/binding-syntax#binding-types-and-targets\n - guide/binding-syntax#data-binding-and-html\n - guide/binding-syntax#example-1-an-input\n - guide/binding-syntax#example-2-a-disabled-button\n - guide/binding-syntax#html-attributes-and-dom-properties\n - guide/binding-syntax#property-and-attribute-comparison\n - guide/binding-syntax#types-of-data-binding\n - guide/interpolation\n - guide/template-statements\n-->"}