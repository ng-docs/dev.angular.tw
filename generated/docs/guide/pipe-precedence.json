{"id":"guide/pipe-precedence","title":"範本表示式中通道的優先級","contents":"<div class=\"content\">\n  <h1 id=\"pipe-precedence-in-template-expressions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fpwh1iesn2xs9u681h6xplyq\">範本表示式中通道的優先級<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipe-precedence#pipe-precedence-in-template-expressions\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8y9hohb4xh8lrahvmvdou7hkh\">有時你想在將選擇傳遞給通道之前根據某些條件在兩個值之間進行選擇。你可以在範本中使用 JavaScript 三元運算符（\n<code>?:</code>）來做出選擇。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8lw2yog80e0cm5t17dmnmkv7w\">注意！通道運算符的優先級比 JavaScript 三元運算符（\n<code>?:</code>）高。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bvjx8rm1ylf77hrihyvrc67l\">如果你簡單地按照從左到右的方式評估表示式，你可能會對結果感到驚訝。例如，</p>\n<code-example>\ncondition ? a : b | pipe \n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vx6blrrbxm6oqc3q6dufjgzj\">被解析為</p>\n<code-example>\ncondition ? a : (b | pipe)\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30cep0iivl50ftndd582kf5ef\"><code>b</code> 的值透過 \n<code>pipe</code>；\n<code>a</code> 的值\n<em>不會</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ja6rq281i9z2zdgt7hg0a61k\">如果你希望通道應用於三元表示式的結果，請將整個表示式用括號括起來。例如，</p>\n<code-example>\n(condition ? a : b) | pipe\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kjobrd86i3u2nc07kd5n2tcv\">一般來說，你應該始終使用括號來確保 Angular 按照你的意圖評估表示式。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6v5pc426ufvmvgd45f1jlb84s\">在 \n<live-example nodownload=\"\">\n 通道範例\n</live-example> 的 \"通道和優先級\" 部分更詳細地探討了這個問題。</p>\n\n  <div class=\"reviewed\">最後複查時間：Mon Aug 14 2023</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - guide/pipe-precedence#pipe-precedence-in-template-expressions\n-->"}