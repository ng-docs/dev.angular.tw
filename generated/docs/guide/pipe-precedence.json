{"id":"guide/pipe-precedence","title":"模板表达式中管道的优先级","contents":"<div class=\"content\">\n  <h1 id=\"pipe-precedence-in-template-expressions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2fpwh1iesn2xs9u681h6xplyq\">模板表达式中管道的优先级<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipe-precedence#pipe-precedence-in-template-expressions\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8y9hohb4xh8lrahvmvdou7hkh\">有时你想在将选择传递给管道之前根据某些条件在两个值之间进行选择。你可以在模板中使用 JavaScript 三元运算符（\n<code>?:</code>）来做出选择。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8lw2yog80e0cm5t17dmnmkv7w\">注意！管道运算符的优先级比 JavaScript 三元运算符（\n<code>?:</code>）高。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bvjx8rm1ylf77hrihyvrc67l\">如果你简单地按照从左到右的方式评估表达式，你可能会对结果感到惊讶。例如，</p>\n<code-example>\ncondition ? a : b | pipe \n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vx6blrrbxm6oqc3q6dufjgzj\">被解析为</p>\n<code-example>\ncondition ? a : (b | pipe)\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"30cep0iivl50ftndd582kf5ef\"><code>b</code> 的值通过 \n<code>pipe</code>；\n<code>a</code> 的值\n<em>不会</em>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ja6rq281i9z2zdgt7hg0a61k\">如果你希望管道应用于三元表达式的结果，请将整个表达式用括号括起来。例如，</p>\n<code-example>\n(condition ? a : b) | pipe\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kjobrd86i3u2nc07kd5n2tcv\">一般来说，你应该始终使用括号来确保 Angular 按照你的意图评估表达式。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6v5pc426ufvmvgd45f1jlb84s\">在 \n<live-example nodownload=\"\">\n 管道示例\n</live-example> 的 \"管道和优先级\" 部分更详细地探讨了这个问题。</p>\n\n  <div class=\"reviewed\">最后复查时间：Mon Aug 14 2023</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - guide/pipe-precedence#pipe-precedence-in-template-expressions\n-->"}