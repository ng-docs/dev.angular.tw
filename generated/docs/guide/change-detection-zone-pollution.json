{"id":"guide/change-detection-zone-pollution","title":"解決區域（Zone）汙染","contents":"<div class=\"content\">\n  <h1 id=\"resolving-zone-pollution\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9gjquylafri3fdypvcetqn4p6\">解決區域（Zone）汙染<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/change-detection-zone-pollution#resolving-zone-pollution\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6nww2a4wkljfds3t7osnrbrne\"><strong>Zone.js</strong>是一種訊號機制，Angular 用它來檢測應用程式狀態何時可能已更改。它捕獲非同步操作，比如 <code>setTimeout</code>、網路請求和事件偵聽器。Angular 會根據來自 Zone.js 的訊號安排變更檢測</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmckjag2j2aznkbfahwyaq4uy\">在某些情況下，已安排的<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide#tasks\">任務</a>或<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide#microtasks\">微任務</a>不會對資料模型進行任何更改，這使得執行變更檢測變得不必要。常見的例子是：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6c3f17kgk05kplih1tzehgsi9\"><code>requestAnimationFrame</code> 、 <code>setTimeout</code> 或 <code>setInterval</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dc5kiwqikk3hfo1mp1rfjlt0p\">第三方函式庫的任務或微任務排程</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"68934pw06e0w5vcyie166q92y\">本節介紹如何識別此類別條件，以及如何在 Angular 區域外執行程式碼以避免不必要的變更檢測呼叫。</p>\n<h2 id=\"identifying-unnecessary-change-detection-calls\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5arwhfhc29lmqdot3ggcqytxq\">識別不必要的變更檢測呼叫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/change-detection-zone-pollution#identifying-unnecessary-change-detection-calls\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5knipzjbvhxtu0yh1rd7yfkug\">你可以用 Angular DevTools 檢測不必要的變更檢測呼叫。它們通常在分析器的時間線中顯示為連續的條形，其源為 <code>setTimeout</code>、<code>setInterval</code>、<code>requestAnimationFrame</code> 或事件處理程式。當你在應用程式中對這些 API 的呼叫有限時，變更檢測呼叫通常是由第三方函式庫引起的。</p>\n<div class=\"lightbox\">\n  <img alt=\"Angular DevTools profiler preview showing Zone pollution\" src=\"generated/images/guide/change-detection/zone-pollution.png\" width=\"1600\" height=\"480\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ik3erzlhtuzpqudb9d4wi1rj\">在上圖中，有一系列由與元素關聯的事件處理程式觸發的變更檢測呼叫。這是使用第三方非原生 Angular 元件時的常見挑戰，這些元件不會更改 <code><a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a></code> 的預設行為。</p>\n<h2 id=\"run-tasks-outside-ngzone\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ayncjuc1hospjlfavkq8t40vt\">在 <code><a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a></code> 之外執行任務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/change-detection-zone-pollution#run-tasks-outside-ngzone\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dgescoqtc0f1wcxhoc4g9jqc\">在這種情況下，你可以指示 Angular 避免為由給定程式碼區塊排程的任務呼叫變更檢測，使用\n<a href=\"/api/core/NgZone\">NgZone</a>。</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a>, <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> } from '@angular/core';\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>(...)\nclass AppComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  constructor(private ngZone: <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a>) {}\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() =&gt; setInterval(pollForUpdates), 500);\n  }\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cylwgikw7gm9i3magj944k49y\">上面的程式碼段落告訴 Angular 要在 Angular Zone 之外執行 <code>setInterval</code> 呼叫，並在 <code>pollForUpdates</code> 執行之後跳過執行變更檢測。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6yfc4d4bvfrhj0yd1e0att8zx\">第三方函式庫通常會觸發不必要的變更檢測週期，因為它們在創作時並沒有考慮到 Zone.js。透過呼叫 Angular 區域外的函式庫 API 來避免這些額外的週期：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a>, <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> } from '@angular/core';\nimport * as Plotly from 'plotly.js-dist-min';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>(...)\nclass AppComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  constructor(private ngZone: <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a>) {}\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() =&gt; {\n      Plotly.newPlot('chart', data);\n    });\n  }\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5cvhogxf5z8oif4ce6ds2m5e2\">在 <code>runOutsideAngular</code> 中執行 <code>Plotly.newPlot('chart', data);</code> 會告訴框架它不應該在執行此初始化邏輯安排的這些任務之後執行變更檢測。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5uxg4bpn3m37f1k7o6oxnscb9\">比如，如果 <code>Plotly.newPlot('chart', data)</code> 將事件偵聽器新增到 DOM 元素，則 Angular 將不會在執行其處理程式之後執行變更檢測。</p>\n\n  <div class=\"reviewed\">最後複查時間：Wed May 04 2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /api/core/NgZone\n - api/core/Component\n - api/core/NgZone\n - api/core/OnInit\n - guide/change-detection-zone-pollution#identifying-unnecessary-change-detection-calls\n - guide/change-detection-zone-pollution#resolving-zone-pollution\n - guide/change-detection-zone-pollution#run-tasks-outside-ngzone\n - https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide#microtasks\n - https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide#tasks\n-->"}