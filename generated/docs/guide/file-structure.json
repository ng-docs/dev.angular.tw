{"id":"guide/file-structure","title":"工作区和项目文件结构","contents":"<div class=\"content\">\n  <h1 id=\"workspace-and-project-file-structure\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"adipm05s0xaqp6vvwb5c5iirh\">工作区和项目文件结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#workspace-and-project-file-structure\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ht2wh8regt7i3nqcep4batxt\">你会以 Angular <a href=\"guide/glossary#workspace\">工作区</a>作为上下文来开发应用。工作区包含一个或多个<a href=\"guide/glossary#project\">项目</a>的文件集。一个项目就是一组包含独立应用或可共享库的文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1ddavgiv0mqscwfu2coxp296\">Angular CLI 的 <code>ng new</code> 命令可以创建一个工作区。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng new &lt;my-project&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2qoucm2j3zd578uidxjhwbu6j\">当你运行这个命令时，CLI 会在一个新的工作区中安装必需的 Angular npm 包和其它依赖项，其根应用名叫 <em>my-project</em>。该工作区的根文件夹中包含一些工作区配置文件，和一个带有自动生成的描述性文本的自述文件，你可以自定义它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9h0k4fgg58suz1gfegjgv0m9w\"><code>ng new</code> 还会默认创建一个位于工作区根级的骨架应用，及其端到端测试项目。这个骨架是一个简单的 Welcome 应用，它可以运行，也很容易修改。这个<em>根应用</em>与工作区同名，其源文件位于工作区的 <code>src/</code> 子文件夹中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8w9rdm36tq429nca1v19hzln\">这种默认行为适用于典型的“多重（multi）仓库”开发风格，每个应用都位于它自己的工作区中。建议初学者和中级用户使用 <code>ng new</code> 为每个应用创建一个单独的工作区。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f53yvevalsl5bkey37xtl2c6z\">Angular 还支持包含<a href=\"guide/file-structure#multiple-projects\">多个项目</a>的工作区。这种开发环境适用于正在开发<a href=\"guide/glossary#library\">可共享库</a>的高级用户，以及那些使用“单一（mono）仓库”开发风格的企业，它只需要一个仓库，而且所有 Angular 项目都使用全局配置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84m91ho6r5jel82d6bg2kcyoa\">要设置单一仓库的工作区，你应该跳过创建根应用的过程。参阅下面的<a href=\"guide/file-structure#multiple-projects\">设置多项目工作区</a>部分。</p>\n<h2 id=\"workspace-configuration-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89kee340hzittjzszp29fnz4z\">工作区配置文件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#workspace-configuration-files\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3b5afy66xgdmx28pp7m5z3ktf\">每个工作区中的所有项目共享同一个 <a href=\"guide/workspace-config\">CLI 配置环境</a>。该工作区的顶层包含着全工作区级的配置文件、根应用的配置文件以及一些包含根应用的源文件和测试文件的子文件夹。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89kee340hzittjzszp29fnz4z\">工作区配置文件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"297niinze7mn1fnajtyjcs0tb\">目的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>.editorconfig</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3phiak8q25vm9grr6mufqlh00\">代码编辑器配置。请查看 \n<a href=\"https://editorconfig.org\">EditorConfig</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>.gitignore</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"52eb1duj3h2tke1lqb3xdtrs3\">指定 Git 应忽略的有意义的未跟踪文件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>README.md</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1hxhd6awwfit90v470az2889r\">根应用程序的入门文档。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>angular.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4g0ckhl5irsfgm7qnzt7jpw55\">工作区中所有项目的 CLI 配置默认值，包括 CLI 使用的构建、服务和测试工具的配置选项，如 \n<a href=\"https://karma-runner.github.io\">Karma</a> 和 \n<a href=\"https://www.protractortest.org\">Protractor</a>。详情请参见 \n<a href=\"guide/workspace-config\">Angular 工作区配置</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>package.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ci9z07kckrh2462fe5c3jn29f\">配置对工作区中所有项目可用的 \n<a href=\"guide/npm-packages\">npm 包依赖项</a>。有关此文件的特定格式和内容，请参阅 \n<a href=\"https://docs.npmjs.com/files/package.json\">npm 文档</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>package-lock.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cu10w1v7gtycxw01qw3k8f4vg\">提供通过 npm 客户端安装到 \n<code>node_modules</code> 的所有软件包的版本信息。详情请参见 \n<a href=\"https://docs.npmjs.com/files/package-lock.json\">npm 文档</a>。如果使用 yarn 客户端，则该文件将是 \n<a href=\"https://yarnpkg.com/lang/en/docs/yarn-lock\">yarn.lock</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>src/</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bwvbqu8oqr41y5gimqlwd6sqg\">根级应用程序项目的源文件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>node_modules/</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dauhjxp563qorwtf95xbgrvi9\">为整个工作区提供 \n<a href=\"guide/npm-packages\">npm 软件包</a>。工作区范围的 \n<code>node_modules</code> 依赖项对所有项目都是可见的。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>tsconfig.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8bcbhubgfxbrdq1xmhw3ic0z\">工作区中项目的 \n<a href=\"https://www.typescriptlang.org\">TypeScript</a> 基本配置。所有其他配置文件都从此基本文件继承。更多信息，请参见 TypeScript 文档的 \n<a href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends\">使用 extends 进行配置继承</a> 部分。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"application-project-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ois6v63edonchum9g47cbxqh\">应用项目文件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#application-project-files\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5zx4fcfdops425p1y42u2nfu7\">CLI 命令 <code>ng new my-app</code> 会默认创建名为 “my-app” 的工作区文件夹，并在 <code>src/</code> 文件夹下为工作区顶层的根应用生成一个新的应用骨架。新生成的应用包含一个根模块的源文件，包括一个根组件及其模板。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8pb83q002h9co2gdv12gtr6u6\">当工作区文件结构到位时，可以在命令行中使用 <code>ng generate</code> 命令往该应用中添加功能和数据。这个初始的根应用是 CLI 命令的<em>默认应用</em>（除非你在创建<a href=\"guide/file-structure#multiple-projects\">其它应用</a>之后更改了默认值）。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2gs3obvj35f4rmgc4zj4j89tq\">除了通过命令行使用 CLI 之外，还可以直接操作应用程序源文件夹和配置文件中的文件。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"do4s449vlvi8xxpal18vov5es\">对于单应用的工作区，工作区的 <code>src/</code> 子文件夹包含根应用的源文件（应用逻辑、数据和静态资源）。对于多项目的工作区，<code>projects/</code> 文件夹中的其它项目各自包含一个具有相同结构的 <code>project-name/src/</code> 子目录。</p>\n<h3 id=\"application-source-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xslyrubgj3piz8vqn8ekpzh0\">应用源文件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#application-source-files\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8a4y5x75us5oeqg6iiu2tb8si\">顶层文件 <code>src/</code> 为测试并运行你的应用提供支持。其子文件夹中包含应用源代码和应用的专属配置。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"56tp7bgw8vtk9p5ovwe8gsheq\">应用程序支持文件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"297niinze7mn1fnajtyjcs0tb\">目的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>app/</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ifebu3crgptwegezzl3f61gz\">包含定义应用程序逻辑和数据的组件文件。详细信息请参见下方的 \n<a href=\"guide/file-structure#app-src\">内容</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>assets/</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ykvg1iap4o0gobzf2je8mmlv\">包含在构建应用程序时作为原样复制的图像和其他资产文件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>favicon.ico</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8nta9uf2o6m0x1jtxsd53fxid\">在书签栏中为此应用程序使用的图标。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>index.html</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"20p8mlrssk7ehvftfa57hisp4\">当有人访问您的站点时提供的主 HTML 页面。CLI 在构建应用程序时会自动添加所有 JavaScript 和 CSS 文件，因此通常不需要手动在此处添加任何 \n<code>&lt;script&gt;</code> 或 \n<code>&lt;link&gt;</code> 标签。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>main.ts</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"axlpp3v58z8bi1iyn8p5h2xwl\">您的应用程序的主入口点。使用 JIT 编译器编译应用程序，并引导应用程序的根模块（AppModule）在浏览器中运行。您还可以通过在 CLI \n<code>build</code> 和 \n<code>serve</code> 命令中添加 \n<code>--aot</code> 标志来使用 AOT 编译器，而无需更改任何代码。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>styles.css</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9i7ygf7sn5u4w4tuiif2gd1x\">列出为项目提供样式的 CSS 文件。 扩展名反映了您为项目配置的样式预处理器。</td>\n</tr>\n</tbody>\n</table>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2re6u6r4f0zdjrikxebzzxe87\">新的 Angular 项目默认使用严格模式。如果不需要使用严格模式，可以在创建项目时选择不用它。更多信息，请参见<a href=\"guide/strict-mode\">严格模式</a>。</p>\n</div>\n<p><a id=\"app-src\"></a></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7niq2aihksb6kj2t0t9m573hy\">在 <code>src/</code> 文件夹里面，<code>app/</code> 文件夹中包含此项目的逻辑和数据。Angular 组件、模板和样式也都在这里。</p>\n<table>\n<thead>\n<tr>\n<th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53wyd5r5metpimewyca6vtp5y\"><code>src/app/</code> 文件</th>\n<th data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"297niinze7mn1fnajtyjcs0tb\">目的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>app/app.config.ts</code></td>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bj1897cxycfdrvczejgfw2szn\">定义应用配置逻辑，告诉 Angular 如何组装应用程序。 当您向应用添加更多提供者时，它们必须在此处声明。</td>\n</tr>\n<tr>\n<td><code>app/app.component.ts</code></td>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"313fj08305srzof5blnsmneu3\">为应用程序的根组件（名为\n<code>AppComponent</code>）定义逻辑。 与此根组件关联的视图成为\n<a href=\"guide/glossary#view-hierarchy\">视图层次结构</a>的根，随着您向应用程序添加组件和服务。</td>\n</tr>\n<tr>\n<td><code>app/app.component.html</code></td>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2q4feyz5nlqunzl6cpje2aqg\">定义与根\n<code>AppComponent</code>关联的 HTML 模板。</td>\n</tr>\n<tr>\n<td><code>app/app.component.css</code></td>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1iddmgb1yqwst2468d7e40skv\">为根\n<code>AppComponent</code>定义基本 CSS 样式表。</td>\n</tr>\n<tr>\n<td><code>app/app.component.spec.ts</code></td>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38lqjz0brkif9c35cs8e8209q\">为根\n<code>AppComponent</code>定义一个单元测试。</td>\n</tr>\n<tr>\n<td><code>app/app.module.ts</code></td>\n<td data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ff7tjfj73rix2aq59c8bfixl\">定义根模块，名为\n<code>AppModule</code>，告诉 Angular 如何组装应用程序。 最初仅声明\n<code>AppComponent</code>。 当您向应用程序添加更多组件时，它们必须在此处声明。\n<br>\n<br>\n<em>使用<code>--no-standalone</code>选项时不会生成此文件。</em></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"application-configuration-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bsobsq6jbk5a05n5m83cwlv9a\">应用配置文件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#application-configuration-files\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"azuzrjqr63s1akwdz31hh1i5e\">根应用的配置文件位于工作区的根目录下。对于多项目工作区，项目专属的配置文件位于项目根目录 <code>projects/project-name/</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dlfr1uj51qxw0hs2t1j46fc89\">项目专属的 <a href=\"https://www.typescriptlang.org\">TypeScript</a> 配置文件继承自工作区范围内的 <code>tsconfig.json</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3g3wlmn4902yjtzvu8l76ph32\">特定于应用程序的配置文件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"297niinze7mn1fnajtyjcs0tb\">目的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>tsconfig.app.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"16p55rz0lqbi3ps37sxz6g1e0\">特定于应用程序的\n<a href=\"https://www.typescriptlang.org\">TypeScript</a>配置，包括 TypeScript 和 Angular 模板编译器选项。 请参阅\n<a href=\"guide/typescript-configuration\">TypeScript 配置</a>和\n<a href=\"guide/angular-compiler-options\">Angular 编译器选项</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>tsconfig.spec.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"85hvmhxjwh3jstgyu8xlold5v\"><a href=\"https://www.typescriptlang.org\">TypeScript</a>配置用于应用程序测试。 请参阅\n<a href=\"guide/typescript-configuration\">TypeScript 配置</a>。</td>\n</tr>\n</tbody>\n</table>\n<p><a id=\"multiple-projects\"></a></p>\n<h2 id=\"multiple-projects\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"23ypg65gdgrvm3zhznqveybxn\">多重项目<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#multiple-projects\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2u6yn19siuivpb5j0xn672qr8\">多项目工作区适用于对所有 Angular 项目使用单一存储库（单仓库模型）和全局配置的企业。多项目工作区也能为库开发提供支持。</p>\n<h3 id=\"setting-up-for-a-multi-project-workspace\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ctt7kwbbfv2vi60sfd44r0vde\">建立多项目工作区<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#setting-up-for-a-multi-project-workspace\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83kcqbp539xomnje4afvdl53e\">如果你打算在工作区中包含多个项目，可以在创建工作区时不要自动创建初始应用，并为工作区指定一个唯一的名字。下列命令用于创建一个包含全工作区级配置文件的工作区，但没有根应用。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng new my-workspace --no-create-application\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9esmffwgtejorgpgjq8vdq04\">然后，你可以使用工作区内唯一的名字来生成应用和库。</p>\n<code-example format=\"shell\" language=\"shell\">\n\ncd my-workspace\nng generate application my-first-app\n\n</code-example>\n<h3 id=\"multiple-project-file-structure\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2yziruv70c8mlkv2akzscptlo\">多重项目的文件结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#multiple-project-file-structure\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ut2md6pwwbcyiua6k5x2bkny\">工作区中第一个显式生成的应用会像工作区中的其它项目一样放在 <code>projects</code> 文件夹中。新生成的库也会添加到 <code>projects</code> 下。当你以这种方式创建项目时，工作区的文件结构与<a href=\"guide/workspace-config\">工作区配置文件</a> <code>angular.json</code> 中的结构完全一致。</p>\n<div class=\"filetree\">\n    <div class=\"file\">\n        my-workspace\n    </div>\n    <div class=\"children\">\n        <div class=\"file\">\n          … &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (workspace-wide config files)\n        </div>\n        <div class=\"file\">\n          projects &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (generated applications and libraries)\n        </div>\n        <div class=\"children\">\n            <div class=\"file\">\n              my-first-app &nbsp; --(an explicitly generated application)\n            </div>\n            <div class=\"children\">\n                <div class=\"file\">\n                  … &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --(application-specific config)\n                </div>\n                <div class=\"file\">\n                  src &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --(source and support files for application)\n                </div>\n            </div>\n            <div class=\"file\">\n              my-lib &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --(a generated library)\n            </div>\n            <div class=\"children\">\n                <div class=\"file\">\n                  … &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --(library-specific config)\n                </div>\n                <div class=\"file\">\n                  src &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --(source and support files for library)\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<h2 id=\"library-project-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zsr1eff0wy78uq2ks5rc5mk6\">库项目文件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/file-structure#library-project-files\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"60m9m38pfgkbmlltj3473dcu7\">当你使用 CLI 命令（比如 <code>ng generate library my-lib</code>）生成一个库时，所生成的文件会放在工作区的 <code>projects/</code> 文件夹中。关于如何创建自己的库的更多信息，参阅<a href=\"guide/creating-libraries\">创建库</a>一章。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22woukgjodkdnif2neer6n25e\">库和应用不同，它们有自己的 <code>package.json</code> 配置文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zwed45kf1875mqdeqhafx7kx\">在 <code>projects/</code> 目录下，<code>my-lib</code> 文件夹中包含你的库代码。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9p3uh9kwurnp3zoxri3ww5v60\">库源文件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"297niinze7mn1fnajtyjcs0tb\">目的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>src/lib</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fdcsnf9cy62lvqfjvzt86ikw\">包含库项目的逻辑和数据。 像应用程序项目一样，库项目可以包含组件，服务，模块，指令和管道。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>src/public-api.ts</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z0yp7hai3cf1m4ewirqz6073\">指定从您的库中导出的所有文件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>ng-package.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"an0gs4vta1hnfnnh30lgh3nto\">由\n<a href=\"https://github.com/ng-packagr/ng-packagr\">ng-packagr</a>用于构建您的库的配置文件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>package.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xa61yvstamw4w0jbbj4skg9\">配置为此库所需的\n<a href=\"guide/npm-packages\">npm 包依赖项</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>tsconfig.lib.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dfee280emgiejxw3rqfnfr3ql\">特定于库的\n<a href=\"https://www.typescriptlang.org\">TypeScript</a>配置，包括 TypeScript 和 Angular 模板编译器选项。 请参阅\n<a href=\"guide/typescript-configuration\">TypeScript 配置</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>tsconfig.lib.prod.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zq5pqxsy2kyh4lq1qwpoj64t\">特定于库的\n<a href=\"https://www.typescriptlang.org\">TypeScript</a>配置，在生产模式下构建库时使用。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>tsconfig.spec.json</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ed9fawybj4q8bcu3rxhpvv318\"><a href=\"https://www.typescriptlang.org\">TypeScript</a>配置用于库测试。 请参阅\n<a href=\"guide/typescript-configuration\">TypeScript 配置</a>。</td>\n</tr>\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Tue Oct 24 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - cli\n - guide/architecture-next-steps\n - guide/creating-libraries\n - guide/glossary\n - guide/setup-local\n - guide/upgrade-setup\n - guide/workspace-config\n-->\n<!-- links from this doc:\n - guide/angular-compiler-options\n - guide/aot-compiler\n - guide/creating-libraries\n - guide/file-structure#app-src\n - guide/file-structure#application-configuration-files\n - guide/file-structure#application-project-files\n - guide/file-structure#application-source-files\n - guide/file-structure#library-project-files\n - guide/file-structure#multiple-project-file-structure\n - guide/file-structure#multiple-projects\n - guide/file-structure#setting-up-for-a-multi-project-workspace\n - guide/file-structure#workspace-and-project-file-structure\n - guide/file-structure#workspace-configuration-files\n - guide/glossary#jit\n - guide/glossary#library\n - guide/glossary#project\n - guide/glossary#view-hierarchy\n - guide/glossary#workspace\n - guide/npm-packages\n - guide/strict-mode\n - guide/typescript-configuration\n - guide/workspace-config\n - https://docs.npmjs.com/files/package-lock.json\n - https://docs.npmjs.com/files/package.json\n - https://editorconfig.org\n - https://git-scm.com\n - https://github.com/ng-packagr/ng-packagr\n - https://karma-runner.github.io\n - https://www.protractortest.org\n - https://www.typescriptlang.org\n - https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends\n - https://yarnpkg.com/lang/en/docs/yarn-lock\n-->"}