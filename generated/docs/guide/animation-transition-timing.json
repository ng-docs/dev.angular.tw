{"id":"guide/animation-transition-timing","title":"动画的过渡与计时","contents":"<div class=\"content\">\n  <h1 id=\"animation-transition-and-timing\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5747hg66rw69sgjhlcn880hz\">动画的过渡与计时<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-transition-and-timing\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bwt2xezyg6v9jsrl2sfhufxu4\">动画<em>过渡</em>用于指定一种状态与另一种状态之间发生的变化。设置过渡可以使变化不那么突然。</p>\n<h2 id=\"animation-transition-function-defined\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"db4dobe00yx0md5e4x2uwgi6y\">动画 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 函数定义<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-transition-function-defined\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzmpvfer7te12g2zwfd8upaxn\"><code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 函数接受两个参数：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cl74cvgqwo60d44hkuqnvl6ga\">定义两个过渡状态之间方向的表达式，和定义一个或一系列 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 步骤的表达式</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cue01b6kuj6tzl392a4ys305r\">使用过渡的 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函数来定义：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b0rvb2r9qe8af630wfv3zx111\">时长</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hdw1zkmye596fn5fxtnzaum5\">延迟</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2z606ykolgxlyul6qb549h1dn\">缓动</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1akksra8p2ojej5zbphxxxb5\">用于在发生转换时定义样式的样式函数</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6js0rr84ybacs3039jq57rzgd\">使用 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函数定义多步动画的 <code><a href=\"api/animations/keyframes\" class=\"code-anchor\">keyframes</a>()</code> 函数。这些定义作为 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函数的第二个参数传入。</p>\n<h2 id=\"animation-metadata-duration-delay-and-easing\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cuftglbsnx9kx43v2mann1vt2\">动画元数据：持续时间、延迟和缓动效果<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-metadata-duration-delay-and-easing\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yd7r4z0wtjlozrajn2e02dog\"><code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函数接受 <code>timings</code> 和 <code>styles</code> 输入参数。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97jr7u8ef7egl1rkjj0lflmxw\"><code>timings</code> 参数可以接受一个数字或由三部分组成的字符串。</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a> (duration)\n\n</code-example>\n<p>or</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a> ('duration delay easing')\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2lqcpzy7h9uteruoyh15u8dv\">第一部分 <code>duration</code>（持续时间）是必须的。这个持续时间可以表示成一个不带引号的纯数字（表示毫秒），或一个带引号的有单位的时间（表示秒数）。比如，0.1 秒的持续时间有如下表示方式：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1nw09s4d5ule0wck15c2cd71m\">作为纯数字，毫秒为单位：<code>100</code></p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bynag0dnt54q51znjrk953y43\">作为字符串，毫秒为单位：<code>'100ms'</code></p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"etkymh79s05cw3ujtr2dnhrcs\">作为字符串，秒为单位：<code>'0.1s'</code></p>\n</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nksn60i1fcud2gm49vre9l56\">第二个参数 <code>delay</code> 的语法和 <code>duration</code> 一样。比如：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ci1x6wvfle9llyxkjryefj772\">等待 100 毫秒，然后运行 200 毫秒表示为：<code>'0.2s 100ms'</code></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8r4cv60nypqtaiujw1nofhwzc\">第三个参数 <code>easing</code> 控制动画在运行期间如何进行<a href=\"http://easings.net\">加速和减速</a>。比如 <code>ease-in</code> 表示动画开始时很慢，然后逐渐加速。</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qtoxjdoirpss16ylmf1jbwi\">等待 100 毫秒，运行 200 毫秒。使用减速曲线快速开始并缓慢减速到静止点：</p>\n<code-example format=\"output\" language=\"shell\">\n\n0.2s 100ms ease-out\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8xfn9vdy7q6dyhpi3lfz5gujo\">运行 200 毫秒，没有延迟。用一条标准曲线开始慢，中间加速，最后慢慢减速：</p>\n<code-example format=\"output\" language=\"shell\">\n\n0.2s ease-in-out\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8csu6gcbc53eqi9eosvtmwajw\">立即开始，运行 200 毫秒。 使用加速曲线以缓慢开始并以全速结束： \n<code-example format=\"output\" language=\"shell\"></code-example></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bbjy69jf7f8ccpqp38kmy8y46\">0.2s ease-in</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bflu1cyzzo9xidkuwoww55ip1\"><strong>注意</strong>：<br>\n有关缓动曲线的一般信息，参阅 Material Design 网站上关于<a href=\"https://material.io/design/motion/speed.html#easing\">自然缓动曲线</a>的主题。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alfklg4mie2hbvp8f7l387vlq\">下面的例子提供了一个从 <code>open</code> 到 <code>closed</code> 的持续一秒的状态过渡。</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"transition1\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open =&gt; closed', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s')\n]),\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agr9bpq9kdq19tj555u56zdzj\">在上面的代码片段中，<code>=&gt;</code> 操作符表示单向过渡，而 <code>&lt;=&gt;</code> 表示双向过渡。在过渡过程中，<code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 指定了过渡需要花费的时间。在这里，从 <code>open</code> 到 <code>closed</code> 状态的转换要花费 1 秒中，表示成 <code>1s</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bo2mp90czvcyxoi8rggpyekv\">下面的例子添加了一个从 <code>closed</code> 到 <code>open</code> 的状态过渡，过渡动画持续 0.5 秒。</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"transition2\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('closed =&gt; open', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s')\n]),\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6rzp3i9gmrdjob6plu50u6ewe\"><strong>注意</strong>: <br>\n在 <a href=\"api/animations/state\"><code>state</code></a> 和 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> 函数中使用样式时：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4y6ouf7rq9wtlifj7gieko8s6\">请用 <a href=\"api/animations/state\"><code>state()</code></a> 来定义那些每个过渡结束时的样式，这些样式在动画完成后仍会保留</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aykwnpsnu65ik7usaz2tvo9wy\">使用 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 来定义那些中间样式，以便在动画过程中产生运动的错觉</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"494bhhdh8iknapzpbvv0v9ts5\">当动画关闭时，可以跳过 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 样式，但不能跳过 <a href=\"api/animations/state\"><code>state()</code></a> 样式</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e0fx81fhl7oqphp0jdvvk212y\">在同一个 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 参数中包含多个状态对：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>( 'on =&gt; off, off =&gt; void' )\n\n</code-example>\n</li>\n</ul>\n</div>\n\n  <div class=\"reviewed\">最后复查时间：Tue Oct 04 2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/animate\n - api/animations/keyframes\n - api/animations/state\n - api/animations/transition\n - guide/animation-transition-timing#animation-metadata-duration-delay-and-easing\n - guide/animation-transition-timing#animation-transition-and-timing\n - guide/animation-transition-timing#animation-transition-function-defined\n - https://easings.net\n - https://material.io/design/motion/speed.html#easing\n-->"}