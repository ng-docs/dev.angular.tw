{"id":"guide/animation-transition-timing","title":"動畫的轉場與計時","contents":"<div class=\"content\">\n  <h1 id=\"animation-transition-and-timing\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5747hg66rw69sgjhlcn880hz\">動畫的轉場與計時<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-transition-and-timing\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bwt2xezyg6v9jsrl2sfhufxu4\">動畫<em>轉場</em>用於指定一種狀態與另一種狀態之間發生的變化。設定轉場可以使變化不那麼突然。</p>\n<h2 id=\"animation-transition-function-defined\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"db4dobe00yx0md5e4x2uwgi6y\">動畫 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 函式定義<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-transition-function-defined\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dzmpvfer7te12g2zwfd8upaxn\"><code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 函式接受兩個引數：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cl74cvgqwo60d44hkuqnvl6ga\">定義兩個轉場狀態之間方向的表示式，和定義一個或一系列 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 步驟的表示式</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cue01b6kuj6tzl392a4ys305r\">使用轉場的 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函式來定義：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b0rvb2r9qe8af630wfv3zx111\">時長</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8hdw1zkmye596fn5fxtnzaum5\">延遲</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2z606ykolgxlyul6qb549h1dn\">緩動</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1akksra8p2ojej5zbphxxxb5\">用於在發生轉換時定義樣式的樣式函式</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6js0rr84ybacs3039jq57rzgd\">使用 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函式定義多步動畫的 <code><a href=\"api/animations/keyframes\" class=\"code-anchor\">keyframes</a>()</code> 函式。這些定義作為 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函式的第二個引數傳入。</p>\n<h2 id=\"animation-metadata-duration-delay-and-easing\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cuftglbsnx9kx43v2mann1vt2\">動畫元資料：持續時間、延遲和緩動畫果<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-metadata-duration-delay-and-easing\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yd7r4z0wtjlozrajn2e02dog\"><code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 函式接受 <code>timings</code> 和 <code>styles</code> 輸入引數。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"97jr7u8ef7egl1rkjj0lflmxw\"><code>timings</code> 引數可以接受一個數字或由三部分組成的字串。</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a> (duration)\n\n</code-example>\n<p>or</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a> ('duration delay easing')\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2lqcpzy7h9uteruoyh15u8dv\">第一部分 <code>duration</code>（持續時間）是必須的。這個持續時間可以表示成一個不帶引號的純數字（表示毫秒），或一個帶引號的有單位的時間（表示秒數）。比如，0.1 秒的持續時間有如下表示方式：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1nw09s4d5ule0wck15c2cd71m\">作為純數字，毫秒為單位：<code>100</code></p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bynag0dnt54q51znjrk953y43\">作為字串，毫秒為單位：<code>'100ms'</code></p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"etkymh79s05cw3ujtr2dnhrcs\">作為字串，秒為單位：<code>'0.1s'</code></p>\n</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nksn60i1fcud2gm49vre9l56\">第二個引數 <code>delay</code> 的語法和 <code>duration</code> 一樣。比如：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ci1x6wvfle9llyxkjryefj772\">等待 100 毫秒，然後執行 200 毫秒表示為：<code>'0.2s 100ms'</code></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8r4cv60nypqtaiujw1nofhwzc\">第三個引數 <code>easing</code> 控制動畫在執行期間如何進行<a href=\"http://easings.net\">加速和減速</a>。比如 <code>ease-in</code> 表示動畫開始時很慢，然後逐漸加速。</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"qtoxjdoirpss16ylmf1jbwi\">等待 100 毫秒，執行 200 毫秒。使用減速曲線快速開始並緩慢減速到靜止點：</p>\n<code-example format=\"output\" language=\"shell\">\n\n0.2s 100ms ease-out\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8xfn9vdy7q6dyhpi3lfz5gujo\">執行 200 毫秒，沒有延遲。用一條標準曲線開始慢，中間加速，最後慢慢減速：</p>\n<code-example format=\"output\" language=\"shell\">\n\n0.2s ease-in-out\n\n</code-example>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8csu6gcbc53eqi9eosvtmwajw\">立即開始，執行 200 毫秒。 使用加速曲線以緩慢開始並以全速結束： \n<code-example format=\"output\" language=\"shell\"></code-example></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bbjy69jf7f8ccpqp38kmy8y46\">0.2s ease-in</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bflu1cyzzo9xidkuwoww55ip1\"><strong>注意</strong>：<br>\n有關緩動曲線的一般訊息，參閱 Material Design 網站上關於<a href=\"https://material.io/design/motion/speed.html#easing\">自然緩動曲線</a>的主題。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alfklg4mie2hbvp8f7l387vlq\">下面的例子提供了一個從 <code>open</code> 到 <code>closed</code> 的持續一秒的狀態轉場。</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"transition1\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open =&gt; closed', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s')\n]),\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agr9bpq9kdq19tj555u56zdzj\">在上面的程式碼片段中，<code>=&gt;</code> 運算子表示單向轉場，而 <code>&lt;=&gt;</code> 表示雙向轉場。在轉場過程中，<code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 指定了轉場需要花費的時間。在這裡，從 <code>open</code> 到 <code>closed</code> 狀態的轉換要花費 1 秒中，表示成 <code>1s</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bo2mp90czvcyxoi8rggpyekv\">下面的例子新增了一個從 <code>closed</code> 到 <code>open</code> 的狀態轉場，轉場動畫持續 0.5 秒。</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"transition2\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('closed =&gt; open', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s')\n]),\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6rzp3i9gmrdjob6plu50u6ewe\"><strong>注意</strong>: <br>\n在 <a href=\"api/animations/state\"><code>state</code></a> 和 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> 函式中使用樣式時：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4y6ouf7rq9wtlifj7gieko8s6\">請用 <a href=\"api/animations/state\"><code>state()</code></a> 來定義那些每個轉場結束時的樣式，這些樣式在動畫完成後仍會保留</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aykwnpsnu65ik7usaz2tvo9wy\">使用 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 來定義那些中間樣式，以便在動畫過程中產生運動的錯覺</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"494bhhdh8iknapzpbvv0v9ts5\">當動畫關閉時，可以跳過 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 樣式，但不能跳過 <a href=\"api/animations/state\"><code>state()</code></a> 樣式</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e0fx81fhl7oqphp0jdvvk212y\">在同一個 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 引數中包含多個狀態對：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>( 'on =&gt; off, off =&gt; void' )\n\n</code-example>\n</li>\n</ul>\n</div>\n\n  <div class=\"reviewed\">最後複查時間：Tue Oct 04 2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/animate\n - api/animations/keyframes\n - api/animations/state\n - api/animations/transition\n - guide/animation-transition-timing#animation-metadata-duration-delay-and-easing\n - guide/animation-transition-timing#animation-transition-and-timing\n - guide/animation-transition-timing#animation-transition-function-defined\n - https://easings.net\n - https://material.io/design/motion/speed.html#easing\n-->"}