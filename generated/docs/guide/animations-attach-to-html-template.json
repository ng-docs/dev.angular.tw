{"id":"guide/animations-attach-to-html-template","title":"定义动画并附加到 HTML 模板","contents":"<div class=\"content\">\n  <h1 id=\"define-animations-and-attach-to-an-html-template\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dl4oy8bc4xool6reou5g65sb\">定义动画并附加到 HTML 模板<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animations-attach-to-html-template#define-animations-and-attach-to-an-html-template\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62phz1kujk2ubjx5e7kdjbxrp\">动画是在控制要动画的 HTML 元素的宿主组件的元数据中定义的。</p>\n<h2 id=\"define-the-animation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1omzuavn7djpcyns7t98t2cvz\">定义动画。<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animations-attach-to-html-template#define-the-animation\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bihgv7yx55qnwkmvw6c0l7tq9\">将定义动画的代码放在 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 装饰器中的 <code>animations:</code> 属性下。</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"component\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-open-close',\n  animations: [\n    <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('openClose', [\n      // ...\n      state('open', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n        height: '200px',\n        opacity: 1,\n        backgroundColor: 'yellow'\n      })),\n      state('closed', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n        height: '100px',\n        opacity: 0.8,\n        backgroundColor: 'blue'\n      })),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open =&gt; closed', [\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s')\n      ]),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('closed =&gt; open', [\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s')\n      ]),\n    ]),\n  ],\n  templateUrl: 'open-close.component.html',\n  styleUrls: ['open-close.component.css']\n})\nexport class OpenCloseComponent {\n  isOpen = true;\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82x2veaq3ah5pzk7ps97lc8ti\">定义了组件的动画触发器后，将其附加到模板中的元素。将触发器名称括在方括号中，并在它前面加上 <code>@</code> 符号。可以使用标准的 Angular 属性绑定语法将触发器绑定到模板表达式。其中 <code>triggerName</code> 是触发器的名称，<code>expression</code> 计算为某个已定义的动画状态。</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n&lt;div [@triggerName]=\"expression\"&gt;…&lt;/div&gt;;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"224onj073z4i6z0hxorrxjsz6\">当该表达式的值变成了新的状态时，动画就会执行或者叫触发。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bv1ofmcvkewk66me116fgz9j3\">下列代码片段把该触发器绑定到了 <code>isOpen</code> 属性的值上。</p>\n<code-example header=\"src/app/open-close.component.html\" path=\"animations/src/app/open-close.component.1.html\" region=\"trigger\">\n&lt;nav&gt;\n  &lt;button type=\"button\" (click)=\"toggle()\"&gt;Toggle Open/Close&lt;/button&gt;\n&lt;/nav&gt;\n\n&lt;div [@openClose]=\"isOpen ? 'open' : 'closed'\" class=\"open-close-container\"&gt;\n  &lt;p&gt;The box is now {{ isOpen ? 'Open' : 'Closed' }}!&lt;/p&gt;\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6f36x9whsug5m8xswzbhkn4i1\">在这个例子中，当 <code>isOpen</code> 表达式求值为一个已定义状态 <code>open</code> 或 <code>closed</code> 时，就会通知 <code>openClose</code> 触发器说状态变化了。然后，就由 <code>openClose</code> 中的代码来处理状态变更，并启动状态变更动画。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61r7ygn6tys61srrgmi9gmlx3\">对于那些进入或离开页面的元素（插入到 DOM 中或从中移除），你可以让动画变成有条件的。比如，在 HTML 模板中可以和 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 一起使用动画触发器。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dda4erkaz6zm4ek4ho0blrp5i\"><strong>注意</strong>：<br>\n在组件文件中，要把用来定义动画的触发器设置为 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> 装饰器的 <code>animations:</code> 属性的值。</p>\n<h2 id=\"attach-an-animation-to-an-html-template\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6mu3j9ct0nu1qf6kynzr9l23g\">将动画附加到 HTML 模板<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animations-attach-to-html-template#attach-an-animation-to-an-html-template\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cno4aia9g8d97ppcqbelyartb\">在 HTML 模板文件中，使用这个触发器的名称来把所定义的这些动画附加到想要添加动画的 HTML 元素上。</p>\n</div>\n\n  <div class=\"reviewed\">最后复查时间：Fri Oct 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/animate\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/common/NgIf\n - api/core/Component\n - guide/animations-attach-to-html-template#attach-an-animation-to-an-html-template\n - guide/animations-attach-to-html-template#define-animations-and-attach-to-an-html-template\n - guide/animations-attach-to-html-template#define-the-animation\n-->"}