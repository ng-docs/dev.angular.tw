{"id":"guide/i18n-optional-manage-marked-text","title":"用自定义 ID 管理标记过的文本","contents":"<div class=\"content\">\n  <h1 id=\"manage-marked-text-with-custom-ids\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6epk8t7uws27rprsti2928dwo\">用自定义 ID 管理标记过的文本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-optional-manage-marked-text#manage-marked-text-with-custom-ids\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4k2dwi1gmghej8nkkeb6l9veb\">Angular 提取器会生成一个文件，其中包含以下每个实例的翻译单元条目。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6eyqztsb4e6n0nxuhmhkfkfvn\">组件模板中的每个 <code>i18n</code> 属性</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3m7iagc2r2f2fck28xx9frb0j\">组件代码中每个 <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API | Angular\"><code>$localize</code></a> 标记的消息字符串</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ya52o3h327o81brntle0pd4a\">如<a href=\"guide/i18n-common-prepare#how-meanings-control-text-extraction-and-merges\" title=\"How meanings control text extraction and merges - Prepare components for translations | Angular\">含义（meaning）如何控制文本提取与合并</a>中所述，Angular 会为每个翻译单元分配一个唯一的 ID。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3feo1fdrzjvvr4quoh7dvm6i3\">下面的范例会显示一些带有唯一 ID 的翻译单元。</p>\n<code-example header=\"messages.fr.xlf.html\" path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"generated-id\">\n&lt;trans-unit id=\"ba0cc104d3d69bf669f97b8d96a4c5d8d9559aa3\" datatype=\"html\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bu3a3wrkzkdrtfywpgsnqfe42\">当你更改可翻译文本时，提取器会为该翻译单元生成一个新 ID。在大多数情况下，源文本中的更改还需要更改翻译结果。因此，使用新 ID 可使文本更改与翻译保持同步。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2nct48rsin5fy0zeph5kpca40\">但是，某些翻译系统需要 ID 的特定形式或语法。要满足此要求，请使用自定义 ID 来标记文本。大多数开发人员不需要使用自定义 ID。如果你想使用独特的语法来传达额外的元数据，请使用自定义 ID。其他元数据可能包括出现文本的库、组件或应用程序中的区块。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aaekr93jikxg0d9zuuz01orgn\">要在 <code>i18n</code> 属性或以 <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API | Angular\"> <code>$localize</code> </a> 标记的消息字符串中指定自定义 ID，请使用 <code>@@</code> 前缀。以下示例在标题元素中定义了自定义 ID <code>introductionHeader</code>。</p>\n<code-example header=\"app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-solo-id\">\n&lt;h1 i18n=\"@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bosz5l8t65m0dcgryttov2kna\">以下示例为变量定义了自定义 ID <code>introductionHeader</code>。</p>\n<!--todo: replace with code example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\nvariableText1 = $localize `:@@introductionHeader:Hello i18n!`;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4w0sknyyjoyerr4z7bs424rp1\">当你指定自定义 ID 时，提取器会生成一个带有自定义 ID 的翻译单元。</p>\n<code-example header=\"messages.fr.xlf.html\" path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"custom-id\">\n&lt;trans-unit id=\"introductionHeader\" datatype=\"html\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4igusc4ozzk8d7uwq04o23j3t\">如果更改文本，提取器<em>不会</em>更改 ID。这导致你不得不用额外的步骤来更新其翻译。使用自定义 ID 的缺点是，如果你更改文本，你的翻译可能与新更改的源文本不同步。</p>\n<h4 id=\"use-a-custom-id-with-a-description\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5euocljylhf5q2wvnenyx0tkw\">使用带描述的自定义 ID<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-optional-manage-marked-text#use-a-custom-id-with-a-description\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1uxewqej2wae51j3nbczf1im3\">将自定义 ID 与描述（description）和含义（meaning）结合使用，以进一步帮助翻译人员。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dyh1ypcos9l2pc07ywm0h7h7\">以下示例包含“描述”，其后是自定义 ID。</p>\n<code-example header=\"app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-id\">\n&lt;h1 i18n=\"An introduction header for this sample@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3x1q5p2evsqfrk5mxe43e8cr3\">以下示例定义了一个变量的自定义 ID <code>introductionHeader</code> 及其描述。</p>\n<!--todo: replace with code example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\nvariableText2 = $localize `:An introduction header for this sample@@introductionHeader:Hello i18n!`;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1b91o2xz3j17wieokp9xyv34\">下面的例子又增加了“含义”。</p>\n<code-example header=\"app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-attribute-meaning-and-id\">\n&lt;h1 i18n=\"site header|An introduction header for this sample@@introductionHeader\"&gt;Hello i18n!&lt;/h1&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bosz5l8t65m0dcgryttov2kna\">以下示例为变量定义了自定义 ID <code>introductionHeader</code>。</p>\n<!--todo: replace with code example -->\n<code-example format=\"typescript\" language=\"typescript\">\n\nvariableText3 = $localize `:site header|An introduction header for this sample@@introductionHeader:Hello i18n!`;\n\n</code-example>\n<h4 id=\"define-unique-custom-ids\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"co04dmfsoym6j8qk172zo1op6\">定义唯一的自定义 ID<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-optional-manage-marked-text#define-unique-custom-ids\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7n0ei1guxkyk3p15oy8des0ov\">请务必定义唯一的自定义 ID。如果你对两个不同的文本元素使用相同的 ID，提取工具只会提取第一个，而 Angular 会使用其翻译来代替两个原始文本元素。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhljktq6kfxcyaz2skytnshf7\">比如，在以下代码片段中，为两个不同的文本元素定义了相同的自定义 ID <code>myId</code>。</p>\n<code-example header=\"app/app.component.html\" path=\"i18n/doc-files/app.component.html\" region=\"i18n-duplicate-custom-id\">\n&lt;h3 i18n=\"@@myId\"&gt;Hello&lt;/h3&gt;\n&lt;!-- ... --&gt;\n&lt;p i18n=\"@@myId\"&gt;Good bye&lt;/p&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ofn5xjjsjqiufpfvaxy795y\">下面以法语显示翻译。</p>\n<code-example header=\"src/locale/messages.fr.xlf\" path=\"i18n/doc-files/messages.fr.xlf.html\" region=\"i18n-duplicate-custom-id\">\n&lt;trans-unit id=\"myId\" datatype=\"html\"&gt;\n  &lt;source&gt;Hello&lt;/source&gt;\n  &lt;target state=\"new\"&gt;Bonjour&lt;/target&gt;\n&lt;/trans-unit&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"85zo6pmecvfem5y3z314llwny\">这两个元素现在使用相同的翻译 （ <code>Bonjour</code> ），因为它们都是使用相同的自定义 ID 定义的。</p>\n<code-example path=\"i18n/doc-files/rendered-output.html\">\n&lt;h3&gt;Bonjour&lt;/h3&gt;\n&lt;!-- ... --&gt;\n&lt;p&gt;Bonjour&lt;/p&gt;\n\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/i18n-common-prepare\n - guide/i18n-common-translation-files\n - guide/i18n-optional-overview\n-->\n<!-- links from this doc:\n - api/localize/init/$localize\n - guide/i18n-common-prepare#how-meanings-control-text-extraction-and-merges\n - guide/i18n-optional-manage-marked-text#define-unique-custom-ids\n - guide/i18n-optional-manage-marked-text#manage-marked-text-with-custom-ids\n - guide/i18n-optional-manage-marked-text#use-a-custom-id-with-a-description\n-->"}