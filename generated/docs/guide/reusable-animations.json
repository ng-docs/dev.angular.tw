{"id":"guide/reusable-animations","title":"可复用动画","contents":"<div class=\"content\">\n  <h1 id=\"reusable-animations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2sbrxm2z3dmrv0mw8sicbbli7\">可复用动画<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/reusable-animations#reusable-animations\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8nc1asaj9zdxbjgnsrmu91pk2\">本主题提供了一些关于如何创建可复用动画的例子。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/reusable-animations#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7atgpkqqzso3kwbog1s8o36eb\">在继续本主题前，你需要熟悉下列知识：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ejrwy9jlbr7n31leje9s0nwps\"><a href=\"guide/animations\">Angular 动画简介</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2d2gzislo0xv4rrldotf2u8yh\"><a href=\"guide/transition-and-triggers\">过渡与触发器</a></li>\n</ul>\n<h2 id=\"create-reusable-animations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cdqtpy26d204b3igjdub9z3j1\">创建可复用动画<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/reusable-animations#create-reusable-animations\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c033h50f8p1nu99yjkvq5o0pf\">要想创建可复用的动画，请使用 <a href=\"api/animations/animation\"><code>animation()</code></a> 方法来在独立的 <code>.ts</code> 文件中定义动画，并把该动画的定义声明为一个导出的 <code>const</code> 变量。然后你就可以在应用的组件代码中通过 <a href=\"api/animations/useAnimation\"><code>useAnimation()</code></a> 来导入并复用它了。</p>\n<code-example header=\"src/app/animations.ts\" path=\"animations/src/app/animations.1.ts\" region=\"animation-const\">\nimport { <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a>, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>, <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>, <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/useAnimation\" class=\"code-anchor\">useAnimation</a> } from '@angular/animations';\n\nexport const transitionAnimation = <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a>([\n  <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n    height: '{{ height }}',\n    opacity: '{{ opacity }}',\n    backgroundColor: '{{ backgroundColor }}'\n  }),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('{{ time }}')\n]);\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7pih10crfzt4xppggc9vskmbv\">在上面的代码片段中，通过把 <code>transitionAnimation</code> 声明为一个导出的变量，就让它变成了可复用的。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6p43bzeobd06uy7mojwe5zmyo\"><strong>注意</strong>：<br>\n<code>height</code>、<code>opacity</code>、<code>backgroundColor</code> 和 <code>time</code> 这几个输入项会在运行期间被替换掉。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"agqyx67a483p86nvjh7pnqwr3\">你还可以导出某个动画的一部分。比如，下列代码片段会导出 <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a></code> 这个动画。</p>\n<code-example header=\"src/app/animations.1.ts\" path=\"animations/src/app/animations.1.ts\" region=\"trigger-const\">\nimport { <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a>, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>, <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>, <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/useAnimation\" class=\"code-anchor\">useAnimation</a> } from '@angular/animations';\nexport const triggerAnimation = <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('openClose', [\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open =&gt; closed', [\n    <a href=\"api/animations/useAnimation\" class=\"code-anchor\">useAnimation</a>(transitionAnimation, {\n      params: {\n        height: 0,\n        opacity: 1,\n        backgroundColor: 'red',\n        time: '1s'\n      }\n    })\n  ])\n]);\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2e038ecyukhack7x0o6ox9jic\">从现在起，你可以在组件类中导入这些可复用动画变量。比如下面的代码片段就导入了 <code>transitionAnimation</code> 变量，并通过 <code><a href=\"api/animations/useAnimation\" class=\"code-anchor\">useAnimation</a>()</code> 函数来复用它。</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.3.ts\" region=\"reusable\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>, <a href=\"api/animations/useAnimation\" class=\"code-anchor\">useAnimation</a> } from '@angular/animations';\nimport { transitionAnimation } from './animations';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-open-close-reusable',\n  animations: [\n    <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('openClose', [\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open =&gt; closed', [\n        <a href=\"api/animations/useAnimation\" class=\"code-anchor\">useAnimation</a>(transitionAnimation, {\n          params: {\n            height: 0,\n            opacity: 1,\n            backgroundColor: 'red',\n            time: '1s'\n          }\n        })\n      ])\n    ])\n  ],\n  templateUrl: 'open-close.component.html',\n  styleUrls: ['open-close.component.css']\n})\n\n</code-example>\n<h2 id=\"more-on-angular-animations\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a26kagk7mrtsdtdkoro0iswgp\">关于 Angular 动画的更多知识<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/reusable-animations#more-on-angular-animations\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oolgylns9kaynftarwog49tq\">你可能还对下列内容感兴趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ejrwy9jlbr7n31leje9s0nwps\"><a href=\"guide/animations\">Angular 动画简介</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2d2gzislo0xv4rrldotf2u8yh\"><a href=\"guide/transition-and-triggers\">过渡与触发器</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eu1cwrcfewduye3jrziq04cph\"><a href=\"guide/complex-animation-sequences\">复杂动画序列</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"be5qvxhwesxxj6af0lirn21vy\"><a href=\"guide/route-animations\">路由过渡动画</a></li>\n</ul>\n\n  <div class=\"reviewed\">最后复查时间：Tue Oct 11 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/animations\n - guide/complex-animation-sequences\n - guide/route-animations\n - guide/transition-and-triggers\n-->\n<!-- links from this doc:\n - api/animations/animate\n - api/animations/animation\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/animations/useAnimation\n - api/core/Component\n - guide/animations\n - guide/complex-animation-sequences\n - guide/reusable-animations#create-reusable-animations\n - guide/reusable-animations#more-on-angular-animations\n - guide/reusable-animations#prerequisites\n - guide/reusable-animations#reusable-animations\n - guide/route-animations\n - guide/transition-and-triggers\n-->"}