{"id":"guide/module-types","title":"模块（NgModule）创建指南","contents":"<div class=\"content\">\n  <h1 id=\"guidelines-for-creating-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cyl32dynstlmpxl9x7ofoymjq\">模块（NgModule）创建指南<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#guidelines-for-creating-ngmodules\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22x6ia8fdpnwd6wabfsp67y8c\">本主题提供了一个概念性的概述，讲的是你可以创建不同类别的<a href=\"guide/glossary#ngmodule\" title=\"NgModule 的定义\">模块</a> 使用模块化结构来组织代码。这些类别并不是一成不变的，而是建议性的。你可能想为其他目的创建模块，或者把其中某些类别的特征结合在一起。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ya5b56lbftoj31dvha0xcj1w\">模块是组织应用的好办法，可以让与特定功能或特性有关的代码与其他代码分开。可以使用模块把<a href=\"guide/glossary#component\" title=\"组件的定义\">组件</a>，<a href=\"guide/glossary#directive\" title=\"指令的定义\">指令</a>和<a href=\"guide/glossary#pipe\" title=\"管子的定义）\">管道</a>整合成一些内聚的代码块。专注于某项功能或业务领域、工作流程或导航流程、通用工具集，或者一个或多个<a href=\"guide/glossary#service\" title=\"服务定义\">服务</a><a href=\"guide/glossary#provider\" title=\"提供者的定义\">提供者</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eyr8g2n6mle9kg1g7j3nhzqau\">关于 Angular 模块的更多信息，请参阅<a href=\"guide/ngmodules\" title=\"使用 Angular 模块整理你的应用\">使用模块组织你的应用</a>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"51yqieeab5u8e9m1sm96px7o6\">要获得模块相关主题中使用的范例应用，参阅<live-example name=\"ngmodules\"></live-example>。</p>\n</div>\n<h2 id=\"summary-of-ngmodule-categories\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzh56zs04krf09magrpoeex31\">模块类别汇总<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#summary-of-ngmodule-categories\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3iatm9akzetctjl25tn2z5xj6\">所有的应用都是从<a href=\"guide/bootstrapping\" title=\"用 NgModule 根启动一款应用\">引导一个根模块</a>开始的。你可以按照自己喜欢的方式组织其它模块。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ds5ym822q9hktpu2xwyebkqtq\">本主题为下列常见模块类别提供了一些指导：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3hg0rfp9hxuu1apt1jmdrpier\">类别</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fyn4prtwn36b9enamucpied4\"><a href=\"guide/module-types#domain\">领域</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3k4zghf0g0c4rfvw1mdhju845\">围绕特性、业务领域或用户体验组织。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"313p6o38vyh7vv25bkbttodr3\"><a href=\"guide/module-types#routed\">路由</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"coik86xknhhxjxbd9rur0jvzl\">是NgModule的顶级组件。充当路由导航路径的目的地。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aw4tw5uuo01udrzd7rtbwb61e\"><a href=\"guide/module-types#routing\">路由配置</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bsrebc7j1rgl2zru2zotzppah\">为另一个NgModule提供路由配置。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ncgqjyl7rvx5jlehy17wy6bl\"><a href=\"guide/module-types#service\">服务</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"317u73we7jeqll6wkq0331gho\">提供实用服务，如数据访问和消息传递。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"99t7emblbr2h13jed2vrs2qvt\"><a href=\"guide/module-types#widget\">部件</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"174jb972x4z2n48w8w5o29irs\">使组件、指令或管道可用于其他NgModule。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3fuer5g1ekhxb0hhasnvmiui9\"><a href=\"guide/module-types#shared\">共享</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"94o6lan92e2mpqaoib4azhkis\">使一组组件、指令和管道可用于其他NgModule。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8u8s0kb4rjl3ccy9z8dekifyg\">下表总结了每个类别的主要特性。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">NgModule</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8tk7m2dw2fpq11s5lsw03ol8y\">声明</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dycvc6pm27ridqfrosy8bqn88\">提供者</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"63fbamcp9mtecz7xdlvld1cri\">导出</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c0lcg5k2si8vitcop30s2mvl\">被导入</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dwmypg6x35bfl5vrcw4uqotno\">领域</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qzstzs5yva1ifawityjo2t6d\">是</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mywtbh0sqc6iplppvo6nodu2\">罕见</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ejm37mhninquro2xcurt94g0\">顶层组件</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80osixi15z86tk7xwa12afku7\">另一个领域，\n<code>AppModule</code></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6r0jy2w6lrvu5w03a7opz5wvb\">路由</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qzstzs5yva1ifawityjo2t6d\">是</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mywtbh0sqc6iplppvo6nodu2\">罕见</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2j26jl1x07opyz4dbfelj957\">不</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6bs071f5k1m1udzmhtyd822xg\">无</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74nlsxkr1xp06lifpm36dhjjp\">路由</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2j26jl1x07opyz4dbfelj957\">不</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1gwk3kl5ouy9agnbmx6bhgjwp\">是的（守卫）</td>\n<td align=\"left\">RouterModule</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9raxfqzcp1g6mpleurz5gw24v\">另一个领域（用于路由）</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bj0sxs9lg3xv89dux3jgchgud\">服务</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2j26jl1x07opyz4dbfelj957\">不</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qzstzs5yva1ifawityjo2t6d\">是</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2j26jl1x07opyz4dbfelj957\">不</td>\n<td align=\"left\"><code>AppModule</code></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6k7un5ve48o3gy90o69k8y494\">小部件</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qzstzs5yva1ifawityjo2t6d\">是</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mywtbh0sqc6iplppvo6nodu2\">罕见</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qzstzs5yva1ifawityjo2t6d\">是</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmg7ug5m15xnbieoffy29plg8\">另一个领域</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9tyzu13u29t35c2d0ktywgj4a\">共享</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qzstzs5yva1ifawityjo2t6d\">是</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b2j26jl1x07opyz4dbfelj957\">不</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8qzstzs5yva1ifawityjo2t6d\">是</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmg7ug5m15xnbieoffy29plg8\">另一个领域</td>\n</tr>\n</tbody>\n</table>\n<p><a id=\"domain\"></a></p>\n<h2 id=\"domain-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b522se5s6rn50kyvbfgfr315i\">领域模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#domain-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"26tm7vrxplp92je0899wjzt6e\">使用领域模块来提供专属于特定功能或应用领域的界面，比如编辑客户或下单。例子之一是 <live-example name=\"ngmodules\"></live-example> 中的 <code>ContactModule</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5b0fsdzais7gt95w3r5cdrahi\">领域模块用来组织与特定功能有关的代码，里面包含构成此功能的所有组件、路由和模板。领域模块中的顶级组件是该特性或领域的根，是你要导出的唯一组件。各种私有的支撑子组件都是它的后代。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2r3q6i7nc2hd3uomik80pne79\">领域模块要导入到另一个模块中一次并且只能一次，比如一个领域模块，或者一个只包含少量模块的应用的根模块（<code>AppModule</code>）中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"131l3rlt77sz1hcngu1rhj5l2\">领域模块主要由可声明对象组成，很少会在此提供服务。如果一定要提供，那么这些服务的生命周期应和该模块的生命周期一致。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"tdded41dd6z3z8bytou121g7\">关于生命周期的详细信息，请参阅<a href=\"guide/lifecycle-hooks\" title=\"进入组件的生命周期\">“组件生命周期钩子”</a>。</p>\n</div>\n<p><a id=\"routed\"></a></p>\n<h2 id=\"routed-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7a82zf9hf56abi8qrno0ig3bu\">带路由的模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#routed-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38zrwmv9ouhs86k5ry0u3e5qd\">所有<a href=\"guide/lazy-loading-ngmodules\" title=\"懒惰加载一个 NgModule\">惰性加载模块</a>都要用带路由的模块。使用该模块的顶级组件作为路由器导航路由的目标。带路由的模块不会导出任何内容，因为它们的组件永远不会出现在外部组件的模板中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dio09sb59ntm1cjdqpi59zj3o\">不要把惰性加载的带路由的模块导入到另一个模块中，因为这会触发一个急性加载，从而破坏了惰性加载它的目的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eub0s5dvjj4ue6a37jw67u8i6\">带路由的模块很少有提供者，因为你只在需要的时候加载带路由的模块（比如通过路由导航过来时）。<code>provider</code> 数组中列出的服务不可用，因为根注入器不可能预先知道惰性加载的模块。如果你包含了提供者，那么它们所提供的服务的生命周期应该和该模块的生命周期完全一样。不要在带路由的模块及其导入的相关模块中提供全应用范围内的<a href=\"guide/singleton-services\">单例服务。</a>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92zi73ay1ui4yhc60ys3j26jm\">关于服务提供者和惰性加载的带路由模块的更多信息，请参阅<a href=\"guide/providers#limiting-provider-scope-by-lazy-loading-modules\" title=\"提供依赖：限制提供者范围\">限制提供者的范围</a>。</p>\n</div>\n<p><a id=\"routing\"></a></p>\n<h2 id=\"routing-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7wjl2dpwuvvsmiwxox64g4lg\">路由定义模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#routing-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezlzpintm5oj8l29q4wpvwjcd\">使用路由定义模块来为领域模块提供路由配置，从而将路由相关的关注点从其伴生领域模块中分离出来。例子之一是 <live-example name=\"ngmodules\"></live-example> 中的 <code>ContactRoutingModule</code>，它为其伴生领域模块 <code>ContactModule</code> 提供路由。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"brnj5nh56d83kmcxjnsm37vdi\">关于路由定义的概述和详细信息，请参阅<a href=\"guide/router\" title=\"路由应用内导航：路由到视图\">应用内导航：路由到视图</a>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1so605ezdy0pehfwu8zzrb53y\">使用路由定义模块来完成如下任务：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kgsrpx44ajnzin9sxwumxlxe\">定义路由</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c5pvmv68q9x57beigo3pjyq0r\">把路由器配置文件添加到模块的导入表中</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"z6icyjmkzm0z4hzrjpjfea6o\">往模块的提供者列表中添加路由守卫和解析器（resolver）提供者</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74bxl16vstoomr38oic5rsm6a\">路由定义模块的名字应该和其伴生模块的名字平行，但使用 <code>Routing</code> 后缀。比如，<code>contact.module.ts</code> 中的 <code>ContactModule</code> 有一个位于 <code>contact-routing.module.ts</code> 中的名为 <code>ContactRoutingModule</code> 的路由定义模块。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajt9xcq8aja3fug8e98zc7ym5\">路由定义模块只能导入它的伴生模块中。如果伴生模块是根模块 <code>AppModule</code>，那么 <code>AppRoutingModule</code> 就会通过其导入表中的 <code>RouterModule.forRoot(routes)</code> 来添加路由器配置。所有其他的子路由定义模块都会导入 <code>RouterModule.forChild(routes)</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1k2zmee8qsgjsi6z80rsnigga\">在路由定义模块中，要重新导出 <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code>，以便其伴生模块中的组件可以访问路由器指令，比如 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 和 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"86zjkqq8s42y4w4vvj6dl88jq\">不要在路由定义模块中使用可声明对象。组件、指令和管道都是伴生领域模块的责任，而不是路由定义模块的。</p>\n<p><a id=\"service\"></a></p>\n<h2 id=\"service-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53wyxqp8695c0xbdy0knq67iv\">服务模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#service-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b5cjstxzkucf0v0dbx1v2ko40\">使用服务模块来提供实用工具服务，比如数据访问或消息传递。理想的服务模块完全由提供者组成，没有可声明对象。Angular 的 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 是服务模块的一个典范。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1f398nm7ycbf8yuzso13q807\">只能使用根模块 <code>AppModule</code> 来导入各种服务模块。</p>\n<p><a id=\"widget\"></a></p>\n<h2 id=\"widget-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6fn05gbwgnk4h73ielpjnzi0d\">小部件模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#widget-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4o8sqskoggyjmr51zq1gu5l1y\">使用小部件模块可以把组件、指令或管道提供给外部模块使用。把小部件模块导入到任何需要在模板使用这些小部件的模块中。很多第三方 UI 组件库都是作为小部件模块提供的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"51wgfhplvwxoahsgkdgsam8r4\">小部件模块应该完全由可声明对象组成，其中大部分都是导出的。服务提供者非常罕见。</p>\n<p><a id=\"shared\"></a></p>\n<h2 id=\"shared-ngmodules\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2rlftt6pkk4bk3hr69yztnzk9\">共享模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#shared-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"chbsw0bbijyib8r6ydoc98hvr\">把常用的指令、管道和组件放到一个模块中，通常叫做 <code>SharedModule</code>，然后在应用的其他部分只需要导入这个模块就可以了。你可以在领域模块（包括<a href=\"guide/lazy-loading-ngmodules\" title=\"懒惰加载一个 NgModule\">惰性加载模块</a>）中导入共享模块。例子之一就是<live-example name=\"ngmodules\"></live-example>中的 <code>SharedModule</code>，它提供了自定义管道 <code>AwesomePipe</code> 和 <code>HighlightDirective</code> 指令。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1rn0jxpdyb49xb5vny5hzaf3q\">共享模块不应该包含服务提供者，它所导入或重新导出的任何模块也都不应该包含提供者。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1wa903lzsnhs7hi74v787m3j3\">要了解如何使用共享模块来组织和简化代码，请参阅<a href=\"guide/sharing-ngmodules\" title=\"在应用中共享 NgModules\">在应用中使用共享模块</a>。</p>\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/module-types#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"320pd4quk21g01cifflgmc0pj\">你可能还对下列内容感兴趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2adhz7pwpeqs4y95papkqew6d\">关于 Angular 模块的更多信息，请参阅<a href=\"guide/ngmodules\" title=\"使用 Angular 模块整理你的应用\">使用模块组织你的应用</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"98dditim47omy5926hjtegzz6\">要了解关于根模块的更多信息，请参阅<a href=\"guide/bootstrapping\" title=\"用 NgModule 根启动一款应用\">使用根模块启动应用</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ctlovaywbfepqvn2grsjhxl7j\">要了解最常使用的那些 Angular 模块，以及如何将它们导入你的应用，请参阅<a href=\"guide/frequent-ngmodules\" title=\"经常使用的模块\">常用模块</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66mlplitg04temdul96kpqu8k\">关于模块元数据属性的完整描述，请参阅<a href=\"guide/ngmodule-api\" title=\"使用 NgModule 元数据\">使用模块元数据</a></li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34ucpcrn06066oflefdy48ptc\">如果你想管理模块的加载以及依赖和服务的使用，参阅下列内容：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e19mcx8meojim5ilrfa3h09q3\">要了解如何在应用启动时急性加载模块，或者让路由器异步加载模块，请参阅<a href=\"guide/lazy-loading-ngmodules\">惰性加载特性模块</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajfk09hxgond1i5n823ckjalj\">要了解如何为你的应用提供服务或其它依赖，请参阅<a href=\"guide/providers\" title=\"为 NgModule 提供依赖\">为模块提供依赖</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1h2ljp5870g1954uutseoy3u9\">要了解如何在模块中创建单例服务，请参阅<a href=\"guide/singleton-services\" title=\"使服务成为单例\">“使服务成为单例”</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/feature-modules\n - guide/lazy-loading-ngmodules\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/ngmodules\n - guide/sharing-ngmodules\n-->\n<!-- links from this doc:\n - api/common/http/HttpClientModule\n - api/router/RouterLink\n - api/router/RouterModule\n - api/router/RouterOutlet\n - guide/bootstrapping\n - guide/frequent-ngmodules\n - guide/glossary#component\n - guide/glossary#directive\n - guide/glossary#ngmodule\n - guide/glossary#pipe\n - guide/glossary#provider\n - guide/glossary#router\n - guide/glossary#service\n - guide/lazy-loading-ngmodules\n - guide/lifecycle-hooks\n - guide/module-types#domain\n - guide/module-types#domain-ngmodules\n - guide/module-types#guidelines-for-creating-ngmodules\n - guide/module-types#next-steps\n - guide/module-types#routed\n - guide/module-types#routed-ngmodules\n - guide/module-types#routing\n - guide/module-types#routing-ngmodules\n - guide/module-types#service\n - guide/module-types#service-ngmodules\n - guide/module-types#shared\n - guide/module-types#shared-ngmodules\n - guide/module-types#summary-of-ngmodule-categories\n - guide/module-types#widget\n - guide/module-types#widget-ngmodules\n - guide/ngmodule-api\n - guide/ngmodules\n - guide/providers\n - guide/providers#limiting-provider-scope-by-lazy-loading-modules\n - guide/router\n - guide/sharing-ngmodules\n - guide/singleton-services\n-->"}