{"id":"guide/service-worker-communications","title":"与 Service Worker 通讯","contents":"<div class=\"content\">\n  <h1 id=\"service-worker-communication\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ovwrtsbwtuidl6m4atizx0ih\">与 Service Worker 通讯<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#service-worker-communication\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"63q73dcyovfih3r9qbgkuvqba\">启用服务工作者支持不仅仅是注册服务工作者；它还提供可以用来与服务工作者交互并控制应用程序缓存的服务。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xq8keqzpcinu80uje7xu3rbf\">对下列知识有基本的了解：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c2rijcglaqp3k5gzb2q1thcdr\"><a href=\"guide/service-worker-getting-started\">Service Worker 快速上手</a>。</li>\n</ul>\n<h2 id=\"swupdate-service\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eks0azqz0vyr2la4zfbtos7gt\"><code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> 服务<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#swupdate-service\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"895glfrb17yvtlv7gmafixv88\"><code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> 服务让你能访问一些事件，这些事件会指出 Service Worker 何时发现并安装了可用的更新</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8sxkvkfcf80yfzsupgcvnqx4\"><code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> 服务支持四个独立的操作：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bj1omotujd2iev8zcobrr8g8g\">当在服务器上<em>检测到</em>新版本、已安装并可本地使用或安装失败时获得通知</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"btklji99jyppkf6l7v4j88gek\">要求 Service Worker 检查服务器上是否有更新。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7kzy4i3ii2a0h74pxec8u75ec\">要求 Service Worker 为当前标签页激活应用的最新版本</li>\n</ul>\n<h3 id=\"version-updates\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43bbcswvupxp65jclq9u7c8h\">版本更新<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#version-updates\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8z3ay8rlofawv0bfa7f1x58g\"><code>versionUpdates</code> 是 <code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> 的一个 <code>Observable</code> 属性，并且会发出四种事件类型：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"83ew77hqwxy9jnfn8ivgnfi9y\">事件类型</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code><a href=\"api/service-worker/VersionDetectedEvent\" class=\"code-anchor\">VersionDetectedEvent</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ls6m4q7zon819ceagdw5foct\">当服务工作者在服务器上检测到应用的新版本并即将开始下载时发出。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/service-worker/NoNewVersionDetectedEvent\" class=\"code-anchor\">NoNewVersionDetectedEvent</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bo346pa8qr8vntyqfhkpl0vlq\">当服务工作者检查服务器上的应用版本并未发现新版本时发出。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/service-worker/VersionReadyEvent\" class=\"code-anchor\">VersionReadyEvent</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ml98u0w9226w7enestefmd1c\">当应用程序的新版本可供客户端激活时发出。 可用于通知用户有可用更新或提示他们刷新页面。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/service-worker/VersionInstallationFailedEvent\" class=\"code-anchor\">VersionInstallationFailedEvent</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edlf6qfttb5nk9viyo5f34xrj\">当安装新版本失败时发出。 可用于日志记录/监控目的。</td>\n</tr>\n</tbody>\n</table>\n<code-example header=\"log-update.service.ts\" path=\"service-worker-getting-started/src/app/log-update.service.ts\" region=\"sw-update\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({providedIn: 'root'})\nexport class LogUpdateService {\n\n  constructor(updates: <a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a>) {\n    updates.versionUpdates.subscribe(evt =&gt; {\n      switch (evt.type) {\n        case 'VERSION_DETECTED':\n          console.log(`Downloading new app version: ${evt.version.hash}`);\n          break;\n        case 'VERSION_READY':\n          console.log(`Current app version: ${evt.currentVersion.hash}`);\n          console.log(`New app version ready for use: ${evt.latestVersion.hash}`);\n          break;\n        case 'VERSION_INSTALLATION_FAILED':\n          console.log(`Failed to install app version '${evt.version.hash}': ${evt.error}`);\n          break;\n      }\n    });\n  }\n}\n\n</code-example>\n<h3 id=\"checking-for-updates\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"br7lytwh2mmd44y1dbrfrfrbm\">检查更新<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#checking-for-updates\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7cgjqiri6c5q4f7b2u3cvo03p\">可以要求 Service Worker 检查是否有任何更新已经发布到了服务器上。Service Worker 会在初始化和每次导航请求（也就是用户导航到应用中的另一个地址）时检查更新。不过，如果你的站点更新非常频繁，或者需要按计划进行更新，你可能会选择手动检查更新。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eqxqfrgt6wk0zkwxv71wfporm\">通过调用 <code>checkForUpdate()</code> 方法来实现：</p>\n<code-example header=\"check-for-update.service.ts\" path=\"service-worker-getting-started/src/app/check-for-update.service.ts\">\nimport { <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, <a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> } from '@angular/core';\nimport { <a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a> } from '@angular/service-worker';\nimport { concat, interval } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({providedIn: 'root'})\nexport class CheckForUpdateService {\n\n  constructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, updates: <a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a>) {\n    // Allow the app to stabilize first, before starting\n    // polling for updates with `interval()`.\n    const appIsStable$ = appRef.isStable.pipe(first(isStable =&gt; isStable === true));\n    const everySixHours$ = interval(6 * 60 * 60 * 1000);\n    const everySixHoursOnceAppIsStable$ = concat(appIsStable$, everySixHours$);\n\n    everySixHoursOnceAppIsStable$.subscribe(<a href=\"api/platform-browser/animations/async\" class=\"code-anchor\">async</a> () =&gt; {\n      try {\n        const updateFound = await updates.checkForUpdate();\n        console.log(updateFound ? 'A new version is available.' : 'Already on the latest version.');\n      } catch (err) {\n        console.error('Failed to check for updates:', err);\n      }\n    });\n  }\n}\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b9d8ys7r2ku82gmgyimtssxqc\">该方法返回一个用来表示检查更新已经成功完成的 <code>Promise&lt;boolean&gt;</code>。这种检查可能会失败，它会导致此 <code>Promise</code> 被拒绝（reject）。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6a0ohkhtovo1htpgxuvsuji8g\">为了避免对页面的初始渲染产生负面影响，默认情况下，Angular 服务工作者服务在注册 ServiceWorker 脚本之前等待应用程序稳定的时间长达30秒。 不断轮询更新，例如使用\n<a href=\"https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/setInterval\">setInterval()</a>或 RxJS的\n<a href=\"https://rxjs.dev/api/index/function/interval\">interval()</a>，会阻止应用程序稳定，并且直到达到30秒的上限，ServiceWorker 脚本才会向浏览器注册。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ch8mfghdsexdblquholv0ie3e\"><strong>注意</strong>：<br>\n应用中所执行的各种轮询都会阻止它达到稳定态。欲知详情，参阅 <a href=\"api/core/ApplicationRef#isStable\">isStable</a> 文档。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59n0wdezy0hceclajldh3xiiv\">可以通过在开始轮询更新之前先等应用达到稳定态来消除这种延迟，如上述例子所示。另外，你还可以为 ServiceWorker 定义不一样的 <a href=\"api/service-worker/SwRegistrationOptions#registrationStrategy\">注册策略</a>。</p>\n</div>\n<h3 id=\"updating-to-the-latest-version\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6uakk7yr0psl3m27onmqr7tj1\">升级到最新版本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#updating-to-the-latest-version\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sq3nztzoz1d1pvcfrg7tomha\">你可以通过在新版本就绪后立即重新加载页面来将现有选项卡更新到最新版本。为避免中断用户的进度，一般来说最好提示用户并让他们确认可以重新加载页面并更新到最新版本：</p>\n<code-example header=\"prompt-update.service.ts\" path=\"service-worker-getting-started/src/app/prompt-update.service.ts\" region=\"sw-version-ready\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({providedIn: 'root'})\nexport class PromptUpdateService {\n\n  constructor(swUpdate: <a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a>) {\n    swUpdate.versionUpdates\n        .pipe(filter((evt): evt is <a href=\"api/service-worker/VersionReadyEvent\" class=\"code-anchor\">VersionReadyEvent</a> =&gt; evt.type === 'VERSION_READY'))\n        .subscribe(evt =&gt; {\n          if (promptUser(evt)) {\n            // Reload the page to update to the latest version.\n            document.location.reload();\n          }\n        });\n  }\n\n}\n\n</code-example>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45hwew8e1tjfj9xyqluiwlu1z\">调用\n<a href=\"api/service-worker/SwUpdate#activateUpdate\"><code>SwUpdate#activateUpdate</code></a>可更新标签至最新版本而无需重新加载页面，但可能会破坏应用程序。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bq32byv0l2ntfbxpreegbq1xg\">用不重新加载的方式更新可以创建一个<a href=\"guide/glossary#app-shell\">应用外壳</a>与其它页面资源（如<a href=\"guide/glossary#lazy-loading\">惰性加载块</a>）不匹配的版本，因为文件名在不同版本之间可能发生变化。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dkewm3gpr2emirrdoy6ijyi9\">如果你确信对于你的特定用例，这种情况是安全的，你可以只用 <code>activateUpdate()</code>。</p>\n</div>\n<h3 id=\"handling-an-unrecoverable-state\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1mcushj1a5m9bft1zxj8gtnsv\">处理不可恢复的状态<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#handling-an-unrecoverable-state\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bclhvimq0gw2z5fntxyydrma3\">在某些情况下，Service Worker 用来为客户端提供服务的应用版本可能处于损坏状态，如果不重新加载整个页面，则无法恢复该状态。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvqxtkpv55gz65evfq9k5h0x8\">比如，设想以下情形：</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4itn6208xtm6zqthg6e9tk35o\">用户首次打开该应用，Service Worker 会缓存该应用的最新版本。假设应用要缓存的资源包括 <code>index.html</code>、<code>main.&lt;main-hash-1&gt;.js</code> 和 <code>lazy-chunk.&lt;lazy-hash-1&gt;.js</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1jg94blk7kidx8jya9e567mr\">用户关闭该应用程序，并且有一段时间没有打开它。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"es9msmu8i4cffz0rep991vzrf\">一段时间后，会将新版本的应用程序部署到服务器。新版本中包含文件 <code>index.html</code>、<code>main.&lt;main-hash-2&gt;.js</code> 和 <code>lazy-chunk.&lt;lazy-hash-2&gt;.js</code>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aj6070ao1ot4d8shkkjzuknuw\"><strong>注意</strong>：<br>\n哈希值现在已经不同了，因为文件的内容已经改变）。服务器上不再提供旧版本。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a48468qfsg5bbdiqum7ex1q6f\">旧版本在服务器上不再可用。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"akkustp2bw4nr4f6finwesiwz\">同时，用户的浏览器决定从其缓存中清退 <code>lazy-chunk.&lt;lazy-hash-1&gt;.js</code> 浏览器可能决定从缓存中清退特定（或所有）资源，以便回收磁盘空间。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8wt34lxuwcv9w5zt0t2l9how2\">用户再次打开本应用。此时，Service Worker 将提供它所知的最新版本，当然，实际上对我们是旧版本（<code>index.html</code> 和 <code>main.&lt;main-hash-1&gt;.js</code>）。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a4qewpliybiqa2rzigei49jd2\">在稍后的某个时刻，该应用程序请求惰性捆绑包 <code>lazy-chunk.&lt;lazy-hash-1&gt;.js</code>。</p>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bjmie96bwm03ks24mblmwwta1\">Service Worker 无法在缓存中找到该资产（请记住浏览器已经将其清退了）。它也无法从服务器上获取它（因为服务器现在只有较新版本的 <code>lazy-chunk.&lt;lazy-hash-2&gt;.js</code>）。</p>\n</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbs12odna0sxqs6udutj5qg66\">在上述情况下，Service Worker 将无法提供通常会被缓存的资产。该特定的应用程序版本已损坏，并且无法在不重新加载页面的情况下修复客户端的状态。在这种情况下，Service Worker 会通过发送 <code><a href=\"api/service-worker/UnrecoverableStateEvent\" class=\"code-anchor\">UnrecoverableStateEvent</a></code> 事件来通知客户端。可以订阅 <code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a>#unrecoverable</code> 以得到通知并处理这些错误。</p>\n<code-example header=\"handle-unrecoverable-state.service.ts\" path=\"service-worker-getting-started/src/app/handle-unrecoverable-state.service.ts\" region=\"sw-unrecoverable-state\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({providedIn: 'root'})\nexport class HandleUnrecoverableStateService {\n  constructor(updates: <a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a>) {\n    updates.unrecoverable.subscribe(event =&gt; {\n      notifyUser(\n        'An error occurred that we cannot recover from:\\n' +\n        event.reason +\n        '\\n\\nPlease reload the page.'\n      );\n    });\n  }\n}\n\n</code-example>\n<h2 id=\"more-on-angular-service-workers\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9jl51v338pdg88lkv1cl8f1i\">关于 Angular Service Worker 的更多信息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-communications#more-on-angular-service-workers\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oolgylns9kaynftarwog49tq\">你可能还对下列内容感兴趣：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"53swk0yxrhfk9vwssqxhoeq0i\"><a href=\"guide/service-worker-notifications\">Service Worker 通知</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - api/service-worker/NoNewVersionDetectedEvent\n - api/service-worker/SwUpdate\n - api/service-worker/UnrecoverableStateEvent\n - api/service-worker/VersionDetectedEvent\n - api/service-worker/VersionInstallationFailedEvent\n - api/service-worker/VersionReadyEvent\n - guide/service-worker-devops\n - guide/service-worker-getting-started\n - guide/service-worker-intro\n-->\n<!-- links from this doc:\n - api/core/ApplicationRef\n - api/core/ApplicationRef#isStable\n - api/core/Injectable\n - api/platform-browser/animations/async\n - api/service-worker/NoNewVersionDetectedEvent\n - api/service-worker/SwRegistrationOptions#registrationStrategy\n - api/service-worker/SwUpdate\n - api/service-worker/SwUpdate#activateUpdate\n - api/service-worker/UnrecoverableStateEvent\n - api/service-worker/VersionDetectedEvent\n - api/service-worker/VersionInstallationFailedEvent\n - api/service-worker/VersionReadyEvent\n - guide/glossary#app-shell\n - guide/glossary#lazy-loading\n - guide/service-worker-communications#checking-for-updates\n - guide/service-worker-communications#handling-an-unrecoverable-state\n - guide/service-worker-communications#more-on-angular-service-workers\n - guide/service-worker-communications#prerequisites\n - guide/service-worker-communications#service-worker-communication\n - guide/service-worker-communications#swupdate-service\n - guide/service-worker-communications#updating-to-the-latest-version\n - guide/service-worker-communications#version-updates\n - guide/service-worker-getting-started\n - guide/service-worker-notifications\n - https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/setInterval\n - https://rxjs.dev/api/index/function/interval\n-->"}