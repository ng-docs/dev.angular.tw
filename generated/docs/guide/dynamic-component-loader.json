{"id":"guide/dynamic-component-loader","title":"动态组件加载器","contents":"<div class=\"content\">\n  <h1 id=\"dynamic-component-loader\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zoxyfamlath2gc3c5wf86wgw\">动态组件加载器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/dynamic-component-loader#dynamic-component-loader\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4uv4naveyq5ggjflewklflc1d\">组件的模板不会永远是固定的。应用可能会需要在运行期间加载一些新的组件。这本烹饪书为你展示如何动态添加组件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ct1yz5makdynyw4lsfzfg8v9f\">到<live-example name=\"dynamic-component-loader\"></live-example>查看本烹饪书的源码。</p>\n<p><a id=\"dynamic-loading\"></a></p>\n<h2 id=\"rendering-components-dynamically\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1x4yjf6ghdswarfi9b0qufy9r\">动态渲染组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/dynamic-component-loader#rendering-components-dynamically\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5r6nizyabb1j82ftapxgupykr\">下面的例子展示了如何构建动态广告条。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6eixigw2kqcrpuq29g0t3cnzu\">英雄管理局正在计划一个广告活动，要在广告条中显示一系列不同的广告。几个不同的小组可能会频繁加入新的广告组件。再用只支持静态组件结构的模板显然是不现实的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bfzu9qz23zbvtwwib1ej8da3y\">你需要一种新的组件加载方式，它不需要在广告条组件的模板中引用固定的组件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"997yynmfrtdpv7vi79tta5p5j\"><code><a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">NgComponentOutlet</a></code>指令可用于实例化组件并将其插入当前视图中。该指令允许你提供应该渲染的组件类，以及在初始化期间要使用的组件输入。</p>\n<code-example header=\"src/app/ad-banner.component.ts\" path=\"dynamic-component-loader/src/app/ad-banner.component.ts\" region=\"component\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-ad-banner',\n  standalone: true,\n  imports: [<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">NgComponentOutlet</a>, <a href=\"api/common/AsyncPipe\" class=\"code-anchor\">AsyncPipe</a>],\n  template: `\n    &lt;div class=\"ad-banner-example\"&gt;\n      &lt;h3&gt;Advertisements&lt;/h3&gt;\n      &lt;ng-container *<a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">ngComponentOutlet</a>=\"\n        currentAd.component;\n        inputs: currentAd.inputs;\n      \" /&gt;\n      &lt;button (click)=\"displayNextAd()\"&gt;Next&lt;/button&gt;\n    &lt;/div&gt;\n  `\n})\nexport class AdBannerComponent {\n  private adList = inject(AdService).getAds();\n\n  private currentAdIndex = 0;\n\n  get currentAd() {\n    return this.adList[this.currentAdIndex];\n  }\n\n  displayNextAd() {\n    this.currentAdIndex++;\n    // Reset the current ad index back to `0` when we reach the end of an array.\n    if (this.currentAdIndex === this.adList.length) {\n      this.currentAdIndex = 0;\n    }\n  }\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"as7pfg34ej5wqk3c2m5b9gb6s\"><code>AdBannerComponent</code>类注入\n<code>AdService</code>服务并请求广告列表。 “当前广告”索引最初设置为\n<code>0</code>，表示应显示第一个广告。 当用户点击“下一个”按钮时，索引增加一。 一旦索引达到广告数组的长度，索引会重置为\n<code>0</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c315qcepzuv2mev7c1y8bxbw6\">在模板中，使用\n<code>currentAd</code>获取器来检索当前广告。 如果值发生变化，Angular会捕获并在UI中反映这些变化。</p>\n<h2 id=\"different-components-from-the-service\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"85dtn6s1iayh80er1kmfnyfdj\">服务中的不同组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/dynamic-component-loader#different-components-from-the-service\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7pixt0zkky6cx503kwxo7lay9\">从\n<code>AdService</code>服务返回的组件并在\n<code>AdBannerComponent</code>模板中使用\n<code><a href=\"api/common/NgComponentOutlet\" class=\"code-anchor\">NgComponentOutlet</a></code>可以不同。 Angular会检测组件类是否发生变化，并相应更新UI。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41q583lpq87vd0hwoqvkvutk0\">这里有两个示例组件和提供它们输入的服务：</p>\n<code-tabs>\n    <code-pane header=\"hero-job-ad.component.ts\" path=\"dynamic-component-loader/src/app/hero-job-ad.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  template: `\n    &lt;div class=\"job-ad\"&gt;\n      &lt;h4&gt;{{ headline }}&lt;/h4&gt;\n      {{ body }}\n    &lt;/div&gt;\n  `,\n})\nexport class HeroJobAdComponent {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() headline!: string;\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() body!: string;\n}\n\n\n</code-pane>\n    <code-pane header=\"hero-profile.component.ts\" path=\"dynamic-component-loader/src/app/hero-profile.component.ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a> } from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  template: `\n    &lt;div class=\"hero-profile\"&gt;\n      &lt;h3&gt;Featured Hero Profile&lt;/h3&gt;\n      &lt;h4&gt;{{ name }}&lt;/h4&gt;\n      &lt;p&gt;{{ bio }}&lt;/p&gt;\n      &lt;strong&gt;Hire this hero today!&lt;/strong&gt;\n    &lt;/div&gt;\n  `,\n})\nexport class HeroProfileComponent {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() name!: string;\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() bio!: string;\n}\n\n\n</code-pane>\n    <code-pane header=\"ad.service.ts\" path=\"dynamic-component-loader/src/app/ad.service.ts\">\nimport { <a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>, <a href=\"api/core/Type\" class=\"code-anchor\">Type</a> } from '@angular/core';\nimport { HeroProfileComponent } from './hero-profile.component';\nimport { HeroJobAdComponent } from './hero-job-ad.component';\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({ providedIn: 'root' })\nexport class AdService {\n  getAds() {\n    return [\n      {\n        component: HeroProfileComponent,\n        inputs: { name: 'Dr. IQ', bio: 'Smart as they come' },\n      },\n      {\n        component: HeroProfileComponent,\n        inputs: { name: 'Bombasto', bio: 'Brave as they come' },\n      },\n      {\n        component: HeroJobAdComponent,\n        inputs: {\n          headline: 'Hiring for several positions',\n          body: 'Submit your resume today!',\n        },\n      },\n      {\n        component: HeroJobAdComponent,\n        inputs: {\n          headline: 'Openings in all departments',\n          body: 'Apply today',\n        },\n      },\n    ] as {component: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt;, inputs: Record&lt;string, unknown&gt;}[];\n  }\n}\n\n\n</code-pane>\n</code-tabs>\n<p><a id=\"final-ad-baner\"></a></p>\n<h2 id=\"final-ad-banner\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31k4mr6yk7fhuwt27asegoa0h\">最终的广告栏<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/dynamic-component-loader#final-ad-banner\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"277clzm5qby9b0mc4sck6pmvi\">最终的广告栏是这样的：</p>\n<div class=\"lightbox\">\n<img alt=\"Ads\" src=\"generated/images/guide/dynamic-component-loader/ads-example.gif\" width=\"480\" height=\"222\">\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2apv62xn281dx0iihkrpnii1y\">参阅<live-example name=\"dynamic-component-loader\"></live-example>.</p>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Tue Apr 18 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/elements\n - guide/example-apps-list\n-->\n<!-- links from this doc:\n - api/common/AsyncPipe\n - api/common/NgComponentOutlet\n - api/core/Component\n - api/core/Injectable\n - api/core/Input\n - api/core/Type\n - guide/dynamic-component-loader#different-components-from-the-service\n - guide/dynamic-component-loader#dynamic-component-loader\n - guide/dynamic-component-loader#final-ad-banner\n - guide/dynamic-component-loader#rendering-components-dynamically\n-->"}