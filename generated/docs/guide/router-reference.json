{"id":"guide/router-reference","title":"路由器参考","contents":"<div class=\"content\">\n  <h1 id=\"router-reference\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8nm57pkx5kpvbovblew31w06l\">路由器参考<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-reference\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekfwr3603fb4d6aripvvq21j\">下面的部分重点介绍了一些路由器的核心概念。</p>\n<p><a id=\"basics-router-imports\"></a></p>\n<h2 id=\"router-imports\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44j9cw82n6ad0j7wpukoji4rx\">路由器导入<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-imports\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e6gns62o9o4laixseoc5ycgpz\">Angular 的 Router 是一个可选服务，它为指定的 URL 提供特定的组件视图。它不是 Angular 核心的一部分，因此它位于自己的包 <code>@angular/router</code> 中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"yj41jb80wvk97ft1gm5cqbx3\">从任何其它的 Angular 包中导入你需要的东西。</p>\n<code-example>\nimport { <a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a> } from '@angular/router';\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fqumytdw9hhi1i5xxti715l\">关于浏览器 URL 风格的更多信息，请参阅 <a href=\"guide/router#browser-url-styles\"><code>LocationStrategy</code> 和浏览器 URL 风格</a>。</p>\n</div>\n<p><a id=\"basics-config\"></a></p>\n<h2 id=\"configuration\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"27io2zcn0syxgd4dfu8paj1a1\">配置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#configuration\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bq8yvqqza6s3ea10ob0lxjjd8\">带路由的 Angular 应用中有一个 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务的单例实例。当浏览器的 URL 发生变化时，该路由器会查找相应的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>，以便根据它确定要显示的组件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7csnqgi43854dcex4xagm0e38\">在配置路由之前，路由器没有路线。以下示例创建五个路线定义，通过\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>方法配置路由器，并将结果添加到\n<code><a href=\"api/core/ApplicationConfig\" class=\"code-anchor\">ApplicationConfig</a></code>的\n<code>providers</code>数组中。</p>\n<code-example>\nconst appRoutes: <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a> = [\n  { path: 'crisis-center', component: CrisisListComponent },\n  { path: 'hero/:id',      component: HeroDetailComponent },\n  {\n    path: 'heroes',\n    component: HeroListComponent,\n    data: { title: 'Heroes List' }\n  },\n  { path: '',\n    redirectTo: '/heroes',\n    pathMatch: 'full'\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\nexport const appConfig: <a href=\"api/core/ApplicationConfig\" class=\"code-anchor\">ApplicationConfig</a> = {\n    providers: [<a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a>(routes, <a href=\"api/router/withDebugTracing\" class=\"code-anchor\">withDebugTracing</a>())]\n}\n</code-example>\n<p><a id=\"example-config\"></a></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fjo2d8hs42ab8pu6tiai13rs\"><code>appRoutes</code>路线数组描述如何导航。将其传递给\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>方法，在\n<code><a href=\"api/core/ApplicationConfig\" class=\"code-anchor\">ApplicationConfig</a></code>的\n<code>providers</code>中配置路由器。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cwy1fppy1pr2nius9334ttf45\">每个 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 都会把一个 URL <code>path</code> 映射到一个组件。路径中没有前导斜杠。路由器会为你解析并构建最终的 URL，这样你就可以在应用视图中导航时使用相对路径和绝对路径了。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7v0kd6zwxhbgy33x2rzcjl2iu\">第二个路由中的 <code>:id</code> 是路由参数的标记。在像 <code>/hero/42</code> 这样的 URL 中，“42”是 <code>id</code> 参数的值。相应的 <code>HeroDetailComponent</code> 用这个值来查找并显示 <code>id</code> 为 42 的英雄。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24zrgst33lcgf32svwrc4y0k9\">第三个路由中的 <code>data</code> 属性是存放与该特定路由关联的任意数据的地方。每个激活的路由都可以访问 <code>data</code> 属性。可以用它来存储页面标题，面包屑文本和其它只读静态数据等项目。可以用<a href=\"guide/router-tutorial-toh#resolve-guard\">解析器守卫</a>来检索动态数据。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9h9yxxyqtkvd0bvzjnu1dsb4p\">第四个路由中的空路径表示该应用的默认路径 - 当 URL 中的路径为空时通常要去的地方，就像它在刚进来时一样。这个默认路由重定向到了 <code>/heroes</code> 这个 URL 的路由，因此会显示 <code>HeroesListComponent</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bncb5i1zyeuhm12qvkrj01jot\">如果需要查看导航生命周期中发生的事件，可以使用\n<code><a href=\"api/router/withDebugTracing\" class=\"code-anchor\">withDebugTracing</a></code>特性。这将把每个导航生命周期中发生的每个路由器事件输出到浏览器控制台。仅用于调试目的。将\n<code><a href=\"api/router/withDebugTracing\" class=\"code-anchor\">withDebugTracing</a></code>选项设置为传递给\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>方法的第二个参数的对象中。</p>\n<p><a id=\"basics-router-outlet\"></a></p>\n<h2 id=\"router-outlet\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"p01zmizatizt251ebpyqzn4d\">路由出口<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-outlet\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8satdww7vmr3pita2dadoss9z\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 是一个来自路由器库的指令，虽然它的用法像组件一样。它充当占位符，用于在模板中标记出路由器应该显示把该组件显示在那个出口的位置。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;\n&lt;!-- Routed components go here --&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"beanxlktstg9xb1vs3flpfc6e\">对于上面的配置，当这个应用的浏览器 URL 变为 <code>/heroes</code> 时，路由器就会把这个 URL 与路由路径 <code>/heroes</code> 匹配，并把 <code>HeroListComponent</code> 作为兄弟元素显示在宿主组件模板中的 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 下方。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1nvi9yuz6bxgojdluy4ckic88\"><a id=\"basics-router-links\"></a>\n<a id=\"router-link\"></a></p>\n<h2 id=\"router-links\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b6a5vfqpm56qb9fftnpq4w6i\">路由链接<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-links\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ez07sg1u3uy1gbwmqvfg9xr11\">要想通过某些用户操作（比如单击一下 a 标签）进行导航，请使用 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tjq16ubd93jbvnn36swd8ja0\">考虑下面的模板：</p>\n<code-example header=\"src/app/app.component.html\" path=\"router/src/app/app.component.1.html\">\n&lt;h1&gt;Angular <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>&lt;/h1&gt;\n&lt;nav&gt;\n  &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/crisis-center\" <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active\" ariaCurrentWhenActive=\"page\"&gt;Crisis Center&lt;/a&gt;\n  &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/heroes\" <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active\" ariaCurrentWhenActive=\"page\"&gt;Heroes&lt;/a&gt;\n&lt;/nav&gt;\n&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tu3lheftn7knwv7zfb00k5r3\">a 标签上的 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 指令让路由器可以控制这些元素。导航路径是固定的，所以你可以给 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 赋值一个字符串（“一次性”绑定）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3c0lmb2qtx7juxw2umzw4kkue\">如果导航路径更加动态，你可以给它绑定到一个模板表达式，该表达式要返回一个<a href=\"guide/router#link-parameters-array\">链接参数数组</a>。路由器会把该数组解析成一个完整的 URL。</p>\n<p><a id=\"router-link-active\"></a></p>\n<h2 id=\"active-router-links\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6z1vbsmbbcid5o4r6dkpan17k\">活动路由链路<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#active-router-links\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2dbo3v54hsr5oktfyaxt3no4o\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令会根据当前的 <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> 切换活动 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 上所绑定的 CSS 类。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8yrg9wfdc7rtvc6jbomb9e9a7\">在每个 a 标签上，你会看到一个到 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令的<a href=\"guide/property-binding\">属性绑定</a>，就像</p>\n<code-example format=\"html\" hidecopy=\"\" language=\"html\">\n\n<a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"...\"\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3n9d44lw91yzxppmy6ik9437a\">等号 <code>=</code> 右侧的模板表达式，包含一个以空格分隔的 CSS 类字符串，当这个链接处于活动状态时，路由器就会加上这些字符串，并在非活动状态时删除。你可以把 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令设置成一串类的字符串，比如 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active fluffy\"</code>，也可以把它绑定到一个返回这样一个字符串的组件属性上，比如</p>\n<code-example format=\"typescript\" hidecopy=\"\" language=\"typescript\">\n\n[<a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>]=\"someStringProperty\"\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7pxhwkk9spaccanbgapn2uakh\">活动路由链接会级联到路由树的每个级别，这样父路由和子路由链接就可以同时处于活动状态。要覆盖这种行为，可以用 <code>{ exact: true }</code> 表达式绑定到 <code>[routerLinkActiveOptions]</code> 输入绑定。使用 <code>{ exact: true }</code> 之后，给定的 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 只有在 URL 与当前 URL 完全匹配时才会激活。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ts4jwne7778a138acgrv7n4h\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code>还允许你轻松将\n<code>aria-current</code>属性应用于活动元素，从而为所有用户提供更易访问的体验。有关更多信息，请参阅无障碍最佳实践\n<a href=\"/guide/accessibility#active-links-identification\">活动链接标识部分</a>。</p>\n<p><a id=\"basics-router-state\"></a></p>\n<h2 id=\"router-state\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p2wpt8cwmiohk3f63viw4sx1\">路由器状态<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-state\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"be6x6vdudf71cmstqyy1sgxd1\">每个成功的导航生命周期结束后，路由器都会构建一个 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 对象树，它构成了路由器的当前状态。你可以从任何地方使用应用的 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务和 <code>routerState</code> 属性来访问当前的 <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3sz24f12pyn1vbte0zo0nnre\"><code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> 中的每个 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 都提供了向上或向下遍历路由树的方法，用于从父路由、子路由和兄弟路由中获取信息。</p>\n<p><a id=\"activated-route\"></a></p>\n<h2 id=\"activated-route\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4vgh82bolzbnfk6kgkj7jbh4n\">激活路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#activated-route\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"elzcn74g0fl9u5hwylxu7iviw\">路由的路径和参数可以通过注入名为 <a href=\"api/router/ActivatedRoute\">ActivatedRoute</a> 的路由服务获得。它提供了大量有用的信息，包括：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5dkddoxcqk28ajo52wkpdu2by\">属性</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>url</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ednm618iv4q9zk8z8aj3ywpk4\">路由路径的\n<code>Observable</code>，表示路由路径的每个部分的字符串数组。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>data</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8cj9c0dvebc1uig8dmdlxt89\">包含为路由提供的\n<code>data</code>对象的\n<code>Observable</code>。还包含来自\n<a href=\"guide/router-tutorial-toh#resolve-guard\">解析守卫</a>的任何解析值。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>params</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fwwjg2npqw9h0m7p65jaq213\">包含特定于路由的必需和\n<a href=\"guide/router-tutorial-toh#optional-route-parameters\">可选参数</a>的\n<code>Observable</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>paramMap</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bk1e0d70d9i5obeng2l0aeg3d\">包含特定于路由的必需和\n<a href=\"guide/router-tutorial-toh#optional-route-parameters\">可选参数</a>的\n<code>Observable</code>的\n<code><a href=\"api/router/ParamMap\">map</a></code>。该映射支持从同一参数中检索单个和多个值。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>queryParamMap</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e5w636mjkytfuo277pkx9uotp\">包含所有路由可用的\n<code><a href=\"api/router/ParamMap\">map</a></code>，其中包含\n<a href=\"guide/router-tutorial-toh#query-parameters\">查询参数</a>的\n<code>Observable</code>。该映射支持从查询参数中检索单个和多个值。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>queryParams</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6j7btb7mhg499edq55gxb2271\">包含所有路由可用的\n<a href=\"guide/router-tutorial-toh#query-parameters\">查询参数</a>的\n<code>Observable</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>fragment</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dp3e4fruftom7bfnufynluuz\">可用于所有路由的URL的\n<code>Observable</code> \n<a href=\"guide/router-tutorial-toh#fragment\">片段</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>outlet</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"crdozwevtilbkkdvc5pqwxy4j\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>的名称，用于呈现路由。对于未命名的出口，出口名称为 primary。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>routeConfig</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bpzgrgmjfy8fn5ct9400b4v0\">包含源路径的路由配置，用于包含此路由的路由。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>parent</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"23sfmes4vsth3ehnsyyiife0p\">当此路由是子路由时，包含该路由的父\n<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>firstChild</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f1s02j5klbjlwpx38i265wn5n\">包含此路由的子路由列表中的第一个\n<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>children</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aghreou6pppavn9wrnjze8a8c\">包含在当前路由下激活的所有子路由。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"router-events\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1std7a1yl6ex1nlazpex83j65\">路由器事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-events\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8l4yd6k4fi6dbce2bgmdchuqy\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 在每次导航过程中都会通过 <code><a href=\"api/router/Router#events\" class=\"code-anchor\">Router.events</a></code> 属性发出导航事件。这些事件如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dmnzgh3867d4zluu3jy79p3jo\">路由器事件</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationStart\"><code>NavigationStart</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"be70q9497muloayifia3sxlpl\">在导航开始时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/RouteConfigLoadStart\"><code>RouteConfigLoadStart</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4g9b3bv3ymkdcoemxx8eem39p\">在\n<code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code>进行\n<a href=\"guide/router-tutorial-toh#asynchronous-routing\">延迟加载</a>路由配置之前触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/RouteConfigLoadEnd\"><code>RouteConfigLoadEnd</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cifm59i0r3uoyhp7j9qvd277o\">在路由已被延迟加载后触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/RoutesRecognized\"><code>RoutesRecognized</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e378wprlmye24debx6sycb1wy\">在路由器解析URL并识别路由时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/GuardsCheckStart\"><code>GuardsCheckStart</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"frej8oxcnf9puqc09n2wzny8\">在路由器开始路由的保护阶段时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/ChildActivationStart\"><code>ChildActivationStart</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jjvlvkaj32i49hpaa0o9sr6\">在路由器开始激活路由的子级时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/ActivationStart\"><code>ActivationStart</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"asn8ztfevud3u0an217kfk8tl\">在路由器开始激活路由时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/GuardsCheckEnd\"><code>GuardsCheckEnd</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epnou3enputytj947cj6l9cfx\">在路由器成功完成路由的保护阶段时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/ResolveStart\"><code>ResolveStart</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e3pciogtvl2fl9gbve7qf2wjh\">在路由器开始路由的解析阶段时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/ResolveEnd\"><code>ResolveEnd</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"909hhv6401ee6oa5f7710q02b\">在路由器成功完成路由的解析阶段时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/ChildActivationEnd\"><code>ChildActivationEnd</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2frc2yzr14ndizt3g5u6fkzph\">在路由器完成激活路由的子级时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/ActivationEnd\"><code>ActivationEnd</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"am6ogqkbckpe7k0yyveugi1ix\">在路由器完成激活路由时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationEnd\"><code>NavigationEnd</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"72axjebud9r3buqcyw58hlrqa\">在导航成功结束时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationCancel\"><code>NavigationCancel</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jfr7y9f7vdnfia2fp89apis4\">在导航被取消时触发。这可能发生在导航期间某个\n<a href=\"guide/router-tutorial-toh#guards\">路由守卫</a>返回false，或通过返回\n<code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>进行重定向时。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/NavigationError\"><code>NavigationError</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fg9t0kbjjkjq5l7yy6flhsxc\">由于意外错误导致导航失败时触发。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/Scroll\"><code>Scroll</code></a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"534i0u18kxc9877ybpyc8oxwi\">表示滚动事件。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4iuoud35j871ilf1f5l9z09td\">当你启用\n<code><a href=\"api/router/withDebugTracing\" class=\"code-anchor\">withDebugTracing</a></code>特性时，Angular会将这些事件记录到控制台中。要查看筛选路由导航事件的示例，请参阅\n<a href=\"guide/observables-in-angular#router\">Angular中的Observables指南</a>中的\n<a href=\"guide/observables-in-angular\">路由部分</a>。</p>\n<h2 id=\"router-terminology\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4c1dgxzohet4s5onvtpt5f0sl\">路由器术语<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/router-reference#router-terminology\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80ihxz91qs0tkxscdx7oevi2k\">这里是一些关键的 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 术语及其含义：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cpf28ky1gvkamj1vok186i01q\">路由器部分</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lclpj84odq7n9fdmivqpmz1i\">显示活动URL的应用程序组件。管理从一个组件到下一个组件的导航。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aseqqdv4ngw5futakkhyj8w5o\">为通过应用程序视图导航提供必要的服务提供者。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2anm0f6cxpbko0l22f42z8wn\">一个单独的NgModule，为通过应用程序视图导航提供必要的服务提供者和指令。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7a53skgwk7nfcqhp1xmgy8k81\">定义一个Routes数组，每个路由将一个URL路径映射到一个组件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"af8ivwqonx3191njn7fr1gvs0\">根据URL模式定义路由器应如何导航到组件。大多数路由由路径和组件类型组成。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41n8qo3pm4wmuf0d0yvlq5ud7\">指令（\n<code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code>），标记路由器显示视图的位置。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edhe8tslz9bh5xdddj76knexe\">用于将可点击的HTML元素绑定到路由的指令。单击带有绑定到\n<em>字符串</em>或\n<em>链接参数数组</em>的\n<code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>指令的元素会触发导航。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cmnu4megba17xqeid6ur3v4y4\">用于在关联的\n<code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>在元素上或内部变为活动/非活动时向HTML元素添加/移除类的指令。它还可以为了更好的可访问性设置活动链接的\n<code>aria-current</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2vg2zf1fl5tdb6vu3t1idre1n\">为每个路由组件提供的服务，包含路由特定信息，如路由参数、静态数据、解析数据、全局查询参数和全局片段。</td>\n</tr>\n<tr>\n<td align=\"left\"><code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajirk2d7ybc1jb56ou7zgaw96\">路由器的当前状态，包括当前激活路由的树，以及用于遍历路由树的便利方法。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qhfopo4d1pfnp4w8mtuqehr0\">链接参数数组</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4tam7podjzmqoz1ih1glsjkrl\">路由器将解释为路由指令的数组。您可以将该数组绑定到\n<code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code>或将数组作为参数传递给\n<code>Router.navigate</code>方法。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9u7mq4pbjyv40jwu8gjh18zum\">路由组件</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1k7p8m7c7f6ozpxgkq3ohxv9p\">一个带有\n<code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code>的Angular组件，根据路由导航显示视图。</td>\n</tr>\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Tue Aug 29 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - api/router/RouterEvent\n - api/router/Routes\n - guide/router-tutorial-toh\n - guide/routing-overview\n-->\n<!-- links from this doc:\n - /guide/accessibility#active-links-identification\n - api/core/ApplicationConfig\n - api/router/ActivatedRoute\n - api/router/ActivationEnd\n - api/router/ActivationStart\n - api/router/ChildActivationEnd\n - api/router/ChildActivationStart\n - api/router/GuardsCheckEnd\n - api/router/GuardsCheckStart\n - api/router/NavigationCancel\n - api/router/NavigationEnd\n - api/router/NavigationError\n - api/router/NavigationStart\n - api/router/ParamMap\n - api/router/ResolveEnd\n - api/router/ResolveStart\n - api/router/Route\n - api/router/RouteConfigLoadEnd\n - api/router/RouteConfigLoadStart\n - api/router/Router\n - api/router/Router#events\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterModule\n - api/router/RouterOutlet\n - api/router/RouterState\n - api/router/Routes\n - api/router/RoutesRecognized\n - api/router/Scroll\n - api/router/UrlTree\n - api/router/provideRouter\n - api/router/withDebugTracing\n - guide/observables-in-angular\n - guide/observables-in-angular#router\n - guide/property-binding\n - guide/router#browser-url-styles\n - guide/router#link-parameters-array\n - guide/router-reference#activated-route\n - guide/router-reference#active-router-links\n - guide/router-reference#configuration\n - guide/router-reference#router-events\n - guide/router-reference#router-imports\n - guide/router-reference#router-links\n - guide/router-reference#router-outlet\n - guide/router-reference#router-reference\n - guide/router-reference#router-state\n - guide/router-reference#router-terminology\n - guide/router-tutorial-toh#asynchronous-routing\n - guide/router-tutorial-toh#child-routing-component\n - guide/router-tutorial-toh#fragment\n - guide/router-tutorial-toh#guards\n - guide/router-tutorial-toh#optional-route-parameters\n - guide/router-tutorial-toh#query-parameters\n - guide/router-tutorial-toh#resolve-guard\n-->"}