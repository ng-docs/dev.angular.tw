{"id":"guide/template-statements","title":"樣板語句","contents":"<div class=\"content\">\n  <h1 id=\"template-statements\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3h6h64ogldnmi7qf3gggut7p\">樣板語句<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-statements#template-statements\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"but0i4tc7y7jtmgjpry4ppvp5\">樣板語句是可在 HTML 中用於回應使用者事件的方法或屬性。使用樣板語句，你的應用可以透過諸如顯示動態內容或送出表單之類的動作吸引使用者。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4dkq8dm61bgipn5dpahuyclx8\">關於本指南中的語法和程式碼段落的訊息，請參閱<live-example name=\"template-syntax\">Template syntax</live-example>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bnofh6e8ge1eovztf1k48u19t\">在以下範例中，樣板語句 <code>deleteHero()</code> 出現在 <code>=</code> 號右側的引號中，<code>(event)=\"statement\"</code>。</p>\n<code-example header=\"src/app/app.component.html\" path=\"template-syntax/src/app/app.component.html\" region=\"context-component-statement\">\n&lt;button type=\"button\" (click)=\"deleteHero()\"&gt;Delete hero&lt;/button&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"vd2naj84ofehtun8ph70w412\">當用戶單擊 <strong>Delete hero</strong> 按鈕時，Angular 就會呼叫元件類別中 <code>deleteHero()</code> 方法。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cn3i3ihx1fqjc7ezz2u36pep\">可以將樣板語句與元素、元件或指令一起使用以回應事件。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6eh6ahi8t2eampf2c6sp1dvof\">回應事件是 Angular <a href=\"guide/glossary#unidirectional-data-flow\">單向資料流</a>的一個方面。你可以在單個事件迴圈中更改應用程式中的任何內容。</p>\n</div>\n<h2 id=\"syntax\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8p44mx807exjp3s0k9dwbuxla\">語法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-statements#syntax\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6qkkmsuba64chabgt8b0xousd\">與<a href=\"guide/interpolation\">樣板表示式</a>一樣，樣板語句使用類似於 JavaScript 的語言。但是，樣板語句的解析器與樣板表示式的解析器有所不同。此外，樣板語句解析器特別支援基本賦值 <code>=</code> 和帶有分號 <code>;</code> 的串聯表示式。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckwze78p30j6zoo7yylstxvq6\">不允許使用以下 JavaScript 和樣板表示式語法：</p>\n<ul>\n<li><code>new</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2qo3c8z0tazjokvi1pluiohra\">遞增和遞減運算符 <code>++</code> 和 <code>--</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6pr47it3z2s15favw4i6s3oxe\">賦值運算符，比如 <code>+=</code> 和 <code>-=</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cjrqlord5kfqnzuw7jfeotj13\">按位運算符，比如 <code>|</code> 和 <code>&amp;</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3q7v9l6cl0bnh3zxbhjxwo8gc\">通道運算子</li>\n</ul>\n<h2 id=\"statement-context\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cguu1rzuch240shyt0c3o7thy\">語句的上下文<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-statements#statement-context\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bos69zuv8i4cqly67p5csco0b\">語句具有上下文 - 也就是語句所屬應用中的特定部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"61a7dx04dtjr1rqljbpprnw5v\">語句只能引用語句上下文中的內容，通常是元件實例。比如，<code>(click)=\"deleteHero()\"</code> 中的 <code>deleteHero()</code> 就是下面程式碼段落中的元件方法之一。</p>\n<code-example header=\"src/app/app.component.html\" path=\"template-syntax/src/app/app.component.html\" region=\"context-component-statement\">\n&lt;button type=\"button\" (click)=\"deleteHero()\"&gt;Delete hero&lt;/button&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8o7xd811gljpmk1b6tbk9aj12\">語句上下文還可以引用樣板自身的上下文屬性。在下面的範例中，元件的事件處理方法 <code>onSave()</code> 將樣板自己的 <code>$event</code> 物件用作引數。在接下來的兩行中，<code>deleteHero()</code> 方法接收了<a href=\"guide/structural-directives#shorthand\">樣板輸入變數</a> <code>hero</code> 作為引數，而 <code>onSubmit()</code> 接收了<a href=\"guide/template-reference-variables\">樣板引用變數</a> <code>#heroForm</code> 作為引數。</p>\n<code-example header=\"src/app/app.component.html\" path=\"template-syntax/src/app/app.component.html\" region=\"context-var-statement\">\n&lt;button type=\"button\" (click)=\"onSave($event)\"&gt;Save&lt;/button&gt;\n&lt;button type=\"button\" *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\" (click)=\"deleteHero(hero)\"&gt;{{hero.name}}&lt;/button&gt;\n&lt;form #heroForm (ngSubmit)=\"onSubmit(heroForm)\"&gt; ... &lt;/form&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yt2hy11jexx18jpbcwt44i7a\">在這個例子中，<code>$event</code> 物件、<code>hero</code> 和 <code>#heroForm</code> 的上下文都是其樣板。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1c7bhg3nh4lu7m7z2exn6i1bo\">樣板上下文中的名稱優先於元件上下文中的名稱。前面 <code>deleteHero(hero)</code> 中的 <code>hero</code> 是樣板輸入變數，而不是元件的 <code>hero</code> 屬性。</p>\n<h2 id=\"statement-best-practices\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4k8sni58r2949fznir3m5mzrs\">樣板語句最佳實踐<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-statements#statement-best-practices\"><i class=\"material-icons\">link</i></a></h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ek8e4x2w81qq5uycuuqaae0n\">實踐</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"90l6p6i4qc71c9afmg0hvhzal\">簡潔性</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7jo10btrxtlz0bz8fqulog8dg\">使用方法呼叫或基本屬性賦值來保持樣板語句簡潔。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1cex5xa6v9xdnuf1h5rdx18md\">在上下文中工作</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9x327rcr92xz5sj26fx5f3wyz\">樣板語句的上下文可以是元件類別實例或樣板本身。因此，樣板語句不能引用全域命名空間中的任何內容，如\n<code>window</code>或\n<code>document</code>。例如，樣板語句不能呼叫\n<code>console.log()</code>或\n<code>Math.max()</code>。</td>\n</tr>\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Mon Aug 14 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/binding-syntax\n - guide/event-binding\n - guide/template-syntax\n - guide/user-input\n-->\n<!-- links from this doc:\n - api/common/NgFor\n - guide/glossary#unidirectional-data-flow\n - guide/interpolation\n - guide/pipes-overview\n - guide/structural-directives#shorthand\n - guide/template-reference-variables\n - guide/template-statements#statement-best-practices\n - guide/template-statements#statement-context\n - guide/template-statements#syntax\n - guide/template-statements#template-statements\n-->"}