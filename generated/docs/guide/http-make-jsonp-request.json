{"id":"guide/http-make-jsonp-request","title":"HTTP：發出 JSONP 請求","contents":"<div class=\"content\">\n  <h1 id=\"http-make-a-jsonp-request\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5tso80qk9bvlyiwxhx2iuh0pc\">HTTP：發出 JSONP 請求<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/http-make-jsonp-request#http-make-a-jsonp-request\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzankylx4tpq2m3xo6pno7jvm\">『帶填充的 JSON』(JSONP) 是一種欺騙 Web 瀏覽器執行帶有 <code>&lt;script&gt;</code> 標籤的請求的方法，該標籤使用 SRC 屬性發出特殊的 API 請求。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e0cnaz3ewevn5vif9xbgbp3dp\">當服務器不支援 <a href=\"https://developer.mozilla.org/docs/Web/HTTP/CORS\">CORS 協定</a>時，應用程式可以使用 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 跨域發出 <a href=\"https://en.wikipedia.org/wiki/JSONP\">JSONP</a> 請求。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"i7vfoj9wy2oigiijgrl9krpo\">Angular 的 JSONP 請求會回傳一個 <code>Observable</code>。遵循訂閱可觀察物件變數的模式，並在使用 <a href=\"api/common/AsyncPipe\">async 通道</a>管理結果之前，使用 RxJS <code>map</code> 運算子轉換回應。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bvsif1z80gaei697pcn2fvl3\">透過在\n<code>app.config.ts</code>的\n<code><a href=\"api/core/ApplicationConfig\" class=\"code-anchor\">ApplicationConfig</a></code>提供者陣列中提供\n<code><a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a></code>來啟用JSONP，像這樣：</p>\n<code-example header=\"app.config.ts (excerpt)\" path=\"http/src/app/app.config.ts\" region=\"jsonp\">\nexport const appConfig: <a href=\"api/core/ApplicationConfig\" class=\"code-anchor\">ApplicationConfig</a> = {\n  providers: [\n    <a href=\"api/core/importProvidersFrom\" class=\"code-anchor\">importProvidersFrom</a>(<a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a>),\n    <a href=\"api/core/importProvidersFrom\" class=\"code-anchor\">importProvidersFrom</a>(<a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a>),\n  ]\n};\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7odo06nb56g6yekw5kvnrheec\">在下面的範例中，\n<code>searchHeroesJsonp()</code>方法使用JSONP請求查詢那些英雄名字包含從使用者獲取的搜尋詞的英雄。</p>\n<code-example path=\"http/src/app/heroes/heroes.service.ts\" region=\"searchHeroesJsonp\">\n/* GET heroes whose name contains search term */\nsearchHeroes(term: string): Observable&lt;Hero[]&gt; {\n  term = term.trim();\n\n  const heroesUrl = `${this.heroesSearchUrl}?${term}`;\n  return this.http.jsonp(heroesUrl, 'callback')\n    .pipe(\n      map(result =&gt; this.jsonpResultToHeroes(result)),\n      catchError(this.handleError('searchHeroes', []))\n    );\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dau9gzq40nyawjv7a6zxnepip\">此請求將\n<code>heroesUrl</code>與搜尋詞作為第一個引數傳遞，並將標準回呼函式名稱\n<code>callback</code>作為第二個引數。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"299zuqg3d7i6omwo9rpifebk9\">你可能需要對\n<code>http.jsonp</code>方法的Observable回應進行\n<code>map</code>，就像這個範例中的\n<code>jsonpResultToHeroes</code>一樣。</p>\n<h2 id=\"request-non-json-data\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b6hj4fwxyyjle7ce39fsrb6x6\">請求非 JSON 資料<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/http-make-jsonp-request#request-non-json-data\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ah3arqhjqu0lpbgytfj4mr8cj\">不是所有的 API 都會回傳 JSON 資料。在下面這個例子中，<code>DownloaderService</code> 中的方法會從伺服器讀取文字檔案，並把檔案的內容記錄下來，然後把這些內容使用 <code>Observable&lt;string&gt;</code> 的形式回傳給呼叫者。</p>\n<code-example header=\"app/downloader/downloader.service.ts (getTextFile)\" linenums=\"false\" path=\"http/src/app/downloader/downloader.service.ts\" region=\"getTextFile\">\ngetTextFile(filename: string) {\n  // The Observable returned by get() is of type Observable&lt;string&gt;\n  // because a text response was specified.\n  // There's no need to pass a &lt;string&gt; type parameter to get().\n  return this.http.get(filename, {responseType: 'text'})\n    .pipe(\n      tap( // Log the result or error\n      {\n        next: (data) =&gt; this.log(filename, data),\n        error: (error) =&gt; this.logError(filename, error)\n      }\n      )\n    );\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2ru8xr1b26wyotrhmyxrqvesf\">這裡的 <code><a href=\"api/common/http/HttpClient#get\" class=\"code-anchor\">HttpClient.get()</a></code> 回傳字串而不是預設的 JSON 物件，因為它的 <code>responseType</code> 選項是 <code>'text'</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59wb6mskhbr5t1rkxxx8wpn3\">RxJS 的 <code>tap</code> 運算子使程式碼可以檢查透過可觀察物件的成功值和錯誤值，而不會干擾它們。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ny1ciobxw199jkqh7rjg3ndg\">在 <code>DownloaderComponent</code> 中的 <code>download()</code> 方法透過訂閱這個服務中的方法來發起一次請求。</p>\n<code-example header=\"app/downloader/downloader.component.ts (download)\" linenums=\"false\" path=\"http/src/app/downloader/downloader.component.ts\" region=\"download\">\ndownload() {\n  this.downloaderService.getTextFile('assets/textfile.txt')\n    .subscribe(results =&gt; this.contents = results);\n}\n\n</code-example>\n<p><a id=\"error-handling\"></a></p>\n\n  <div class=\"reviewed\">最後複查時間：Thu Aug 17 2023</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common/AsyncPipe\n - api/common/http/HttpClient\n - api/common/http/HttpClient#get\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/core/ApplicationConfig\n - api/core/importProvidersFrom\n - guide/http-make-jsonp-request#http-make-a-jsonp-request\n - guide/http-make-jsonp-request#request-non-json-data\n - https://developer.mozilla.org/docs/Web/HTTP/CORS\n - https://en.wikipedia.org/wiki/JSONP\n-->"}