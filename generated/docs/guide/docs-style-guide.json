{"id":"guide/docs-style-guide","title":"Angular 文档风格指南","contents":"<div class=\"content\">\n  <h1 id=\"angular-documentation-style-guide\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5x5gv97mpy82qwmr91mrythfz\">Angular 文档风格指南<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#angular-documentation-style-guide\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aevzknojg4sbq8nxrmi60hujd\">本风格指南涵盖了<a href=\"docs\">在 angular.io 上编写 Angular 文档</a>的标准。这些标准确保了写作风格、Markdown 约定和代码片段的一致性。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qc4bdzjfgy09d962j8cu2xmq\">在为 Angular 文档做贡献之前，如果你熟悉以下内容，会很有帮助：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"88n6r74klniqruk6ku1kwcjb0\">主题</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>git</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pypx2ipnwp5f5xer4yk8h98w\">要了解更多，请参阅 GitHub 的 \n<a href=\"https://guides.github.com/introduction/git-handbook\">Git 手册</a></td>\n</tr>\n<tr>\n<td align=\"left\">GitHub</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"hwcm2qxo1uow1864g40zdp4q\">要了解更多，请参阅 GitHub 的 \n<a href=\"https://guides.github.com/activities/hello-world\">Hello World</a></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1zf4lbjxpzx6waolzb5xulptr\">Markdown</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"afeai1eqgqfhmnk3qacv9ey9d\">请查看 GitHub 的 \n<a href=\"https://guides.github.com/features/mastering-markdown\">掌握 Markdown</a></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ao9dbag648ozutv4juldduqe0\">Angular 风格和用法</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5ds2x74ed8bstaw5dyooyreyq\">请查看 \n<a href=\"guide/styleguide\" title=\"Angular 应用代码风格指南\">Angular 风格指南</a></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f0mt4igedqjwo0uobhk1vz6cc\">Google 写作风格</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d3xd53265o0quykf9dy7l7on5\">谷歌开发者文档风格指南是一个综合资源，Angular 文档风格指南是基于此而建立的</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"kinds-of-angular-documentation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"530ogp4z0cppk7g5gefdp51at\">Angular 文档的种类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#kinds-of-angular-documentation\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9u25hj3g69mb2afmyrq88gylb\">Angular 文档的类别包括：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"abfqiadygxpvpw4x3gff90mmk\">Angular 文档分类</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"31mnph1w7z5u076rlos9128xf\"><a href=\"docs\">指南</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5g68yft2e63bg6zl2lrss8je5\">大部分来自\n<a href=\"docs\">angular.io 文档部分</a>。指南逐步引导读者完成任务，以演示概念，并经常附带一个可工作的示例。包括 \n<a href=\"start\">入门</a>、\n<a href=\"tutorial/tour-of-heroes\">英雄之旅</a>，以及关于 \n<a href=\"guide/forms-overview\">表单</a>、\n<a href=\"guide/dependency-injection\">依赖注入</a>、和 \n<a href=\"guide/understanding-communicating-with-http\">HttpClient</a> 的页面。社区贡献者和 Angular 团队成员在\n<a href=\"https://daringfireball.net/projects/markdown/syntax\" title=\"Markdown\">Markdown</a>中维护这些文档。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1yhux0t4001e0cj9qvbv304x6\"><a href=\"api\">API 文档</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cpzs1zgy1dsifgl6ly0oow8wd\">Angular 应用编程接口（API）的参考文档。这些比指南更为简洁，是 Angular 功能的参考。对于已经熟悉 Angular 概念的人特别有帮助。来自源代码和贡献者编辑的注释，\n<a href=\"https://angular.io\">angular.io</a>基础设施生成这些文档。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d5sluooyl3vfgjn3ik15re7ze\"><a href=\"cli\">CLI 文档</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1pnxd2s1d1fck21gjmpu3cha4\"><a href=\"https://angular.io\">angular.io</a>基础设施从 CLI 源代码生成这些文档。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"markdown-and-html\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqwyy2mq6etnlzcn601jmqq0t\">Markdown 和 HTML<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#markdown-and-html\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6eeakmku6h9v9vevm18uz02z0\">虽然 Angular 指南是<a href=\"https://daringfireball.net/projects/markdown/syntax\" title=\"降价\">Markdown</a>文件，但指南中的某些部分使用了 HTML。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"duyprhe9nr6utuoeus782lj04\">要在 Angular 指南中启用 HTML，请<strong>始终</strong>在每个打开和关闭 HTML 标签之后使用空行。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d4yajwviuotx07yk2n07ohh7p\">请注意以下示例中打开 <code>&lt;div&gt;</code> 之后所需的空行：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"alert is-helpful\"&gt;\n\n**Always** follow every opening and closing HTML tag with *a blank line*.\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"287x4jm21nndpyfl1g5quibv8\">习惯上，但不要求在结束 HTML 标签之前有一个空行。</p>\n<h2 id=\"title\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"av6c6t8qksxzo8tyqhfsxy00r\">标题<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#title\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c26mcxu6k7obou6csvhiocisr\">每个指南文档都必须有一个标题，并且它应该出现在页面的顶部。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1cxem68gsc6ixc3etd0p3ck06\">标题以 Markdown 哈希（<code>#</code>）字符开头，在浏览器中渲染为 <code>&lt;h1&gt;</code>。</p>\n<code-example format=\"html\" language=\"html\">\n\n# Angular documentation <a href=\"api/animations/style\" class=\"code-anchor\">style</a> guide\n\n</code-example>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ev3c5lqw8q6pbfmicodnlvbp\">标题指南</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7fl1ai12ly3n26ch4do45nw3q\">文档只能有一个\n<code>&lt;h1&gt;</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1k6twrs99xw5roi6fox0ejan3\">标题文本应该采用\n<em>句首大写</em>，即第一个单词大写，其他单词小写。像“Angular”这样始终大写的技术术语是例外。\n<code-example format=\"html\" language=\"html\">\n  # Angular 中的弃用策略 \n</code-example></td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"crxvkm3silznlyifs6wsl9pyy\">始终在标题后面至少留一个空行</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e19wcy2ckg5442681k8v5cosd\">左侧导航中对应的文本采用\n<em>标题格式</em>，这意味着要使用大写字母开始第一个词和所有主要词。对于次要词如\"in\"、\"of\"和\"the\"使用小写字母。你也可以缩短导航标题以适应列宽。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"sections\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7w88zr2vle94hg5329lphobbh\">部分<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#sections\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cst7kp2p35bcno8muhdymrr0f\">典型的文档有部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6o634r287l5exqiy5olhdoxl8\">所有部分标题都用<em>Sentence case</em>，这意味着第一个单词是大写的，所有其他单词都是小写的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1q7h7tps71ool4ryfnslchxd0\"><strong>始终遵循至少有一个空行的部分标题。</strong></p>\n<h3 id=\"main-section-heading\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9h8xdaiikvn4cc40qi0hrtq1q\">主要部分标题<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#main-section-heading\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7obzstj18k44clkqwqk4to96x\">通常有一个或多个主要部分，可以进一步分为次要部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9kgbvgaajpo52co0zzld0ta4e\">以 Markdown <code>##</code> 字符开头的主要部分标题，在浏览器中渲染为 <code>&lt;h2&gt;</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bg6f4af3cp4ihfzgjh7ow3skj\">在主要部分标题之后使用空行，然后是该标题的内容，如以下示例所示：</p>\n<code-example format=\"html\" language=\"html\">\n\n## Main section heading\n\nContent after a blank line.\n\n</code-example>\n<h3 id=\"secondary-section-heading\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c5ocw6dnhtzfpwo4rq05x0x96\">次要部分标题<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#secondary-section-heading\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6enzsycfm3wnpy8778eyc84eb\">次要部分标题与主标题相关，在文本上属于该主标题的范围。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xes7rv3shyc78eq8bq99xwbl\">以 Markdown <code>###</code> 字符开头的辅助标题，在浏览器中渲染为 <code>&lt;h3&gt;</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3a5bglfltivahkmzs3oi4tjze\">在次标题后面加一个空行，然后是该标题的内容，如以下示例所示：</p>\n<code-example format=\"html\" language=\"html\">\n\n### Secondary section heading\n\nContent after a blank line.\n\n</code-example>\n<h3 id=\"additional-section-headings\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f3o9ngw6d6gwwgh33ujz5wz76\">其他节标题<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#additional-section-headings\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bobtnxnk30qicyst84dfrr92v\">虽然你可以用其他部分标题，但<a href=\"guide/docs-style-guide#table-of-contents\">目录（TOC）</a>生成器仅在页面右侧的 TOC 中显示 <code>&lt;h2&gt;</code> 和 <code>&lt;h3&gt;</code> 标题。</p>\n<code-example format=\"html\" language=\"html\">\n\n#### The TOC won't display this\n\nContent after a blank line.\n\n</code-example>\n<h2 id=\"table-of-contents\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5augsnk5gnmf6laz1c5nhpacu\">目录<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#table-of-contents\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8c6yuea03fx7jcjzvpqds66a\">大多数页面会显示目录或 TOC。当视口很宽时，TOC 会出现在右侧面板中。缩小时，TOC 会出现在页面顶部附近的可折叠区域。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxuahe807d4506fu1gvcjvihs\">你无需手动创建自己的 TOC，因为 TOC 生成器会自动从页面的 <code>&lt;h2&gt;</code> 和 <code>&lt;h3&gt;</code> 标头创建一个。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4rirtapxbwvzlzdim78g4oaku\">要从 TOC 中排除标题，请使用名为 'no-toc' 的类将标题创建为 <code>&lt;h2&gt;</code> 或 <code>&lt;h3&gt;</code> 元素。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;h3 class=\"no-toc\"&gt;\n\nThis heading is not displayed in the TOC\n\n&lt;/h3&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6kpy2d5zco2o72akwpsnjgawe\">你可以通过使用 <code>&lt;h1&gt;</code> 标签和 <code>no-toc</code> 类编写标题来关闭整个页面的 TOC 生成。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;h1 class=\"no-toc\"&gt;\n\nA guide without a TOC\n\n&lt;/h1&gt;\n\n</code-example>\n<h2 id=\"navigation\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7u60u4e2e88xny39qfkq3np8d\">导航<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#navigation\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"49g40yyedtm0pl1knifq5qme4\">要在屏幕的顶部、左侧和底部生成导航链接，请使用 JSON 配置文件 <code>content/navigation.json</code>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"598eejrbwsr16q73otmbd90ei\">如果你有一个会导致导航更改的想法，请首先<a href=\"https://github.com/angular/angular/issues/new/choose\">提交问题</a>，以便 Angular 团队和社区可以讨论此更改。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"nctatj11uyqh8pr20vnodlz0\">对于新的指南页面，请编辑 <code>navigation.json</code> 中的 <code>SideNav</code> 节点。<code>SideNav</code> 节点是一个导航节点数组。每个节点要么是单个文档的条目节点，要么是带有子节点的标头节点。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"43xplpzvnguugxbrn9mkksfkl\">查找页面的标头。比如，描述 Angular 特性的指南页面可能是 <code>Fundamentals</code> 标头的子项。</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"title\": \"Fundamentals\",\n  \"tooltip\": \"The fundamentals of Angular\",\n  \"children\": [ … ]\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6vy12iwgkr7xyjrwj54khw1tc\">标头节点子项可以是 item 节点或另一个标头节点。如果你的指南页面属于子标题下，请在 JSON 中查找该子标题。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6pwcd2qchxctcsesy1albz6la\">为你的指南页面添加一个 item 节点作为适当的标头节点的子项，如以下示例所示：</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"url\": \"guide/docs-style-guide\",\n  \"title\": \"Doc authors style guide\",\n  \"tooltip\": \"Style guide for documentation authors.\",\n},\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zvf1d0v5pu78y90crvowiixo\">导航节点具有以下属性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ghvm54f9feewnb0zbrlubp2h\">属性</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>url</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3crqwz7ujau4p5tpoulb942g4\">指南页面的URL，这只是一个项目节点</td>\n</tr>\n<tr>\n<td align=\"left\"><code>title</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1wa8pafrxonq6nsnfu6cmywzr\">侧边导航中显示的文本</td>\n</tr>\n<tr>\n<td align=\"left\"><code>tooltip</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1boiyg3489i99z6d9y7yp24lo\">当读者悬停在导航链接上时显示的文本</td>\n</tr>\n<tr>\n<td align=\"left\"><code>children</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2yq58i8jvflagv9n1npru3cfs\">子节点数组，这只是一个头部节点</td>\n</tr>\n<tr>\n<td align=\"left\"><code>hidden</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1ze5dmsy58nmrrodn0okye1zv\">如果这是不应在导航面板中显示的指南页面，则定义并设置为\n<code>true</code></td>\n</tr>\n</tbody>\n</table>\n<div class=\"alert is-critical\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5xgeyytqvebx9nicbf4b9ripf\">不要通过指定标头节点的 <code>url</code> 属性来创建同时作为标头和条目节点的节点。</p>\n</div>\n<h2 id=\"code-snippets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ep6m1jml6f0vykcjrgfxk15rv\">代码片段<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#code-snippets\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ls2izb7ayz3ova17dkiwzs31\"><a href=\"docs\">Angular.io</a>有一个自定义框架，使作者能够直接包含来自工作示例应用程序的代码片段，这些代码片段会作为文档构建的一部分自动测试。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bbpu6nbcuuvp4flc8itne6bxn\">除了工作代码片段之外，示例代码还可以包括终端命令、TypeScript 或 HTML 的片段或整个代码文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"96ho6xoz06r227sgt13rjov1o\">无论来源是什么，文档查看器都会将它们渲染为代码片段，可以单独使用<a href=\"guide/docs-style-guide#code-example\" title=\"代码示例\">code-example</a>组件，也可以作为带有<a href=\"guide/docs-style-guide#code-tabs\" title=\"代码标签\">code-tabs</a>组件的选项卡式集合。</p>\n<p><a id=\"code-example\"></a></p>\n<h3 id=\"when-to-use-code-font\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ceva5b59ds5skgu7cf9kf58kn\">何时使用代码字体<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#when-to-use-code-font\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8gdjab4s4lau4ghuhk33vhjsw\">你可以用 Markdown 反引号语法显示最小的内联代码段。在句子中引用代码或文件名时，在术语的任一侧使用单个反引号。以下是一些例子：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65id4kamc8boqf7t3aod91vm7\">在 <code>app.component.ts</code> 中，添加 <code>logger()</code> 方法。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"40rc8sl0hrv1v7k6vay6dr2ps\"><code>name</code> 属性是 <code>Sally</code>。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ej3owv6ixczp8uuydx94rued4\">将组件类名添加到 <code>declarations</code> 数组。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1c61tk17eqxysdtd7v1ruqrw7\">Markdown 如下：</p>\n<code-example format=\"markdown\" language=\"markdown\">\n\n*   In the `app.component.ts`, add a `logger()` method.\n*   The &lt;code class=\"no-auto-link\"&gt;item&lt;/code&gt; property is `true`.\n*   Add the component class name to the `declarations` array.\n\n</code-example>\n<h3 id=\"auto-linking-in-code-snippets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5nj2r51exuyl4y9bkt3zphk8j\">代码片段中的自动链接<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#auto-linking-in-code-snippets\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3j0y8yifcu38t6xp06f7ocf1u\">在某些情况下，当你在某个术语周围应用反引号时，它可能会自动链接到 API 文档。如果你不打算将该术语作为链接，请使用以下语法：</p>\n<code-example format=\"html\" language=\"html\">\n\nThe &lt;code class=\"no-auto-link\"&gt;item&lt;/code&gt; property is `true`.\n\n</code-example>\n<h3 id=\"hard-coded-snippets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dka28k3yf4n919cbuorxzqtre\">硬编码的片段<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#hard-coded-snippets\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"68a9itrfv3y1wsfjh16uusrw\">理想情况下，你应该<a href=\"guide/docs-style-guide#from-code-samples\">从工作示例代码</a>中获取代码片段，尽管有时需要内联代码段。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1scu4wn3jf8ewp7cvy55hgwg7\">对于终端输入和输出，将内容放在 <code>&lt;code-example&gt;</code> 标签之间，并将语言属性设置为 <code>sh</code>，如此示例所示：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nnpm start\n\n</code-example>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-example language=\"shell\"&gt;\n\nnpm start\n\n&lt;/code-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"csx3fdjl05zma0t5x9gsz2ofk\">像这样的内联硬编码片段不可测试，因此本质上不可靠。此示例属于一小组预先批准的内联代码段，其中包括命令 shell 中的用户输入或某些进程的输出。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8jadr2c2yenduaa8lgu09p8xg\">在所有其他情况下，代码片段应该从经过测试的代码示例自动生成。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ziov9bjgpn3osy0n0lomezfj\">对于假设的示例，比如 JSON 文件中的配置选项插图，请使用带有 <code>header</code> 属性的 <code>&lt;code-example&gt;</code> 标签来标识上下文。</p>\n<p><a id=\"from-code-samples\"></a></p>\n<h3 id=\"compilable-example-apps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"k2nsy0ssiq7fbacfcxgh1pzs\">可编译的示例应用程序<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#compilable-example-apps\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2eyz9rfroviqzy1xq0mmeku4\">Angular 文档的设计目标之一是指南页面代码段是可工作代码的示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3pkdp7i6fhyo0qcnv11056svr\">作者通过直接显示来自工作示例应用程序的、专门为这些指南页面编写的代码片段来实现这一目标。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cm7a04d7w2qyvx586wo4fetwx\">在 <code>angular/angular</code> 存储库的 <code>content/examples</code> 目录的子文件夹中查找示例应用程序。示例文件夹名称通常与其支持的指南页面相同。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45xt2bmsb9h0l84gz408a2xpg\">指南页面可能没有自己的示例代码。相反，它可能会引用属于另一个页面的示例。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"71gwv36msb2lbntjaztn01ubv\">Angular CI 过程为每个 Angular PR 运行所有端到端测试。在每个新版本的示例和每个新版本的 Angular 之后，Angular 都会重新测试这些示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4r6kn0xiwfz3xyowvltk4revr\">如果可能，指南页面上的每个代码片段都应该来自代码示例文件。你通过配置 <code>&lt;code-example&gt;</code> 属性来告诉 Angular 文档引擎要显示哪个代码文件（或代码文件的片段）。</p>\n<p><a id=\"display-whole-file\"></a></p>\n<h3 id=\"displaying-an-entire-code-file\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"50lkxkds7qha08hgcrtgc0jjq\">显示整个代码文件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#displaying-an-entire-code-file\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5jl0st1eyqarvf6kukivbx7k5\">你当前正在阅读的本 Angular 文档风格指南有自己的示例应用程序，位于 <code>content/examples/docs-style-guide</code> 文件夹中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1jsct9w33ewxwet0xpvh47wg\">以下 <code>&lt;code-example&gt;</code> 显示示例的 <code>app.module.ts</code>：</p>\n<code-example header=\"src/app/app.module.ts\" path=\"docs-style-guide/src/app/app.module.ts\">\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports:      [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7w86c3lwlic6de34dz9sf1k8m\">以下标注会生成该代码段：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-example path=\"docs-style-guide/src/app/app.module.ts\" header=\"src/app/app.module.ts\"&gt;&lt;/code-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2vjqvyanfwl8dxerfxyo2s8w6\"><code>path</code> 属性在 <code>content/examples</code> 中的示例应用程序文件夹位置标识代码段的源文件。在此示例中，该路径是 <code>docs-style-guide/src/app/app.module.ts</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1dxdw6t46k45i43vbjsunsgc1\">标头告诉读者在哪里可以找到文件。按照约定，将 <code>header</code> 属性设置为示例应用程序根文件夹中的文件位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"er61yo7uxy9794p23kdrgzqf3\">除非另行说明，否则本页面中的所有代码片段都来自位于 <code>content/examples/docs-style-guide</code> 目录中的示例源代码。</p>\n<p><a id=\"region\"></a></p>\n<h3 id=\"displaying-part-of-a-code-file\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7b5te7pdwzbnapenyv4k0jrw4\">显示代码文件的一部分<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#displaying-part-of-a-code-file\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9sogta0dukt7k2pbreexr5fwh\">要在示例代码文件中包含代码片段，而不是整个文件，请使用 <code>&lt;code-example&gt;</code> <code>region</code> 属性。以下示例侧重于 <code>AppModule</code> 类及其 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>()</code> 元数据：</p>\n<code-example header=\"src/app/app.module.ts\" path=\"docs-style-guide/src/app/app.module.ts\" region=\"class\">\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports:      [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cytu7z1pqgd0jsl9ahi9io9is\">要渲染上面的示例，Markdown 文件中的 HTML 如下：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-example\n  path=\"docs-style-guide/src/app/app.module.ts\"\n  header=\"src/app/app.module.ts\"\n  region=\"class\"&gt;&lt;/code-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eahqztfjr44c74mjrciwjdffz\"><code>path</code> 指向文件，就像渲染<a href=\"guide/docs-style-guide#display-whole-file\">整个文件</a>的示例一样。<code>region</code> 属性指定源文件的一部分，由打开的 <code>#docregion</code> 和关闭的 <code>#enddocregion</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9x4r4r3l4jcgmaph3f16go08v\">你可以在下面的源文件中看到 <code>#docregion</code> <code>class</code>。请注意 <code>content/examples/docs-style-guide/src/app/app.module.ts</code> 中名为 <code>class</code> 的注释行 <code>#docregion</code> 和 <code>#enddocregion</code>。</p>\n<code-example header=\"src/app/app.module.ts\">\n\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> }      from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> }   from '@angular/forms';\n\nimport { AppComponent }  from './app.component';\n\n// #docregion class\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports:      [ <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a> ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n// #enddocregion class\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"enz9r8h3j3ocxpjg1j4swmc8z\">开头和结尾的 <code>#docregion</code> 它们之间的任何代码行指定为包含在代码段中。这就是为什么 <code>#docregion</code> <code>class</code> 之外的导入语句不在代码片段中的原因。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cqxfuo9jzrndsis98voxoadg8\">有关如何准备在指南中使用的示例应用程序文件的更多信息，参阅<a href=\"guide/docs-style-guide#source-code-markup\">源代码标注</a>。</p>\n<h3 id=\"code-snippet-options\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7y5razwhwxvsoj3dsea2allv8\">代码段选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#code-snippet-options\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2nacehntrlwefn64p0xx29o36\">使用以下属性指定 <code>&lt;code-example&gt;</code> 输出：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2e7a5u3w81azvyldqrbf228ud\">属性</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>path</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"pin9gqz99v29zphy1l596toc\">在\n<code>content/examples</code>文件夹中的文件路径</td>\n</tr>\n<tr>\n<td align=\"left\"><code>header</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"vdj5t1ko5p0qtyz2p6swz8h6\">代码清单的标题。这是代码片段的标题，可以包括路径和额外信息，如片段是否为摘录</td>\n</tr>\n<tr>\n<td align=\"left\"><code>region</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a1bryp4f1dsgfhvelae858lqk\">显示具有该区域名称的源文件片段；区域由源文件中的\n<code>#docregion</code>标记标识。参见\n<a href=\"guide/docs-style-guide#region\" title=\"显示代码片段\">显示代码片段</a></td>\n</tr>\n<tr>\n<td align=\"left\"><code>linenums</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bpfrnvqbznaixoie4hqu8ymt\">值可以是\n<code>true</code>、\n<code>false</code>或\n<code>number</code>。默认值为\n<code>false</code>，表示浏览器不显示行号。\n<code>number</code>选项从给定值开始编号行。例如，\n<code>linenums=4</code>将起始行号设置为4</td>\n</tr>\n<tr>\n<td align=\"left\"><code>class</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3o40z444b7cxlnj20py1fio48\">可以使用CSS类\n<code>no-box</code>和\n<code>avoid</code>对代码片段进行样式设置</td>\n</tr>\n<tr>\n<td align=\"left\"><code>hideCopy</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dw343n0n66oq5ydrje44wukvu\">隐藏复制按钮</td>\n</tr>\n<tr>\n<td align=\"left\"><code>language</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1sjy714691nb2kt3fax36vm91\">源代码语言，如\n<code>javascript</code>、\n<code>html</code>、\n<code>css</code>、\n<code>typescript</code>、\n<code>json</code>或\n<code>shell</code>。此属性仅适用于硬编码示例</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"displaying-bad-code\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"g5sng7rx5ij0ay1eqit8mwgr\">显示错误代码<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#displaying-bad-code\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bshxt1h1ql0m1ce0asga79on\">有时，你希望显示一个不太理想的代码或设计的示例，比如<strong>Angular</strong><a href=\"guide/styleguide\">风格指南</a>中的 exclude 示例。因为读者有可能在自己的应用程序中复制并粘贴劣质代码的示例，因此请尽量减少对此类代码的使用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bas9ylrudl335n02sdu87e7m3\">在你需要不可接受的示例的情况下，你可以将 <code>class</code> 设置为 <code>avoid</code> 或在源文件的文件名中包含单词 <code>avoid</code>。通过将 <code>avoid</code> 一词放在文件名或路径中，文档生成器会自动将 <code>avoid</code> 类添加到 <code>&lt;code-example&gt;</code>。这些选项中的任何一个都以鲜红色框住代码片段，以吸引读者的注意力。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dp4y0lfgxnm8sti02571wxeo\">这是<a href=\"guide/styleguide#style-05-03\" title=\"风格 05-03：组件作为元素\">Angular 风格指南</a>中一个“ <code>avoid</code> ”示例的标注，该示例在路径名中使用了 Avoid 单词：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-example\n  header=\"app/heroes/hero-button/hero-button.component.ts\"\n  path=\"styleguide/src/05-03/app/heroes/shared/hero-button/hero-button.component.avoid.ts\"\n  region=\"example\"&gt;&lt;/code-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3479ktepf9qbi47k4s0ibddnp\">文件名中包含“avoid”一词会导致浏览器渲染带有红色标头和边框的代码片段：</p>\n<code-example header=\"app/heroes/hero-button/hero-button.component.ts\" path=\"styleguide/src/05-03/app/heroes/shared/hero-button/hero-button.component.avoid.ts\" region=\"example\">\n/* avoid */\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: '[tohHeroButton]',\n  templateUrl: './hero-button.component.html'\n})\nexport class HeroButtonComponent {}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"br71hq8kj21fkq6a1sqjmuidy\">或者，HTML 可以包含 <code>avoid</code> 类，如下所示：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-example\n   class=\"avoid\"\n   header=\"docs-style-guide/src/app/not-great.component.ts\"\n   path=\"docs-style-guide/src/app/not-great.component.ts\"\n  region=\"not-great\"&gt;&lt;/code-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7grxbvd7wk8z6x7zf8p93so9y\">显式应用类 <code>avoid</code> 会导致红色标题和红色边框的相同结果：</p>\n<code-example header=\"docs-style-guide/src/app/not-great.component.ts\" path=\"docs-style-guide/src/app/not-great.component.ts\" region=\"not-great\" class=\"avoid\">\nexport class NotGreatComponent {\n\n  buggyFunction() {\n    // things could be better here...\n  }\n}\n\n</code-example>\n<p><a id=\"code-tabs\"></a></p>\n<h3 id=\"code-tabs\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ga5ych2colt3kch3bmoo5gru\">代码选项卡<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#code-tabs\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c90zt4lell7gngyfvsrvun603\">代码选项卡显示代码的方式与 <code>code-examples</code> 非常相似，并且具有在选项卡式界面中显示多个代码示例的额外优势。每个选项卡都使用 <code>code-pane</code> 显示代码。</p>\n<h4 id=\"code-tabs-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"24y7xc9zl7q8vvxhv72jk9vs1\"><code>code-tabs</code> 属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#code-tabs-attributes\"><i class=\"material-icons\">link</i></a></h4>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"55tevltaz2z0k5ks1urj0u0cq\"><code>linenums</code>：值可以是 <code>true</code> 、 <code>false</code> 或表示起始行号的数字。默认值为 <code>false</code>。</li>\n</ul>\n<h4 id=\"code-pane-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ccfctdevxnv4787ea1ewddgcj\"><code>code-pane</code> 属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#code-pane-attributes\"><i class=\"material-icons\">link</i></a></h4>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2e7a5u3w81azvyldqrbf228ud\">属性</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>path</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"13ln3gycs51n5enawtpyxmn9w\"><code>content/examples</code>文件夹中的文件</td>\n</tr>\n<tr>\n<td align=\"left\"><code>header</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"10b9ajck9bgfv7smcjbuzcc02\">选项卡头部显示的内容</td>\n</tr>\n<tr>\n<td align=\"left\"><code>linenums</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fwhhe98drkimmc47vwni6u9u\">覆盖\n<code>code-tabs</code>级别的\n<code>linenums</code>属性，针对特定窗格。值可以是\n<code>true</code>、\n<code>false</code>或指示起始行号的数字。默认值为\n<code>false</code></td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bysc9c5j3o4z7xmvw48j6q39d\">以下示例显示多个代码选项卡，每个都有自己的标头。它演示了在 <code>&lt;code-tabs&gt;</code> 和 <code>&lt;code-pane&gt;</code> 中显示行号。</p>\n<code-tabs linenums=\"true\">\n\n  <code-pane header=\"app.component.html\" path=\"docs-style-guide/src/app/app.component.html\">\n&lt;h1&gt;{{title}}&lt;/h1&gt;\n&lt;h2&gt;My Heroes&lt;/h2&gt;\n&lt;ul class=\"heroes\"&gt;\n  &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes\"&gt;\n    &lt;button [class.selected]=\"hero === selectedHero\" type=\"button\" (click)=\"onSelect(hero)\"&gt;\n      &lt;span class=\"badge\"&gt;{{hero.id}}&lt;/span&gt;\n      &lt;span class=\"name\"&gt;{{hero.name}}&lt;/span&gt;\n    &lt;/button&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"selectedHero\"&gt;\n  &lt;h2&gt;{{selectedHero.name}} details!&lt;/h2&gt;\n  &lt;div&gt;id: {{selectedHero.id}}&lt;/div&gt;\n  &lt;div&gt;\n    &lt;label for=\"name\"&gt;\n      name: &lt;input id=\"name\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"selectedHero.name\" placeholder=\"name\"/&gt;\n    &lt;/label&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n\n</code-pane>\n  <code-pane header=\"app.component.ts\" path=\"docs-style-guide/src/app/app.component.ts\" linenums=\"false\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { Hero, HEROES } from './hero';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Authors Style Guide Sample';\n  heroes = HEROES;\n  selectedHero!: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n}\n\n\n</code-pane>\n  <code-pane header=\"app.component.css (heroes)\" path=\"docs-style-guide/src/app/app.component.css\" region=\"heroes\">\n.heroes {\n  margin: 0 0 2em 0;\n  list-style-type: none;\n  padding: 0;\n  width: 15em;\n}\n\n</code-pane>\n    <code-pane header=\"hero-search/hero-search.component.html\" path=\"toh-pt6/src/app/hero-search/hero-search.component.html\">\n&lt;div id=\"search-component\"&gt;\n  &lt;label for=\"search-box\"&gt;Hero Search&lt;/label&gt;\n  &lt;input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" /&gt;\n\n  &lt;ul class=\"search-result\"&gt;\n    &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let hero of heroes$ | <a href=\"api/platform-browser/animations/async\" class=\"code-anchor\">async</a>\" &gt;\n      &lt;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"/detail/{{hero.id}}\"&gt;\n        {{hero.name}}\n      &lt;/a&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n\n\n</code-pane>\n\n</code-tabs>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8a2eysc4r3n6qpu74hzz0y5xp\"><code>&lt;code-tabs&gt;</code> 上设置为 <code>true</code> 的 <code>linenums</code> 属性显式启用所有窗格的编号。但是，第二个 <code>&lt;code-pane&gt;</code> 中设置为 <code>false</code> 的 <code>linenums</code> 属性只会为自己禁用行号。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-tabs linenums=\"true\"&gt;\n  &lt;code-pane\n    header=\"app.component.html\"\n    path=\"docs-style-guide/src/app/app.component.html\"&gt;\n  &lt;/code-pane&gt;\n  &lt;code-pane\n    header=\"app.component.ts\"\n    path=\"docs-style-guide/src/app/app.component.ts\"\n    linenums=\"false\"&gt;\n  &lt;/code-pane&gt;\n  &lt;code-pane\n    header=\"app.component.css (heroes)\"\n    path=\"docs-style-guide/src/app/app.component.css\"\n    region=\"heroes\"&gt;\n  &lt;/code-pane&gt;\n  &lt;code-pane\n    header=\"package.json (scripts)\"\n    path=\"docs-style-guide/package.1.json\"&gt;\n  &lt;/code-pane&gt;\n&lt;/code-tabs&gt;\n\n</code-example>\n<p><a id=\"source-code-markup\"></a></p>\n<h2 id=\"preparing-source-code-for-code-snippets\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"63eck259hht7v0dk9hm2qklow\">为代码片段准备源代码<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#preparing-source-code-for-code-snippets\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvy1cbg4dsicecr3xyxk5143u\">要显示 <code>&lt;code-example&gt;</code> 和 <code>&lt;code-tabs&gt;</code> 代码段，请将代码段标记添加到示例源代码文件。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"59xl321u554qrfrb18xp6f9ik\">本页面的示例源代码位于 <code>content/examples/docs-style-guide</code> 中，包含本节中描述的每个代码段标记的示例。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"epi7kuiieuj3xw58n6quu9c8v\">代码段标记始终采用注释的形式。TypeScript 或 JavaScript 文件的默认 <code>#docregion</code> 标记如下：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n// #docregion\n… some TypeScript or JavaScript code …\n// #enddocregion\n\n</code-example>\n<code-example format=\"html\" language=\"html\">\n\n&lt;!-- #docregion --&gt;\n… some HTML …\n&lt;!-- #enddocregion --&gt;\n\n</code-example>\n<code-example format=\"css\" language=\"css\">\n\n/* #docregion */\n… some CSS …\n/* #enddocregion */\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4n05efcfmadbqk0rnxmm48apy\">文档生成过程会先删除这些注释，然后在文档查看器 StackBlitz 和示例代码下载中显示它们。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ayim6svix3s0g22rkuos0gkyp\">由于 JSON 不允许注释，因此代码段标记在 JSON 文件中不起作用。有关更多信息，参阅有关<a href=\"guide/docs-style-guide#json-files\">JSON 文件</a>的部分。</p>\n</div>\n<h3 id=\"docregion\"><code>#docregion</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#docregion\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zwvi7w7v30hunlwqm8vsv42l\">在源文件中使用 <code>#docregion</code> 来标记要在 <code>&lt;code-example&gt;</code> 或 <code>&lt;code-tabs&gt;</code> 组件中使用的代码。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e647hr75gbka11j0sjx3zn7bs\"><code>#docregion</code> 注释开始一个代码片段区域。该注释之后的每一行代码都属于该区域，直到代码片段处理器遇到文件结尾或关闭 <code>#enddocregion</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4dnk8pnxjsflexokp1xdkhjt\">以下 <code>src/main.ts</code> 是文件顶部带有单个 <code>#docregion</code> 的文件示例。</p>\n<code-example header=\"src/main.ts\" path=\"docs-style-guide/src/main.ts\">\nimport { <a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a> } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n<a href=\"api/platform-browser-dynamic/platformBrowserDynamic\" class=\"code-anchor\">platformBrowserDynamic</a>().bootstrapModule(AppModule)\n  .catch(err =&gt; console.error(err));\n\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3n8hmqesmhgod2dobnshk2bbt\">因此，整个文件都在 <code>&lt;code-example&gt;</code> 中。</p>\n<h3 id=\"naming-a-docregion\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"91k2o2hwvd8wyxngeg9782qv2\">命名 <code>#docregion</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#naming-a-docregion\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9lfl1711i9z2oj72kg1epkih9\">要显示同一个文件中来自不同片段的多个片段，请为每个片段指定其自己的 <code>#docregion</code> 名称，如下所示，其中 <code>your-region-name</code> 是一个带有连字符的小写字符串：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n// #docregion your-region-name\n… some code …\n// #enddocregion your-region-name\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqusbajkplxary1n97c3el7w9\">在 <code>&lt;code-example&gt;</code> 或 <code>&lt;code-pane&gt;</code> 的 <code>region</code> 属性中按名称引用此区域，如下所示：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-example\n  path=\"your-example-app/src/app/your-file.ts\"\n  region=\"your-region-name\"&gt;&lt;/code-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9d91mpbs88uqpw3diazc3jyw\">因为没有名称的 <code>#docregion</code> 是默认区域，所以你在引用默认 <code>#docregion</code> 时无需设置 <code>region</code> 属性。</p>\n<h3 id=\"nesting-a-docregion\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2njtrkc9ffqwntx7747e9lw5\">嵌套 <code>#docregion</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#nesting-a-docregion\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7k760028xtkkv9pn07d5sqrs2\">将 <code>#docregion</code> 放在另一个 <code>#docregion</code> 中，如以下示例所示，具有嵌套的 <code>inner-region</code>：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n// #docregion\n… some code …\n// #docregion inner-region\n… more code …\n// #enddocregion inner-region\n… yet more code …\n/// #enddocregion\n\n</code-example>\n<h3 id=\"combining-code-fragments\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9gt7x64hcxnplbjzo8k8xbit\">组合代码片段<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#combining-code-fragments\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8b74lkujsxb1tmvkb640vhetv\">通过定义具有相同区域名称的多个 <code>#docregion</code> 部分，将同一个文件中的多个片段合并到一个代码段中。以下示例定义了两个嵌套的 <code>#docregion</code> 部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qd3yz83hln0gdainqm6ifb6q\">内部区域 <code>class-skeleton</code> 出现两次——一次是为了捕获打开类定义的代码，第二次是为了捕获关闭类定义的代码。</p>\n<code-example format=\"typescript\" header=\"src/app/app.component.ts\" language=\"typescript\">\n\n// #docplaster\n…\n// #docregion class, class-skeleton\nexport class AppComponent {\n// #enddocregion class-skeleton\n  title = 'Authors Style Guide Sample';\n  heroes = HEROES;\n  selectedHero: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n// #docregion class-skeleton\n}\n// #enddocregion class, class-skeleton\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7tteoedjvme8x561fiy4hxl09\"><code>#docplaster</code> 标记告诉处理器要使用什么文本字符串（即“plaster”）将每个片段连接为单个片段。将“石膏”文本放在同一行。比如，<code>#docplaster ---</code> 将使用 <code>---</code> 作为“plaster”文本。对于前一个文件，“plaster”文本是空的，因此每个片段之间将没有任何内容。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2uuaz9kyo1z345ey5mpa9c7cj\">如果没有 <code>#docplaster</code>，处理器会在片段之间插入默认的 plaster（省略号注释）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7k71j6anjtm78eka98525qeqm\">这是两个对应的代码片段，用于并排比较。</p>\n<code-tabs>\n    <code-pane header=\"app.component.ts (class #docregion)\" path=\"docs-style-guide/src/app/app.component.ts\" region=\"class\">\nexport class AppComponent {\n  title = 'Authors Style Guide Sample';\n  heroes = HEROES;\n  selectedHero!: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n}\n\n</code-pane>\n    <code-pane header=\"app.component.ts (class-skeleton #docregion)\" path=\"docs-style-guide/src/app/app.component.ts\" region=\"class-skeleton\">\nexport class AppComponent {\n}\n\n</code-pane>\n</code-tabs>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"90vc61y9dqn2pu16e6wkhkllq\">上面的示例还演示了一个 <code>#docregion</code> 或 <code>#enddocregion</code> 注释可以指定两个区域名称，这是一种在同一代码行上启动或停止多个区域的便捷方式。或者，你可以将这些注释放在单独的行中，如下例所示：</p>\n<code-example header=\"src/app/app.component.ts\">\n\n// #docplaster\n…\n// #docregion class\n// #docregion class-skeleton\nexport class AppComponent {\n// #enddocregion class-skeleton\n  title = 'Authors Style Guide Sample';\n  heroes = HEROES;\n  selectedHero: Hero;\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n  }\n// #docregion class-skeleton\n}\n// #enddocregion class\n// #enddocregion class-skeleton\n\n</code-example>\n<h3 id=\"json-files\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"x862ayqhjjq5tldnrot3gmug\">JSON 文件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#json-files\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"924c2bwqw73kfuyrbp8ffat3\"><code>&lt;code-example&gt;</code> 组件无法显示 JSON 文件的某些部分，因为 JSON 禁止注释。但是，你可以通过在 <code>&lt;code-example&gt;</code> <code>src</code> 属性中引用整个 JSON 文件来显示它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66wd2fz4ncarv8qrn835eofvo\">对于大型 JSON 文件，你可以将感兴趣的节点复制到 Markdown 反引号中，但由于这种方式很容易错误地创建无效的 JSON，请考虑使用要显示的片段创建 JSON 部分文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41zsjtuyyblbwxr2h0cvunzoi\">你不能测试部分文件，也不能在应用程序中使用它，但至少你的编辑器可以确认它在语法上是正确的。你还可以将部分文件存储在原始文件旁边，因此作者更有可能记住使两者保持同步。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1q3lgfm7xxsuw8mjym2uvpxhq\">这是一个示例，它将 package.json 中的某些脚本摘录到名为 <code>package.json</code> 的部分文件中 <code>package.1.json</code></p>\n<code-example header=\"package.json (selected scripts)\" path=\"docs-style-guide/package.1.json\">\n{\n  \"scripts\": {\n    \"start\": \"concurrently \\\"npm run build:watch\\\" \\\"npm run serve\\\"\",\n    \"test\": \"concurrently \\\"npm run build:watch\\\" \\\"karma start karma.conf.js\\\"\",\n    \"lint\": \"tslint ./src/**/*.ts -t verbose\"\n  }\n}\n\n\n</code-example>\n<code-example format=\"html\" language=\"html\">\n\n&lt;code-example header=\"package.json (selected scripts)\" path=\"docs-style-guide/package.1.json\"&gt;&lt;/code-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8ng6mi34sheddjq8btwip9mmb\">在某些情况下，最好使用完整文件名，而不是部分文件名。在这种情况下，完整文件是 <code>package.json</code>，部分文件是 <code>package.1.json</code>。由于重点通常在完整文件上，而不是部分文件上，因此使用阅读器编辑的文件名，在此示例中是 <code>package.json</code>，可以阐明要在哪个文件中工作。</p>\n<h3 id=\"partial-file-naming\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bq7f1cy4ckva0xnxchnsq4b7l\">部分文件命名<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#partial-file-naming\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a56mb4pajcdgr9ohub0tj154h\">指南的分步性质需要重构，这意味着有些代码片段是通过指南演变的。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"akqp3la5f8il86x21mxnlpy3y\">使用部分文件来演示最终源代码的中间版本以及不会出现在最终应用程序中的代码片段。示例命名约定在文件扩展名之前添加一个数字，如下所示：</p>\n<code-example format=\"html\" language=\"html\">\n\npackage.1.json\napp.component.1.ts\napp.component.2.ts\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"679qa3k92bdk3froc91kn61km\">请记住通过在 <code>stackblitz.json</code> 中列出这些文件来从 StackBlitz 中排除它们，如下所示：</p>\n<code-example header=\"stackblitz.json\" path=\"docs-style-guide/stackblitz.json\">\n{\n  \"description\": \"Authors <a href=\"api/animations/style\" class=\"code-anchor\">style</a> guide\",\n  \"files\": [\n    \"!**/*.d.ts\",\n    \"!**/*.js\",\n    \"!**/*.[1,2,3].*\"\n  ],\n  \"tags\": [\"author\", \"<a href=\"api/animations/style\" class=\"code-anchor\">style</a> guide\"]\n}\n\n\n</code-example>\n<h3 id=\"source-code-styling\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7iem2wfboewzjnx3dvkxovv8c\">源代码样式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#source-code-styling\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2sojk9t6z1xn7dcv3p36zvagi\">源代码应尽可能遵循<a href=\"guide/styleguide\">Angular 的风格指南</a>。</p>\n<h4 id=\"hexadecimals\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"52ls6zm25ci60x8644kxnc45m\">十六进制<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#hexadecimals\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3h5b4ctlsku5y1ke3yhsi6b3n\">十六进制应尽可能使用速记，并且仅使用小写字母。</p>\n<p><a id=\"live-examples\"></a></p>\n<h2 id=\"live-examples\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38sz8rvb9vqvrt86ky5j4m3ps\">实时示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#live-examples\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ehvk6q96wvbroml69wudo7di1\">将 <code>&lt;live-example&gt;&lt;/live-example&gt;</code> 添加到页面会生成两个默认链接：<live-example></live-example>.</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"729xzw0ifgkbkly6it9g93j3r\">第一个是指向 StackBlitz 示例的链接，这是默认的 <code>stackblitz.json</code> 文件定义的。你可以在 <code>content/examples/example-app</code> 目录中找到 <code>stackblitz.json</code> 文件，其中 <code>example-app</code> 是你用于本指南的示例应用程序文件夹。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41a2phgu3ps7lsu994cqrfhqc\">默认情况下，文档生成器使用指南名称作为示例名称。因此，如果你正在使用 <code>router.md</code>，并在文档中使用 <code>&lt;live-example&gt;&lt;/live-example&gt;</code>，文档生成器会查找 <code>content/examples/router</code>。单击此链接会在新的浏览器选项卡中打开 StackBlitz 上的代码示例。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"38d1v1ai6avg0w7qty6znolhv\">第二个链接下载示例应用程序。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ml2npqgc6j546c91x8x2lsn6\">通过代码示例文件夹根目录中的一个或多个 <code>stackblitz.json</code> 文件定义实时示例。每个示例文件夹通常都有一个未命名的定义文件，默认 <code>stackblitz.json</code>。</p>\n<h3 id=\"live-example-for-named-stackblitz\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8xx1czsgggpn211jio1nq5m7l\">名为 StackBlitz 的实时示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#live-example-for-named-stackblitz\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3eojmhxr3g4s0o5tvdqzxlmv\">你可以以 <code>name.stackblitz.json</code> 的形式创建其他命名定义文件。<a href=\"guide/testing\">测试</a>指南 ( <code>aio/content/guide/testing.md</code> ) 引用了一个名为 StackBlitz 的文件，如下所示：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;live-example stackblitz=\"specs\"&gt;Tests&lt;/live-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d63j2qz68lk4yoc3ql6a00ed5\"><code>specs</code> 的 <code>stackblitz</code> 属性值是指 <code>examples/testing/specs.stackblitz.json</code> 文件。如果你要 <code>stackblitz</code> 属性，则默认 <code>examples/testing/stackblitz.json</code>。</p>\n<h3 id=\"custom-label-and-tooltip\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22hq7hllwzp0zq7wviv5mi2pn\">自定义标签和工具提示<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#custom-label-and-tooltip\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1u3nu86tmp3jxi6vssbf6220c\">使用属性和类更改实时示例的外观和行为。以下示例通过设置 <code>title</code> 属性，为实时示例锚点提供自定义标签和工具提示：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;live-example title=\"Live Example with title\"&gt;&lt;/live-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<p><live-example title=\"Live Example with title\"></live-example></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amza98ptib9hlojzrsmw3tm97\">你可以通过将标签放在 <code>&lt;live-example&gt;</code> 标签之间来实现相同的效果：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;live-example&gt;Live example with content label&lt;/live-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<p><live-example>Live example with content label</live-example></p>\n<h3 id=\"live-example-from-another-guide\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9qv49y1svosxqxbaa0xynsi8z\">来自另一个指南的实时示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#live-example-from-another-guide\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c09f0ve7cmzdz8j10ch8bhmg2\">要链接到文件夹中名称与当前指南页面不同的示例，请将 <code>name</code> 属性设置为该文件夹的名称。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9j09q24as54pexjkj6mke37y1\">比如，要在本风格指南中包含<a href=\"guide/router\">Router</a>指南示例，请将 <code>name</code> 属性设置为 <code>router</code>，即该示例所在的文件夹的名称。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;live-example name=\"router\"&gt;Live example from the <a href=\"api/router/Router\" class=\"code-anchor\">Router</a> guide&lt;/live-example&gt;\n\n</code-example>\n<p><live-example name=\"router\">Live example from the Router guide</live-example></p>\n<h3 id=\"live-example-without-download\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ekby63bn6mvngn1p4vtj1mj4e\">无需下载的实时示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#live-example-without-download\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9hb1r8b4vcd7lonz1t4l7z8jg\">要省略下载链接，请添加 <code>noDownload</code> 属性。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;live-example noDownload&gt;Just the StackBlitz&lt;/live-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<p><live-example nodownload=\"\">Just the StackBlitz</live-example></p>\n<h3 id=\"live-example-with-download-only\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9db0ci17tpvk888akupnna4dv\">仅下载的实时示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#live-example-with-download-only\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9b3xsn40iheemb8tnrt0wou1h\">要省略实时 StackBlitz 链接并仅链接到下载，请添加 <code>downloadOnly</code> 属性。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;live-example downloadOnly&gt;Download only&lt;/live-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<p><live-example downloadonly=\"\">Download only</live-example></p>\n<h3 id=\"embedded-live-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a6oz0070h66chsdr3thvzyll2\">嵌入式实时示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#embedded-live-example\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"34ch8wcgl5yuty3yupp515gwy\">默认情况下，实时示例链接会在单独的浏览器选项卡中打开 StackBlitz 示例。你可以通过添加 <code>embedded</code> 属性来将 StackBlitz 示例嵌入在指南页面中。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"71rk02ipegg90mrkuq9oei6jj\">出于性能原因，StackBlitz 不会立即启动。相反，<code>&lt;live-example&gt;</code> 组件会渲染图像。单击图像会开始在 <code>&lt;iframe&gt;</code> 中启动嵌入式 StackBlitz 的过程。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"868o4ggs6z7tvte16vvqqy187\">以下是本指南的嵌入式 <code>&lt;live-example&gt;</code>：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;live-example embedded&gt;&lt;/live-example&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ouvrpbacd3ujefs8dw3np22\">浏览器会渲染以下 <code>&lt;iframe&gt;</code> 和带有下载示例的链接的 <code>&lt;p&gt;</code>：</p>\n<p><live-example embedded=\"\"></live-example></p>\n<p><a id=\"anchors\"></a></p>\n<h2 id=\"anchors\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ne8302iaukwxibp0jsijxnwa\">锚<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#anchors\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9datup70hpdrk64sbtz1rq1pv\">每个节标题也是一个锚点。另一个指南页面可以添加到此“Anchors”部分的链接，其内容如下：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"alert is-helpful\"&gt;\n\nSee the [\"Anchors\"](guide/docs-style-guide#anchors \"Style Guide —Anchors\") section for details.\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"877l11jdbpr6sh0rrffo70wwd\">有关详细信息，参阅<a href=\"guide/docs-style-guide#anchors\" title=\"风格指南——锚\">“锚”</a>部分。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aewasczaort18bdjl9nxb4egp\">请注意，上面的示例包含一个标题“Style Guide —Anchors”。使用锚点上的标题来创建工具提示并改进 UX。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41i1vqd81646c2y84itde7qow\">在页面中导航时，你可以在指定<a href=\"guide/docs-style-guide#anchors\" title=\"锚\">向上滚动</a>到本节开头的链接时省略页面 URL，如下所示：</p>\n<code-example format=\"html\" language=\"html\">\n\n… the link that [scrolls up](#anchors \"Anchors\") to …\n\n</code-example>\n<p><a id=\"section-anchors\"></a></p>\n<h3 id=\"section-header-anchors\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8h6d53fvl6htxky9ikb1l20t8\">节标题锚点<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#section-header-anchors\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7dm8atbe7fjpwl93wr7ua3fij\">虽然文档生成器会根据标头的措辞自动为标头创建锚点，但标题是可以更改的，这可能会中断到该部分的任何链接。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8agy5pg7vdcy1xnzioffgvcgh\">为了减轻链接破损，请使用特殊的 <code>&lt;a id=\"name\"&gt;&lt;/a&gt;</code> 语法在其适用的标题或文本的正上方显式添加自定义锚点：</p>\n<code-example language=\"html\">\n\n<a id=\"section-anchors\"></a>\n\n#### Section header anchors\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8gbf0d2i15yt4wlywnbd3b9vk\">然后像这样引用该锚：</p>\n<code-example format=\"html\" language=\"html\">\n\nThis is a [link to that custom anchor name](#section-anchors).\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84tyymo0ad7hfy44vd8twqdqj\">这是<a href=\"guide/docs-style-guide#section-anchors\">到该自定义锚点名称的链接</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8y4gzuny0mpykb2uco6b1icn\">编辑文件时，请不要删除任何锚点。如果更改了文档结构，则可以在不中断链接的情况下移动同一个文档中的现有锚点。你还可以添加使用更适当文本的更多锚点。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jphwb189ck45fiujgdc5rb49\">作为替代方案，你可以用 HTML <code>&lt;a&gt;</code> 标签。使用 <code>&lt;a&gt;</code> 元素时，请设置 <code>id</code> 属性——而不是 <code>name</code> 属性，因为文档生成器不会将 <code>name</code> 转换为正确的链接 URL。比如：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;a id=\"anchors\"&gt;&lt;/a&gt;\n\n## Anchors\n\n</code-example>\n</div>\n<h2 id=\"alerts-and-callouts\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8c9m6avm3ugvls2ttf6w613sh\">警报和标注<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#alerts-and-callouts\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2wt3n9ftmswjsg406fsibqzvg\">警报和标注会显示警告、额外的详细信息或对相关主题的引用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eynpgub2im0wk45ulgo1ch84r\">警报或标注不应包含任何对于了解主要内容所必需的内容。操作指南或教程步骤应该在指南的主体而不是小节中。</p>\n<h3 id=\"alerts\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d80f01ts56pjy81n8l4aap53n\">警报<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#alerts\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a9ddk8gmbqrgu7akv90m5w9kd\">警报会引起人们对简短而重要的点的注意。对于多行内容，参阅<a href=\"guide/docs-style-guide#callouts\" title=\"标注\">标注</a>。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9u4vytbck31h7p0mav4t8k4jw\">有关更多信息，参阅<a href=\"guide/docs-style-guide#live-examples\" title=\"实时示例\">实时示例</a>部分。</p>\n</div>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9aeu1prr5fooneqeuk1xqachb\"><strong>注意</strong>：<br>\n开始和结束 <code>&lt;div&gt;</code> 标签后必须至少有一个空行。关闭 <code>&lt;/div&gt;</code> 之前的空行是常规的，但不是必需的。</p>\n</div>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"alert is-helpful\"&gt;\n\nSee the [live examples](guide/docs-style-guide#live-examples \"Live examples\") section for more information.\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6zkbrtl2rmlpcipc6cm0len9q\">根据内容的重要性，可以将警报的样式分为三个不同的级别。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b73jxe9xidvybge9pu5rkaab5\">使用以下 <code>alert</code> 类以及适当 <code>is-helpful</code> 、 <code>is-important</code> 或 <code>is-critical</code> CSS 类，如下所示：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"alert is-helpful\"&gt;\n\nA helpful, informational alert.\n\n&lt;/div&gt;\n\n</code-example>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"alert is-important\"&gt;\n\nAn important alert.\n\n&lt;/div&gt;\n\n</code-example>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"alert is-critical\"&gt;\n\nA critical alert.\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7yjstaslhvfjx6wt1na43q1wr\">一个有用的信息警报。</p>\n</div>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"amr3o246bqyq0uch18dskeapt\">一个重要的警报。</p>\n</div>\n<div class=\"alert is-critical\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7lix8951c8k37qb36qya9puyq\">严重警报。</p>\n</div>\n<h3 id=\"callouts\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ceci81g7gwvpk6vzbm9mfnwma\">标注<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#callouts\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4v8oxbhlyfthkk8oaml4xzvyj\">标注（比如警报）会突出显示要点。当你需要标头和多行内容时，使用标注。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dufun77qi0hgx34ni8ltk3kq9\">如果你有两个以上的段落，请考虑创建一个新页面或将其作为主要内容的一部分。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8vmszbut7cbldbnkoswgihc6o\">标注使用与警报相同的样式级别。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"45zc6qzh7eesp4szma06yhgqm\">将 CSS 类 <code>callout</code> 与适当 <code>is-helpful</code> 、 <code>is-important</code> 或 <code>is-critical</code> 类结合使用。以下示例使用 <code>is-helpful</code> 类：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"callout is-helpful\"&gt;\n\n&lt;header&gt;A helpful or informational point&lt;/header&gt;\n\n**A helpful note**.\nUse a helpful callout for information requiring explanation.\nCallouts are typically multi-line notes.\nThey can also contain code snippets.\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8vlb3l0xlu4jdvuznkwbb3a2o\">浏览器会渲染这三种样式，如下所示：</p>\n<div class=\"callout is-helpful\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6uaeri0k6ulqrm14f85lh6uk0\">有用的或信息性的点</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1r1btfk6qmhhe06qygaz1gdci\"><strong>一个有用的说明</strong>。对需要解释的信息使用有用的标注。标注通常是多行注释。它们还可以包含代码片段。</p>\n</div>\n<div class=\"callout is-important\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7mq471dmayym8lrqugydtfnwu\">一个重要的点</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4coij0hu9ulvwr5rmy4rhuc21\"><strong>一个重要说明</strong>。对需要解释的重要信息使用重要标注。标注通常是多行注释。它们还可以包含代码片段。</p>\n</div>\n<div class=\"callout is-critical\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2iscb4sty557cxmh5mx8a810c\">一个临界点</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1cbdjv5nxd7qf8kzqprqn7d1i\"><strong>一个批判性的说明</strong>。对需要解释的令人信服的信息使用关键标注。标注通常是多行注释。它们还可以包含代码片段。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"zxw4hfe2cr1kr6fy84el7zm4\">使用标注时，请考虑以下几点：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckf1b8m8ke3b85sdydjb77y1s\">标注标题文本样式是大写</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2w949ng39kntagzyh1p8e9f5b\">标头不会在目录中渲染</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9aybmkx2ds1h1nhsijg5pza5b\">你可以在 Markdown 中编写标注正文</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cqr9543174jyxpssgjjhp4cjl\">空行将 <code>&lt;header&gt;</code> 标签与 Markdown 内容分开</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11zly589jcjuytyut5tsrq8nn\">避免使用 <code>&lt;h2&gt;</code> 、 <code>&lt;h3&gt;</code> 、 <code>&lt;h4&gt;</code> 、 <code>&lt;h5&gt;</code> 或 <code>&lt;h6&gt;</code>，因为标注的 CSS 是 <code>&lt;header&gt;</code> 元素的样式</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajtwspmwmo97unkbicq405cg3\">谨慎使用标注来吸引用户的注意力。</p>\n<h2 id=\"trees\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zy4drlj4auxm43xh5hxsmw7a\">树木<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#trees\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7w3572coirof4azxe5mez1bap\">使用树来表示分层数据，比如目录结构。</p>\n<div class=\"filetree\">\n  <div class=\"file\">\n    sample-dir\n  </div>\n  <div class=\"children\">\n    <div class=\"file\">\n      src\n    </div>\n    <div class=\"children\">\n      <div class=\"file\">\n        app\n      </div>\n      <div class=\"children\">\n        <div class=\"file\">\n          app.component.ts\n        </div>\n        <div class=\"file\">\n          app.module.ts\n        </div>\n      </div>\n      <div class=\"file\">\n        styles.css\n      </div>\n      <div class=\"file\">\n        tsconfig.json\n      </div>\n    </div>\n    <div class=\"file\">\n      node_modules …\n    </div>\n    <div class=\"file\">\n      package.json\n    </div>\n  </div>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6l1ufbx9xyn0w1xs4qik0fdc1\">这是此文件树的标记。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"filetree\"&gt;\n    &lt;div class=\"file\"&gt;\n        sample-dir\n    &lt;/div&gt;\n    &lt;div class=\"children\"&gt;\n        &lt;div class=\"file\"&gt;\n          src\n        &lt;/div&gt;\n        &lt;div class=\"children\"&gt;\n            &lt;div class=\"file\"&gt;\n              app\n            &lt;/div&gt;\n            &lt;div class=\"children\"&gt;\n                &lt;div class=\"file\"&gt;\n                  app.component.ts\n                &lt;/div&gt;\n                &lt;div class=\"file\"&gt;\n                  app.module.ts\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=\"file\"&gt;\n              styles.css\n            &lt;/div&gt;\n            &lt;div class=\"file\"&gt;\n              tsconfig.json\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"file\"&gt;\n          node_modules …\n        &lt;/div&gt;\n        &lt;div class=\"file\"&gt;\n          package.json\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n</code-example>\n<h2 id=\"images\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f5heaxfpm0nc5np989d1lbgif\">镜像<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#images\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"wv5ehnb51tyvr522am9pufao\">将图像存储在 <code>content/images/guide</code> 目录中与指南页面<strong>同名</strong>的文件夹中。因为 Angular 文档的生成会将这些镜像复制到 <code>generated/images/guide/your-guide-directory</code>，因此将镜像 <code>src</code> 属性设置为 Generated <code>generated/images/guide/your-guide-directory</code> 的运行时位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a93bc01ulf538twd2pgbmt5a1\">比如，本“Angular 文档风格指南”的图像在 <code>content/images/guide/docs-style-guide</code> 文件夹中，但 <code>src</code> 属性指定了 <code>generated</code> 的位置。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"jc8hs1c516whkc4qmy4n684o\">以下是属于本指南的“flying hero”图像的 <code>src</code> 属性：</p>\n<code-example format=\"html\" language=\"html\">\n\nsrc=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n\n</code-example>\n<div class=\"callout is-important\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cm6ubuygh8hhr144jld7yb1r9\">使用 HTML<code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code>标签</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e8r3qnncbcc01wl4888gygbsg\">使用 <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> 标签指定图像。<strong>不要使用 Markdown 图像语法 <code>![... ](... )</code>。</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cukkx27zbhojnh4umwxrb1aqx\">对于无障碍性，请始终使用对图像进行有意义的描述来设置 <code>alt</code> 属性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1jrl3qm41i0b64xut3nwboh6r\">将 <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> 标签嵌套在 <code>&lt;div class=\"lightbox\"&gt;</code> 标签中，该标签会根据文档标准来设置图像的样式。</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"lightbox\"&gt;\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> alt=\"flying hero\" src=\"generated/images/guide/docs-style-guide/flying-hero.png\"&gt;\n\n&lt;/div&gt;\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3b64udzz9pndutmgvf7iqycda\"><strong>注意</strong>：<br>\nHTML <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> 元素没有关闭标签。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<div class=\"lightbox\">\n<img alt=\"flying hero\" src=\"generated/images/guide/docs-style-guide/flying-hero.png\" width=\"3125\" height=\"2374\">\n</div>\n</div>\n<h3 id=\"image-captions-and-figure-captions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cky7tu93n0a3ieazv2txya9d3\">图片说明和图形说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#image-captions-and-figure-captions\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"611khhotacd940unapjtcxs7d\">标题显示在图像下方，作为图像的简明而全面的摘要。除非你使用编号的图形，比如图 1、图 2 等，否则标题是可选的。如果你在页面中使用编号的图形，请按照 Google 开发者文档风格指南中的<a href=\"https://developers.google.com/style/images#figure-captions\">图形标题</a>中的指南进行操作。</p>\n<h3 id=\"image-dimensions\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2kn806gh9f9g956g4730itr6k\">图像尺寸<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#image-dimensions\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bu72n08o5lpxcmusl2dev02ni\">文档生成器从图像文件中读取图像尺寸，并自动将 <code>width</code> 和 <code>height</code> 属性添加到 <code>&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a>&gt;</code> 标签。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dmly9bgc05zweqslxunj8oooi\">要控制图像的大小，请提供你自己的 <code>width</code> 和 <code>height</code> 属性。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e9qrcpof25l6lr5eym2jcs38u\">这是宽度为 200px 的“飞行英雄”标记：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"lightbox\"&gt;\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> alt=\"flying Angular hero\"\n     src=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n     width=\"200\"&gt;\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<div class=\"lightbox\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4amw2iylfx89wyk30zt6deqtg\"><img alt=\"flying Angular hero\" src=\"generated/images/guide/docs-style-guide/flying-hero.png\" width=\"200\"></p>\n</div>\n<h3 id=\"wide-images\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bt6dqk89fefmpcs5dfxpbj75r\">宽幅图像<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#wide-images\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3pm6a934h4vc8nqgzw8eor3qf\">为防止图像溢出其视口，<strong>请使用低于 700px 的图像宽度</strong>。要显示更大的图像，请提供指向实际图像的链接，用户可以单击该链接以单独查看完整大小的图像，比如“Ahead-of-time Compilation”指南中的 <code>source-map-explorer</code> 输出的示例：</p>\n<a href=\"generated/images/guide/docs-style-guide/toh-pt6-bundle.png\" title=\"Click to view larger image\">\n<div class=\"lightbox\">\n<img alt=\"toh-pt6-bundle\" src=\"generated/images/guide/docs-style-guide/toh-pt6-bundle-700w.png\" width=\"300px\">\n</div>\n</a>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cioe0uxs2vwihi0cp770s5xu4\">以下是用于创建图像链接的 HTML：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;a href=\"generated/images/guide/docs-style-guide/toh-pt6-bundle.png\" title=\"Click to view larger image\"&gt;\n\n&lt;div class=\"lightbox\"&gt;\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> alt=\"toh-pt6-bundle\" src=\"generated/images/guide/docs-style-guide/toh-pt6-bundle-700w.png\" width=\"300px\"&gt;\n\n&lt;/div&gt;\n\n&lt;/a&gt;\n\n</code-example>\n<h3 id=\"image-compression\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dheulgege5oo4wfj1b8e7ufjs\">图像压缩<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#image-compression\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1fqqy0hwv531roi58bdgtu5yv\">为了更快的加载时间，请始终压缩图像。考虑使用图像压缩网站，比如<a href=\"https://tinypng.com/\" title=\"tinypng\">tinypng</a>。</p>\n<h3 id=\"floated-images\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74c6jwa4gsyvaote786tphpzm\">浮动图像<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#floated-images\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3dxgux7j0uw9za0qpoxhs9hc\">你可以通过分别应用 <code>class=\"left\"</code> 或 <code>class=\"right\"</code> 属性来将图像浮动到文本的左侧或右侧。比如：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> alt=\"flying Angular hero\"\n     class=\"left\"\n     src=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n     width=\"200\"&gt;\n\nThis text wraps around to the right of the floating \"flying hero\" image.\n\nHeadings and code-examples automatically clear a floated image.\nIf you need to force a piece of text to clear a floating image, add `&lt;br class=\"clear\"&gt;` where the text should break.\n\n&lt;br class=\"clear\"&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9ifs8pqwvl4ljy2jd5gk7n31e\"><img alt=\"flying Angular hero\" class=\"left\" src=\"generated/images/guide/docs-style-guide/flying-hero.png\" width=\"200\"></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ao4ik9ah3ykw9d9a3qwk98a5g\">此文本会在浮动的“飞行英雄”图像的右侧环绕。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d4lx1kcacwltzk0ba5m1pus60\">标题和 <code>&lt;code-example&gt;</code> 组件会自动清除浮动图像。要显式清除浮动图像，请在文本应该中断的位置添加 <code>&lt;br class=\"clear\"&gt;</code>。</p>\n<br class=\"clear\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cj33v7gfvhmfb1vb24q9pc83a\">一般来说，你不会将浮动图像包装在 <code>&lt;figure&gt;</code> 元素中。</p>\n<h3 id=\"floats-within-a-subsection\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xr13pqsnig6wvumun2f2i38o\">在小节内浮动<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#floats-within-a-subsection\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bm1sxx50ugkvshd386h4mmy8\">如果你在警报、标注或小节中有浮动图像，请将 <code>clear-fix</code> 类应用于 <code>&lt;div&gt;</code>，以确保图像不会溢出其容器。比如：</p>\n<code-example format=\"html\" language=\"html\">\n\n&lt;div class=\"alert is-helpful clear-fix\"&gt;\n\n&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> alt=\"flying Angular hero\"\n     src=\"generated/images/guide/docs-style-guide/flying-hero.png\"\n     class=\"right\"\n     width=\"100\"&gt;\n\nA subsection with **Markdown** formatted text.\n\n&lt;/div&gt;\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"66xakpji6yjlvgekevh12uobr\">浏览器会渲染以下内容：</p>\n<div class=\"alert is-helpful clear-fix\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vyrkgm2w0qdkx2v284x7dfku\"><img alt=\"flying Angular hero\" class=\"right\" src=\"generated/images/guide/docs-style-guide/flying-hero.png\" width=\"100\"></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5afrcaaq1xwtd5ighc0t1clwe\">带有<strong>Markdown</strong>格式文本的小节。</p>\n</div>\n<h2 id=\"help-with-documentation-style\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"62wpkghtvhp8eifn4t8vcjjin\">文档风格的帮助<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/docs-style-guide#help-with-documentation-style\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5w0biyr0ms5lwveu8y1q8f147\">有关特定语言和语法的用法、单词列表、风格、语气和格式建议，参阅<a href=\"https://developers.google.com/style\">Google 开发者文档风格指南</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3c28aoud07qj7r42h3m7ba4uo\">如果你有任何本风格指南无法解答的问题，或者你想讨论文档风格，请访问<a href=\"https://github.com/angular/angular\">Angular</a>存储库并<a href=\"https://github.com/angular/angular/issues/new/choose\">提交文档问题</a>。</p>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n<p>@reviewed 2022-02-28</p>\n\n  \n</div>\n\n\n<!-- links to this doc:\n - guide/contributors-guide-overview\n - guide/example-apps-list\n-->\n<!-- links from this doc:\n - api\n - api/animations/style\n - api/common/NgFor\n - api/common/NgIf\n - api/common/NgOptimizedImage\n - api/core/Component\n - api/core/NgModule\n - api/forms/FormsModule\n - api/forms/NgModel\n - api/platform-browser-dynamic/platformBrowserDynamic\n - api/platform-browser/BrowserModule\n - api/platform-browser/animations/async\n - api/router/Router\n - api/router/RouterLink\n - cli\n - docs\n - generated/images/guide/docs-style-guide/toh-pt6-bundle.png\n - guide/dependency-injection\n - guide/docs-style-guide#additional-section-headings\n - guide/docs-style-guide#alerts\n - guide/docs-style-guide#alerts-and-callouts\n - guide/docs-style-guide#anchors\n - guide/docs-style-guide#angular-documentation-style-guide\n - guide/docs-style-guide#auto-linking-in-code-snippets\n - guide/docs-style-guide#callouts\n - guide/docs-style-guide#code-example\n - guide/docs-style-guide#code-pane-attributes\n - guide/docs-style-guide#code-snippet-options\n - guide/docs-style-guide#code-snippets\n - guide/docs-style-guide#code-tabs\n - guide/docs-style-guide#code-tabs-attributes\n - guide/docs-style-guide#combining-code-fragments\n - guide/docs-style-guide#compilable-example-apps\n - guide/docs-style-guide#custom-label-and-tooltip\n - guide/docs-style-guide#display-whole-file\n - guide/docs-style-guide#displaying-an-entire-code-file\n - guide/docs-style-guide#displaying-bad-code\n - guide/docs-style-guide#displaying-part-of-a-code-file\n - guide/docs-style-guide#docregion\n - guide/docs-style-guide#embedded-live-example\n - guide/docs-style-guide#floated-images\n - guide/docs-style-guide#floats-within-a-subsection\n - guide/docs-style-guide#from-code-samples\n - guide/docs-style-guide#hard-coded-snippets\n - guide/docs-style-guide#help-with-documentation-style\n - guide/docs-style-guide#hexadecimals\n - guide/docs-style-guide#image-captions-and-figure-captions\n - guide/docs-style-guide#image-compression\n - guide/docs-style-guide#image-dimensions\n - guide/docs-style-guide#images\n - guide/docs-style-guide#json-files\n - guide/docs-style-guide#kinds-of-angular-documentation\n - guide/docs-style-guide#live-example-for-named-stackblitz\n - guide/docs-style-guide#live-example-from-another-guide\n - guide/docs-style-guide#live-example-with-download-only\n - guide/docs-style-guide#live-example-without-download\n - guide/docs-style-guide#live-examples\n - guide/docs-style-guide#main-section-heading\n - guide/docs-style-guide#markdown-and-html\n - guide/docs-style-guide#naming-a-docregion\n - guide/docs-style-guide#navigation\n - guide/docs-style-guide#nesting-a-docregion\n - guide/docs-style-guide#partial-file-naming\n - guide/docs-style-guide#preparing-source-code-for-code-snippets\n - guide/docs-style-guide#prerequisites\n - guide/docs-style-guide#region\n - guide/docs-style-guide#secondary-section-heading\n - guide/docs-style-guide#section-anchors\n - guide/docs-style-guide#section-header-anchors\n - guide/docs-style-guide#sections\n - guide/docs-style-guide#source-code-markup\n - guide/docs-style-guide#source-code-styling\n - guide/docs-style-guide#table-of-contents\n - guide/docs-style-guide#title\n - guide/docs-style-guide#trees\n - guide/docs-style-guide#when-to-use-code-font\n - guide/docs-style-guide#wide-images\n - guide/forms-overview\n - guide/router\n - guide/styleguide\n - guide/styleguide#style-05-03\n - guide/testing\n - guide/understanding-communicating-with-http\n - start\n - tutorial/tour-of-heroes\n - https://angular.io\n - https://daringfireball.net/projects/markdown/syntax\n - https://developers.google.com/style\n - https://developers.google.com/style/images#figure-captions\n - https://github.com/angular/angular\n - https://github.com/angular/angular/issues/new/choose\n - https://guides.github.com/activities/hello-world\n - https://guides.github.com/features/mastering-markdown\n - https://guides.github.com/introduction/git-handbook\n - https://tinypng.com/\n-->"}