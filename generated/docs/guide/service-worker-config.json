{"id":"guide/service-worker-config","title":"Service Worker 配置","contents":"<div class=\"content\">\n  <h1 id=\"service-worker-configuration\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dyzvipjjtbw1xl7d15hia25ag\">Service Worker 配置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#service-worker-configuration\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"brvz9kmci3y3tw56tvt4tblgt\">本主题介绍了 Service Worker 配置文件的属性。</p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3xq8keqzpcinu80uje7xu3rbf\">对下列知识有基本的了解：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"57ugl5aqhi1g8yqohh2nujvpi\"><a href=\"https://developer.chrome.com/docs/workbox/service-worker-overview/\">Service Worker 概览</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8h34vd4o8r9mh6u20crmuohp\"><a href=\"guide/service-worker-devops\">生产环境下的 Service Worker</a>。</li>\n</ul>\n<h2 id=\"modifying-the-configuration\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bdwbwer62q1ei7a2ofkfb8zm7\">修改配置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#modifying-the-configuration\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"u7pipm010yucfaxch3nw998b\"><code>ngsw-config.json</code> JSON配置文件指定 Angular 服务工作者应缓存哪些文件和数据URL以及如何更新缓存的文件和数据。 \n<a href=\"cli\">Angular CLI</a>在\n<code>ng build</code>期间处理此配置文件。</p>\n<!-- Does the following ngsw-config tool still work? Does not seem to. Not even clear what it does.\n\nManually, process it with the `ngsw-config` tool \\(where `<project-name>` is the name of the project being built\\):\n\n<code-example format=\"shell\" language=\"shell\">\n\n./node_modules/.bin/ngsw-config ./dist/&lt;project-name&gt; ./ngsw-config.json [/base/href]\n\n</code-example>\n\nThe configuration file uses the JSON format.\n-->\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bg866w5c8oe4ocjaaoykokkow\">所有文件路径必须以\n<code>/</code>开头，对应部署目录 — 通常在CLI项目中是\n<code>dist/项目名称</code>。</p>\n<p><a id=\"glob-patterns\"></a></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2k3dkkxcu3luxfmhqq3cvijx2\">除非另有注释，否则模式使用<strong>limited*</strong> glob 格式，该格式将在内部转换为正则表达式：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"alt6aj32ldjbetkr5jbabg7rc\">Glob格式</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>**</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1dnispiaaq0pypq9x3c2l7ii\">匹配0个或多个路径段</td>\n</tr>\n<tr>\n<td align=\"left\"><code>*</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c2mxmqvwni2gpobak4zsfu0wn\">匹配0个或多个排除\n<code>/</code>的字符</td>\n</tr>\n<tr>\n<td align=\"left\"><code>?</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bz569svq712q0nh7zb7751jvw\">匹配一个排除\n<code>/</code>的字符</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bg9g3mfubuirufc7g704u04he\"><code>!</code>前缀</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"vu1yd0pmuiprycl2ov5aql7y\">将模式标记为否定，意味着只包括不匹配该模式的文件</td>\n</tr>\n</tbody>\n</table>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2h7seu9v3502cmhxgah57y619\"><strong>*</strong>请注意，在内部 glob 到正则表达式的转换中，正则表达式中某些具有特殊含义的字符不会被转义，并且模式不会用 <code>^</code> / <code>$</code> 包装。</p>\n<ul>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8x7gs35pmhqe8o3s0zt9ti82w\"><code>$</code> 是正则表达式中的一个特殊字符，它与字符串的结尾匹配，在将 glob 模式转换为正则表达式时不会自动转义。如果你想从字面上匹配 <code>$</code> 字符，则必须自己对它进行转译（使用 <code>\\\\$</code>）。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2l37rdx1ybiigtiblhj8fm3fc\">例如，glob 模式 <code>/foo/bar/$value</code> 会导致出现无法匹配的表达式，因为字符串不可能在结尾后有任何字符。</p>\n</div>\n</li>\n<li>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cvovut3ywdkb55xrr9uvauh8v\">将模式转换为正则表达式时，不会自动用 <code>^</code> 和 <code>$</code> 包装。因此，这些模式将部分匹配请求 URL。如果你希望你的模式匹配 URL 的开头和/或结尾，可以自己添加 <code>^</code> / <code>$</code>。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1oc82hq1dwbf2z2kc3ppf8yip\">例如，glob 模式 <code>/foo/bar/*.js</code> 将匹配 <code>.js</code> 和 <code>.json</code> 文件。如果你想仅匹配 <code>.js</code> 文件，请使用 <code>/foo/bar/*.js$</code>。</p>\n</div>\n</li>\n</ul>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c7jrdcy64rnb4z051flnifjd8\">范例模式：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"eijnx6atc3wl8wls0uqhrhf29\">模式</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>/**/*.html</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"daqfmr18oxmiarbbzefg2oerw\">指定所有HTML文件</td>\n</tr>\n<tr>\n<td align=\"left\"><code>/*.html</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8zewcg54z7kr5yd87ra0cord7\">指定根目录中的HTML文件</td>\n</tr>\n<tr>\n<td align=\"left\"><code>!/**/*.map</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a59b38ayrfn60jev7z5yvznrl\">排除所有sourcemaps</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"service-worker-configuration-properties\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ausph8teu587vitfuc1gctlgh\">Service Worker 配置属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#service-worker-configuration-properties\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cpqg61f1a0sw7d6aqwusfefvs\">下面讲讲配置文件中的每个属性。</p>\n<h3 id=\"appdata\"><code>appData</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#appdata\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"al90f8i2x9d6so5u2ctc6uee6\">本节允许你传递用来描述这个特定应用版本的任何数据。<code><a href=\"api/service-worker/SwUpdate\" class=\"code-anchor\">SwUpdate</a></code> 服务会在更新通知中包含这些数据。许多应用会使用本节来提供 UI 弹窗时要显示的附加信息，以通知用户有可用的更新。</p>\n<p><a id=\"index-file\"></a></p>\n<h3 id=\"index\"><code>index</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#index\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5afthcei3ejn68vjw2zv8u3bk\">指定用来充当索引页的文件以满足导航请求。通常是 <code>/index.html</code>。</p>\n<h3 id=\"assetgroups\"><code>assetGroups</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#assetgroups\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"816fh9b00buzvnni0rawjjtbc\"><em>资产（Assets）</em>是与应用一起更新的应用版本的一部分。它们可以包含从页面的同源地址加载的资源以及从 CDN 和其它外部 URL 加载的第三方资源。由于在构建时可能没法提前知道所有这些外部 URL，因此也可以指定 URL 的模式。</p>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d7u3aes8m533dkt5hsjbdmzyb\">  对于要处理不同来源资源的 Service Worker，请确保每个源服务器都正确配置了 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a>。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"33jvqpjqsyzt31w1a50k84ms5\">该字段包含一个资产组的数组，每个资产组中会定义一组资产资源和它们的缓存策略。</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"assetGroups\": [\n    {\n      …\n    },\n    {\n      …\n    }\n  ]\n}\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4ip24c2eufo9qesq141w8eq3i\">当 ServiceWorker 处理请求时，它将按照资源组在 <code>ngsw-config.json</code> 中出现的顺序对其进行检查。与所请求的资源匹配的第一个资源组将处理该请求。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"26cwt3wgwy66z0wpfun5rg03d\">建议将更具体的资源组放在列表中较高的位置。比如，与 <code>/foo.js</code> 匹配的资源组应出现在与 <code>*.js</code> 匹配的资源组之前。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cuxrz3ntjk5kf7y1dmd9p76l\">每个资产组都会指定一组资源和一个管理它们的策略。此策略用来决定何时获取资源以及当检测到更改时该怎么做。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"asulkzv2i7y4o7p8f266gibb6\">这些资产组会遵循下面的 Typescript 接口：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\ninterface AssetGroup {\n  name: string;\n  installMode?: 'prefetch' | 'lazy';\n  updateMode?: 'prefetch' | 'lazy';\n  resources: {\n    files?: string[];\n    urls?: string[];\n  };\n  cacheQueryOptions?: {\n    ignoreSearch?: boolean;\n  };\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92yixnf1oim2s934ykisff5c1\">每个 <code>AssetGroup</code> 都由以下资产组属性定义。</p>\n<h4 id=\"name\"><code>name</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#name\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6pikykyvq8cfhpfdvw8c86zqt\"><code>name</code> 是强制性的。它用来标识该配置文件版本中这个特定的资产组。</p>\n<h4 id=\"installmode\"><code>installMode</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#installmode\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5431jis76rtpvrdy8sg1gro6f\"><code>installMode</code> 决定了这些资源最初的缓存方式。<code>installMode</code> 可以取如下两个值之一：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bulyvki1easdsqhng9yr2vtyi\">数值</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>prefetch</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"egxjupneymgv1q53gq2ayk5gt\">告诉Angular服务工作者在缓存当前应用程序版本时获取每个列出的资源。这消耗带宽，但确保资源在请求时可用，即使浏览器当前处于离线状态。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>lazy</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92a699esq1oarwshdn0jzxnhi\">不提前缓存任何资源。相反，Angular服务工作者仅为接收到请求的资源缓存。这是一个按需缓存模式。从不请求的资源不会被缓存。这对于不同分辨率的图像之类的内容非常有用，因此服务工作者仅为特定屏幕和方向缓存正确的资源。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6p25ajil2ak8y1cdoaru8n875\">默认为 <code>prefetch</code>。</p>\n<h4 id=\"updatemode\"><code>updateMode</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#updatemode\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1dj2h2cwbm1ifck5znly5s11a\">对于已经存在于缓存中的资源，<code>updateMode</code> 会决定在发现了新版本应用后的缓存行为。自上一版本以来更改过的所有组中资源都会根据 <code>updateMode</code> 进行更新。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bulyvki1easdsqhng9yr2vtyi\">数值</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>prefetch</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1q3ozuyq49j10i5yi10qwcazs\">告诉服务工作者立即下载和缓存更改的资源。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>lazy</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92rits1lm94blcaax82ki0sl6\">告诉服务工作者不要缓存这些资源。相反，将它们视为未请求并等待再次请求它们才更新。如果\n<code>installMode</code>也是\n<code>lazy</code>，则\n<code>updateMode</code>为\n<code>lazy</code>才有效。</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bq999d2tj7hq20khtlek4drk0\">其默认值为 <code>installMode</code> 的值。</p>\n<h4 id=\"resources\"><code>resources</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#resources\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a5ny1sqsqa3c26vwmkfud5ayy\">本节描述要缓存的资源，分为如下几组：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"70sannqwg908ofu9uuxon9w2r\">资源组</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>files</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6yevrj1mhew6gkmp7fnlh90so\">列出与分发目录中的文件匹配的模式。这些可以是单个文件或类似glob的模式，匹配多个文件。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>urls</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1869he2sh36bjfm5uqdp7ij7n\">包括在运行时匹配的URL和URL模式。这些资源不会直接获取，也没有内容哈希，但根据其HTTP标头进行缓存。这在CDN（如Google Fonts服务）中非常有用。\n<br> \n<em>（不支持负的glob模式，<code>?</code>将被字面匹配；也就是说，它不会匹配除<code>?</code>以外的任何字符。）</em></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"cachequeryoptions\"><code>cacheQueryOptions</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#cachequeryoptions\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"15fe397oafb7zu9wy7gcvworz\">这些选项用来修改对请求进行匹配的行为。它们会传给浏览器的 <code>Cache#match</code> 函数。详情参阅 <a href=\"https://developer.mozilla.org/docs/Web/API/Cache/match\">MDN</a>。目前，只支持下列选项：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cyk2rtnidu0xcswyg7218m57s\">选项</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>ignoreSearch</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cb4grtttu895wkiyadnrg4i84\">忽略查询参数。默认为\n<code>false</code>。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"datagroups\"><code>dataGroups</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#datagroups\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4yjppfuunn21pa4fly64kf7cx\">与这些资产性（asset）资源不同，数据请求不会随应用一起版本化。它们会根据手动配置的策略进行缓存，这些策略对 API 请求和所依赖的其它数据等情况会更有用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2hh1s5uuw4cj8h97abbt246od\">本字段包含一个数据组的数组，其中的每一个条目都定义了一组数据资源以及对它们的缓存策略。</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"dataGroups\": [\n    {\n      …\n    },\n    {\n      …\n    }\n  ]\n}\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dlxwl8ufos3pprcryj9si80wg\">当 ServiceWorker 处理请求时，它将按照数据组在 <code>ngsw-config.json</code> 中出现的顺序对其进行检查。与所请求的资源匹配的第一个数据组将处理该请求。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89szc5wnbhsx6ye49ip02t84n\">建议将更具体的数据组放在列表中较高的位置。比如，与 <code>/api/foo.json</code> 匹配的数据组应出现在与 <code>/api/*.json</code> 匹配的数据组之前。</p>\n</div>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2znl13r1uxaihn1fyg1atkdn9\">数据组遵循下列 TypeScript 接口：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nexport interface DataGroup {\n  name: string;\n  urls: string[];\n  version?: number;\n  cacheConfig: {\n    maxSize: number;\n    maxAge: string;\n    timeout?: string;\n    strategy?: 'freshness' | 'performance';\n  };\n  cacheQueryOptions?: {\n    ignoreSearch?: boolean;\n  };\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9mix5giqritbtm0yj1c9md3rw\">每个 <code>DataGroup</code> 都由以下数据组属性定义。</p>\n<h4 id=\"name-1\"><code>name</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#name-1\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2iklz5oz51cczset112nchql1\">和 <code>assetGroups</code> 下类似，每个数据组也都有一个 <code>name</code>，用作它的唯一标识。</p>\n<h4 id=\"urls\"><code>urls</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#urls\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"binemqxc636h1gh2z4152x1ip\">一个 URL 模式的列表。匹配这些模式的 URL 将会根据该数据组的策略进行缓存。只有非修改型的请求（GET 和 HEAD）才会进行缓存。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3cwf23xime8cw6pp2thf3mfki\">（不支持 glob 中的否定模式）。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b32pkeuu91xjkhqz9nzgjd8cv\"><code>?</code> 只做字面匹配，也就是说，它<em>只</em>能匹配 <code>?</code> 字符。</li>\n</ul>\n<h4 id=\"version\"><code>version</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#version\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"65mqausfyeznul6tcl7z139me\">API 有时可能会以不向后兼容的方式更改格式。新版本的应用可能与旧的 API 格式不兼容，因此也就与该 API 中目前已缓存的资源不兼容。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c8lxq1cestnzkpbgarp1hngnw\"><code>version</code> 提供了一种机制，用于指出这些被缓存的资源已经通过不向后兼容的方式进行了更新，并且旧的缓存条目（即来自以前版本的缓存条目）应该被丢弃。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f23iqn48u24dfbtpw2mad92m4\"><code>version</code> 是个整型字段，默认为 <code>1</code>。</p>\n<h4 id=\"cacheconfig\"><code>cacheConfig</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#cacheconfig\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"56dqxpdxtz28j3w9ezogs6jqd\">本节定义了对匹配上的请求进行缓存时的策略。</p>\n<h5 id=\"maxsize\"><code>maxSize</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#maxsize\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29l8yiennvjxatjwx27lp7j2i\"><strong>必要</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"brxy94tcetffa7t47ep8bcs8r\">缓存的最大条目数或响应数。开放式缓存可以无限增长，并最终超过存储配额，建议适时清理。</p>\n<h5 id=\"maxage\"><code>maxAge</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#maxage\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29l8yiennvjxatjwx27lp7j2i\"><strong>必要</strong></p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4zse97adakrrcvxuhqgak9ar\">（必需）<code>maxAge</code> 参数表示在响应因失效而要清除之前允许在缓存中留存的时间。<code>maxAge</code> 是一个表示持续时间的字符串，可使用以下单位作为后缀：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xjpto0lxf3esscgiktta1uqg\">后缀</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>d</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqiutfnlaiwidxulqll5ugqso\">天</td>\n</tr>\n<tr>\n<td align=\"left\"><code>h</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ayw1ne9w7gg9g8wshpzjyx0c\">小时</td>\n</tr>\n<tr>\n<td align=\"left\"><code>m</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"el8ir7zksd3xhxodkqo8yc51w\">分钟</td>\n</tr>\n<tr>\n<td align=\"left\"><code>s</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8gzk19wnofszbyi0vs05canad\">秒</td>\n</tr>\n<tr>\n<td align=\"left\"><code>u</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ddacvblnchimc4w0rjqgwkkh\">毫秒</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nlg50v7xzfzsyn0qa5835t0q\">比如，字符串 <code>3d12h</code> 规定此内容最多缓存三天半。</p>\n<h5 id=\"timeout\"><code>timeout</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#timeout\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6q9qgn67yex6ozg5qkal5gec1\">这个表示持续时间的字符串用于指定网络超时时间。如果配置了网络超时时间，Angular Service Worker 就会先等待这么长时间再使用缓存。<code>timeout</code> 是一个表示持续时间的字符串，使用下列后缀单位：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xjpto0lxf3esscgiktta1uqg\">后缀</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>d</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqiutfnlaiwidxulqll5ugqso\">天</td>\n</tr>\n<tr>\n<td align=\"left\"><code>h</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ayw1ne9w7gg9g8wshpzjyx0c\">小时</td>\n</tr>\n<tr>\n<td align=\"left\"><code>m</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"el8ir7zksd3xhxodkqo8yc51w\">分钟</td>\n</tr>\n<tr>\n<td align=\"left\"><code>s</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8gzk19wnofszbyi0vs05canad\">秒</td>\n</tr>\n<tr>\n<td align=\"left\"><code>u</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ddacvblnchimc4w0rjqgwkkh\">毫秒</td>\n</tr>\n</tbody>\n</table>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqoag96g3sq0l1xbwqtr5vkzb\">比如，字符串 <code>5s30u</code> 将会被翻译成 5 秒零 30 毫秒的网络超时。</p>\n<h5 id=\"strategy\"><code>strategy</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#strategy\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cw4f35rkafgr2jkd3gt9khcsg\">Angular Service Worker 可以使用两种缓存策略之一来获取数据资源。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ej85i3vyeiha9kyifi5699ksm\">缓存策略</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>performance</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3u2es7hjawjos5wu1wb3ka0bu\">默认情况下，优化为尽可能快速的响应。如果资源存在于缓存中，则使用缓存版本，不会发起网络请求。这允许某些陈旧度，取决于\n<code>maxAge</code>，以换取更好的性能。适用于不经常更改的资源；例如，用户头像图片。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>freshness</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqfslo5rmrj9gjcrjq34cvt94\">优化数据的实时性，优先从网络获取请求的数据。只有当网络超时，根据\n<code>timeout</code>，请求才会回退到缓存。这对频繁更改的资源很有用；例如，账户余额。</td>\n</tr>\n</tbody>\n</table>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cfvhqv7s4jljlqwwmwltsiinn\">你还可以模拟第三种策略 <a href=\"https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate\">staleWhileRevalidate</a>，它会返回缓存的数据（如果可用），但是也会在后台从网络上获取新数据，以供下次使用。要使用本策略，请在 <code>cacheConfig</code> 中把 <code>strategy</code> 设置为 <code>freshness</code>，并且把 <code>timeout</code> 设置为 <code>0u</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"exnta1l58fsbijkuykyy4q2dp\">本质上说，它会做如下工作：</p>\n<ol>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qlcyw5odk9s0zpw3fy1bndqp\">首先尝试从网络上获取。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1tqy2erbhhhs49qz26bu66xxh\">如果网络请求没有立刻完成（也就是 0 ms 内），就忽略缓存有效期，并用缓存的值做为后备。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ya65525fn5wuz4cy5hruq8ye\">一旦网络请求完成，就更新缓存，以供将来的请求使用。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2bcrma3bq0wlqfso5c7pli4pr\">如果指定的资源在缓存中不存在，总是等待网络请求。</li>\n</ol>\n</div>\n<h5 id=\"cacheopaqueresponses\"><code>cacheOpaqueResponses</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#cacheopaqueresponses\"><i class=\"material-icons\">link</i></a></h5>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6mzy10rgkztr4u8gqbwwsub2q\">Angular 服务工作者是否应该缓存不透明的响应。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6zwahxjgtbvppi7z7w44mb1j5\">如果未指定，则默认值取决于数据组的配置策略：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6xboqaqdx0082ltr7bynr4y0m\">策略</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dztmk1wewgoal88o29ryge3b5\">与\n<code>freshness</code>策略的组</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"607tchm930km9mhjrrin6e3zm\">默认值为\n<code>true</code>，服务工作线程缓存不透明响应。这些组每次都会请求数据，只有在离线或网络缓慢时才会回退到缓存响应。因此，服务工作线程是否缓存错误响应并不重要。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajgutlfpzuf4lg841ef1m6o6e\">与\n<code>performance</code>策略的组</td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2s6o18yxowhfi5q5jdakq3sv7\">默认值为\n<code>false</code>，服务工作线程不会缓存不透明响应。这些组会继续返回缓存的响应，直到\n<code>maxAge</code>过期，即使错误是由于临时网络或服务器问题引起的。因此，服务工作线程缓存错误响应会有问题。</td>\n</tr>\n</tbody>\n</table>\n<div class=\"callout is-important\">\n<header data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f4d8es4vcfc6trnx1rcx9a869\">评论不透明的响应</header>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ajcgkhyzlowbz5unji9i9qj5h\">如果你不熟悉，<a href=\"https://fetch.spec.whatwg.org#concept-filtered-response-opaque\">不透明响应</a>是请求不同来源的不返回 CORS 标头的资源时返回的一种特殊类型的响应。不透明响应的特性之一是不允许服务工作者读取其状态，这意味着它无法检查请求是否成功。有关更多详细信息，请参阅<a href=\"https://developers.google.com/web/updates/2015/03/introduction-to-fetch#response_types\">fetch()</a>介绍。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fo81euhjqy1nqhwmjmaz6md9\">如果你无法实现 CORS（例如，如果你不控制来源），更愿意对会导致不透明响应的资源使用 <code>freshness</code> 策略。</p>\n</div>\n<h4 id=\"cachequeryoptions-1\"><code>cacheQueryOptions</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#cachequeryoptions-1\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bgh4mldhy22mn29pvnp97jg7i\">详情参阅 <a href=\"guide/service-worker-config#assetgroups\">assetGroups</a>。</p>\n<h3 id=\"navigationurls\"><code>navigationUrls</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#navigationurls\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b8ycjqxp6ff2tilgzschg2e65\">这个可选节让你可以指定一个自定义的 URL 列表，它们都会被重定向到索引文件。</p>\n<h4 id=\"handling-navigation-requests\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dz75yky2oewtnp46k4rqnwdjy\">处理导航请求<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#handling-navigation-requests\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cf68vl61gn0cb0jtz25k9lm9x\">对于没有匹配上任何 <code>asset</code> 或 <code>data</code> 组的导航请求，ServiceWorker 会把它们重定向到指定的<a href=\"guide/service-worker-config#index-file\">索引文件</a>。下列请求将会视为导航请求：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4xm90i2mhhc501lakeq89497m\">它的<a href=\"https://developer.mozilla.org/docs/Web/API/Request/method\">方法</a>是 <code>GET</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"95qpf1y31nfqvdhc0yljs39ux\">它的<a href=\"https://developer.mozilla.org/docs/Web/API/Request/mode\">模式</a>是 <code>navigation</code></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c9wuqhieq06bopl6s1pefxhy5\">它接受 <code>text/html</code> 响应（根据 <code>Accept</code> 头的值决定）</li>\n<li>Its URL matches the following criteria:\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"52je61meadr6hxzofff2cs96m\">URL 的最后一段路径中不能包含文件扩展名（比如 <code>.</code>）</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5kor07d1xdrlk18vy2wip43ul\">URL 中不能包含 <code>__</code></li>\n</ul>\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8on311h8eww2fe5z82ahq6u6j\">要配置浏览请求是否发送到网络，请参阅 <a href=\"guide/service-worker-config#navigation-request-strategy\">navigationRequestStrategy</a> 部分。</p>\n</div>\n<h4 id=\"matching-navigation-request-urls\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6dt48x8ighzkooe5qb75q1zjo\">匹配导航请求的 URL<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#matching-navigation-request-urls\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"89w6gg476u2w3vfijew8jfayq\">虽然这些默认条件在大多数情况下都挺好用，不过有时还是要配置一些不同的规则。比如，你可能希望忽略一些特定的路由（它们可能不是 Angular 应用的一部分），而是把它们透传给服务器。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ms8rv3kmykdlj8sonnyemq5k\">该字段包含一个将要在运行期间匹配的 URL 和 <a href=\"guide/service-worker-config#glob-patterns\">类似 glob 的</a> URL 模式。\n它既可以包含正向模式也可以包含反向模式（比如用 <code>!</code> 开头的模式）。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ey223nsanohh1j4jiobj2autd\">只有那些能匹配<strong>任意</strong>正向 URL 或 URL 模式并且<strong>不匹配任何一个</strong>反向模式的 URL 才会视为导航请求。当匹配时，这些 URL 查询将会被忽略。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a8qib1if6vrxut07g3jovcx46\">如果省略了该字段，它的默认值是：</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n[\n  '/**',           // Include all URLs.\n  '!/**/*.*',      // Exclude URLs to files.\n  '!/**/*__*',     // Exclude URLs containing `__` in the last segment.\n  '!/**/*__*/**',  // Exclude URLs containing `__` in any other segment.\n]\n\n</code-example>\n<p><a id=\"navigation-request-strategy\"></a></p>\n<h3 id=\"navigationrequeststrategy\"><code>navigationRequestStrategy</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/service-worker-config#navigationrequeststrategy\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ag4nj096t48wbm7etpb3cv2g\">通过此可选属性，你可以配置服务工作者如何处理导航请求：</p>\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"navigationRequestStrategy\": \"freshness\"\n}\n\n</code-example>\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dlfs5hlh1j2d93g1dfpjk79x0\">可能的值</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>'performance'</code></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edaik8o028iugcjyd6df8o601\">默认设置。提供指定的\n<a href=\"guide/service-worker-config#index-file\">索引文件</a>，通常会被缓存。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>'freshness'</code></td>\n<td align=\"left\">Passes the requests through to the network and falls back to the <code>performance</code> behavior when offline. This value is useful when the server redirects the navigation requests elsewhere using a <code>3xx</code> HTTP redirect status code. Reasons for using this value include: <ul> <li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"21znfk6uwx7yisknawf4tcxs1\">在应用程序未处理身份验证时重定向到身份验证网站</li> <li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"80ziuc6xfnx31na5irv3bj1bs\">重定向特定的 URL 以避免在网站重新设计后破坏现有链接/书签</li> <li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2xfa7l7afnaj8vttg2iaalrgs\">在页面暂时不可用时重定向到不同的网站，例如服务器状态页面</li> </ul></td>\n</tr>\n</tbody>\n</table>\n<div class=\"alert is-important\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xu5ohu3a1xm6x8z8hud36kln\"><code>freshness</code> 策略通常会导致向服务器发送更多请求，这可能会增加响应延迟。建议你尽可能使用默认的性能策略。</p>\n</div>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间：Wed Sep 06 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/service-worker-devops\n - guide/service-worker-getting-started\n - guide/service-worker-intro\n-->\n<!-- links from this doc:\n - api/service-worker/SwUpdate\n - cli\n - guide/service-worker-config#appdata\n - guide/service-worker-config#assetgroups\n - guide/service-worker-config#cacheconfig\n - guide/service-worker-config#cacheopaqueresponses\n - guide/service-worker-config#cachequeryoptions\n - guide/service-worker-config#cachequeryoptions-1\n - guide/service-worker-config#datagroups\n - guide/service-worker-config#glob-patterns\n - guide/service-worker-config#handling-navigation-requests\n - guide/service-worker-config#index\n - guide/service-worker-config#index-file\n - guide/service-worker-config#installmode\n - guide/service-worker-config#matching-navigation-request-urls\n - guide/service-worker-config#maxage\n - guide/service-worker-config#maxsize\n - guide/service-worker-config#modifying-the-configuration\n - guide/service-worker-config#name\n - guide/service-worker-config#name-1\n - guide/service-worker-config#navigation-request-strategy\n - guide/service-worker-config#navigationrequeststrategy\n - guide/service-worker-config#navigationurls\n - guide/service-worker-config#prerequisites\n - guide/service-worker-config#resources\n - guide/service-worker-config#service-worker-configuration\n - guide/service-worker-config#service-worker-configuration-properties\n - guide/service-worker-config#strategy\n - guide/service-worker-config#timeout\n - guide/service-worker-config#updatemode\n - guide/service-worker-config#urls\n - guide/service-worker-config#version\n - guide/service-worker-devops\n - https://developer.chrome.com/docs/workbox/service-worker-overview/\n - https://developer.mozilla.org/docs/Web/API/Cache/match\n - https://developer.mozilla.org/docs/Web/API/Request/method\n - https://developer.mozilla.org/docs/Web/API/Request/mode\n - https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n - https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate\n - https://developers.google.com/web/updates/2015/03/introduction-to-fetch#response_types\n - https://fetch.spec.whatwg.org#concept-filtered-response-opaque\n-->"}