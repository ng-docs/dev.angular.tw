{"id":"guide/i18n-common-deploy","title":"部署多個語言環境","contents":"<div class=\"content\">\n  <h1 id=\"deploy-multiple-locales\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4f52ejc3rinwvytrc1s74trwz\">部署多個語言環境<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-deploy#deploy-multiple-locales\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ez1mv34tnjwkwv7jxk36idw7m\">如果 <code>myapp</code> 是包含專案可分發檔案的目錄，你通常會在語言環境目錄中為不同的語言環境提供不同的版本，比如法語版的 <code>myapp/fr</code> 和西班牙語版的 <code>myapp/es</code>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7cy1j9zuli2t5032zk8vnlxu4\">帶有 <code>href</code> 屬性的 HTML <code>base</code> 標籤指定了相對連結的基本 URI 或 URL。如果你將工作空間建立設定檔案 <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> 中的 <code>\"localize\"</code> 選項設定為 <code>true</code> 或語言環境 ID 陣列，CLI 會為應用程式的每個版本調整 base <code>href</code>。要為應用程式的每個版本調整 base <code>href</code>，CLI 會將語言環境新增到設定的 <code>\"baseHref\"</code> 中。在工作區設定檔案 <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> 中為每個語言環境指定 <code>\"baseHref\"</code>。以下範例展示了設定為空字串的 <code>\"baseHref\"</code>。</p>\n<code-example header=\"angular.json\" path=\"i18n/angular.json\" region=\"i18n-baseHref\">\n  \"projects\": {\n    \"angular.io-example\": {\n      // ...\n      \"i18n\": {\n        \"sourceLocale\": \"en-US\",\n        \"locales\": {\n          \"fr\": {\n            \"translation\": \"src/locale/messages.fr.xlf\",\n            \"baseHref\": \"\"\n          }\n        }\n      },\n      \"architect\": {\n        // ...\n      }\n    }\n  }\n  // ...\n}\n\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5j044z0omnrreo7ajea5f92u2\">此外，要在編譯時宣告 base <code>href</code>，請將在 CLI 中使用帶有 <code>--baseHref</code> 選項的 <a href=\"cli/build\" title=\"ng build | CLI | Angular\"> <code>ng build</code> </a>。</p>\n<h2 id=\"configure-a-server\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82s4atn4w14dlfrv8nqng6qsl\">設定服務器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-deploy#configure-a-server\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ae1xgllvgd78u42ya1ljky643\">多語言的典型部署方式是為來自不同子目錄的每種語言提供服務。使用 <code>Accept-Language</code> HTTP 標頭將使用者重導向到瀏覽器中定義的首選語言。如果使用者未定義首選語言，或者首選語言不可用，則伺服器將回退到預設語言。要更改語言，就轉到另一個子目錄。\n子目錄的更改通常使用應用程式中實現的選單進行。</p>\n<div class=\"alert is-helpful\">\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ae34t2gw6bvkop2yjxxcqwmo\">有關如何將應用程式部署到遠端伺服器的更多訊息，請參閱<a href=\"guide/deployment\" title=\"Deployment | Angular\">部署</a>。</p>\n</div>\n<h3 id=\"nginx-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"938p8l1dpasfpk0irdr2v3uz1\">Nginx 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-deploy#nginx-example\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7n05mzp688aehj6j6x2rd7h8\">以下範例展示了 Nginx 設定。</p>\n<code-example path=\"i18n/doc-files/nginx.conf\" language=\"nginx\">\n<a href=\"api/common/http\" class=\"code-anchor\">http</a> {\n    # Browser preferred language detection (does NOT require\n    # AcceptLanguageModule)\n    map $http_accept_language $accept_language {\n        ~*^de de;\n        ~*^fr fr;\n        ~*^en en;\n    }\n    # ...\n}\n\nserver {\n    listen 80;\n    server_name localhost;\n    root /www/data;\n\n    # Fallback to default language if no preference defined by <a href=\"api/animations/browser\" class=\"code-anchor\">browser</a>\n    if ($accept_language ~ \"^$\") {\n        set $accept_language \"fr\";\n    }\n\n    # Redirect \"/\" to Angular application in the preferred language of the <a href=\"api/animations/browser\" class=\"code-anchor\">browser</a>\n    rewrite ^/$ /$accept_language permanent;\n\n    # Everything under the Angular application is always redirected to Angular in the\n    # correct language\n    location ~ ^/(fr|de|en) {\n        try_files $uri /$1/index.html?$args;\n    }\n    # ...\n}\n\n\n</code-example>\n<h3 id=\"apache-example\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2yf63hmoz35531bmp25rg7i1l\">Apache 範例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-deploy#apache-example\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a0kxe5d8b9oewutz9ypaqp7rf\">以下範例展示了 Apache 設定。</p>\n<code-example path=\"i18n/doc-files/apache2.conf\" language=\"apache\">\n&lt;VirtualHost *:80&gt;\n    ServerName localhost\n    DocumentRoot /www/data\n    &lt;Directory \"/www/data\"&gt;\n        RewriteEngine on\n        RewriteBase /\n        RewriteRule ^../index\\.html$ - [L]\n\n        RewriteCond %{REQUEST_FILENAME} !-f\n        RewriteCond %{REQUEST_FILENAME} !-d\n        RewriteRule (..) $1/index.html [L]\n\n        RewriteCond %{HTTP:Accept-Language} ^de [NC]\n        RewriteRule ^$ /de/ [R]\n\n        RewriteCond %{HTTP:Accept-Language} ^en [NC]\n        RewriteRule ^$ /en/ [R]\n\n        RewriteCond %{HTTP:Accept-Language} !^en [NC]\n        RewriteCond %{HTTP:Accept-Language} !^de [NC]\n        RewriteRule ^$ /fr/ [R]\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n\n\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最後複查時間：Mon Feb 28 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/i18n-common-merge\n - guide/i18n-common-overview\n-->\n<!-- links from this doc:\n - api/animations/browser\n - api/common/http\n - cli/build\n - guide/deployment\n - guide/i18n-common-deploy#apache-example\n - guide/i18n-common-deploy#configure-a-server\n - guide/i18n-common-deploy#deploy-multiple-locales\n - guide/i18n-common-deploy#nginx-example\n - guide/workspace-config\n-->"}