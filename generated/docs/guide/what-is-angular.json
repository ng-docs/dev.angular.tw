{"id":"guide/what-is-angular","title":"什麼是 Angular？","contents":"<div class=\"content\">\n  <h1 id=\"what-is-angular\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7d9t2i7rb35tdb20ci03gkxy3\">什麼是 Angular？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#what-is-angular\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aqp77qr8evzyin2hmgwwcnmky\">Angular 是一個基於 \n<a href=\"https://www.typescriptlang.org\">TypeScript</a> 建立的開發平台。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bhhzu5exdnqm29q4sjwrq77kl\">作為一個平台，Angular 包括：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jg7y3qhc4348rtm2hp8k4bn9\">一個基於元件的框架，用於建立可伸縮的 Web 應用</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8fkf3u2fcjstelj2etaqmcwim\">一組完美整合的函式庫，涵蓋各種功能，包括路由、表單管理、用戶端-伺服器通訊等</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6csovpr2c20rterxbscq6r07\">一套開發工具，可幫助你開發、建立、測試和更新程式碼</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3gxrwmokjeu8ub2m8gm3s1gfe\">使用 Angular，您可以利用一個可以從單個開發人員專案擴充套件到企業級應用程式的平台。最重要的是，Angular 生態系統包括一個多樣化的超過 170 萬開發人員、函式庫作者和內容創作者組成的群體。</p>\n<p><a id=\"essentials\"></a></p>\n<h2 id=\"prerequisites\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e44b21uig1fakj5vcfuvz1bdu\">前提條件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9814cw9u2yj2ug91vrb0clxo2\">與大多數現代框架一樣，Angular 期望您熟悉 HTML、CSS 和 JavaScript。此外，建議熟悉以下概念和工具：</p>\n<p><a id=\"concepts\"></a></p>\n<h3 id=\"concepts\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9bs465y6dwehustqfu8rzp02\">概念<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#concepts\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8o9c2xunq4m7090a6zrhckkyz\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\">JavaScript 類別</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ehjeiugydme81yu137exhcrri\"><a href=\"https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\">TypeScript 基礎</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"41ydzcofhpnt10v6i3zt2y6gw\"><a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">TypeScript 裝飾器</a></li>\n</ul>\n<p><a id=\"tools\"></a></p>\n<h3 id=\"tools\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7xwol16j57olv2n9pnirwf8gn\">工具<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#tools\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bf0938jzo1hlvvs569sd96iqx\"><strong>TypeScript</strong> - 這是預設隨每個 Angular 應用程式一起提供的，以提供改進的工具和增強可維護性，從而獲得更好的開發者體驗。</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69iywlojkfa4nbq4hs889b7wy\"><strong>指令行介面（CLI）</strong> - Angular 使用編譯器來抽象工具複雜性並最佳化您的程式碼，這樣您就可以專注於建立應用程式。</li>\n</ul>\n<p><a id=\"components\"></a></p>\n<h2 id=\"components\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c7vzzlnsersqq3lvejga81lr\">元件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#components\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6r49oe5aca9dm3j3omaksaiwa\">在 Angular 中，元件是建立應用程式的基本建立模組。透過利用元件架構，Angular 旨在為組織專案提供結構，將專案組織成可管理、組織良好的部分，並明確各自的職責，以使您的程式碼易於維護和擴充套件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47q7h3gjwcig3wq0oc3hrnqlu\">Angular 元件可以透過 \n<code>component</code> 字尾進行標識（例如，\n<code>my-custom-name.component.ts</code>），具有以下內容：</p>\n<ul>\n<li>A decorator to define configuration options for things like:\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7gntjr06m66jr58pem6yzxchr\">一個選擇器，定義元件在範本中的標籤名稱</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"aib2h1o8i69rx46v01ksuyxkr\">一個 HTML 範本，控制在瀏覽器中呈現的內容</li>\n</ul>\n</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e2w70bwkighu1uwstgjglonao\">一個 TypeScript 類別，定義元件的行為。例如處理使用者輸入、管理狀態、定義方法等。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2mm3lk4tin11zlebgdtbvv9i\">以下是一個 TodoListItem 元件的簡化範例。</p>\n<code-example language=\"ts\">\n// 📄 todo-list-item.component.ts\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'todo-list-item',\n  template: ` &lt;li&gt;(TODO) Read cup of coffee introduction&lt;/li&gt; `,\n  styles: ['li { color: papayawhip; }'],\n})\nexport class TodoListItem {\n  /* <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> behavior is defined in here */\n}\n</code-example>\n<p><a id=\"behavior\"></a></p>\n<h3 id=\"behavior\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ams69bxknsvkxy7e6gbayrjfr\">行為<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#behavior\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bzdxwdu9htziunbwuhhxr7n08\">現在我們已經有了元件的基本結構，讓我們更深入瞭解如何定義元件的行為。</p>\n<h4 id=\"state\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"46jl7g8ajfzvsukbogkwqmsm5\">狀態<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#state\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b3n4h2pvb8h36u5ee1mxukz38\">當定義元件要管理的資料時，可以透過宣告 \n<a href=\"https://www.typescriptlang.org/docs/handbook/2/classes.html#fields\">類別欄位</a> 來實現。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9zlxrspfc4rt4p3933ay2khn2\">在 \n<code>todo-list-item.component.ts</code> 的範例中，我們想要跟蹤兩個屬性： \n<code>taskTitle</code> 和 \n<code>isComplete</code>。使用 \n<a href=\"https://www.typescriptlang.org/docs/handbook/2/classes.html#fields\">類別欄位語法</a>，可以如下定義：</p>\n<code-example language=\"ts\">\n// 📄 todo-list-item.component.ts\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({ ... })\nexport class TodoList {\n  taskTitle = '';\n  isComplete = false;\n}\n</code-example>\n<h4 id=\"methods\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1xubgaqmffibk0p3s7z4lwoiw\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#methods\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2a8ylycumjicomq22606fw219\">你可以透過在元件類別中宣告方法來定義元件的函式。</p>\n<code-example language=\"ts\">\n// 📄 todo-list-item.component.ts\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({ ... })\nexport class TodoList {\n  taskTitle = '';\n  isComplete = false;\n\n  updateTitle(newTitle: string) {\n    this.taskTitle = newTitle;\n  }\n\n  completeTask() {\n    this.isComplete = true;\n  }\n}\n</code-example>\n<p><a id=\"templates\"></a></p>\n<h3 id=\"templates\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ghjndclzhjnvo01a3d1ff3nc\">範本<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#templates\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e48a2n5vua61oyiuoi94qq0wr\">每個元件都有一個 HTML 範本，定義了該組件渲染到 DOM 中的內容。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1wmb12wgu1nn6kvew0igb2tma\">HTML 範本可以作為 TypeScript 類別中的行內範本定義，也可以使用 \n<code>templateUrl</code> 屬性在單獨的檔案中定義。要了解更多，請檢視 \n<a href=\"guide/component-overview#defining-a-components-template\">關於定義元件範本的文件</a>。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"846jf9b3j757z7b9uaxqpmve6\">在本文件中，範例將使用行內範本以獲得更簡潔的程式碼片段。</p>\n<h4 id=\"rendering-dynamic-data\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82xp9e76cuq26iwv22awk32gp\">渲染動態資料<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#rendering-dynamic-data\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b1dyw7u83c8pd7e2cc0udsjsu\">當需要在範本中顯示動態內容時，Angular 使用雙大括號語法來區分靜態和動態內容。</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  template: ` &lt;p&gt;<a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>: {{ taskTitle }}&lt;/p&gt; `,\n})\nexport class TodoListItem {\n  taskTitle = 'Read cup of coffee';\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7u6plhsu44adqwcteowwxphrx\">這是它呈現在頁面上的方式。</p>\n<code-example language=\"html\">\n&lt;p&gt;<a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>: Read cup of coffee&lt;/p&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4lurptqmmrm7ptu1tf5t3gu80\">此語法在 HTML 中宣告了動態資料屬性之間的\n<strong>內嵌</strong>。因此，每當資料發生變化，Angular 將自動更新 DOM，反映屬性的新值。</p>\n<h4 id=\"dynamic-properties-and-attributes\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"chvqvhpscj1dksc3rp1apx1wp\">動態屬性和屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#dynamic-properties-and-attributes\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3663hih6tzol3681eon1rbmca\">當需要動態設定 HTML 元素中屬性的值時，目標屬性將包裹在方括號中。這將透過將屬性與所需的動態資料繫結，告知 Angular 宣告的值應被解釋為類似 JavaScript 語句的形式（\n<a href=\"guide/understanding-template-expr-overview\">帶有一些 Angular 增強</a>），而不是純字串。</p>\n<code-example language=\"html\">\n&lt;button [disabled]=\"hasPendingChanges\"&gt;&lt;/button&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"11rya6li0vccmgijw7inanz9n\">在此範例中，disabled 屬性與 Angular 期望在元件狀態中找到的 \n<code>hasPendingChanges</code> 變數相關聯。</p>\n<h4 id=\"event-handling\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"avdp5yql1zi66avgh7zlc44sx\">事件處理<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#event-handling\"><i class=\"material-icons\">link</i></a></h4>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9jbrc2r1789uefj0l0ut2sgq5\">你可以透過在括號中指定事件名稱並在等號右側呼叫方法來繫結事件監聽器：</p>\n<code-example language=\"html\">\n&lt;button (click)=\"saveChanges()\"&gt;Save Changes&lt;/button&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e4gq3yzmaczqvgjeham5o55ez\">如果需要將事件物件傳遞給事件監聽器，Angular 提供了一個隱式的 \n<code>$event</code> 變數，可以在函式呼叫內部使用：</p>\n<code-example language=\"html\">\n&lt;button (click)=\"saveChanges($event)\"&gt;Save Changes&lt;/button&gt;\n</code-example>\n<p><a id=\"styles\"></a></p>\n<h3 id=\"styles\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4i7qnr06jiwow4wrh4huw1axt\">樣式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#styles\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"82y0tl4ijpcxo7jtb9c3btlbf\">當你需要為元件設定樣式時，有兩個可選屬性可以在 \n<code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 裝飾器內設定。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bem7zz1rz242d184mdqmkrqew\">與元件範本類似，你可以在 TypeScript 類別的同一檔案中管理元件的樣式，或者在使用 \n<code>styleUrls</code> 屬性的單獨檔案中管理。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dxrm9bdjvt84urnzm4b9rfxqx\">元件可以選擇包含一組應用於該組件 DOM 的 CSS 樣式：</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'profile-pic',\n  template: `&lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> src=\"profile-photo.jpg\" alt=\"Your profile photo\" /&gt;`,\n  styles: [\n    `\n      <a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> {\n        border-radius: 50%;\n      }\n    `,\n  ],\n})\nexport class ProfilePic {\n  /* Your code goes here */\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b59ylnonnwijre959wf9ffhct\">預設情況下，元件的樣式僅適用於該組件範本中的元素，以限制副作用。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"84xwbq0wzdaqu6a705chcgkt5\">要了解更多，請檢視 \n<a href=\"guide/component-styles\">有關元件樣式的文件</a>。</p>\n<p><a id=\"directives\"></a></p>\n<h2 id=\"directives\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9uaad125h3hufxqa64leub0r9\">指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#directives\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8amf31y3tmo3tcs0etxjoylb1\">在建立應用程式時，開發人員經常需要擴充套件 HTML 元素或 Angular 指令/元件的行為。其中包括：根據特定條件顯示內容、根據應用程式資料渲染專案清單、根據使用者互動更改元素的樣式等。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"14qgsqq1k3nbqdg59khaodgd6\">為解決這個問題，Angular 使用指令的概念，允許你以宣告性和可重複使用的方式向元素新增新行為。</p>\n<h3 id=\"conditional-rendering\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"47dg0xi8n3p6izueyo8kg7ebw\">條件渲染<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#conditional-rendering\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ff8q0lw1ron4brukdg07ii3a\">開發人員經常遇到的最常見場景之一是根據條件在範本中顯示或隱藏內容。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4nopsdhetxnapiy7d5q1k6i1k\">類似於 JavaScript 的 \n<code>if</code> 控制區塊，Angular 提供了一個內建的 \n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 指令，用於控制元素是否在表示式回傳真值時渲染。</p>\n<code-example language=\"html\">\n&lt;section class=\"admin-controls\" *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"hasAdminPrivileges\"&gt;\n  The content you are looking for is here.\n&lt;/section&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a5l8ze9i7ompquokr37h6ncd9\">如果 \n<code>hasAdminPrivileges</code> 為真，應用程式將向用戶顯示內容，否則，該元素將從 DOM 中完全移除。</p>\n<h3 id=\"rendering-a-list\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cbulhnwvp98fjsyelz40e67j2\">渲染清單<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#rendering-a-list\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"69aoumyjq3l4h0toal9rmc41y\">另一個常見場景是根據動態資料渲染專案清單。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cioy2744gwoj8zwlylvlk7ok\">類似於 JavaScript 的 \n<code>for</code> 迴圈，Angular 提供了另一個內建指令稱為 \n<code><a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a></code>，以下程式碼將為 \n<code>taskList</code> 中的每個專案渲染一個 \n<code>&lt;li&gt;</code> 元素。</p>\n<code-example language=\"html\">\n&lt;ul class=\"ingredient-list\"&gt;\n  &lt;li *<a href=\"api/common/NgFor\" class=\"code-anchor\">ngFor</a>=\"let task of taskList\"&gt;{{ task }}&lt;/li&gt;\n&lt;/ul&gt;\n</code-example>\n<h3 id=\"custom-directives\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6p61jsdo3vx6yykvn58xevbwf\">自定義指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#custom-directives\"><i class=\"material-icons\">link</i></a></h3>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"edj0ullj9jdewk0nyk3wwbfom\">雖然內建指令有助於解決開發人員遇到的常見問題，但在某些情況下，開發人員需要特定於其應用程式的自定義行為。在這些情況下，Angular 提供了一種建立自定義指令的方式。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"294skyfws4wzbnuevdrxn03l\">自定義 Angular 指令可以透過 \n<code>directive</code> 字尾（例如，\n<code>my-custom-name.directive.ts</code>）來識別。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"29hlpzvpvcplvafat62imhhbz\">與定義元件類別似，指令由以下內容組成：</p>\n<ul>\n<li>A TypeScript decorator to define configuration options for things like:\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cxl0eszp6bwsl6j06xdomhc09\">一個選擇器，定義在呼叫元件時的標籤名稱</li>\n</ul>\n</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ucv5ku9skrzg69pev3ksq8av\">一個 TypeScript 類別，定義指令將新增到相應 HTML 元素的擴充套件行為。</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b8hfb030vhw4rsh3fhup8us9e\">例如，這裡是一個用於突出顯示元素的自定義指令：</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: '[appHighlight]',\n})\nexport class HighlightDirective {\n  private el = inject(<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>);\n  constructor() {\n    this.el.nativeElement.style.backgroundColor = 'yellow';\n  }\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"buw4nyzkm5ayeoyyray2p1ztr\">要將其應用於元素，可以將指令作為屬性新增來呼叫。</p>\n<code-example language=\"html\">\n&lt;p appHighlight&gt;Look at me!&lt;/p&gt;\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4pnuhhx5tsx6sqcpc26z330kv\">指令還可以利用使用者事件，接受輸入以進行額外定製，但這超出了本文的範圍。要了解更多訊息，請檢視\n<a href=\"guide/attribute-directives\">有關建立自定義指令的文件</a>。</p>\n<p><a id=\"services\"></a></p>\n<h2 id=\"services\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"92fqgk8698jdwr0o85057qr44\">服務<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#services\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e11b4rbzfhnk5hprl0qaj4syw\">當需要在元件之間共享邏輯時，Angular 允許你建立一個『服務』，允許你將程式碼注入到元件中，並從單一事實來源管理它。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"74uhanpqvlsvm167ii8q6ipbi\">Angular 服務可以透過 \n<code>service</code> 字尾（例如，\n<code>my-custom-name.service.ts</code>）來識別。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7lb3m4o7czldz7rfblvhuo398\">與定義元件類別似，服務由以下內容組成：</p>\n<ul>\n<li>A TypeScript decorator to define configuration options for things like:\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ek964o81smueh4c6epela9ryn\"><a href=\"api/core/Injectable#providedIn\"><code>providedIn</code></a> - 這允許你定義應用程式的哪些部分可以訪問該服務。例如，『root』將允許服務在應用程式中的任何地方訪問。</li>\n</ul>\n</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ex5kryhp5wewtgrpteelff0mw\">一個 TypeScript 類別，定義在注入服務時將可訪問的所需程式碼</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7gxj4btr5bpr6biilj3xw3dot\">這是一個 \n<code>Calculator</code> 服務的範例。</p>\n<code-example language=\"ts\">\nimport {<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>} from '@angular/core';\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({\n  providedIn: 'root',\n})\nclass CalculatorService {\n  add(x: number, y: number) {\n    return x + y;\n  }\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bqja3vg71b0es6qz3gjokqd2e\">如果我們想在 Receipt 元件中呼叫該服務，範例如下：</p>\n<code-example language=\"ts\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\nimport { CalculatorService } from './calculator.service';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-receipt',\n  template: `&lt;h1&gt;The total is {{ totalCost }}&lt;/h1&gt;`,\n})\nexport class Receipt {\n  private calculatorService = inject(CalculatorService);\n  totalCost = this.calculatorService.add(50, 25);\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2w52z5zedzj9urhinsaqmq856\">在此範例中，透過呼叫 Angular 函式 \n<code>inject</code> 並將服務傳遞給它來使用 \n<code>CalculatorService</code>。</p>\n<p><a id=\"organization\"></a></p>\n<h2 id=\"organization\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cpkvzd07cov37xp3yf3g8vxxt\">組織<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#organization\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"22hi0lsftcli25sds72gefyco\">獨立元件是 Angular v15 中引入的一種新的組織模式，是推薦的起始位置。與 \n<a href=\"guide/ngmodules\">NgModules</a> 相比，它允許開發人員透過元件組織程式碼並管理依賴項，而不是透過功能模組。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"gbf8i4f0fdduj1a2spqrlaf3\">例如，在傳統的 NgModule 模式中，你需要建立一個 TodoModule 並透過該模組管理所有依賴項。</p>\n<code-example language=\"ts\">\nimport {<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>} from '@angular/core';\nimport {<a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>} from '@angular/forms';\nimport {TodoList} from '../todo/todo-list.component';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [TodoList],\n  imports: [<a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>],\n  exports: [TodoList, <a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>],\n})\nexport class TodoModule {}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9vuwlrz07zzi1d9a9vtru1mgo\">然而，現在你可以使用獨立元件來實現類似的功能，而無需模組檔案：</p>\n<code-example language=\"ts\">\nimport {<a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>} from '@angular/forms';\nimport {TodoList} from '../todo/todo-list.component';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'todo-app',\n  imports: [<a href=\"api/forms/FormsModule\" class=\"code-anchor\">FormsModule</a>, TodoList],\n  template: ` ... &lt;todo-list [tasks]=\"taskList\"&gt;&lt;/todo-list&gt; `,\n})\nexport class PhotoGalleryComponent {\n  // component logic\n}\n</code-example>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9xhsjhrovvlyu0h565ntlo2t4\">儘管大部分內容應該是熟悉的（來自『元件』部分），但這種新模式中獨特的兩個內容是 \n<code>standalone</code> 標誌和 \n<code>imports</code> 鍵。</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6rglbsmx0qsh5x7oaziezfh53\"><code>standalone</code> - 當提供值為\n<code>true</code>時，這告訴 Angular 該組件無需在 NgModule 中宣告</li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"33ufebzcyr2etktpxjm62lq7e\"><code>imports</code> - 允許開發人員宣告元件中將使用的依賴項</li>\n</ul>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6pa8uew5x7eibd48lgvkjdz7y\">換句話說，開發人員可以直接在元件上下文中指定依賴項，而不必定義程式碼應該組織的特定上下文。</p>\n<p><a id=\"cli\"></a></p>\n<h2 id=\"command-line-interface-cli\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dlbcuf6wfysvjovodwc97f0g6\">指令行介面（CLI）<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#command-line-interface-cli\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dho86htmdwg9n738251lbu2ac\">Angular CLI 是開發 Angular 應用的推薦方式，可以使一些任務變得輕鬆。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d2b3f1bbt0336bxrgvcmoxsh\">一些常見的 Angular CLI 指令範例包括：</p>\n<!-- vale Angular.Google_WordListSuggestions = NO -->\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e4ichvee5s9yr5zvjwgj5m6sh\">指令</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5n7bwou7cik5b59885zxx80zw\"><a href=\"cli/build\">ng build</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"awjo0nknflw24vqcelcevwzcb\">將 Angular 應用編譯到輸出目錄中。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3opl4bzj7kheth7l1g19b0aye\"><a href=\"cli/serve\">ng serve</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3jlefdce1vjkei4ex26sr52ns\">建立併為你的應用提供服務，在檔案更改時重新建立。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8a5x7vpakz9jxdiejlvn3md2\"><a href=\"cli/generate\">ng generate</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9nxkvg37kai12733x1rbtfiai\">基於原理圖生成或修改檔案。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"99a6h6jtjj3ooz2hunosexc13\"><a href=\"cli/test\">ng test</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2xg90wg0jfpp4xj3kvhja5yes\">在給定專案上執行單元測試。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"124annwby076m40sbvz9l2epo\"><a href=\"cli/e2e\">ng e2e</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"1cotipegjmo2g4nqyznqcyb3s\">建立併為一個 Angular 應用提供服務，然後執行端到端測試。</td>\n</tr>\n</tbody>\n</table>\n<!-- vale Angular.Google_WordListSuggestions = YES -->\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4o17f7xstwnctu3ccscsubunj\">有關 Angular CLI 的更多訊息，請參閱 <a href=\"cli\">『Angular CLI 參考手冊』</a>部分。</p>\n<p><a id=\"1p-libraries\"></a></p>\n<h2 id=\"first-party-libraries\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"2dj55g60w4s7ry52p7onuyvxj\">自帶函式庫<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#first-party-libraries\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"f0hsnhywxmb7un22b3aj0qopg\">Angular 提供許多第一方函式庫來支援開發人員在建立應用程式時經常遇到的常見功能。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4i4ny4sr3z9erbw2k75qm4fha\">生態系統中提供的一些受歡迎的函式庫套件括：</p>\n<!-- vale Angular.Google_Acronyms = NO -->\n<table>\n<thead>\n<tr>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4l1jf0274jgug5pksccglb1z2\">函式庫</th>\n<th align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3prlgfrx5eo2xqncnnob4crxu\">詳情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6x2cfb2mx3rq7u6pk6n02ivq7\"><a href=\"guide/router\">Angular 路由器</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ckmv66fcz3yv1gm03mp4ya74t\">基於 Angular 元件的高階用戶端導向和路由。支援延遲載入、巢狀路由、自定義路徑對應等功能。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6ndrj35c7u4ys4hv25mmoa7su\"><a href=\"guide/forms-overview\">Angular 表單</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"44zh3kgyq5nyotxsm4e8rzjt1\">用於表單參與和驗證的統一系統。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3bdcu5wodgudgx0wwa85pze8f\"><a href=\"guide/understanding-communicating-with-http\">Angular HttpClient</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"ezy2nephcw8yndh8h2erm20bb\">強大的 HTTP 用戶端，可以支援更高階的用戶端-伺服器通訊。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"6151gbiyixt6ug7mbcqxzludv\"><a href=\"guide/animations\">Angular 動畫</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"et09yt4u8gttcen439kjq14gd\">基於應用程式狀態驅動動畫的豐富系統。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8mdrddlg4q26546z9av9bjemq\"><a href=\"guide/service-worker-intro\">Angular PWA</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"bwd1s0a3l3wjbbb9bt3m4c3h4\">用於建立漸進式 Web 應用程式（PWA）的工具，包括服務工作者和 Web 應用程式清單。</td>\n</tr>\n<tr>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"5lf2hh3j0pbsm8uel2ts0fv3r\"><a href=\"guide/schematics\">Angular 原理圖</a></td>\n<td align=\"left\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"d30x11t644c279w5vb2iupvd3\">自動化的搭建、重構和更新工具，簡化大規模開發。</td>\n</tr>\n</tbody>\n</table>\n<!-- vale Angular.Google_Acronyms = YES -->\n<h2 id=\"next-steps\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"c4pkljueu68ifjoi5994e9l8o\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/what-is-angular#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"7ouowhvgae6nkouzg7do7ozb2\">要實際使用 Angular，請參閱我們的<a href=\"start\">入門</a>教學課程。本教學課程使用 <a href=\"https://stackblitz.com\">stackblitz.com</a>，因此你可以瀏覽 Angular 的可工作範例，而不必先做任何安裝工作。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"dqhceffa83t0f5cx5rui512ey\">如果你對如何使用 Angular 建立應用程式感興趣，請檢視以下資源：</p>\n<ul>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"86hnucbq7l7n4pao3g1rjmuge\"><a href=\"tutorial/first-app\">教學課程</a></li>\n<li data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"8yplp1k38y4tm5x7kaiowygcv\"><a href=\"guide/developer-guide-overview\">深入指南</a></li>\n</ul>\n\n  <div class=\"reviewed\">最後複查時間：Tue Aug 15 2023</div>\n</div>\n\n\n<!-- links to this doc:\n - docs\n - guide/developer-guide-overview\n - guide/localizing-angular\n - guide/understanding-angular-overview\n-->\n<!-- links from this doc:\n - api/common/NgFor\n - api/common/NgIf\n - api/common/NgOptimizedImage\n - api/core/Component\n - api/core/Directive\n - api/core/ElementRef\n - api/core/Injectable\n - api/core/Injectable#providedIn\n - api/core/NgModule\n - api/forms/FormsModule\n - api/platform-browser/Title\n - cli\n - cli/build\n - cli/e2e\n - cli/generate\n - cli/serve\n - cli/test\n - guide/animations\n - guide/attribute-directives\n - guide/component-overview#defining-a-components-template\n - guide/component-styles\n - guide/developer-guide-overview\n - guide/forms-overview\n - guide/ngmodules\n - guide/router\n - guide/schematics\n - guide/service-worker-intro\n - guide/understanding-communicating-with-http\n - guide/understanding-template-expr-overview\n - guide/what-is-angular#behavior\n - guide/what-is-angular#command-line-interface-cli\n - guide/what-is-angular#components\n - guide/what-is-angular#concepts\n - guide/what-is-angular#conditional-rendering\n - guide/what-is-angular#custom-directives\n - guide/what-is-angular#directives\n - guide/what-is-angular#dynamic-properties-and-attributes\n - guide/what-is-angular#event-handling\n - guide/what-is-angular#first-party-libraries\n - guide/what-is-angular#methods\n - guide/what-is-angular#next-steps\n - guide/what-is-angular#organization\n - guide/what-is-angular#prerequisites\n - guide/what-is-angular#rendering-a-list\n - guide/what-is-angular#rendering-dynamic-data\n - guide/what-is-angular#services\n - guide/what-is-angular#state\n - guide/what-is-angular#styles\n - guide/what-is-angular#templates\n - guide/what-is-angular#tools\n - guide/what-is-angular#what-is-angular\n - start\n - tutorial/first-app\n - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\n - https://stackblitz.com\n - https://www.typescriptlang.org\n - https://www.typescriptlang.org/docs/handbook/2/classes.html#fields\n - https://www.typescriptlang.org/docs/handbook/decorators.html\n - https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\n-->"}