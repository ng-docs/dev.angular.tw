{"version":3,"file":"src_app_custom-elements_code_code-example_module_ts.ba4e2f50a9de1f8d.js","mappings":"8QAsBIA,MAAA,YAAuBA,MAAA,GAAUA,8BAAVA,cAAAC,EAAAC,uBAjB3B,IA8BaC,EAAoB,MAnBjC,MAmBaA,EAnBbC,cAoCUC,KAAAC,MAAQ,GAsBgBD,KAAAE,SAAU,EA5B1C,QACIC,CAAKA,GACPH,KAAKC,MAAQE,EACbH,KAAKE,SAA2C,IAAjCF,KAAKG,KAAKC,QAAQ,UACnC,CACA,QAAID,GAAiB,OAAOH,KAAKC,KAAO,CAGxC,YACII,CAASA,GAEXL,KAAKM,UAAwB,MAAZD,GAAsC,SAAlB,GAAGA,GAC1C,CACA,YAAIA,GAAsB,OAAOL,KAAKM,SAAW,CAIjD,sBACIC,CAAmBF,GACrBL,KAAKK,SAAWA,CAClB,CAGA,uBACIG,CAAoBH,GACtBL,KAAKK,SAAWA,CAClB,CAQAI,kBACE,MAAMC,EAAcV,KAAKW,QAAQC,cACjCZ,KAAKa,QAAQC,QAAOC,MAAcL,GAClCA,EAAYM,YAAc,EAC5B,CAACC,SAAAjB,KAAA,mBAAAkB,iBAjDUpB,EAAoB,EAAAmB,SAAAjB,KAAA,UAAAmB,EAAAC,IAAA,MAApBtB,EAAoBuB,UAAA,mBAAAC,UAAA,SAAAC,EAAAC,MAAA,EAAAD,qBA2CpBE,IAAa,0lBA1DtB9B,MAAA,aAAoCA,MAAA,GAAyBA,QAE7DA,MAAA,EAAA+B,EAAA,gBAEA/B,MAAA,uBAFSA,MAAA,GAAAA,MAAA,OAAA6B,EAAA3B,QAECF,cAAA,gBAAA6B,EAAA3B,OAAAF,CAAmC,eAAA6B,EAAA3B,QAEnCF,MAAA,WAAA6B,EAAAG,SAAAhC,CAAqB,WAAA6B,EAAAI,SAArBjC,CAAqB,OAAA6B,EAAArB,KAArBR,CAAqB,SAAA6B,EAAAK,OAArBlC,CAAqB,WAAA6B,EAAAnB,SAArBV,CAAqB,SAAA6B,EAAA3B,2DAStBC,CAAoB,uBCxBpBgC,EAAiB,MAL9B,MAKaA,EALb/B,cAMEC,KAAA+B,uBAAoCjC,EACrCmB,SAAAjB,KAAA,mBAAAkB,iBAFYY,EAAiB,EAAAb,SAAAjB,KAAA,UAAAmB,EAAAa,IAAA,MAAjBF,IAAiBb,SAAAjB,KAAA,UAAAmB,EAAAc,IAAA,UAJjBC,KAAcC,cAIdL,CAAiB","names":["i0","ctx_r1","header","CodeExampleComponent","constructor","this","_path","isAvoid","path","indexOf","hidecopy","_hidecopy","hyphenatedHideCopy","capitalizedHideCopy","ngAfterViewInit","contentElem","content","nativeElement","aioCode","code","fromInnerHTML","textContent","static","t","core","In1","selectors","viewQuery","rf","ctx","CodeComponent","CodeExampleComponent_header_3_Template","language","linenums","region","CodeExampleModule","customElementComponent","a4G","s3X","CommonModule","CodeModule"],"sourceRoot":"webpack:///","sources":["./src/app/custom-elements/code/code-example.component.ts","./src/app/custom-elements/code/code-example.module.ts"],"sourcesContent":["/* eslint-disable  @angular-eslint/component-selector */\nimport { Component, HostBinding, ElementRef, ViewChild, Input, AfterViewInit } from '@angular/core';\nimport { fromInnerHTML } from 'app/shared/security';\nimport { CodeComponent } from './code.component';\n\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\n@Component({\n  selector: 'code-example',\n  template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <header *ngIf=\"header\">{{header}}</header>\n\n    <aio-code [class.headed-code]=\"!!this.header\"\n              [class.simple-code]=\"!this.header\"\n              [language]=\"language\"\n              [linenums]=\"linenums\"\n              [path]=\"path\"\n              [region]=\"region\"\n              [hideCopy]=\"hidecopy\"\n              [header]=\"header\">\n    </aio-code>\n  `,\n})\nexport class CodeExampleComponent implements AfterViewInit {\n  classes: { 'headed-code': boolean, 'simple-code': boolean };\n\n  @Input() language: string;\n\n  @Input() linenums: string;\n\n  @Input() region: string;\n\n  @Input() header: string;\n\n  @Input()\n  set path(path: string) {\n    this._path = path;\n    this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n  }\n  get path(): string { return this._path; }\n  private _path = '';\n\n  @Input()\n  set hidecopy(hidecopy: boolean) {\n    // Coerce the boolean value.\n    this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n  }\n  get hidecopy(): boolean { return this._hidecopy; }\n  private _hidecopy: boolean;\n\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input('hide-copy')\n  set hyphenatedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  @Input('hideCopy')\n  set capitalizedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @HostBinding('class.avoidFile') isAvoid = false;\n\n  @ViewChild('content', { static: true }) content: ElementRef<HTMLDivElement>;\n\n  @ViewChild(CodeComponent, { static: true }) aioCode: CodeComponent;\n\n  ngAfterViewInit() {\n    const contentElem = this.content.nativeElement;\n    this.aioCode.code = fromInnerHTML(contentElem);\n    contentElem.textContent = '';  // Remove DOM nodes that are no longer needed.\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, CodeModule ],\n  declarations: [ CodeExampleComponent ],\n  exports: [ CodeExampleComponent ]\n})\nexport class CodeExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeExampleComponent;\n}\n"],"x_google_ignoreList":[]}