{"version":3,"file":"src_app_custom-elements_contributor_contributor-list_module_ts.b5b311a3b5935015.js","mappings":"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","names":["contributorsPath","CONTENT_URL_PREFIX","knownGroups","ContributorService","constructor","http","this","contributors","getContributors","get","pipe","map","contribs","contribMap","Object","keys","forEach","key","contributor","groups","group","push","cmap","order","indexOf","name","length","sort","compareContributors","compareGroups","connectableContributors","connectable","connector","AsyncSubject","resetOnDisconnect","connect","static","t","i0","i1","core","wxM","factory","Éµfac","l","r","toUpperCase","ctx_r0","person","pictureBase","picture","$event","stopPropagation","ctx_r1","twitter","ctx_r2","website","ContributorComponent","In1","selectors","inputs","decls","vars","consts","template","rf","ctx","ContributorComponent_div_1_Template","ContributorComponent_a_7_Template","ContributorComponent_a_8_Template","bio","name_r2","_r4","$implicit","ctx_r3","selectGroup","selectedGroup","ContributorListComponent_section_2_aio_contributor_2_Template","ContributorListComponent","contributorService","locationService","ngOnInit","groupName","search","subscribe","grps","groupNames","g","toLowerCase","find","setSearch","i2","ContributorListComponent_button_1_Template","ContributorListComponent_section_2_Template","ContributorListModule","customElementComponent","a4G","s3X","imports","CommonModule","MatIconModule"],"sourceRoot":"webpack:///","sources":["./src/app/custom-elements/contributor/contributor.service.ts","./src/app/custom-elements/contributor/contributor.component.ts","./src/app/custom-elements/contributor/contributor-list.component.ts","./src/app/custom-elements/contributor/contributor-list.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {AsyncSubject, connectable, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {Contributor, ContributorGroup} from './contributors.model';\n\n// TODO(andrewjs): Look into changing this so that we don't import the service just to get the const\nimport {CONTENT_URL_PREFIX} from 'app/documents/document.service';\n\nconst contributorsPath = CONTENT_URL_PREFIX + 'contributors.json';\nconst knownGroups = ['Angular', 'Collaborators', 'GDE'];\n\n@Injectable()\nexport class ContributorService {\n  contributors: Observable<ContributorGroup[]>;\n\n  constructor(private http: HttpClient) {\n    this.contributors = this.getContributors();\n  }\n\n  private getContributors() {\n    const contributors = this.http.get<{[key: string]: Contributor}>(contributorsPath).pipe(\n      // Create group map\n      map((contribs) => {\n        const contribMap: {[name: string]: Contributor[]} = {};\n        Object.keys(contribs).forEach((key) => {\n          const contributor = contribs[key];\n          contributor.groups.forEach((group) => {\n            const contribGroup = contribMap[group] || (contribMap[group] = []);\n            contribGroup.push(contributor);\n          });\n        });\n\n        return contribMap;\n      }),\n\n      // Flatten group map into sorted group array of sorted contributors\n      map((cmap) =>\n        Object.keys(cmap)\n          .map((key) => {\n            const order = knownGroups.indexOf(key);\n            return {\n              name: key,\n              order: order === -1 ? knownGroups.length : order,\n              contributors: cmap[key].sort(compareContributors),\n            };\n          })\n          .sort(compareGroups)\n      )\n    );\n\n    const connectableContributors = connectable(contributors, {\n      connector: () => new AsyncSubject(),\n      resetOnDisconnect: false,\n    });\n    connectableContributors.connect();\n    return connectableContributors;\n  }\n}\n\nfunction compareContributors(l: Contributor, r: Contributor) {\n  return l.name.toUpperCase() > r.name.toUpperCase() ? 1 : -1;\n}\n\nfunction compareGroups(l: ContributorGroup, r: ContributorGroup) {\n  return l.order === r.order ? (l.name > r.name ? 1 : -1) : l.order > r.order ? 1 : -1;\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Contributor } from './contributors.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\n@Component({\n  selector: 'aio-contributor',\n  template: `\n    <section class=\"contributor-card\" [class.no-image]=\"!person.picture\"\n      attr.aria-labelledby=\"{{person.name}}-section-heading\">\n      <div *ngIf=\"person.picture\" class=\"contributor-image-wrapper\">\n      <img [src]=\"pictureBase+person.picture\" alt=\"{{person.name}}\" class=\"contributor-image\">\n      </div>\n      <h3 id=\"{{person.name}}-section-heading\" class=\"contributor-title\">{{person.name}}</h3>\n      <p class=\"contributor-bio\">{{person.bio}}</p>\n      <div class=\"contributor-social-links\">\n        <a *ngIf=\"person.twitter\" mat-icon-button class=\"info-item icon contributor-social\"\n            attr.aria-label=\"twitter of {{person.name}}\"\n            href=\"https://twitter.com/{{person.twitter}}\"\n            target=\"_blank\" (click)=\"$event.stopPropagation()\">\n            <mat-icon svgIcon=\"logos:twitter\"></mat-icon>\n        </a>\n        <a *ngIf=\"person.website\" mat-icon-button class=\"info-item icon\"\n           attr.aria-label=\"website of {{person.name}}\"\n           href=\"{{person.website}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\n           <mat-icon class=\"link-icon\">link</mat-icon>\n        </a>\n      </div>\n    </section>\n  `\n})\nexport class ContributorComponent {\n  @Input() person: Contributor;\n  pictureBase = CONTENT_URL_PREFIX + 'images/bios/';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ContributorGroup } from './contributors.model';\nimport { ContributorService } from './contributor.service';\nimport { LocationService } from 'app/shared/location.service';\n\n@Component({\n  selector: 'aio-contributor-list',\n  template: `\n    <div class=\"flex-center group-buttons\">\n      <button *ngFor=\"let name of groupNames\"\n          class=\"button mat-button filter-button\"\n          [class.selected]=\"name === selectedGroup.name\"\n          (click)=\"selectGroup(name)\">{{name}}</button>\n    </div>\n    <section *ngIf=\"selectedGroup\" class=\"grid-fluid\">\n      <div class=\"contributor-group\">\n        <aio-contributor *ngFor=\"let person of selectedGroup.contributors\"\n            [person]=\"person\"></aio-contributor>\n      </div>\n    </section>\n  `,\n})\nexport class ContributorListComponent implements OnInit {\n  private groups: ContributorGroup[];\n  groupNames: string[];\n  selectedGroup: ContributorGroup;\n\n  constructor(\n    private contributorService: ContributorService,\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    const groupName =  this.locationService.search().group || '';\n    // no need to unsubscribe because `contributors` completes\n    this.contributorService.contributors\n      .subscribe(grps => {\n        this.groups = grps;\n        this.groupNames = grps.map(g => g.name);\n        this.selectGroup(groupName);\n      });\n  }\n\n  selectGroup(name: string) {\n    name = name.toLowerCase();\n    this.selectedGroup = this.groups.find(g => g.name.toLowerCase() === name) || this.groups[0];\n    this.locationService.setSearch('', {group: this.selectedGroup.name});\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ContributorListComponent } from './contributor-list.component';\nimport { ContributorService } from './contributor.service';\nimport { ContributorComponent } from './contributor.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatIconModule ],\n  declarations: [ ContributorListComponent, ContributorComponent ],\n  providers: [ ContributorService ]\n})\nexport class ContributorListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ContributorListComponent;\n}\n"],"x_google_ignoreList":[]}