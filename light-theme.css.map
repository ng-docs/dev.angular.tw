{"version":3,"sources":["./node_modules/@angular/material/core/style/_sass-utils.scss","./node_modules/@material/theme/_css.scss","./src/styles/custom-themes/light-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./src/styles/0-base/_typography-theme.scss","./src/styles/_constants.scss","./src/styles/1-layouts/footer/_footer-theme.scss","./src/styles/1-layouts/layout-global/_layout-global-theme.scss","./src/styles/1-layouts/marketing-layout/_marketing-layout-theme.scss","./src/styles/1-layouts/not-found/_not-found-theme.scss","./src/styles/1-layouts/sidenav/_sidenav-theme.scss","./src/styles/1-layouts/top-menu/_top-menu-theme.scss","./src/styles/_mixins.scss","./src/styles/2-modules/alert/_alert-theme.scss","./src/styles/2-modules/api-list/_api-list-theme.scss","./src/styles/2-modules/api-symbols/_api-symbols-theme.scss","./src/styles/2-modules/buttons/_buttons-theme.scss","./src/styles/2-modules/callout/_callout-theme.scss","./src/styles/2-modules/card/_card-theme.scss","./src/styles/2-modules/code/_code-theme.scss","./src/styles/2-modules/contributor/_contributor-theme.scss","./src/styles/2-modules/cookies-popup/_cookies-popup-theme.scss","./src/styles/2-modules/deploy-theme/_deploy-theme.scss","./src/styles/2-modules/details/_details-theme.scss","./src/styles/2-modules/errors/_errors-theme.scss","./src/styles/2-modules/filetree/_filetree-theme.scss","./src/styles/2-modules/guides/_guides-theme.scss","./src/styles/2-modules/heading-anchors/_heading-anchors-theme.scss","./src/styles/2-modules/hr/_hr-theme.scss","./src/styles/2-modules/images/_images-theme.scss","./src/styles/2-modules/label/_label-theme.scss","./src/styles/2-modules/notification/_notification-theme.scss","./src/styles/2-modules/presskit/_presskit-theme.scss","./src/styles/2-modules/resources/_resources-theme.scss","./src/styles/2-modules/roadmap/_roadmap-theme.scss","./src/styles/2-modules/search-results/_search-results-theme.scss","./src/styles/2-modules/select-menu/_select-menu-theme.scss","./src/styles/2-modules/table/_table-theme.scss","./src/styles/2-modules/toc/_toc-theme.scss"],"sourcesContent":["@use 'sass:color';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Include content under the current selector (&) or the document root if there is no current\n/// selector.\n/// @param {String} $root [html] The default root selector to use when there is no current selector.\n/// @output The given content under the current selector, or root selector if there is no current\n///     selector.\n/// @content Content to output under the current selector, or root selector if there is no current\n///     selector.\n@mixin current-selector-or-root($root: html) {\n  @if & {\n    @content;\n  }\n  @else {\n    #{$root} {\n      @content;\n    }\n  }\n}\n\n/// A version of the standard `map.merge` function that takes a variable number of arguments.\n/// Each argument is merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.merge\n/// @return {Map} The combined result of successively calling map.merge with each parameter.\n@function merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.merge($result, $map);\n  }\n  @return $result;\n}\n\n/// A version of the standard `map.deep-merge` function that takes a variable number of arguments.\n/// Each argument is deep-merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.deep-merge\n/// @return {Map} The combined result of successively calling map.deep-merge with each parameter.\n@function deep-merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.deep-merge($result, $map);\n  }\n  @return $result;\n}\n\n/// Coerces the given value to a list, by converting any non-list value into a single-item list.\n/// This should be used when dealing with user-passed lists of args to avoid confusing errors,\n/// since Sass treats `($x)` as equivalent to `$x`.\n/// @param {Any} $value The value to coerce to a list.\n/// @return {List} The original $value if it was a list, otherwise a single-item list containing\n///     $value.\n@function coerce-to-list($value) {\n  @return if(meta.type-of($value) != 'list', ($value,), $value);\n}\n\n/// A version of the Sass `color.change` function that is safe ot use with CSS variables.\n@function safe-color-change($color, $args...) {\n  $args: meta.keywords($args);\n  @return if(meta.type-of($color) == 'color', color.change($color, $args...), $color);\n}\n\n/// Gets the given arguments as a map of keywords and validates that only supported arguments were\n/// passed.\n/// @param {ArgList} $args The arguments to convert to a keywords map.\n/// @param {List} $supported-args The supported argument names.\n/// @return {Map} The $args as a map of argument name to argument value.\n@function validate-keyword-args($args, $supported-args) {\n  @if list.length($args) > 0 {\n    @error #{'Expected keyword args, but got positional args: '}#{$args};\n  }\n  $kwargs: meta.keywords($args);\n  @each $arg, $v in $kwargs {\n    @if list.index($supported-args, $arg) == null {\n      @error #{'Unsupported argument '}#{$arg}#{'. Valid arguments are: '}#{$supported-args};\n    }\n  }\n  @return $kwargs;\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","html {\n  --mdc-linear-progress-active-indicator-height: 4px;\n  --mdc-linear-progress-track-height: 4px;\n  --mdc-linear-progress-track-shape: 0;\n}\n\n.mat-mdc-progress-bar {\n  --mdc-linear-progress-active-indicator-color: #1976d2;\n  --mdc-linear-progress-track-color: rgba(25, 118, 210, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent {\n  --mdc-linear-progress-active-indicator-color: #d32f2f;\n  --mdc-linear-progress-track-color: rgba(211, 47, 47, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn {\n  --mdc-linear-progress-active-indicator-color: #f44336;\n  --mdc-linear-progress-track-color: rgba(244, 67, 54, 0.25);\n}\n\nhtml {\n  --mat-sidenav-container-shape: 0;\n  --mat-sidenav-container-elevation-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  --mat-sidenav-container-width: auto;\n}\n\nhtml {\n  --mat-sidenav-container-divider-color: rgba(0, 0, 0, 0.12);\n  --mat-sidenav-container-background-color: white;\n  --mat-sidenav-container-text-color: rgba(0, 0, 0, 0.87);\n  --mat-sidenav-content-background-color: #fafafa;\n  --mat-sidenav-content-text-color: rgba(0, 0, 0, 0.87);\n  --mat-sidenav-scrim-color: rgba(0, 0, 0, 0.6);\n}\n\nhtml {\n  --mdc-text-button-container-shape: 4px;\n  --mdc-text-button-keep-touch-target: false;\n  --mdc-filled-button-container-shape: 4px;\n  --mdc-filled-button-keep-touch-target: false;\n  --mdc-protected-button-container-shape: 4px;\n  --mdc-protected-button-keep-touch-target: false;\n  --mdc-outlined-button-keep-touch-target: false;\n  --mdc-outlined-button-outline-width: 1px;\n  --mdc-outlined-button-container-shape: 4px;\n  --mat-text-button-horizontal-padding: 8px;\n  --mat-text-button-with-icon-horizontal-padding: 8px;\n  --mat-text-button-icon-spacing: 8px;\n  --mat-text-button-icon-offset: 0;\n  --mat-filled-button-horizontal-padding: 16px;\n  --mat-filled-button-icon-spacing: 8px;\n  --mat-filled-button-icon-offset: -4px;\n  --mat-protected-button-horizontal-padding: 16px;\n  --mat-protected-button-icon-spacing: 8px;\n  --mat-protected-button-icon-offset: -4px;\n  --mat-outlined-button-horizontal-padding: 15px;\n  --mat-outlined-button-icon-spacing: 8px;\n  --mat-outlined-button-icon-offset: -4px;\n}\n\nhtml {\n  --mdc-text-button-label-text-color: #000;\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mat-text-button-state-layer-color: #000;\n  --mat-text-button-disabled-state-layer-color: #000;\n  --mat-text-button-ripple-color: rgba(0, 0, 0, 0.1);\n  --mat-text-button-hover-state-layer-opacity: 0.04;\n  --mat-text-button-focus-state-layer-opacity: 0.12;\n  --mat-text-button-pressed-state-layer-opacity: 0.12;\n  --mdc-filled-button-container-color: white;\n  --mdc-filled-button-label-text-color: #000;\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mat-filled-button-state-layer-color: #000;\n  --mat-filled-button-disabled-state-layer-color: #000;\n  --mat-filled-button-ripple-color: rgba(0, 0, 0, 0.1);\n  --mat-filled-button-hover-state-layer-opacity: 0.04;\n  --mat-filled-button-focus-state-layer-opacity: 0.12;\n  --mat-filled-button-pressed-state-layer-opacity: 0.12;\n  --mdc-protected-button-container-color: white;\n  --mdc-protected-button-label-text-color: #000;\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-container-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-focus-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-hover-container-elevation-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-pressed-container-elevation-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-container-shadow-color: #000;\n  --mat-protected-button-state-layer-color: #000;\n  --mat-protected-button-disabled-state-layer-color: #000;\n  --mat-protected-button-ripple-color: rgba(0, 0, 0, 0.1);\n  --mat-protected-button-hover-state-layer-opacity: 0.04;\n  --mat-protected-button-focus-state-layer-opacity: 0.12;\n  --mat-protected-button-pressed-state-layer-opacity: 0.12;\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-label-text-color: #000;\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mat-outlined-button-state-layer-color: #000;\n  --mat-outlined-button-disabled-state-layer-color: #000;\n  --mat-outlined-button-ripple-color: rgba(0, 0, 0, 0.1);\n  --mat-outlined-button-hover-state-layer-opacity: 0.04;\n  --mat-outlined-button-focus-state-layer-opacity: 0.12;\n  --mat-outlined-button-pressed-state-layer-opacity: 0.12;\n}\n\n.mat-mdc-button.mat-primary {\n  --mdc-text-button-label-text-color: #1976d2;\n  --mat-text-button-state-layer-color: #1976d2;\n  --mat-text-button-ripple-color: rgba(25, 118, 210, 0.1);\n}\n.mat-mdc-button.mat-accent {\n  --mdc-text-button-label-text-color: #d32f2f;\n  --mat-text-button-state-layer-color: #d32f2f;\n  --mat-text-button-ripple-color: rgba(211, 47, 47, 0.1);\n}\n.mat-mdc-button.mat-warn {\n  --mdc-text-button-label-text-color: #f44336;\n  --mat-text-button-state-layer-color: #f44336;\n  --mat-text-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n\n.mat-mdc-unelevated-button.mat-primary {\n  --mdc-filled-button-container-color: #1976d2;\n  --mdc-filled-button-label-text-color: #fff;\n  --mat-filled-button-state-layer-color: #fff;\n  --mat-filled-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-unelevated-button.mat-accent {\n  --mdc-filled-button-container-color: #d32f2f;\n  --mdc-filled-button-label-text-color: #fff;\n  --mat-filled-button-state-layer-color: #fff;\n  --mat-filled-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-unelevated-button.mat-warn {\n  --mdc-filled-button-container-color: #f44336;\n  --mdc-filled-button-label-text-color: #fff;\n  --mat-filled-button-state-layer-color: #fff;\n  --mat-filled-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-raised-button.mat-primary {\n  --mdc-protected-button-container-color: #1976d2;\n  --mdc-protected-button-label-text-color: #fff;\n  --mat-protected-button-state-layer-color: #fff;\n  --mat-protected-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent {\n  --mdc-protected-button-container-color: #d32f2f;\n  --mdc-protected-button-label-text-color: #fff;\n  --mat-protected-button-state-layer-color: #fff;\n  --mat-protected-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-warn {\n  --mdc-protected-button-container-color: #f44336;\n  --mdc-protected-button-label-text-color: #fff;\n  --mat-protected-button-state-layer-color: #fff;\n  --mat-protected-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-outlined-button.mat-primary {\n  --mdc-outlined-button-label-text-color: #1976d2;\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mat-outlined-button-state-layer-color: #1976d2;\n  --mat-outlined-button-ripple-color: rgba(25, 118, 210, 0.1);\n}\n.mat-mdc-outlined-button.mat-accent {\n  --mdc-outlined-button-label-text-color: #d32f2f;\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mat-outlined-button-state-layer-color: #d32f2f;\n  --mat-outlined-button-ripple-color: rgba(211, 47, 47, 0.1);\n}\n.mat-mdc-outlined-button.mat-warn {\n  --mdc-outlined-button-label-text-color: #f44336;\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mat-outlined-button-state-layer-color: #f44336;\n  --mat-outlined-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n\nhtml {\n  --mdc-text-button-container-height: 36px;\n  --mdc-filled-button-container-height: 36px;\n  --mdc-outlined-button-container-height: 36px;\n  --mdc-protected-button-container-height: 36px;\n  --mat-text-button-touch-target-display: block;\n  --mat-filled-button-touch-target-display: block;\n  --mat-protected-button-touch-target-display: block;\n  --mat-outlined-button-touch-target-display: block;\n}\n\nhtml {\n  --mat-icon-color: inherit;\n}\n\n.mat-icon.mat-primary {\n  --mat-icon-color: #1976d2;\n}\n.mat-icon.mat-accent {\n  --mat-icon-color: #d32f2f;\n}\n.mat-icon.mat-warn {\n  --mat-icon-color: #f44336;\n}\n\nhtml {\n  --mat-toolbar-container-background-color: whitesmoke;\n  --mat-toolbar-container-text-color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-toolbar.mat-primary {\n  --mat-toolbar-container-background-color: #1976d2;\n  --mat-toolbar-container-text-color: white;\n}\n.mat-toolbar.mat-accent {\n  --mat-toolbar-container-background-color: #d32f2f;\n  --mat-toolbar-container-text-color: white;\n}\n.mat-toolbar.mat-warn {\n  --mat-toolbar-container-background-color: #f44336;\n  --mat-toolbar-container-text-color: white;\n}\n\nhtml {\n  --mat-toolbar-standard-height: 64px;\n  --mat-toolbar-mobile-height: 56px;\n}\n\nhtml {\n  --mdc-elevated-card-container-shape: 4px;\n  --mdc-outlined-card-container-shape: 4px;\n  --mdc-outlined-card-outline-width: 1px;\n}\n\nhtml {\n  --mdc-elevated-card-container-color: white;\n  --mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-container-color: white;\n  --mdc-outlined-card-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-container-elevation: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mat-card-subtitle-text-color: rgba(0, 0, 0, 0.54);\n}\n\nhtml {\n  --mdc-tab-indicator-active-indicator-height: 2px;\n  --mdc-tab-indicator-active-indicator-shape: 0;\n  --mdc-secondary-navigation-tab-container-height: 48px;\n  --mat-tab-header-divider-color: transparent;\n  --mat-tab-header-divider-height: 0;\n}\n\n.mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n  --mdc-tab-indicator-active-indicator-color: #1976d2;\n  --mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, 0.38);\n  --mat-tab-header-pagination-icon-color: #000;\n  --mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-active-label-text-color: #1976d2;\n  --mat-tab-header-active-ripple-color: #1976d2;\n  --mat-tab-header-inactive-ripple-color: #1976d2;\n  --mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-active-focus-label-text-color: #1976d2;\n  --mat-tab-header-active-hover-label-text-color: #1976d2;\n  --mat-tab-header-active-focus-indicator-color: #1976d2;\n  --mat-tab-header-active-hover-indicator-color: #1976d2;\n}\n.mat-mdc-tab-group.mat-accent, .mat-mdc-tab-nav-bar.mat-accent {\n  --mdc-tab-indicator-active-indicator-color: #d32f2f;\n  --mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, 0.38);\n  --mat-tab-header-pagination-icon-color: #000;\n  --mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-active-label-text-color: #d32f2f;\n  --mat-tab-header-active-ripple-color: #d32f2f;\n  --mat-tab-header-inactive-ripple-color: #d32f2f;\n  --mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-active-focus-label-text-color: #d32f2f;\n  --mat-tab-header-active-hover-label-text-color: #d32f2f;\n  --mat-tab-header-active-focus-indicator-color: #d32f2f;\n  --mat-tab-header-active-hover-indicator-color: #d32f2f;\n}\n.mat-mdc-tab-group.mat-warn, .mat-mdc-tab-nav-bar.mat-warn {\n  --mdc-tab-indicator-active-indicator-color: #f44336;\n  --mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, 0.38);\n  --mat-tab-header-pagination-icon-color: #000;\n  --mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-active-label-text-color: #f44336;\n  --mat-tab-header-active-ripple-color: #f44336;\n  --mat-tab-header-inactive-ripple-color: #f44336;\n  --mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, 0.6);\n  --mat-tab-header-active-focus-label-text-color: #f44336;\n  --mat-tab-header-active-hover-label-text-color: #f44336;\n  --mat-tab-header-active-focus-indicator-color: #f44336;\n  --mat-tab-header-active-hover-indicator-color: #f44336;\n}\n.mat-mdc-tab-group.mat-background-primary, .mat-mdc-tab-nav-bar.mat-background-primary {\n  --mat-tab-header-with-background-background-color: #1976d2;\n  --mat-tab-header-with-background-foreground-color: white;\n}\n.mat-mdc-tab-group.mat-background-accent, .mat-mdc-tab-nav-bar.mat-background-accent {\n  --mat-tab-header-with-background-background-color: #d32f2f;\n  --mat-tab-header-with-background-foreground-color: white;\n}\n.mat-mdc-tab-group.mat-background-warn, .mat-mdc-tab-nav-bar.mat-background-warn {\n  --mat-tab-header-with-background-background-color: #f44336;\n  --mat-tab-header-with-background-foreground-color: white;\n}\n\n.mat-mdc-tab-header {\n  --mdc-secondary-navigation-tab-container-height: 48px;\n}\n\nhtml {\n  --mdc-snackbar-container-shape: 4px;\n}\n\nhtml {\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n  --mat-snack-bar-button-color: #d32f2f;\n}\n\nbody {\n  color: #444444;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  color: #333333;\n}\n\nh2 {\n  border-top: 1px solid #DBDBDB;\n}\n\nh6 {\n  color: #6E6E6E;\n}\n\np,\nol,\nul,\nli,\ninput,\na {\n  color: #444444;\n}\n\n.app-toolbar a {\n  color: #FFFFFF;\n}\n\ncode {\n  color: #444444;\n}\n\n.sidenav-content a {\n  color: #1976D2;\n}\n\n.error-text {\n  color: #DD0031;\n}\n\nfooter {\n  background-color: #1976d2;\n}\nfooter aio-footer > * {\n  color: #FFFFFF;\n}\nfooter aio-footer a {\n  color: #FFFFFF;\n}\nfooter aio-footer h3 {\n  color: #FFFFFF;\n}\n\nhtml,\nbody,\n.content {\n  background: #FFFFFF;\n}\n\n.background-sky {\n  background: linear-gradient(145deg, #0d47a1, #42a5f5);\n  color: rgba(0, 0, 0, 0.87);\n}\n\nsection#intro {\n  color: #FFFFFF;\n}\n\n.announcement-bar {\n  background-color: #FFFFFF;\n}\n.announcement-bar .button {\n  color: #FFFFFF;\n  background-color: #1976D2;\n}\n.announcement-bar .button:hover {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.home-row .card {\n  background-color: #FFFFFF;\n}\n.home-row .card .card-text-container p {\n  color: #444444;\n}\n.home-row .card:hover h2 {\n  color: #1976D2;\n}\n\n.button.hero-cta {\n  background-color: #FFFFFF;\n}\n\n.cta-bar .hero-cta {\n  color: #1976D2;\n}\n\n.text-headline {\n  color: #1976D2;\n}\n\n.marketing-banner {\n  background-color: #1e88e5;\n}\n.marketing-banner .banner-headline {\n  color: #FFFFFF;\n}\n\n.nf-response h1 {\n  color: #1976D2;\n}\n\n.nf-icon.material-icons {\n  color: #1976D2;\n}\n\nmat-sidenav-container.sidenav-container {\n  background-color: #FFFFFF;\n}\nmat-sidenav-container.sidenav-container mat-sidenav.sidenav {\n  background-color: #F2F2F2;\n  border-right: 1px solid #DBDBDB;\n}\nmat-sidenav-container.sidenav-container mat-sidenav.sidenav .doc-version {\n  border-top: 1px solid #DBDBDB;\n}\n\naio-nav-menu aio-nav-item .vertical-menu-item {\n  color: #444444;\n}\naio-nav-menu aio-nav-item .vertical-menu-item:hover {\n  background-color: #DBDBDB;\n  color: #1976D2;\n  text-shadow: 0 0 5px #FFFFFF;\n}\naio-nav-menu aio-nav-item .vertical-menu-item:hover.selected {\n  color: #1669bb;\n}\naio-nav-menu aio-nav-item .vertical-menu-item.selected {\n  color: #1669bb;\n}\n\n.page-home mat-toolbar.app-toolbar {\n  background: #1976D2;\n}\nmat-toolbar.app-toolbar mat-icon {\n  color: #FFFFFF;\n}\nmat-toolbar.app-toolbar .hamburger:hover {\n  color: #FAFAFA;\n}\nmat-toolbar.app-toolbar .hamburger .mat-icon {\n  color: #FFFFFF;\n}\nmat-toolbar.app-toolbar .nav-link.home:focus {\n  outline: 1px solid rgba(255, 255, 255, 0.8);\n}\nmat-toolbar.app-toolbar aio-top-menu ul li a.nav-link .nav-link-inner:hover {\n  background: rgba(255, 255, 255, 0.15);\n}\nmat-toolbar.app-toolbar aio-top-menu ul li a.nav-link:focus .nav-link-inner {\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 0 1px 2px rgba(255, 255, 255, 0.8);\n}\nmat-toolbar.app-toolbar aio-top-menu ul li a.nav-link:active .nav-link-inner {\n  background: rgba(255, 255, 255, 0.15);\n}\nmat-toolbar.app-toolbar aio-top-menu ul li.selected a.nav-link .nav-link-inner {\n  background: rgba(255, 255, 255, 0.15);\n}\nmat-toolbar.app-toolbar aio-search-box.search-container input {\n  color: #444444;\n  background-color: #FFFFFF;\n}\nmat-toolbar.app-toolbar aio-search-box.search-container input:-ms-input-placeholder {\n  color: #6E6E6E;\n}\nmat-toolbar.app-toolbar aio-search-box.search-container input::-ms-input-placeholder {\n  color: #6E6E6E;\n}\nmat-toolbar.app-toolbar aio-search-box.search-container input::-webkit-input-placeholder {\n  color: #6E6E6E;\n}\nmat-toolbar.app-toolbar aio-search-box.search-container input::placeholder {\n  color: #6E6E6E;\n}\nmat-toolbar.app-toolbar aio-search-box.search-container .search-box-shortcut {\n  border-color: #6E6E6E;\n  color: #6E6E6E;\n}\n@media screen and (min-width: 351px) {\n  mat-toolbar.app-toolbar aio-theme-toggle {\n    border-right: 1px solid #FFFFFF;\n  }\n}\n\n.alert {\n  color: #444444;\n}\n.alert.is-critical {\n  border-left: 8px solid #DD0031;\n  background-color: rgba(221, 0, 49, 0.05);\n}\n.alert.is-critical h1,\n.alert.is-critical h2,\n.alert.is-critical h3,\n.alert.is-critical h4,\n.alert.is-critical h5,\n.alert.is-critical h6 {\n  color: #DD0031;\n}\n.alert.is-important {\n  border-left: 8px solid #FF9800;\n  background-color: rgba(255, 152, 0, 0.05);\n}\n.alert.is-important h1,\n.alert.is-important h2,\n.alert.is-important h3,\n.alert.is-important h4,\n.alert.is-important h5,\n.alert.is-important h6 {\n  color: #FF9800;\n}\n.alert.is-helpful {\n  border-left: 8px solid #1976D2;\n  background-color: rgba(25, 118, 210, 0.05);\n}\n.alert.is-helpful h1,\n.alert.is-helpful h2,\n.alert.is-helpful h3,\n.alert.is-helpful h4,\n.alert.is-helpful h5,\n.alert.is-helpful h6 {\n  color: #1976D2;\n}\n.alert.archive-warning {\n  background-color: #C3002F;\n}\n.alert.archive-warning * {\n  color: #FFFFFF;\n}\n.alert.archive-warning a {\n  color: #FFFFFF;\n}\n\naio-api-list .api-filter .form-search input {\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  border: 1px solid #FFFFFF;\n  background-color: #FFFFFF;\n  color: #444444;\n}\naio-api-list .api-filter .form-search input:-ms-input-placeholder {\n  color: #6E6E6E;\n}\naio-api-list .api-filter .form-search input::-ms-input-placeholder {\n  color: #6E6E6E;\n}\naio-api-list .api-filter .form-search input::-webkit-input-placeholder {\n  color: #6E6E6E;\n}\naio-api-list .api-filter .form-search input::placeholder {\n  color: #6E6E6E;\n}\naio-api-list .api-filter .form-search input:focus {\n  border: 1px solid #42A5F5;\n  box-shadow: 0 2px 2px rgba(66, 165, 245, 0.24), 0 0 2px rgba(66, 165, 245, 0.12);\n}\naio-api-list .api-filter .form-search .material-icons {\n  color: #546E7A;\n}\naio-api-list .api-list-container a {\n  color: #1976D2;\n}\naio-api-list .api-list-container .api-list li a {\n  color: #546E7A;\n}\naio-api-list .api-list-container .api-list li a:hover {\n  background: #ECEFF1;\n  color: #2196F3;\n}\n\n.symbol {\n  box-shadow: 0 1px 2px rgba(10, 16, 20, 0.24);\n  color: #FFFFFF;\n}\n.symbol.all {\n  background: #FFFFFF;\n}\n.symbol.all:before {\n  content: \" \";\n}\n.symbol.class {\n  background: #2196F3;\n}\n.symbol.class:before {\n  content: \"C\";\n}\n.symbol.const {\n  background: #6E6E6E;\n}\n.symbol.const:before {\n  content: \"K\";\n}\n.symbol.decorator {\n  background: #1565C0;\n}\n.symbol.decorator:before {\n  content: \"@\";\n}\n.symbol.directive {\n  background: #D81B60;\n}\n.symbol.directive:before {\n  content: \"D\";\n}\n.symbol.enum {\n  background: #FFA000;\n}\n.symbol.enum:before {\n  content: \"E\";\n}\n.symbol.function {\n  background: #4CAF50;\n}\n.symbol.function:before {\n  content: \"F\";\n}\n.symbol.interface {\n  background: #009688;\n}\n.symbol.interface:before {\n  content: \"I\";\n}\n.symbol.let {\n  background: #6E6E6E;\n}\n.symbol.let:before {\n  content: \"K\";\n}\n.symbol.ngmodule {\n  background: #940;\n}\n.symbol.ngmodule:before {\n  content: \"M\";\n}\n.symbol.package {\n  background: #8E24AA;\n}\n.symbol.package:before {\n  content: \"Pk\";\n}\n.symbol.pipe {\n  background: #546E7A;\n}\n.symbol.pipe:before {\n  content: \"P\";\n}\n.symbol.element {\n  background: #AA3000;\n}\n.symbol.element:before {\n  content: \"El\";\n}\n.symbol.block {\n  background: #2E7D32;\n}\n.symbol.block:before {\n  content: \"B\";\n}\n.symbol.type-alias {\n  background: #7CB342;\n}\n.symbol.type-alias:before {\n  content: \"T\";\n}\n.symbol.var {\n  background: #6E6E6E;\n}\n.symbol.var:before {\n  content: \"K\";\n}\n\na.button.mat-button.button-secondary,\n.button.button-secondary {\n  background: #6E6E6E;\n  color: rgba(255, 255, 255, 0.87);\n}\na.button.mat-button.button-plain,\n.button.button-plain {\n  background: #FFFFFF;\n  color: rgba(68, 68, 68, 0.87);\n}\na.button.mat-button.button-subtle,\n.button.button-subtle {\n  background: #6E6E6E;\n  color: #e1e1e1;\n}\na.button.mat-button.button-subtle:hover,\n.button.button-subtle:hover {\n  color: rgba(255, 255, 255, 0.7);\n}\na.button.mat-button.button-blue,\n.button.button-blue {\n  background: #1976D2;\n  color: rgba(255, 255, 255, 0.87);\n}\na.button.mat-button.button-blue:hover,\n.button.button-blue:hover {\n  color: rgba(255, 255, 255, 0.7);\n}\na.button.mat-button.button-banner,\n.button.button-banner {\n  background: #444444;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.cta-bar .button:hover {\n  color: #FAFAFA;\n}\n\n.group-buttons button.button.mat-button.filter-button {\n  background-color: rgba(25, 118, 210, 0.2);\n}\n.group-buttons button.button.mat-button.filter-button.selected {\n  background-color: #1976D2;\n  color: #FFFFFF;\n}\n.group-buttons button.button.mat-button.filter-button:focus, .group-buttons button.button.mat-button.filter-button:hover {\n  background-color: rgba(25, 118, 210, 0.7);\n  color: #FFFFFF;\n}\n\n.callout header {\n  color: #FFFFFF;\n}\n.callout.is-critical {\n  border-color: #DD0031;\n  background: rgba(221, 0, 49, 0.05);\n}\n.callout.is-critical header {\n  background: #DD0031;\n}\n.callout.is-important {\n  border-color: #FF9800;\n  background: rgba(255, 152, 0, 0.05);\n}\n.callout.is-important header {\n  background: #FFA000;\n}\n.callout.is-helpful {\n  border-color: #1976D2;\n  background: rgba(25, 118, 210, 0.05);\n}\n.callout.is-helpful header {\n  background: #1976D2;\n}\n\n.card-container .docs-card {\n  background-color: #FFFFFF;\n}\n.card-container .docs-card section {\n  color: #1976D2;\n}\n.card-container .docs-card p {\n  color: #444444;\n}\n.card-container .docs-card .card-footer {\n  color: #1669bb;\n  background-color: rgba(25, 118, 210, 0.1);\n  border-top: 0.5px solid #DBDBDB;\n}\n.card-container .docs-card .card-footer a {\n  color: #6E6E6E;\n}\n\ncode-example:not(.no-box) {\n  background-color: rgba(241, 241, 241, 0.2);\n  border: 0.5px solid #DBDBDB;\n  color: #444444;\n}\ncode-example[language=shell], code-example[language=sh], code-example[language=bash] {\n  background-color: #444444;\n}\ncode-example header {\n  background-color: #1E88E5;\n  color: #FAFAFA;\n}\n\ncode-tabs .code-tab-group .mat-tab-label:hover {\n  background: rgba(0, 0, 0, 0.04);\n}\n\ncode-example.avoid header,\ncode-example.avoidFile header {\n  border: 2px solid #DD0031;\n  background: #DD0031;\n}\n\ncode-example.avoid,\ncode-example.avoidFile,\ncode-tabs.avoid mat-tab-body,\ncode-tabs.avoidFile mat-tab-body {\n  border: 0.5px solid #DD0031;\n}\n\naio-code pre.prettyprint code ol.linenums {\n  color: #aeaeae;\n}\naio-code pre.prettyprint code ol.linenums li::marker {\n  color: #aeaeae;\n}\naio-code pre.prettyprint code .code-missing {\n  color: #C3002F;\n}\naio-code pre.prettyprint.lang-sh .copy-button, aio-code pre.prettyprint.lang-bash .copy-button {\n  color: #DBDBDB;\n}\naio-code pre.prettyprint.lang-sh .copy-button:hover, aio-code pre.prettyprint.lang-bash .copy-button:hover {\n  color: #F2F2F2;\n}\naio-code .copy-button {\n  color: #1669bb;\n}\n\n.sidenav-content code a,\n.sidenav-content a > code {\n  color: #1669bb;\n}\n.sidenav-content :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(pre) > code {\n  background-color: rgba(219, 219, 219, 0.3);\n}\n.sidenav-content :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(pre):not(a) > code {\n  color: #444444;\n}\n\n/* PRETTY PRINTING STYLES for prettify.js. */\n/* The following class|color styles are derived from https://github.com/google/code-prettify/blob/master/src/prettify.css*/\n/* SPAN elements with the classes below are added by prettyprint. */\n.pln {\n  color: #000;\n} /* plain text */\n@media screen {\n  .str {\n    color: #800;\n  } /* string content */\n  .kwd {\n    color: #00f;\n  } /* a keyword */\n  .com {\n    color: #060;\n  } /* a comment */\n  .typ {\n    color: red;\n  } /* a type name */\n  .lit {\n    color: #08c;\n  } /* a literal value */\n  /* punctuation, lisp open bracket, lisp close bracket */\n  .pun,\n  .opn,\n  .clo {\n    color: #660;\n  }\n  .tag {\n    color: #008;\n  } /* a markup tag name */\n  .atn {\n    color: #606;\n  } /* a markup attribute name */\n  .atv {\n    color: #800;\n  } /* a markup attribute value */\n  .dec,\n  .var {\n    color: #606;\n  } /* a declaration; a variable name */\n  .fun {\n    color: red;\n  } /* a function name */\n}\n/* Use higher contrast and text-weight for printable form. */\n@media print, projection {\n  .str {\n    color: #060;\n  }\n  .kwd {\n    color: #006;\n    font-weight: bold;\n  }\n  .com {\n    color: #600;\n    font-style: italic;\n  }\n  .typ {\n    color: #404;\n    font-weight: bold;\n  }\n  .lit {\n    color: #044;\n  }\n  .pun,\n  .opn,\n  .clo {\n    color: #440;\n  }\n  .tag {\n    color: #006;\n    font-weight: bold;\n  }\n  .atn {\n    color: #404;\n  }\n  .atv {\n    color: #060;\n  }\n}\n/* SHELL / TERMINAL CODE BLOCKS */\ncode-example[language=shell] .pnk,\ncode-example[language=shell] .blk,\ncode-example[language=shell] .pln,\ncode-example[language=shell] .otl,\ncode-example[language=shell] .kwd,\ncode-example[language=shell] .typ,\ncode-example[language=shell] .tag,\ncode-example[language=shell] .str,\ncode-example[language=shell] .atv,\ncode-example[language=shell] .atn,\ncode-example[language=shell] .com,\ncode-example[language=shell] .lit,\ncode-example[language=shell] .pun,\ncode-example[language=shell] .dec, code-example[language=sh] .pnk,\ncode-example[language=sh] .blk,\ncode-example[language=sh] .pln,\ncode-example[language=sh] .otl,\ncode-example[language=sh] .kwd,\ncode-example[language=sh] .typ,\ncode-example[language=sh] .tag,\ncode-example[language=sh] .str,\ncode-example[language=sh] .atv,\ncode-example[language=sh] .atn,\ncode-example[language=sh] .com,\ncode-example[language=sh] .lit,\ncode-example[language=sh] .pun,\ncode-example[language=sh] .dec, code-example[language=bash] .pnk,\ncode-example[language=bash] .blk,\ncode-example[language=bash] .pln,\ncode-example[language=bash] .otl,\ncode-example[language=bash] .kwd,\ncode-example[language=bash] .typ,\ncode-example[language=bash] .tag,\ncode-example[language=bash] .str,\ncode-example[language=bash] .atv,\ncode-example[language=bash] .atn,\ncode-example[language=bash] .com,\ncode-example[language=bash] .lit,\ncode-example[language=bash] .pun,\ncode-example[language=bash] .dec {\n  color: #17ff0b;\n}\ncode-example[language=shell] .copy-button, code-example[language=sh] .copy-button, code-example[language=bash] .copy-button {\n  color: #B0BEC5;\n}\n\naio-contributor .contributor-card {\n  background: #FAFAFA;\n  box-shadow: 0px 1px 6px 1px #6E6E6E;\n}\naio-contributor .contributor-image-wrapper {\n  background-color: #333333;\n}\n\naio-cookies-popup .cookies-popup {\n  background: #252525;\n  color: rgba(255, 255, 255, 0.7);\n}\naio-cookies-popup .cookies-popup .actions [mat-button] {\n  color: #7fc9ff;\n}\naio-cookies-popup .cookies-popup .actions [mat-button] .mat-button-focus-overlay {\n  background: #FFFFFF;\n}\n\naio-shell.mode-archive .mat-toolbar.mat-primary, aio-shell.mode-archive footer {\n  background: linear-gradient(145deg, #263238, #78909C);\n}\naio-shell.mode-archive .vertical-menu-item.selected, aio-shell.mode-archive .vertical-menu-item:hover {\n  color: #263238;\n}\naio-shell.mode-archive .toc-inner ul.toc-list li.active a {\n  color: #263238;\n}\naio-shell.mode-archive .toc-inner ul.toc-list li.active a:before {\n  background-color: #263238;\n}\naio-shell.mode-archive .toc-inner ul.toc-list li:hover a {\n  color: #263238;\n}\n\naio-shell.mode-next .mat-toolbar.mat-primary, aio-shell.mode-next footer {\n  background: linear-gradient(145deg, #DD0031, #C3002F);\n}\naio-shell.mode-next .vertical-menu-item.selected, aio-shell.mode-next .vertical-menu-item:hover {\n  color: #DD0031;\n}\naio-shell.mode-next .toc-inner ul.toc-list li.active a {\n  color: #DD0031;\n}\naio-shell.mode-next .toc-inner ul.toc-list li.active a:before {\n  background-color: #DD0031;\n}\naio-shell.mode-next .toc-inner ul.toc-list li:hover a {\n  color: #DD0031;\n}\n\naio-shell.mode-rc .mat-toolbar.mat-primary, aio-shell.mode-rc footer {\n  background: linear-gradient(145deg, #DDA302, #C3A300);\n}\naio-shell.mode-rc .vertical-menu-item.selected, aio-shell.mode-rc .vertical-menu-item:hover {\n  color: #DDA302;\n}\naio-shell.mode-rc .toc-inner ul.toc-list li.active a {\n  color: #DDA302;\n}\naio-shell.mode-rc .toc-inner ul.toc-list li.active a:before {\n  background-color: #DDA302;\n}\naio-shell.mode-rc .toc-inner ul.toc-list li:hover a {\n  color: #DDA302;\n}\n\ndetails {\n  box-shadow: 0 1px 4px 0 rgba(10, 16, 20, 0.37);\n}\n\n.error-list li .symbol.runtime {\n  background: #4CAF50;\n}\n.error-list li .symbol.compiler {\n  background: #2196F3;\n}\n.error-list li a {\n  color: #546E7A;\n}\n.error-list li a:hover {\n  background: #ECEFF1;\n  color: #2196F3;\n}\n\n.filetree {\n  background: #FFFFFF;\n  border: 4px solid #DBDBDB;\n}\n.filetree .file {\n  color: #444444;\n}\n.filetree .children .file:before {\n  border-color: #DBDBDB;\n}\n\n.reviewed {\n  color: #5e5e5e;\n}\n\n.sidenav-content h1 .header-link,\n.sidenav-content h2 .header-link,\n.sidenav-content h3 .header-link,\n.sidenav-content h4 .header-link,\n.sidenav-content h5 .header-link,\n.sidenav-content h6 .header-link {\n  color: #6E6E6E;\n}\n\nhr {\n  background: #DBDBDB;\n}\n\n.content .lightbox {\n  border: 1px solid #DBDBDB;\n  background-color: #EBEBEB;\n}\n.content .lightbox img {\n  background-color: #FFFFFF;\n}\n\n.api-header label {\n  color: #FFFFFF;\n}\n\nlabel.api-status-label {\n  color: #FFFFFF;\n  background-color: #6E6E6E;\n}\nlabel.api-status-label.deprecated, label.api-status-label.security, label.api-status-label.impure-pipe, label.api-status-label.dev-preview, label.api-status-label.experimental {\n  background-color: #DD0031;\n}\nlabel.api-status-label a {\n  color: inherit;\n  line-height: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n}\nlabel.api-type-label {\n  color: #FFFFFF;\n  background-color: #1E88E5;\n}\nlabel.api-type-label.all {\n  background: #FFFFFF;\n}\nlabel.api-type-label.class {\n  background: #2196F3;\n}\nlabel.api-type-label.const {\n  background: #6E6E6E;\n}\nlabel.api-type-label.decorator {\n  background: #1565C0;\n}\nlabel.api-type-label.directive {\n  background: #D81B60;\n}\nlabel.api-type-label.enum {\n  background: #FFA000;\n}\nlabel.api-type-label.function {\n  background: #4CAF50;\n}\nlabel.api-type-label.interface {\n  background: #009688;\n}\nlabel.api-type-label.let {\n  background: #6E6E6E;\n}\nlabel.api-type-label.ngmodule {\n  background: #940;\n}\nlabel.api-type-label.package {\n  background: #8E24AA;\n}\nlabel.api-type-label.pipe {\n  background: #546E7A;\n}\nlabel.api-type-label.element {\n  background: #AA3000;\n}\nlabel.api-type-label.block {\n  background: #2E7D32;\n}\nlabel.api-type-label.type-alias {\n  background: #7CB342;\n}\nlabel.api-type-label.var {\n  background: #6E6E6E;\n}\nlabel.page-label {\n  color: #FFFFFF;\n  background-color: #ECEFF1;\n  color: #6E6E6E;\n}\nlabel.property-type-label {\n  color: #FFFFFF;\n  background-color: #444444;\n  color: #FFFFFF;\n}\n\naio-notification {\n  background: #444444;\n}\naio-notification .close-button {\n  background: #444444;\n}\naio-notification .content {\n  background: #444444;\n}\naio-notification .content .action-button {\n  background: #DD0031;\n}\n\n.presskit-container .presskit-section:not(:first-child) {\n  border-top: 1px solid #DBDBDB;\n}\n.presskit-container .presskit-section .presskit-icon-group .presskit-icon-item .presskit-image-container .transparent-img {\n  background-color: #FFFFFF;\n}\n.presskit-container .presskit-section .presskit-icon-group .presskit-icon-item .presskit-image-container .transparent-img-inverse {\n  background-color: #333333;\n}\n\naio-resource-list .subcategory-title {\n  background-color: #ECEFF1;\n}\naio-resource-list .resource-row-link {\n  background-color: #FFFFFF;\n}\naio-resource-list .resource-row-link:hover {\n  border-color: rgba(25, 118, 210, 0.5);\n  box-shadow: 0 8px 8px rgba(1, 131, 163, 0.24), 0 0 8px rgba(1, 67, 163, 0.12), 0 6px 18px rgba(43, 133, 231, 0.12);\n}\n\n.page-guide-roadmap .completed-details {\n  border-top: 1px solid #DBDBDB;\n}\n\naio-search-results .search-results {\n  background-color: #444444;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n}\naio-search-results .search-results .search-area .search-section-header {\n  color: #FFFFFF;\n}\naio-search-results .search-results .search-area ul .search-result-item {\n  color: #FAFAFA;\n}\naio-search-results .search-results .search-area ul .search-result-item:hover {\n  color: #FFFFFF;\n}\naio-search-results .search-results .no-results {\n  color: #FFFFFF;\n}\naio-search-results .search-results a {\n  color: rgba(0, 0, 0, 0.87);\n}\naio-search-results .search-results .close-button {\n  color: #FAFAFA;\n}\naio-search-results.embedded .search-results .search-area .search-section-header {\n  color: #444444;\n}\naio-search-results.embedded .search-results .search-area .search-result-item {\n  color: #5e5e5e;\n}\naio-search-results.embedded .search-results .search-area .search-result-item:hover {\n  color: #1E88E5;\n}\naio-search-results.embedded .search-results .no-results {\n  color: rgba(0, 0, 0, 0.87);\n}\naio-search-results.embedded .search-results a {\n  color: #1976D2;\n}\n\naio-select .form-select-button {\n  background: #FFFFFF;\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  border: 1px solid #FFFFFF;\n  color: #546E7A;\n}\naio-select .form-select-button:focus {\n  border: 1px solid #42A5F5;\n  box-shadow: 0 2px 2px rgba(66, 165, 245, 0.24), 0 0 2px rgba(66, 165, 245, 0.12);\n}\naio-select .form-select-button.disabled {\n  color: lightgrey;\n}\naio-select .form-select-dropdown {\n  background: #fafafa;\n  box-shadow: 0 16px 16px rgba(10, 16, 20, 0.24), 0 0 16px rgba(10, 16, 20, 0.12);\n}\naio-select .form-select-dropdown li:hover, aio-select .form-select-dropdown li.current {\n  background-color: #ECEFF1;\n  color: f(false, #78909C, #607D8B);\n}\naio-select .form-select-dropdown li.selected {\n  background-color: #CFD8DC;\n}\n\ntable {\n  min-width: 100%;\n  box-shadow: 0 2px 2px rgba(110, 110, 110, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  background-color: #FFFFFF;\n}\ntable thead > tr > th {\n  background: rgba(219, 219, 219, 0.2);\n  border-bottom: 1px solid #DBDBDB;\n  color: #444444;\n}\ntable tbody > tr > th,\ntable tbody > tr > td {\n  border-bottom: 1px solid #DBDBDB;\n}\n@media (max-width: 480px) {\n  table tbody > tr > td tr td:first-child {\n    background-color: #DBDBDB;\n  }\n}\ntable tbody > tr > th {\n  background: rgba(219, 219, 219, 0.2);\n}\ntable tbody > tr > th:not(:last-child) {\n  border-right: 1px solid #DBDBDB;\n}\n@media (max-width: 480px) {\n  table tbody > tr:last-child td {\n    border-bottom: 1px solid #DBDBDB;\n  }\n}\n\naio-toc .toc-inner .toc-heading.secondary:hover {\n  color: #1E88E5;\n}\naio-toc .toc-inner button.toc-heading.embedded:focus, aio-toc .toc-inner button.toc-more-items.embedded:focus {\n  background: #DBDBDB;\n  color: #6E6E6E;\n}\naio-toc .toc-inner button.toc-heading:hover:not(.embedded) {\n  color: #1E88E5;\n}\naio-toc .toc-inner button.toc-more-items {\n  color: #6E6E6E;\n}\naio-toc .toc-inner button.toc-more-items:hover {\n  color: #1E88E5;\n}\naio-toc .toc-inner ul.toc-list li.h1:after {\n  background: #DBDBDB;\n}\naio-toc .toc-inner ul.toc-list li a {\n  color: #5e5e5e;\n}\naio-toc .toc-inner ul.toc-list li:hover * {\n  color: #1E88E5;\n}\naio-toc .toc-inner ul.toc-list li.active * {\n  color: #1976D2;\n}\naio-toc .toc-inner ul.toc-list li.active a:before {\n  background: #1976D2;\n}\naio-toc .toc-inner ul.toc-list:not(.embedded) li:before {\n  border-left-color: #DBDBDB;\n}\naio-toc .toc-inner ul.toc-list:not(.embedded) li:not(.active):hover a:before {\n  background: #DBDBDB;\n}\naio-toc.embedded .toc-inner .toc-heading.secondary {\n  color: rgba(0, 0, 0, 0.87);\n}","@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mdc/linear-progress' as tokens-mdc-linear-progress;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n\n/// Outputs base theme styles (styles not dependent on the color, typography, or density settings)\n/// for the mat-progress-bar.\n/// @param {Map} $theme The theme to generate base styles for.\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-linear-progress-theme.theme(tokens-mdc-linear-progress.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include mdc-linear-progress-theme.theme(\n    tokens-mdc-linear-progress.get-color-tokens($theme, $palette-name));\n}\n\n/// Outputs color theme styles for the mat-progress-bar.\n/// @param {Map} $theme The theme to generate color styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the progress bar: primary, secondary, tertiary,\n///      or error (If not specified, default primary color will be used).\n@mixin color($theme, $options...) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color), $options...);\n  }\n  @else {\n    .mat-mdc-progress-bar {\n      @include _palette-styles($theme, primary);\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n/// Outputs typography theme styles for the mat-progress-bar.\n/// @param {Map} $theme The theme to generate typography styles for.\n@mixin typography($theme) {}\n\n\n/// Outputs density theme styles for the mat-progress-bar.\n/// @param {Map} $theme The theme to generate density styles for.\n@mixin density($theme) {}\n\n/// Outputs all (base, color, typography, and density) theme styles for the mat-progress-bar.\n/// @param {Map} $theme The theme to generate styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the progress bar: primary, secondary, tertiary,\n///      or error (If not specified, default primary color will be used).\n@mixin theme($theme, $options...) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme), $options...);\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens, $options...) {\n  $mdc-linear-progress-tokens:\n    token-utils.get-tokens-for($tokens, tokens-mdc-linear-progress.$prefix, $options...);\n  @include mdc-linear-progress-theme.theme($mdc-linear-progress-tokens);\n}\n","@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/filled-button' as tokens-mdc-filled-button;\n@use '../core/tokens/m2/mat/filled-button' as tokens-mat-filled-button;\n@use '../core/tokens/m2/mdc/outlined-button' as tokens-mdc-outlined-button;\n@use '../core/tokens/m2/mat/outlined-button' as tokens-mat-outlined-button;\n@use '../core/tokens/m2/mdc/protected-button' as tokens-mdc-protected-button;\n@use '../core/tokens/m2/mat/protected-button' as tokens-mat-protected-button;\n@use '../core/tokens/m2/mdc/text-button' as tokens-mdc-text-button;\n@use '../core/tokens/m2/mat/text-button' as tokens-mat-text-button;\n@use '../core/style/sass-utils';\n\n@mixin _text-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-text-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-text-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-text-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-text-button.$prefix, $mat-tokens);\n}\n\n@mixin _filled-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-filled-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-filled-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-filled-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-filled-button.$prefix, $mat-tokens);\n}\n\n@mixin _protected-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-protected-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-protected-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-protected-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-protected-button.$prefix, $mat-tokens);\n}\n\n@mixin _outlined-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-outlined-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-outlined-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-outlined-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix, $mat-tokens);\n}\n\n@mixin _theme-from-tokens($tokens, $options...) {\n  $mdc-text-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mdc-text-button.$prefix, $options...);\n  $mdc-protected-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mdc-protected-button.$prefix, $options...);\n  $mdc-filled-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mdc-filled-button.$prefix, $options...);\n  $mdc-outlined-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mdc-outlined-button.$prefix, $options...);\n  $mat-text-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mat-text-button.$prefix, $options...);\n  $mat-protected-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mat-protected-button.$prefix, $options...);\n  $mat-filled-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mat-filled-button.$prefix, $options...);\n  $mat-outlined-button-tokens:\n      token-utils.get-tokens-for($tokens, tokens-mat-outlined-button.$prefix, $options...);\n  @include mdc-button-text-theme.theme($mdc-text-button-tokens);\n  @include mdc-button-protected-theme.theme($mdc-protected-button-tokens);\n  @include mdc-button-filled-theme.theme($mdc-filled-button-tokens);\n  @include mdc-button-outlined-theme.theme($mdc-outlined-button-tokens);\n  @include token-utils.create-token-values(tokens-mat-text-button.$prefix, $mat-text-button-tokens);\n  @include token-utils.create-token-values(\n      tokens-mat-protected-button.$prefix, $mat-protected-button-tokens);\n  @include token-utils.create-token-values(\n      tokens-mat-filled-button.$prefix, $mat-filled-button-tokens);\n  @include token-utils.create-token-values(\n      tokens-mat-outlined-button.$prefix, $mat-outlined-button-tokens);\n}\n\n/// Outputs base theme styles (styles not dependent on the color, typography, or density settings)\n/// for the mat-button.\n/// @param {Map} $theme The theme to generate base styles for.\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-button-text-theme.theme(\n        tokens-mdc-text-button.get-unthemable-tokens());\n      @include mdc-button-filled-theme.theme(\n        tokens-mdc-filled-button.get-unthemable-tokens());\n      @include mdc-button-protected-theme.theme(\n        tokens-mdc-protected-button.get-unthemable-tokens());\n      @include mdc-button-outlined-theme.theme(\n        tokens-mdc-outlined-button.get-unthemable-tokens());\n\n      @include token-utils.create-token-values(tokens-mat-text-button.$prefix,\n        tokens-mat-text-button.get-unthemable-tokens());\n      @include token-utils.create-token-values(tokens-mat-filled-button.$prefix,\n        tokens-mat-filled-button.get-unthemable-tokens());\n      @include token-utils.create-token-values(tokens-mat-protected-button.$prefix,\n        tokens-mat-protected-button.get-unthemable-tokens());\n      @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix,\n        tokens-mat-outlined-button.get-unthemable-tokens());\n    }\n  }\n}\n\n/// Outputs color theme styles for the mat-button.\n/// @param {Map} $theme The theme to generate color styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the button: primary, secondary, tertiary,\n///      or error (If not specified, default primary color will be used).\n@mixin color($theme, $options...) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color), $options...);\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include _text-button-variant($theme, null);\n      @include _filled-button-variant($theme, null);\n      @include _protected-button-variant($theme, null);\n      @include _outlined-button-variant($theme, null);\n    }\n\n    .mat-mdc-button {\n      &.mat-primary {\n        @include _text-button-variant($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _text-button-variant($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _text-button-variant($theme, warn);\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-primary {\n        @include _filled-button-variant($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _filled-button-variant($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _filled-button-variant($theme, warn);\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-primary {\n        @include _protected-button-variant($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _protected-button-variant($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _protected-button-variant($theme, warn);\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      &.mat-primary {\n        @include _outlined-button-variant($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($theme, warn);\n      }\n    }\n  }\n}\n\n/// Outputs typography theme styles for the mat-button.\n/// @param {Map} $theme The theme to generate typography styles for.\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-button-text-theme.theme(\n        tokens-mdc-text-button.get-typography-tokens($theme));\n      @include mdc-button-filled-theme.theme(\n        tokens-mdc-filled-button.get-typography-tokens($theme));\n      @include mdc-button-outlined-theme.theme(\n        tokens-mdc-outlined-button.get-typography-tokens($theme));\n      @include mdc-button-protected-theme.theme(\n        tokens-mdc-protected-button.get-typography-tokens($theme));\n\n      @include token-utils.create-token-values(tokens-mat-text-button.$prefix,\n        tokens-mat-text-button.get-typography-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-filled-button.$prefix,\n        tokens-mat-filled-button.get-typography-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-protected-button.$prefix,\n        tokens-mat-protected-button.get-typography-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix,\n        tokens-mat-outlined-button.get-typography-tokens($theme));\n    }\n  }\n}\n\n/// Outputs density theme styles for the mat-button.\n/// @param {Map} $theme The theme to generate density styles for.\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-button-text-theme.theme(\n        tokens-mdc-text-button.get-density-tokens($theme));\n      @include mdc-button-filled-theme.theme(\n        tokens-mdc-filled-button.get-density-tokens($theme));\n      @include mdc-button-outlined-theme.theme(\n        tokens-mdc-outlined-button.get-density-tokens($theme));\n      @include mdc-button-protected-theme.theme(\n        tokens-mdc-protected-button.get-density-tokens($theme));\n\n      @include token-utils.create-token-values(tokens-mat-text-button.$prefix,\n        tokens-mat-text-button.get-density-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-filled-button.$prefix,\n        tokens-mat-filled-button.get-density-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-protected-button.$prefix,\n        tokens-mat-protected-button.get-density-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix,\n        tokens-mat-outlined-button.get-density-tokens($theme));\n    }\n  }\n}\n\n/// Outputs all (base, color, typography, and density) theme styles for the mat-button.\n/// @param {Map} $theme The theme to generate styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the button: primary, secondary, tertiary,\n///      or error (If not specified, default primary color will be used).\n@mixin theme($theme, $options...) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme), $options...);\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mat/icon' as tokens-mat-icon;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-colors($theme, $palette-name) {\n  $color: inspection.get-theme-color($theme, $palette-name, text);\n  $tokens: tokens-mat-icon.private-get-icon-color-tokens($color);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $tokens);\n}\n\n/// Outputs base theme styles (styles not dependent on the color, typography, or density settings)\n/// for the mat-icon.\n/// @param {Map} $theme The theme to generate base styles for.\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {}\n}\n\n/// Outputs color theme styles for the mat-icon.\n/// @param {Map} $theme The theme to generate color styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the icon: primary, secondary, tertiary, or error\n///     (If not specified, default neutral color will be used).\n@mixin color($theme, $options...) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color), $options...);\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-icon.$prefix,\n        tokens-mat-icon.get-color-tokens($theme));\n    }\n\n    .mat-icon {\n      &.mat-primary {\n        @include _palette-colors($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _palette-colors($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-colors($theme, warn);\n      }\n    }\n  }\n}\n\n/// Outputs typography theme styles for the mat-icon.\n/// @param {Map} $theme The theme to generate typography styles for.\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {}\n}\n\n/// Outputs density theme styles for the mat-icon.\n/// @param {Map} $theme The theme to generate density styles for.\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {}\n}\n\n/// Outputs all (base, color, typography, and density) theme styles for the mat-icon.\n/// @param {Map} $theme The theme to generate styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the icon: surface, primary, secondary, tertiary,\n///     or error (If not specified, default surface color will be used).\n@mixin theme($theme, $options...) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme), $options...);\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens, $options...) {\n  $mat-icon-tokens: token-utils.get-tokens-for($tokens, tokens-mat-icon.$prefix, $options...);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $mat-icon-tokens);\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/toolbar' as tokens-mat-toolbar;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(\n    tokens-mat-toolbar.$prefix,\n    tokens-mat-toolbar.private-get-color-palette-color-tokens(\n      $background-color: inspection.get-theme-color($theme, $palette-name),\n      $text-color: inspection.get-theme-color($theme, $palette-name, default-contrast)\n    )\n  );\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-color-tokens($theme));\n    }\n\n    .mat-toolbar {\n      &.mat-primary {\n        @include _palette-styles($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    // TODO(mmalerba): Stop calling this and resolve resulting screen diffs.\n    $theme: inspection.private-get-typography-back-compat-theme($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-typography-tokens($theme));\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-density-tokens($theme));\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      map.get($tokens, tokens-mat-toolbar.$prefix));\n  }\n}\n","@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab/tab-theme' as mdc-tab-theme;\n@use '../core/style/sass-utils';\n@use '../core/tokens/m2/mdc/tab' as tokens-mdc-tab;\n@use '../core/tokens/m2/mdc/tab-indicator' as tokens-mdc-tab-indicator;\n@use '../core/tokens/m2/mat/tab-header' as tokens-mat-tab-header;\n@use '../core/tokens/m2/mat/tab-header-with-background' as tokens-mat-tab-header-with-background;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n/// Outputs base theme styles (styles not dependent on the color, typography, or density settings)\n/// for the mat-tab.\n/// @param {Map} $theme The theme to generate base styles for.\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-tab-indicator-theme.theme(tokens-mdc-tab-indicator.get-unthemable-tokens());\n      @include mdc-tab-theme.secondary-navigation-tab-theme(tokens-mdc-tab.get-unthemable-tokens());\n      @include token-utils.create-token-values(\n          tokens-mat-tab-header.$prefix, tokens-mat-tab-header.get-unthemable-tokens());\n      @include token-utils.create-token-values(\n          tokens-mat-tab-header-with-background.$prefix,\n          tokens-mat-tab-header-with-background.get-unthemable-tokens()\n      );\n    }\n  }\n}\n\n/// Outputs color theme styles for the mat-tab.\n/// @param {Map} $theme The theme to generate color styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the tab indicator: primary, secondary,\n///      tertiary, or error (If not specified, default primary color will be used).\n@mixin color($theme, $options...) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color), $options...);\n  }\n  @else {\n    .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n      @include _palette-styles($theme, primary);\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n\n      &.mat-background-primary {\n        @include _background-styles($theme, primary);\n      }\n\n      &.mat-background-accent {\n        @include _background-styles($theme, accent);\n      }\n\n      &.mat-background-warn {\n        @include _background-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin _background-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n    tokens-mat-tab-header-with-background.get-color-tokens($theme, $palette-name));\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include mdc-tab-theme.secondary-navigation-tab-theme(\n    tokens-mdc-tab.get-color-tokens($theme, $palette-name));\n  @include mdc-tab-indicator-theme.theme(\n    tokens-mdc-tab-indicator.get-color-tokens($theme, $palette-name));\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n   tokens-mat-tab-header.get-color-tokens($theme, $palette-name));\n}\n\n/// Outputs typography theme styles for the mat-tab.\n/// @param {Map} $theme The theme to generate typography styles for.\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    .mat-mdc-tab-header {\n      @include mdc-tab-theme.secondary-navigation-tab-theme(\n          tokens-mdc-tab.get-typography-tokens($theme));\n      @include mdc-tab-indicator-theme.theme(\n          tokens-mdc-tab-indicator.get-typography-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n        tokens-mat-tab-header.get-typography-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n        tokens-mat-tab-header-with-background.get-typography-tokens($theme));\n    }\n  }\n}\n\n/// Outputs density theme styles for the mat-tab.\n/// @param {Map} $theme The theme to generate density styles for.\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    .mat-mdc-tab-header {\n      @include mdc-tab-theme.secondary-navigation-tab-theme(\n          tokens-mdc-tab.get-density-tokens($theme));\n      @include mdc-tab-indicator-theme.theme(\n          tokens-mdc-tab-indicator.get-density-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n        tokens-mat-tab-header.get-density-tokens($theme));\n      @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n        tokens-mat-tab-header-with-background.get-density-tokens($theme));\n    }\n  }\n}\n\n/// Outputs all (base, color, typography, and density) theme styles for the mat-tab.\n/// @param {Map} $theme The theme to generate styles for.\n/// @param {ArgList} Additional optional arguments (only supported for M3 themes):\n///   $color-variant: The color variant to use for the tab indicator: primary, secondary,\n///      tertiary, or error (If not specified, default primary color will be used).\n@mixin theme($theme, $options...) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme), $options...);\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens, $options...) {\n  $mdc-tab-indicator-tokens: token-utils.get-tokens-for(\n      $tokens, tokens-mdc-tab-indicator.$prefix, $options...);\n  $mat-tab-header-tokens: token-utils.get-tokens-for(\n      $tokens, tokens-mat-tab-header.$prefix, $options...);\n  // Don't pass $options here, because the mdc-tab doesn't have color variants,\n  // only the mdc-tab-indicator and mat-tab-header do.\n  $mdc-tab-tokens: token-utils.get-tokens-for($tokens, tokens-mdc-tab.$prefix);\n  @include mdc-tab-theme.secondary-navigation-tab-theme($mdc-tab-tokens);\n  @include mdc-tab-indicator-theme.theme($mdc-tab-indicator-tokens);\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix, $mat-tab-header-tokens);\n}\n","@use 'sass:map';\n@use '../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  body {\n    color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: if($is-dark-theme, constants.$offwhite, constants.$deepgray);\n  }\n\n  h2 {\n    border-top: 1px solid if($is-dark-theme, constants.$mediumgray, constants.$lightgray);\n  }\n\n  h6 {\n    color: if($is-dark-theme, constants.$offwhite, constants.$mediumgray);\n  }\n\n  p,\n  ol,\n  ul,\n  li,\n  input,\n  a {\n    color: if($is-dark-theme, constants.$white, constants.$darkgray);\n  }\n\n  .app-toolbar a {\n    color: constants.$white;\n  }\n\n  code {\n    color: if($is-dark-theme, constants.$white, constants.$darkgray);\n  }\n\n  .sidenav-content a {\n    color: if($is-dark-theme, constants.$lightblue, constants.$blue);\n  }\n\n  .error-text {\n    color: constants.$brightred;\n  }\n}\n","// TYPOGRAPHY\n$main-font: \"Roboto\",\"Helvetica Neue Light\",\"Helvetica Neue\",Helvetica,Arial,\"Lucida Grande\",sans-serif;\n$code-font: \"Roboto Mono\", monospace;\n\n// Z-LAYER\n$layer-1: 1;\n$layer-2: 2;\n$layer-3: 3;\n$layer-4: 4;\n$layer-5: 5;\n\n// COLOR PALETTE\n$cyan: #39d0ff;\n$powderblue: #bae0ff;\n$lightblue: #7fc9ff;\n$blue: #1976D2;\n$warmblue: #7491ff;\n$coldblue: #8ccade;\n$darkblue: #1669bb;\n$accentblue: #1E88E5;\n$brightred: #DD0031;\n$darkred: #C3002F;\n$white: #FFFFFF;\n$offwhite: #FAFAFA;\n$tangerine: #DDA302;\n$darkgoldenrod: #C3A300;\n$backgroundgray: #F1F1F1;\n$superlightgray: #F2F2F2;\n$lightgray: #DBDBDB;\n$lightboxgray: #EBEBEB;\n$mist: #ECEFF1;\n$mediumgray: #6E6E6E;\n$darkgray: #444444;\n$deepgray: #333333;\n$black: #0A1014;\n$orange: #FF9800;\n$darkorange: #940;\n$anti-pattern: $brightred;\n\n// API & CODE COLORS\n$amber-200: #AA3000;\n$amber-700: #FFA000;\n$blue-400: #42A5F5;\n$blue-500: #2196F3;\n$blue-600: #1E88E5;\n$blue-800: #1565C0;\n$blue-900: #0D47A1;\n$blue-grey-50: #ECEFF1;\n$blue-grey-100: #CFD8DC;\n$blue-grey-200: #B0BEC5;\n$blue-grey-300: #90A4AE;\n$blue-grey-400: #78909C;\n$blue-grey-500: #607D8B;\n$blue-grey-600: #546E7A;\n$blue-grey-700: #455A64;\n$blue-grey-800: #37474F;\n$blue-grey-900: #263238;\n$codegreen: #17ff0b;\n$green-500: #4CAF50;\n$green-800: #2E7D32;\n$light-green-600: #7CB342;\n$pink-600: #D81B60;\n$purple-600: #8E24AA;\n$teal-500: #009688;\n$lightgrey: #F5F6F7;\n\n// STATE COLORS\n$focus-outline-ondark: rgba($white, 0.8);\n$focus-outline-onlight: $accentblue;\n\n// GRADIENTS\n$bluegradient: linear-gradient(145deg,$blue-900,$blue-400);\n$redgradient: linear-gradient(145deg,$darkred,$brightred);\n\n// API LABEL COLOR AND SYMBOLS MAP\n$api-symbols: (\n  all: (\n    content: ' ',\n    background: $white\n  ),\n  class: (\n    content: 'C',\n    background: $blue-500\n  ),\n  const: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  decorator: (\n    content: '@',\n    background: $blue-800\n  ),\n  directive: (\n    content: 'D',\n    background: $pink-600\n  ),\n  enum: (\n    content: 'E',\n    background: $amber-700\n  ),\n  function: (\n    content: 'F',\n    background: $green-500\n  ),\n  interface: (\n    content: 'I',\n    background: $teal-500\n  ),\n  let: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  ngmodule: (\n    content: 'M',\n    background: $darkorange\n  ),\n  package: (\n    content: 'Pk',\n    background: $purple-600\n  ),\n  pipe: (\n    content: 'P',\n    background: $blue-grey-600\n  ),\n  element: (\n    content: 'El',\n    background: $amber-200\n  ),\n  block: (\n    content: 'B',\n    background: $green-800\n  ),\n  type-alias: (\n    content: 'T',\n    background: $light-green-600\n  ),\n  var: (\n    content: 'K',\n    background: $mediumgray\n  ),\n);\n\n// OTHER\n$small-breakpoint-width: 840px;\n$phone-breakpoint: 480px;\n$tablet-breakpoint: 800px;\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  footer {\n    // Because the footer background is always the same color in both light and dark mode, there is no need to specify a foreground color\n    background-color: mat.get-color-from-palette($primary, if($is-dark-theme, 900, 700));\n\n    aio-footer {\n      & > * {\n        color: constants.$white;\n      }\n\n      a {\n        color: constants.$white;\n      }\n\n      h3 {\n        color: constants.$white;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map.get($theme, background);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  html,\n  body,\n  .content {\n    background: if($is-dark-theme, mat.get-color-from-palette($background, background), constants.$white);\n  }\n\n  @if $is-dark-theme {\n    :root {\n      color-scheme: dark;\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $foreground: map.get($theme, foreground);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .background-sky {\n    background: linear-gradient(145deg, mat.get-color-from-palette($primary, 900), if($is-dark-theme, mat.get-color-from-palette($primary, 700), #42a5f5));\n    color: mat.get-color-from-palette($foreground, text);\n  }\n\n  section#intro {\n    color: constants.$white;\n  }\n\n  .announcement-bar {\n    background-color: constants.$white;\n\n    .button {\n      color: constants.$white;\n      background-color: constants.$blue;\n\n      &:hover {\n        color: rgba(constants.$white, 0.7);\n      }\n    }\n  }\n\n  .home-row .card {\n    background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n\n    .card-text-container {\n      p {\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n      }\n    }\n\n    &:hover {\n      h2 {\n        color: if($is-dark-theme, constants.$cyan, constants.$blue);\n      }\n    }\n  }\n\n  .button.hero-cta {\n    background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n  }\n\n  .cta-bar {\n    .hero-cta {\n      color: if($is-dark-theme, constants.$cyan, constants.$blue);\n    }\n  }\n\n  .text-headline {\n    color: if($is-dark-theme, constants.$lightblue, constants.$blue);\n  }\n\n  .marketing-banner {\n    background-color: if($is-dark-theme, mat.get-color-from-palette($primary, 800), mat.get-color-from-palette($primary, 600));\n\n    .banner-headline {\n      color: constants.$white;\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .nf-response {\n    h1 {\n      color: if($is-dark-theme, constants.$lightblue, constants.$blue);\n    }\n  }\n\n  .nf-icon.material-icons {\n    color: constants.$blue;\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map.get($theme, background);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  mat-sidenav-container.sidenav-container {\n    background-color: if($is-dark-theme, mat.get-color-from-palette($background, background), constants.$white);\n\n    mat-sidenav.sidenav {\n      background-color: if($is-dark-theme, constants.$deepgray, constants.$superlightgray);\n      border-right: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n\n      .doc-version {\n        border-top: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n      }\n    }\n  }\n\n  aio-nav-menu {\n    aio-nav-item {\n      .vertical-menu-item {\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n\n        &:hover {\n          background-color: if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n          color: if($is-dark-theme, constants.$powderblue, constants.$blue);\n          text-shadow: 0 0 5px if($is-dark-theme, constants.$black, constants.$white);\n\n          &.selected {\n            color: if($is-dark-theme, constants.$powderblue, constants.$darkblue);\n          }\n        }\n\n        &.selected {\n          color: if($is-dark-theme, constants.$lightblue, constants.$darkblue);\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '../../mixins';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  mat-toolbar.app-toolbar {\n    @if $is-dark-theme {\n      &.mat-primary {\n        background: mat.get-color-from-palette($primary, darker)\n      }\n    }\n\n    // HOME PAGE OVERRIDE: TOPNAV TOOLBAR\n    .page-home & {\n      background: if($is-dark-theme, mat.get-color-from-palette($primary, darker), constants.$blue);\n    }\n\n    mat-icon {\n      color: constants.$white;\n    }\n\n    // HAMBURGER BUTTON\n    .hamburger {\n      &:hover {\n        color: constants.$offwhite;\n      }\n\n      & .mat-icon {\n        color: constants.$white;\n      }\n    }\n\n    // HOME NAV-LINK\n    .nav-link.home {\n      &:focus {\n        // `outline-offset` is not applied on Chrome on Windows, if `outline-style` is `auto.\n        outline: 1px solid constants.$focus-outline-ondark;\n      }\n    }\n\n    // TOP MENU\n    aio-top-menu {\n      ul {\n        li {\n          a.nav-link {\n            .nav-link-inner {\n              &:hover {\n                background: rgba(constants.$white, 0.15);\n              }\n            }\n\n            &:focus {\n              .nav-link-inner {\n                background: rgba(constants.$white, 0.15);\n                box-shadow: 0 0 1px 2px constants.$focus-outline-ondark;\n              }\n            }\n\n            &:active {\n              .nav-link-inner {\n                background: rgba(constants.$white, 0.15);\n              }\n            }\n          }\n\n          &.selected {\n            a.nav-link {\n              .nav-link-inner {\n                background: rgba(constants.$white, 0.15);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // SEARCH BOX\n    aio-search-box.search-container {\n      input {\n        color: constants.$darkgray;\n        background-color: constants.$white;\n\n        @include mixins.placeholder {\n          color: constants.$mediumgray;\n        }\n      }\n\n      .search-box-shortcut {\n        border-color: constants.$mediumgray;\n        color: constants.$mediumgray;\n      }\n    }\n\n    aio-theme-toggle {\n      @media screen and (min-width: 351px) {\n        border-right: 1px solid constants.$white;\n      }\n    }\n  }\n}\n","@use 'sass:list';\n@use 'sass:math';\n@use 'sass:selector';\n@use './constants';\n\n// REM Font Adjustments\n@mixin font-size($sizeValue) {\n  font-size: math.div($sizeValue, 10) + rem;\n}\n\n@mixin letter-spacing($spacingValue) {\n  letter-spacing: math.div($spacingValue, 10) + rem;\n}\n\n@mixin line-height($heightValue) {\n  line-height: math.div($heightValue, 10) + rem;\n}\n\n// PLACEHOLDER\n// NOTE: Vendor-prefixed selectors must be on separate blocks, because one invalid/unknown\n//       selector will invalidate the whole block.\n@mixin placeholder {\n  &:-ms-input-placeholder      { @content; }  // IE\n  &::-ms-input-placeholder     { @content; }  // Edge\n  &::-webkit-input-placeholder { @content; }  // QQ Browser\n  &::placeholder               { @content; }  // Chrome/Firefox/Safari\n}\n\n@mixin rotate($degrees) {\n  -moz-transform: rotate($degrees);\n  -webkit-transform: rotate($degrees);\n  -o-transform: rotate($degrees);\n  -ms-transform: rotate($degrees);\n  transform: rotate($degrees);\n  transition: transform 150ms;\n  transition-timing-function: ease-in-out;\n}\n\n@mixin codeblock($bgcolor) {\n    background-color: $bgcolor;\n    border-radius: 5px;\n    padding: 20px;\n    margin: 0 auto; // was 24\n    border: 0.5px solid constants.$lightgray;\n}\n\n// INFO CARD SKELETON\n@mixin card($width) {\n  width: $width;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba(constants.$black, 0.24), 0 0 2px rgba(constants.$black, 0.12);\n  box-sizing: border-box;\n  transition: box-shadow .5s;\n\n  &:hover {\n    box-shadow: 0 8px 8px rgba(constants.$black, 0.24), 0 0 8px rgba(constants.$black, 0.12);\n    text-decoration: none;\n  }\n}\n\n@mixin deploy-theme($mainColor, $gradientTargetColor, $textColor) {\n  .mat-toolbar.mat-primary, footer {\n    background: linear-gradient(145deg, $mainColor, $gradientTargetColor);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: $textColor;\n    }\n  }\n\n  .toc-inner ul.toc-list li {\n    &.active a {\n      color: $textColor;\n\n      &:before {\n        background-color: $mainColor;\n      }\n    }\n\n    &:hover a {\n      color: $textColor;\n    }\n  }\n}\n\n/// Define some styles for docs (i.e. non-marketing) pages.\n///\n/// @example scss - Example SCSS:\n///   .foo {\n///     @include docs-pages {\n///       .bar {\n///         color: orange;\n///       }\n///     }\n///   }\n///\n///   .baz {\n///     @include docs-pages($nestParentSelector: true) {\n///       .qux {\n///         color: orange;\n///       }\n///     }\n///   }\n///\n/// @example css - Output CSS:\n///   .foo .folder-api .bar, .foo .folder-cli .bar, ... {\n///     color: orange;\n///   }\n///\n///   .folder-api .baz .qux, .folder-cli .baz .qux, ... {\n///     color: orange;\n///   }\n///\n/// @param {boolean} $nestParentSelector\n///   If true, the parent selector (`&`) is nested inside the docs pages selectors.\n@mixin docs-pages($nestParentSelector: false) {\n  $selectors: (\n    '.folder-api',\n    '.folder-cli',\n    '.folder-docs',\n    '.folder-errors',\n    '.folder-extended-diagnostics',\n    '.folder-guide',\n    '.folder-start',\n    '.folder-tutorial',\n  );\n\n  @if $nestParentSelector and & {\n    @at-root #{selector.nest(#{$selectors}, &)} {\n      @content;\n    }\n  } @else {\n    #{$selectors} {\n      @content;\n    }\n  }\n}\n\n/// Define some styles for marketing (i.e. non-docs) pages.\n///\n/// @example scss - Example SCSS:\n///   .foo {\n///     @include marketing-pages {\n///       .bar {\n///         color: orange;\n///       }\n///     }\n///   }\n///\n///   .baz {\n///     @include marketing-pages($extraSelectors: ('.other-page'), $nestParentSelector: true) {\n///       .qux {\n///         color: orange;\n///       }\n///     }\n///   }\n///\n/// @example css - Output CSS:\n///   .foo .page-about .bar, .foo .page-contribute .bar, ... {\n///     color: orange;\n///   }\n///\n///   .page-about .baz .qux, .page-contribute .baz .qux, ..., .other-page .baz .qux {\n///     color: orange;\n///   }\n///\n/// @param {string[]} $extraSelectors\n///   A list of additional page selectors to apply the styles to.\n/// @param {boolean} $nestParentSelector\n///   If true, the parent selector (`&`) is nested inside the marketing pages selectors.\n@mixin marketing-pages($extraSelectors: (), $nestParentSelector: false) {\n  $marketingPagesSelectors: (\n    '.page-about',\n    '.page-contribute',\n    '.page-events',\n    '.page-features',\n    '.page-home',\n    '.page-presskit',\n    '.page-resources',\n  );\n  $selectors: list.join($marketingPagesSelectors, $extraSelectors, $separator: comma);\n\n  @if $nestParentSelector and & {\n    @at-root #{selector.nest(#{$selectors}, &)} {\n      @content;\n    }\n  } @else {\n    #{$selectors} {\n      @content;\n    }\n  }\n}\n\n@mixin external-link-with-icon() {\n  display: inline-flex;\n  align-items: center;\n\n  &::after {\n    content: \"\\e89e\"; // codepoint for \"open_in_new\"\n    font-family: \"Material Icons\";\n    margin-left: 0.3rem;\n    // Note: float: right is used so that the icon doesn't inherit text underlines\n    float: right;\n    display: flex;\n    align-items: center;\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .alert {\n    color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n\n    &.is-critical {\n      border-left: 8px solid constants.$brightred;\n      background-color: if($is-dark-theme, constants.$deepgray, rgba(constants.$brightred, 0.05));\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: constants.$brightred;\n      }\n    }\n\n    &.is-important {\n      border-left: 8px solid constants.$orange;\n      background-color: if($is-dark-theme, constants.$deepgray, rgba(constants.$orange, 0.05));\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: constants.$orange;\n      }\n    }\n\n    &.is-helpful {\n      border-left: 8px solid constants.$blue;\n      background-color: if($is-dark-theme, constants.$deepgray, rgba(constants.$blue, 0.05));\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: constants.$blue;\n      }\n    }\n\n    &.archive-warning {\n      background-color: if($is-dark-theme, constants.$deepgray, constants.$darkred);\n\n      * {\n        color: constants.$white;\n      }\n\n      a {\n        color: constants.$white;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '../../mixins';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-api-list {\n    .api-filter {\n      .form-search {\n        input {\n          box-shadow: 0 2px 2px rgba(constants.$black, 0.24), 0 0 2px rgba(constants.$black, 0.12);\n          border: 1px solid if($is-dark-theme, constants.$darkgray, constants.$white);\n          background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n          color: if($is-dark-theme, constants.$white, constants.$darkgray);\n\n          @include mixins.placeholder {\n            color: if($is-dark-theme, constants.$offwhite, constants.$mediumgray);\n          }\n\n          &:focus {\n            border: 1px solid constants.$blue-400;\n            box-shadow: 0 2px 2px rgba(constants.$blue-400, 0.24), 0 0 2px rgba(constants.$blue-400, 0.12);\n          }\n        }\n\n        .material-icons {\n          color: if($is-dark-theme, constants.$lightblue, constants.$blue-grey-600);\n        }\n      }\n    }\n\n    .api-list-container {\n\n      a {\n        color: if($is-dark-theme, constants.$warmblue, constants.$blue);\n      }\n\n      .api-list {\n        li {\n          a {\n            color: if($is-dark-theme, constants.$coldblue, constants.$blue-grey-600);\n\n            &:hover {\n              background: if($is-dark-theme, constants.$darkgray, constants.$blue-grey-50);\n              color: if($is-dark-theme, constants.$offwhite, constants.$blue-500);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  .symbol {\n    box-shadow: 0 1px 2px rgba(constants.$black, 0.24);\n    color: constants.$white;\n\n    // SYMBOL TYPES\n    // Symbol mapping variables in *constants*\n    @each $name, $symbol in constants.$api-symbols {\n      &.#{$name} {\n        background: map.get($symbol, background);\n\n        &:before {\n          content: map.get($symbol, content);\n        }\n      }\n    }\n  }\n}\n","@use 'sass:color';\n@use '../../constants';\n\n@mixin theme($theme) {\n  // This rule overrides some Angular Material styles defined for `.mat-button`\n  // (hence we include `.mat-button` in the selector).\n  a.button.mat-button,\n  .button {\n    // COLORS\n\n    &.button-secondary {\n      background: constants.$mediumgray;\n      color: rgba(constants.$white, 0.87);\n    }\n\n    &.button-plain {\n      background: constants.$white;\n      color: rgba(constants.$darkgray, 0.87);\n    }\n\n    &.button-subtle {\n      background: constants.$mediumgray;\n      color: color.adjust(constants.$offwhite, $lightness: -10%);\n\n      &:hover {\n        color: rgba(constants.$white, 0.7);\n      }\n    }\n\n    &.button-blue {\n      background: constants.$blue;\n      color: rgba(constants.$white, 0.87);\n\n      &:hover {\n        color: rgba(constants.$white, 0.7);\n      }\n    }\n\n    &.button-banner {\n      background: constants.$darkgray;\n      color: rgba(constants.$white, 0.87);\n    }\n  }\n\n  .cta-bar {\n    .button {\n      &:hover {\n        color: constants.$offwhite;\n      }\n    }\n  }\n\n  .group-buttons {\n    // This rule overrides some Angular Material styles defined for `.mat-button`\n    // (hence we include `.mat-button` in the selector).\n    button.button.mat-button.filter-button {\n      background-color: rgba(constants.$blue, 0.2);\n\n      &.selected {\n        background-color: constants.$blue;\n        color: constants.$white;\n      }\n\n      &:focus,\n      &:hover {\n        background-color: rgba(constants.$blue, 0.7);\n        color: constants.$white;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .callout {\n    header {\n      color: constants.$white;\n    }\n\n    &.is-critical {\n      border-color: constants.$brightred;\n      background: rgba(constants.$brightred, if($is-dark-theme, 0.1, 0.05));\n\n      header {\n        background: constants.$brightred;\n      }\n    }\n\n    &.is-important {\n      border-color: constants.$orange;\n      background: rgba(constants.$orange,if($is-dark-theme, 0.1, 0.05));\n\n      header {\n        background: constants.$amber-700;\n      }\n    }\n\n    &.is-helpful {\n      border-color: constants.$blue;\n      background: rgba(constants.$blue, if($is-dark-theme, 0.1, 0.05));\n\n      header {\n        background: constants.$blue;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .card-container {\n    .docs-card {\n      background-color: if($is-dark-theme, constants.$deepgray, constants.$white);\n\n      section {\n        color: if($is-dark-theme, constants.$cyan, constants.$blue);\n      }\n\n      p {\n        color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n      }\n\n      .card-footer {\n        color: if($is-dark-theme, constants.$powderblue, constants.$darkblue);\n        background-color: if($is-dark-theme, constants.$darkgray, rgba(constants.$blue, 0.1));\n        border-top: 0.5px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n\n        a {\n          color: constants.$mediumgray;\n        }\n      }\n    }\n  }\n\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  code-example {\n    &:not(.no-box) {\n      background-color: if($is-dark-theme, constants.$deepgray, rgb(constants.$backgroundgray, 0.2));\n      border: 0.5px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n      color: constants.$darkgray;\n    }\n\n    // TERMINAL / SHELL TEXT STYLES\n    &[language=\"shell\"],\n    &[language=\"sh\"],\n    &[language=\"bash\"] {\n      background-color: constants.$darkgray;\n    }\n\n    header {\n      background-color: constants.$accentblue;\n      color: constants.$offwhite;\n    }\n  }\n\n  code-tabs {\n    .code-tab-group {\n      .mat-tab-label {\n        &:hover {\n          background: rgba(black, 0.04);\n        }\n      }\n    }\n  }\n\n  code-example.avoid header,\n  code-example.avoidFile header {\n    border: 2px solid constants.$anti-pattern;\n    background: constants.$anti-pattern;\n  }\n\n  code-example.avoid,\n  code-example.avoidFile,\n  code-tabs.avoid mat-tab-body,\n  code-tabs.avoidFile mat-tab-body {\n    border: 0.5px solid constants.$anti-pattern;\n  }\n\n  aio-code {\n    pre.prettyprint {\n      code {\n        ol.linenums {\n          color: color.adjust(constants.$mediumgray, $lightness: 25%);\n\n          li {\n            &::marker {\n              color: color.adjust(constants.$mediumgray, $lightness: 25%);\n            }\n          }\n        }\n\n        .code-missing {\n          color: constants.$darkred;\n        }\n      }\n\n      &.lang-sh,\n      &.lang-bash {\n        .copy-button {\n          color: if($is-dark-theme, constants.$blue-grey-200, constants.$lightgray);\n\n          &:hover {\n            color: if($is-dark-theme, constants.$blue-grey-300, constants.$superlightgray);\n          }\n        }\n      }\n    }\n\n    .copy-button {\n      color: if($is-dark-theme, constants.$blue-grey-200, constants.$darkblue);\n    }\n  }\n\n  .sidenav-content {\n    code a,\n    a > code {\n      color: if($is-dark-theme, constants.$cyan, constants.$darkblue);\n    }\n\n    :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(pre) {\n      > code {\n        background-color: if($is-dark-theme, constants.$darkgray, rgba(constants.$lightgray, 0.3));\n      }\n\n      &:not(a) > code {\n        color: if($is-dark-theme, constants.$white, constants.$darkgray);\n      }\n    }\n  }\n\n  // Dark Mode Code Palette\n  $code-lightteal: #17d3ff;\n  $code-lightred: #ffb0b0;\n  $code-lightgreen: #c3e88d;\n  $code-lightpurple: #d1b4ff;\n  $code-lightorange: #ffd779;\n  $code-lightblue: #98caff;\n  $code-grey: rgba(255, 255, 255, 0.7);\n\n  /* PRETTY PRINTING STYLES for prettify.js. */\n\n  /* The following class|color styles are derived from https://github.com/google/code-prettify/blob/master/src/prettify.css*/\n\n  /* SPAN elements with the classes below are added by prettyprint. */\n  .pln {\n    color: if($is-dark-theme, constants.$white, #000);\n  } /* plain text */\n\n  @media screen {\n    .str {\n      color: if($is-dark-theme, $code-lightgreen, #800);\n    } /* string content */\n    .kwd {\n      color: if($is-dark-theme, $code-lightteal, #00f);\n    } /* a keyword */\n    .com {\n      color: if($is-dark-theme, $code-grey, #060);\n    } /* a comment */\n    .typ {\n      color: if($is-dark-theme, $code-lightred, red);\n    } /* a type name */\n    .lit {\n      color: if($is-dark-theme, $code-lightpurple, #08c);\n    } /* a literal value */\n    /* punctuation, lisp open bracket, lisp close bracket */\n    .pun,\n    .opn,\n    .clo {\n      color: if($is-dark-theme, $code-lightorange, #660);\n    }\n    .tag {\n      color: if($is-dark-theme, $code-lightblue, #008);\n    } /* a markup tag name */\n    .atn {\n      color: if($is-dark-theme, $code-lightpurple, #606);\n    } /* a markup attribute name */\n    .atv {\n      color: if($is-dark-theme, $code-lightorange, #800);\n    } /* a markup attribute value */\n    .dec,\n    .var {\n      color: if($is-dark-theme, $code-lightpurple, #606);\n    } /* a declaration; a variable name */\n    .fun {\n      color: if($is-dark-theme, $code-lightred, red);\n    } /* a function name */\n  }\n\n  /* Use higher contrast and text-weight for printable form. */\n  @media print, projection {\n    .str {\n      color: #060;\n    }\n    .kwd {\n      color: #006;\n      font-weight: bold;\n    }\n    .com {\n      color: #600;\n      font-style: italic;\n    }\n    .typ {\n      color: #404;\n      font-weight: bold;\n    }\n    .lit {\n      color: #044;\n    }\n    .pun,\n    .opn,\n    .clo {\n      color: #440;\n    }\n    .tag {\n      color: #006;\n      font-weight: bold;\n    }\n    .atn {\n      color: #404;\n    }\n    .atv {\n      color: #060;\n    }\n  }\n\n  /* SHELL / TERMINAL CODE BLOCKS */\n\n  code-example {\n    &[language=\"shell\"],\n    &[language=\"sh\"],\n    &[language=\"bash\"] {\n      .pnk,\n      .blk,\n      .pln,\n      .otl,\n      .kwd,\n      .typ,\n      .tag,\n      .str,\n      .atv,\n      .atn,\n      .com,\n      .lit,\n      .pun,\n      .dec {\n        color: constants.$codegreen;\n      }\n      .copy-button {\n        color: constants.$blue-grey-200;\n      }\n    }\n\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-contributor {\n    .contributor-card {\n      background: if($is-dark-theme, constants.$deepgray, constants.$offwhite);\n      box-shadow: 0px 1px 6px 1px constants.$mediumgray;\n    }\n\n    .contributor-image-wrapper {\n      background-color: if($is-dark-theme, constants.$lightgray, constants.$deepgray);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants' as c;\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-cookies-popup {\n    .cookies-popup {\n      background: if($is-dark-theme, map.get(mat.$grey-palette, 50), #252525);\n      color: if($is-dark-theme,\n        map.get(map.get(mat.$grey-palette, contrast), 50),\n        map.get(mat.$dark-theme-foreground-palette, secondary-text)\n      );\n\n      .actions {\n        [mat-button] {\n          color: if($is-dark-theme, c.$blue, c.$lightblue);\n\n          .mat-button-focus-overlay {\n            background: if($is-dark-theme, c.$black, c.$white);\n          }\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '../../mixins';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-shell.mode-archive {\n    @include mixins.deploy-theme(constants.$blue-grey-900, constants.$blue-grey-400, if($is-dark-theme, constants.$powderblue, constants.$blue-grey-900));\n  }\n\n  aio-shell.mode-next {\n    @include mixins.deploy-theme(constants.$brightred, constants.$darkred, if($is-dark-theme, constants.$powderblue, constants.$brightred));\n  }\n\n  aio-shell.mode-rc {\n    @include mixins.deploy-theme(constants.$tangerine, constants.$darkgoldenrod, if($is-dark-theme, constants.$powderblue, constants.$tangerine));\n  }\n}\n","@use '../../constants';\n\n@mixin theme($theme) {\n  details {\n    box-shadow: 0 1px 4px 0 rgba(constants.$black, 0.37);\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .error-list {\n    li {\n      .symbol {\n        &.runtime {\n          background: constants.$green-500;\n        }\n\n        &.compiler {\n          background: constants.$blue-500;\n        }\n      }\n\n      a {\n        color: constants.$blue-grey-600;\n\n        &:hover {\n          background: if($is-dark-theme, constants.$darkgray, constants.$blue-grey-50);\n          color: constants.$blue-500;\n        }\n      }\n    }\n  }\n}\n","@use '../../constants';\n\n@mixin theme($theme) {\n  .filetree {\n    background: constants.$white;\n    border: 4px solid constants.$lightgray;\n\n    .file {\n      color: constants.$darkgray;\n    }\n\n    .children {\n      .file {\n        &:before {\n          border-color: constants.$lightgray;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .reviewed {\n    color: if($is-dark-theme, constants.$offwhite, color.adjust(constants.$darkgray, $lightness: 10%));\n  }\n}\n","@use '../../constants';\n\n@mixin theme($theme) {\n  .sidenav-content {\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      .header-link {\n        color: constants.$mediumgray;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  hr {\n    background: if($is-dark-theme, constants.$mediumgray, constants.$lightgray);\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .content {\n    .lightbox {\n      border: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n      background-color: if($is-dark-theme, constants.$deepgray, constants.$lightboxgray);\n\n      img {\n        background-color: constants.$white;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  .api-header label {\n    color: constants.$white;\n  }\n\n  label {\n    &.api-status-label {\n      color: constants.$white;\n      background-color: constants.$mediumgray;\n\n      &.deprecated,\n      &.security,\n      &.impure-pipe,\n      &.dev-preview,\n      &.experimental {\n        background-color: constants.$brightred;\n      }\n\n      a {\n        color: inherit;\n        line-height: inherit;\n        font-size: inherit;\n        font-weight: inherit;\n      }\n    }\n\n    &.api-type-label {\n      color: constants.$white;\n      background-color: constants.$accentblue;\n\n      @each $name,\n      $symbol in constants.$api-symbols {\n        &.#{$name} {\n          background: map.get($symbol, background);\n        }\n      }\n    }\n\n    &.page-label {\n      color: constants.$white;\n      background-color: constants.$mist;\n      color: constants.$mediumgray;\n    }\n\n    &.property-type-label {\n      color: constants.$white;\n      background-color: constants.$darkgray;\n      color: constants.$white;\n    }\n  }\n}\n","@use '../../constants';\n\n@mixin theme($theme) {\n  aio-notification {\n    background: constants.$darkgray;\n\n    .close-button {\n      background: constants.$darkgray;\n    }\n\n    .content {\n      background: constants.$darkgray;\n\n      .action-button {\n        background: constants.$brightred;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map.get($theme, background);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .presskit-container {\n    .presskit-section {\n      &:not(:first-child) {\n        border-top: 1px solid constants.$lightgray;\n      }\n\n      .presskit-icon-group {\n        .presskit-icon-item {\n          .presskit-image-container {\n            .transparent-img {\n              background-color: constants.$white;\n\n              &-inverse {\n                background-color: if($is-dark-theme, mat.get-color-from-palette($background, background), constants.$deepgray);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-resource-list {\n    .subcategory-title {\n      background-color: if($is-dark-theme, constants.$deepgray, constants.$mist);\n    }\n\n    .resource-row-link {\n      background-color: if($is-dark-theme, constants.$darkgray, constants.$white);\n\n      &:hover {\n        border-color: if($is-dark-theme, rgba(constants.$lightblue, 0.5), rgba(constants.$blue, 0.5));\n        box-shadow: 0 8px 8px rgb(1 131 163 / 24%), 0 0 8px rgb(1 67 163 / 12%), 0 6px 18px rgb(43 133 231 / 12%);\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n\n@mixin theme($theme) {\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .page-guide-roadmap {\n    .completed-details {\n      border-top: 1px solid if($is-dark-theme, constants.$mediumgray, constants.$lightgray);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $foreground: map.get($theme, foreground);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-search-results {\n    .search-results {\n      background-color: constants.$darkgray;\n      box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n\n      $item-color: if($is-dark-theme, constants.$lightgray, constants.$offwhite);\n\n      .search-area {\n        .search-section-header {\n          color: constants.$white;\n        }\n\n        ul {\n          .search-result-item {\n            color: $item-color;\n\n            &:hover {\n              color: constants.$white;\n            }\n          }\n        }\n      }\n\n      .no-results {\n        color: constants.$white;\n      }\n\n      a {\n        color: mat.get-color-from-palette($foreground, text);\n      }\n\n      .close-button {\n        color: $item-color;\n      }\n    }\n\n    &.embedded {\n      .search-results {\n        .search-area {\n          .search-section-header {\n            color: if($is-dark-theme, constants.$offwhite, constants.$darkgray);\n          }\n\n          .search-result-item {\n            color: if($is-dark-theme, constants.$offwhite, color.adjust(constants.$darkgray, $lightness: 10%));\n\n            &:hover {\n              color: constants.$accentblue;\n            }\n          }\n        }\n\n        .no-results {\n          color: mat.get-color-from-palette($foreground, text);\n        }\n\n        a {\n          color: constants.$blue;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map.get($theme, background);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-select {\n    .form-select-button {\n      background: if($is-dark-theme, constants.$darkgray, constants.$white);\n      box-shadow: 0 2px 2px rgba(constants.$black, 0.24), 0 0 2px rgba(constants.$black, 0.12);\n      border: 1px solid if($is-dark-theme, constants.$darkgray, constants.$white);\n      color: if($is-dark-theme, constants.$blue-grey-200, constants.$blue-grey-600);\n\n      &:focus {\n        border: 1px solid constants.$blue-400;\n        box-shadow: 0 2px 2px rgba(constants.$blue-400, 0.24), 0 0 2px rgba(constants.$blue-400, 0.12);\n      }\n\n      &.disabled {\n        color: lightgrey;\n      }\n    }\n\n    .form-select-dropdown {\n      background: mat.get-color-from-palette($background, background);\n      box-shadow: 0 16px 16px rgba(constants.$black, 0.24), 0 0 16px rgba(constants.$black, 0.12);\n\n      li {\n        &:hover, &.current {\n          background-color: if($is-dark-theme, constants.$darkgray, constants.$blue-grey-50);\n          color: f($is-dark-theme, constants.$blue-grey-400, constants.$blue-grey-500);\n        }\n\n        &.selected {\n          background-color: if($is-dark-theme, constants.$darkgray, constants.$blue-grey-100);\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $background: map.get($theme, background);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  table {\n    min-width: 100%;\n    box-shadow: 0 2px 2px rgba(constants.$mediumgray, 0.24), 0 0 2px rgba(if($is-dark-theme, constants.$white, constants.$black), 0.12);\n    background-color: if($is-dark-theme, mat.get-color-from-palette($background, background), constants.$white);\n\n    thead > {\n      tr > th {\n        background: if($is-dark-theme, constants.$deepgray, rgba(constants.$lightgray, 0.2));\n        border-bottom: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n        color: if($is-dark-theme, constants.$white, constants.$darkgray);\n      }\n    }\n\n    tbody > tr > {\n      th,\n      td {\n        border-bottom: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n      }\n\n      td {\n        tr td:first-child {\n          @media (max-width: 480px) {\n            background-color: constants.$lightgray;\n          }\n        }\n      }\n\n      th {\n        background: if($is-dark-theme, constants.$deepgray, rgba(constants.$lightgray, 0.2));\n        &:not(:last-child) {\n          border-right: 1px solid if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n        }\n      }\n    }\n\n    tbody > tr {\n      &:last-child td {\n        @media (max-width: 480px) {\n          border-bottom: 1px solid if($is-dark-theme, constants.$deepgray, constants.$lightgray);\n        }\n      }\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../../constants';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $foreground: map.get($theme, foreground);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  aio-toc {\n    .toc-inner {\n      .toc-heading {\n        &.secondary {\n          &:hover {\n            color: constants.$accentblue;\n          }\n        }\n      }\n\n      button {\n        &.toc-heading,\n        &.toc-more-items {\n          &.embedded:focus {\n            background: if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n            color: if($is-dark-theme, constants.$white, constants.$mediumgray);\n          }\n        }\n\n        &.toc-heading {\n          &:hover:not(.embedded) {\n            color: constants.$accentblue;\n          }\n        }\n\n        &.toc-more-items {\n          color: if($is-dark-theme, constants.$lightgray, constants.$mediumgray);\n\n          &:hover {\n            color: constants.$accentblue;\n          }\n        }\n      }\n\n      ul.toc-list {\n        li {\n          &.h1:after {\n            background: if($is-dark-theme, constants.$mediumgray, constants.$lightgray);\n          }\n\n          a {\n            color: if($is-dark-theme, constants.$white, color.adjust(constants.$darkgray, $lightness: 10%));\n          }\n\n          &:hover {\n            * {\n              color: if($is-dark-theme, constants.$lightblue, constants.$accentblue);\n            }\n          }\n\n          &.active {\n            * {\n              color: if($is-dark-theme, constants.$cyan, constants.$blue);\n            }\n\n            a:before {\n              background: if($is-dark-theme, constants.$cyan, constants.$blue);\n            }\n          }\n        }\n\n        &:not(.embedded) li {\n          &:before {\n            border-left-color: if($is-dark-theme, constants.$darkgray, constants.$lightgray);\n          }\n\n          &:not(.active):hover {\n            a:before {\n              background: constants.$lightgray;\n            }\n          }\n        }\n      }\n    }\n\n    &.embedded {\n      .toc-inner {\n        .toc-heading {\n          &.secondary {\n            color: mat.get-color-from-palette($foreground, text);\n          }\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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xCqxCZ,CwC9wCU,QAAA,C1B2BN,U0B3BM,EAAA,C1B2BN,S0B3BM,EAAA,CAAA,EAAA,OACE,WAAA,OxCgxCZ,CwC7wCU,QAAA,C1BuBN,U0BvBM,EAAA,C1BuBN,S0BvBM,GAAA,EACE,MAAA,OxC+wCZ,CwC3wCY,QAAA,C1BkBR,U0BlBQ,EAAA,C1BkBR,S0BlBQ,EAAA,OAAA,EACE,MAAA,OxC6wCd,CwCxwCY,QAAA,C1BYR,U0BZQ,EAAA,C1BYR,S0BZQ,EAAA,C1BYR,O0BZQ,EACE,MAAA,OxC0wCd,CwCvwCY,QAAA,C1BQR,U0BRQ,EAAA,C1BQR,S0BRQ,EAAA,C1BQR,O0BRQ,CAAA,QACE,WAAA,OxCywCd,CwCnwCU,QAAA,C1BCN,U0BDM,EAAA,C1BCN,Q0BDM,KAAA,CHvBA,UGuBA,EAAA,QACE,kBAAA,OxCqwCZ,CwCjwCY,QAAA,C1BJR,U0BIQ,EAAA,C1BJR,Q0BIQ,KAAA,CH5BF,UG4BE,EAAA,KAAA,C1BJR,O0BIQ,OAAA,CAAA,QACE,WAAA,OxCmwCd,CwCzvCU,OAAA,CHvCA,SGuCA,C1BfN,U0BeM,CA1EA,WA0EA,CA1EA,UA2EE,MAAA,SxC2vCZ","names":[],"sourceRoot":"webpack:///","file":"light-theme.css","x_google_ignoreList":[0,1,3,4,5,6,7]}